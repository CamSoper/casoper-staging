### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.NodesHealthEvaluation
  commentId: T:System.Fabric.Health.NodesHealthEvaluation
  id: NodesHealthEvaluation
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.NodesHealthEvaluation.MaxPercentUnhealthyNodes
  - System.Fabric.Health.NodesHealthEvaluation.TotalCount
  - System.Fabric.Health.NodesHealthEvaluation.UnhealthyEvaluations
  langs:
  - csharp
  - vb
  name: NodesHealthEvaluation
  nameWithType: NodesHealthEvaluation
  fullName: System.Fabric.Health.NodesHealthEvaluation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodesHealthEvaluation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodesHealthEvaluation
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodesHealthEvaluation.cs
    startLine: 18
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Represents health evaluation for nodes, \ncontaining health evaluations for each unhealthy node that impacted current aggregated \nhealth state. Can be returned when evaluating cluster health and the aggregated health state is either \n<xref href=\"System.Fabric.Health.HealthState.Error\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Fabric.Health.HealthState.Warning\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: 'public sealed class NodesHealthEvaluation : HealthEvaluation'
    content.vb: >-
      Public NotInheritable Class NodesHealthEvaluation
          Inherits HealthEvaluation
  inheritance:
  - System.Object
  - System.Fabric.Health.HealthEvaluation
  inheritedMembers:
  - System.Fabric.Health.HealthEvaluation.Kind
  - System.Fabric.Health.HealthEvaluation.Description
  - System.Fabric.Health.HealthEvaluation.AggregatedHealthState
  - System.Fabric.Health.HealthEvaluation.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.NodesHealthEvaluation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.NodesHealthEvaluation.UnhealthyEvaluations
  commentId: P:System.Fabric.Health.NodesHealthEvaluation.UnhealthyEvaluations
  id: UnhealthyEvaluations
  parent: System.Fabric.Health.NodesHealthEvaluation
  langs:
  - csharp
  - vb
  name: UnhealthyEvaluations
  nameWithType: NodesHealthEvaluation.UnhealthyEvaluations
  fullName: System.Fabric.Health.NodesHealthEvaluation.UnhealthyEvaluations
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodesHealthEvaluation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UnhealthyEvaluations
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodesHealthEvaluation.cs
    startLine: 34
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the list of unhealthy evaluations that led to the aggregated health state. \nIncludes all the unhealthy \n<xref href=\"System.Fabric.Health.NodeHealthEvaluation\" data-throw-if-not-resolved=\"false\"></xref> that impacted the aggregated health.</p>\n"
  example: []
  syntax:
    content: public IList<HealthEvaluation> UnhealthyEvaluations { get; }
    content.vb: Public ReadOnly Property UnhealthyEvaluations As IList(Of HealthEvaluation)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Health.HealthEvaluation}
      description: "\n<p>The unhealthy evaluations \nthat led to current aggregated health state.</p>\n"
  overload: System.Fabric.Health.NodesHealthEvaluation.UnhealthyEvaluations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.NodesHealthEvaluation.MaxPercentUnhealthyNodes
  commentId: P:System.Fabric.Health.NodesHealthEvaluation.MaxPercentUnhealthyNodes
  id: MaxPercentUnhealthyNodes
  parent: System.Fabric.Health.NodesHealthEvaluation
  langs:
  - csharp
  - vb
  name: MaxPercentUnhealthyNodes
  nameWithType: NodesHealthEvaluation.MaxPercentUnhealthyNodes
  fullName: System.Fabric.Health.NodesHealthEvaluation.MaxPercentUnhealthyNodes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodesHealthEvaluation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxPercentUnhealthyNodes
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodesHealthEvaluation.cs
    startLine: 46
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the maximum allowed percentage of unhealthy nodes from the <xref href=\"System.Fabric.Health.ClusterHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public byte MaxPercentUnhealthyNodes { get; }
    content.vb: Public ReadOnly Property MaxPercentUnhealthyNodes As Byte
    parameters: []
    return:
      type: System.Byte
      description: "\n<p>The maximum allowed percentage of unhealthy nodes.</p>\n"
  overload: System.Fabric.Health.NodesHealthEvaluation.MaxPercentUnhealthyNodes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.NodesHealthEvaluation.TotalCount
  commentId: P:System.Fabric.Health.NodesHealthEvaluation.TotalCount
  id: TotalCount
  parent: System.Fabric.Health.NodesHealthEvaluation
  langs:
  - csharp
  - vb
  name: TotalCount
  nameWithType: NodesHealthEvaluation.TotalCount
  fullName: System.Fabric.Health.NodesHealthEvaluation.TotalCount
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodesHealthEvaluation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TotalCount
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodesHealthEvaluation.cs
    startLine: 58
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the total number of nodes in the health store.</p>\n"
  example: []
  syntax:
    content: public long TotalCount { get; }
    content.vb: Public ReadOnly Property TotalCount As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The total number of nodes in the health store.</p>\n"
  overload: System.Fabric.Health.NodesHealthEvaluation.TotalCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Health.HealthState.Error
  commentId: F:System.Fabric.Health.HealthState.Error
- uid: System.Fabric.Health.HealthState.Warning
  commentId: F:System.Fabric.Health.HealthState.Warning
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Health.HealthEvaluation
  commentId: T:System.Fabric.Health.HealthEvaluation
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEvaluation
  nameWithType: HealthEvaluation
  fullName: System.Fabric.Health.HealthEvaluation
- uid: System.Fabric.Health.HealthEvaluation.Kind
  commentId: P:System.Fabric.Health.HealthEvaluation.Kind
  parent: System.Fabric.Health.HealthEvaluation
  isExternal: false
  name: Kind
  nameWithType: HealthEvaluation.Kind
  fullName: System.Fabric.Health.HealthEvaluation.Kind
- uid: System.Fabric.Health.HealthEvaluation.Description
  commentId: P:System.Fabric.Health.HealthEvaluation.Description
  parent: System.Fabric.Health.HealthEvaluation
  isExternal: false
  name: Description
  nameWithType: HealthEvaluation.Description
  fullName: System.Fabric.Health.HealthEvaluation.Description
- uid: System.Fabric.Health.HealthEvaluation.AggregatedHealthState
  commentId: P:System.Fabric.Health.HealthEvaluation.AggregatedHealthState
  parent: System.Fabric.Health.HealthEvaluation
  isExternal: false
  name: AggregatedHealthState
  nameWithType: HealthEvaluation.AggregatedHealthState
  fullName: System.Fabric.Health.HealthEvaluation.AggregatedHealthState
- uid: System.Fabric.Health.HealthEvaluation.ToString
  commentId: M:System.Fabric.Health.HealthEvaluation.ToString
  parent: System.Fabric.Health.HealthEvaluation
  isExternal: false
  name: ToString()
  nameWithType: HealthEvaluation.ToString()
  fullName: System.Fabric.Health.HealthEvaluation.ToString()
  spec.csharp:
  - uid: System.Fabric.Health.HealthEvaluation.ToString
    name: ToString
    nameWithType: HealthEvaluation.ToString
    fullName: System.Fabric.Health.HealthEvaluation.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthEvaluation.ToString
    name: ToString
    nameWithType: HealthEvaluation.ToString
    fullName: System.Fabric.Health.HealthEvaluation.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.NodesHealthEvaluation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NodesHealthEvaluation>()
  nameWithType: ByteArraySerializer.Serialize<NodesHealthEvaluation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.NodesHealthEvaluation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NodesHealthEvaluation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.NodesHealthEvaluation)()
  name.vb: Serialize(Of NodesHealthEvaluation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NodesHealthEvaluation>
    nameWithType: ByteArraySerializer.Serialize<NodesHealthEvaluation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.NodesHealthEvaluation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NodesHealthEvaluation)
    nameWithType: ByteArraySerializer.Serialize(Of NodesHealthEvaluation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.NodesHealthEvaluation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.NodeHealthEvaluation
  commentId: T:System.Fabric.Health.NodeHealthEvaluation
  isExternal: false
  name: NodeHealthEvaluation
  nameWithType: NodeHealthEvaluation
  fullName: System.Fabric.Health.NodeHealthEvaluation
- uid: System.Fabric.Health.NodesHealthEvaluation.UnhealthyEvaluations*
  commentId: Overload:System.Fabric.Health.NodesHealthEvaluation.UnhealthyEvaluations
  isExternal: false
  name: UnhealthyEvaluations
  nameWithType: NodesHealthEvaluation.UnhealthyEvaluations
  fullName: System.Fabric.Health.NodesHealthEvaluation.UnhealthyEvaluations
- uid: System.Collections.Generic.IList{System.Fabric.Health.HealthEvaluation}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Health.HealthEvaluation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<HealthEvaluation>
  nameWithType: IList<HealthEvaluation>
  fullName: System.Collections.Generic.IList<System.Fabric.Health.HealthEvaluation>
  nameWithType.vb: IList(Of HealthEvaluation)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Health.HealthEvaluation)
  name.vb: IList(Of HealthEvaluation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Health.HealthEvaluation
    name: HealthEvaluation
    nameWithType: HealthEvaluation
    fullName: System.Fabric.Health.HealthEvaluation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Health.HealthEvaluation
    name: HealthEvaluation
    nameWithType: HealthEvaluation
    fullName: System.Fabric.Health.HealthEvaluation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.Health.ClusterHealthPolicy
  commentId: T:System.Fabric.Health.ClusterHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ClusterHealthPolicy
  nameWithType: ClusterHealthPolicy
  fullName: System.Fabric.Health.ClusterHealthPolicy
- uid: System.Fabric.Health.NodesHealthEvaluation.MaxPercentUnhealthyNodes*
  commentId: Overload:System.Fabric.Health.NodesHealthEvaluation.MaxPercentUnhealthyNodes
  isExternal: false
  name: MaxPercentUnhealthyNodes
  nameWithType: NodesHealthEvaluation.MaxPercentUnhealthyNodes
  fullName: System.Fabric.Health.NodesHealthEvaluation.MaxPercentUnhealthyNodes
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Fabric.Health.NodesHealthEvaluation.TotalCount*
  commentId: Overload:System.Fabric.Health.NodesHealthEvaluation.TotalCount
  isExternal: false
  name: TotalCount
  nameWithType: NodesHealthEvaluation.TotalCount
  fullName: System.Fabric.Health.NodesHealthEvaluation.TotalCount
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
