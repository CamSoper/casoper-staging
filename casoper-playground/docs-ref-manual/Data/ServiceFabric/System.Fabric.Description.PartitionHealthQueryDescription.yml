### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.PartitionHealthQueryDescription
  commentId: T:System.Fabric.Description.PartitionHealthQueryDescription
  id: PartitionHealthQueryDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.PartitionHealthQueryDescription.#ctor(System.Guid)
  - System.Fabric.Description.PartitionHealthQueryDescription.EventsFilter
  - System.Fabric.Description.PartitionHealthQueryDescription.HealthPolicy
  - System.Fabric.Description.PartitionHealthQueryDescription.PartitionId
  - System.Fabric.Description.PartitionHealthQueryDescription.ReplicasFilter
  - System.Fabric.Description.PartitionHealthQueryDescription.ToString
  langs:
  - csharp
  - vb
  name: PartitionHealthQueryDescription
  nameWithType: PartitionHealthQueryDescription
  fullName: System.Fabric.Description.PartitionHealthQueryDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionHealthQueryDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Describes query input for getting <xref href=\"System.Fabric.Health.PartitionHealth\" data-throw-if-not-resolved=\"false\"></xref>. Used by \n<xref href=\"System.Fabric.FabricClient.HealthClient.GetPartitionHealthAsync(System.Fabric.Description.PartitionHealthQueryDescription)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public sealed class PartitionHealthQueryDescription
    content.vb: Public NotInheritable Class PartitionHealthQueryDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.PartitionHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.PartitionHealthQueryDescription.#ctor(System.Guid)
  commentId: M:System.Fabric.Description.PartitionHealthQueryDescription.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.Fabric.Description.PartitionHealthQueryDescription
  langs:
  - csharp
  - vb
  name: PartitionHealthQueryDescription(Guid)
  nameWithType: PartitionHealthQueryDescription.PartitionHealthQueryDescription(Guid)
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.PartitionHealthQueryDescription(System.Guid)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
    startLine: 25
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Instantiates a new instance of the <xref href=\"System.Fabric.Description.PartitionHealthQueryDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public PartitionHealthQueryDescription(Guid partitionId)
    content.vb: Public Sub New(partitionId As Guid)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition identifier.</p>\n"
  overload: System.Fabric.Description.PartitionHealthQueryDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.PartitionHealthQueryDescription.PartitionId
  commentId: P:System.Fabric.Description.PartitionHealthQueryDescription.PartitionId
  id: PartitionId
  parent: System.Fabric.Description.PartitionHealthQueryDescription
  langs:
  - csharp
  - vb
  name: PartitionId
  nameWithType: PartitionHealthQueryDescription.PartitionId
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.PartitionId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionId
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
    startLine: 37
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the partition identifier.</p>\n"
  example: []
  syntax:
    content: public Guid PartitionId { get; }
    content.vb: Public ReadOnly Property PartitionId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>The <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> representing the partition identifier.</p>\n"
  overload: System.Fabric.Description.PartitionHealthQueryDescription.PartitionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.PartitionHealthQueryDescription.HealthPolicy
  commentId: P:System.Fabric.Description.PartitionHealthQueryDescription.HealthPolicy
  id: HealthPolicy
  parent: System.Fabric.Description.PartitionHealthQueryDescription
  langs:
  - csharp
  - vb
  name: HealthPolicy
  nameWithType: PartitionHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.HealthPolicy
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthPolicy
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
    startLine: 51
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the <xref href=\"System.Fabric.Health.ApplicationHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate health.</p>\n"
  remarks: >-
    If not specified, the health store uses the application health policy of the parent application

    to evaluate the partition health.
  example: []
  syntax:
    content: public ApplicationHealthPolicy HealthPolicy { get; set; }
    content.vb: Public Property HealthPolicy As ApplicationHealthPolicy
    parameters: []
    return:
      type: System.Fabric.Health.ApplicationHealthPolicy
      description: "\n<p>The <xref href=\"System.Fabric.Health.ApplicationHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate partition health.</p>\n"
  overload: System.Fabric.Description.PartitionHealthQueryDescription.HealthPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.PartitionHealthQueryDescription.EventsFilter
  commentId: P:System.Fabric.Description.PartitionHealthQueryDescription.EventsFilter
  id: EventsFilter
  parent: System.Fabric.Description.PartitionHealthQueryDescription
  langs:
  - csharp
  - vb
  name: EventsFilter
  nameWithType: PartitionHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.EventsFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EventsFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
    startLine: 67
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for the collection of <xref href=\"System.Fabric.Health.HealthEvent\" data-throw-if-not-resolved=\"false\"></xref> reported on the partition. Only \nevents that match the filter will be returned.</p>\n"
  remarks: "<p> Only events that match \n    the filter will be returned. All events will be used to evaluate the partition aggregated health state.\n    If the filter is not specified, all events are returned.</p>"
  example: []
  syntax:
    content: public HealthEventsFilter EventsFilter { get; set; }
    content.vb: Public Property EventsFilter As HealthEventsFilter
    parameters: []
    return:
      type: System.Fabric.Health.HealthEventsFilter
      description: "\n<p>The <xref href=\"System.Fabric.Health.HealthEventsFilter\" data-throw-if-not-resolved=\"false\"></xref> used to filter returned events.</p>\n"
  overload: System.Fabric.Description.PartitionHealthQueryDescription.EventsFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.PartitionHealthQueryDescription.ReplicasFilter
  commentId: P:System.Fabric.Description.PartitionHealthQueryDescription.ReplicasFilter
  id: ReplicasFilter
  parent: System.Fabric.Description.PartitionHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ReplicasFilter
  nameWithType: PartitionHealthQueryDescription.ReplicasFilter
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.ReplicasFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicasFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
    startLine: 83
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for <xref href=\"System.Fabric.Health.ReplicaHealthState\" data-throw-if-not-resolved=\"false\"></xref> children. Only children that match the filter \nwill be returned. All children will be used to evaluate the partition aggregated health state.</p>\n"
  remarks: "<p> Only children that match the filter will be returned. \n    All children will be used to evaluate the partition aggregated health state.\n    If the filter is not specified, all partition children are returned.</p>"
  example: []
  syntax:
    content: public ReplicaHealthStatesFilter ReplicasFilter { get; set; }
    content.vb: Public Property ReplicasFilter As ReplicaHealthStatesFilter
    parameters: []
    return:
      type: System.Fabric.Health.ReplicaHealthStatesFilter
      description: "\n<p>The <xref href=\"System.Fabric.Health.ReplicaHealthStatesFilter\" data-throw-if-not-resolved=\"false\"></xref> used to filter returned replicas.</p>\n"
  overload: System.Fabric.Description.PartitionHealthQueryDescription.ReplicasFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.PartitionHealthQueryDescription.ToString
  commentId: M:System.Fabric.Description.PartitionHealthQueryDescription.ToString
  id: ToString
  parent: System.Fabric.Description.PartitionHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PartitionHealthQueryDescription.ToString()
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Description/PartitionHealthQueryDescription.cs
    startLine: 93
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\nGets a string representation of the health query description.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the health query description.
  overridden: System.Object.ToString
  overload: System.Fabric.Description.PartitionHealthQueryDescription.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health.PartitionHealth
  commentId: T:System.Fabric.Health.PartitionHealth
  isExternal: false
  name: PartitionHealth
  nameWithType: PartitionHealth
  fullName: System.Fabric.Health.PartitionHealth
- uid: System.Fabric.FabricClient.HealthClient.GetPartitionHealthAsync(System.Fabric.Description.PartitionHealthQueryDescription)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetPartitionHealthAsync(System.Fabric.Description.PartitionHealthQueryDescription)
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.PartitionHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<PartitionHealthQueryDescription>()
  nameWithType: ByteArraySerializer.Serialize<PartitionHealthQueryDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.PartitionHealthQueryDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of PartitionHealthQueryDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.PartitionHealthQueryDescription)()
  name.vb: Serialize(Of PartitionHealthQueryDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<PartitionHealthQueryDescription>
    nameWithType: ByteArraySerializer.Serialize<PartitionHealthQueryDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.PartitionHealthQueryDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of PartitionHealthQueryDescription)
    nameWithType: ByteArraySerializer.Serialize(Of PartitionHealthQueryDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.PartitionHealthQueryDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.PartitionHealthQueryDescription
  commentId: T:System.Fabric.Description.PartitionHealthQueryDescription
  parent: System.Fabric.Description
  isExternal: false
  name: PartitionHealthQueryDescription
  nameWithType: PartitionHealthQueryDescription
  fullName: System.Fabric.Description.PartitionHealthQueryDescription
- uid: System.Fabric.Description.PartitionHealthQueryDescription.#ctor*
  commentId: Overload:System.Fabric.Description.PartitionHealthQueryDescription.#ctor
  isExternal: false
  name: PartitionHealthQueryDescription
  nameWithType: PartitionHealthQueryDescription.PartitionHealthQueryDescription
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.PartitionHealthQueryDescription
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.Description.PartitionHealthQueryDescription.PartitionId*
  commentId: Overload:System.Fabric.Description.PartitionHealthQueryDescription.PartitionId
  isExternal: false
  name: PartitionId
  nameWithType: PartitionHealthQueryDescription.PartitionId
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.PartitionId
- uid: System.Fabric.Health.ApplicationHealthPolicy
  commentId: T:System.Fabric.Health.ApplicationHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ApplicationHealthPolicy
  nameWithType: ApplicationHealthPolicy
  fullName: System.Fabric.Health.ApplicationHealthPolicy
- uid: System.Fabric.Description.PartitionHealthQueryDescription.HealthPolicy*
  commentId: Overload:System.Fabric.Description.PartitionHealthQueryDescription.HealthPolicy
  isExternal: false
  name: HealthPolicy
  nameWithType: PartitionHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.HealthPolicy
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.Health.HealthEvent
  commentId: T:System.Fabric.Health.HealthEvent
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: System.Fabric.Health.HealthEvent
- uid: System.Fabric.Health.HealthEventsFilter
  commentId: T:System.Fabric.Health.HealthEventsFilter
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEventsFilter
  nameWithType: HealthEventsFilter
  fullName: System.Fabric.Health.HealthEventsFilter
- uid: System.Fabric.Description.PartitionHealthQueryDescription.EventsFilter*
  commentId: Overload:System.Fabric.Description.PartitionHealthQueryDescription.EventsFilter
  isExternal: false
  name: EventsFilter
  nameWithType: PartitionHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.EventsFilter
- uid: System.Fabric.Health.ReplicaHealthState
  commentId: T:System.Fabric.Health.ReplicaHealthState
  parent: System.Fabric.Health
  isExternal: false
  name: ReplicaHealthState
  nameWithType: ReplicaHealthState
  fullName: System.Fabric.Health.ReplicaHealthState
- uid: System.Fabric.Health.ReplicaHealthStatesFilter
  commentId: T:System.Fabric.Health.ReplicaHealthStatesFilter
  parent: System.Fabric.Health
  isExternal: false
  name: ReplicaHealthStatesFilter
  nameWithType: ReplicaHealthStatesFilter
  fullName: System.Fabric.Health.ReplicaHealthStatesFilter
- uid: System.Fabric.Description.PartitionHealthQueryDescription.ReplicasFilter*
  commentId: Overload:System.Fabric.Description.PartitionHealthQueryDescription.ReplicasFilter
  isExternal: false
  name: ReplicasFilter
  nameWithType: PartitionHealthQueryDescription.ReplicasFilter
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.ReplicasFilter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.PartitionHealthQueryDescription.ToString*
  commentId: Overload:System.Fabric.Description.PartitionHealthQueryDescription.ToString
  isExternal: false
  name: ToString
  nameWithType: PartitionHealthQueryDescription.ToString
  fullName: System.Fabric.Description.PartitionHealthQueryDescription.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
