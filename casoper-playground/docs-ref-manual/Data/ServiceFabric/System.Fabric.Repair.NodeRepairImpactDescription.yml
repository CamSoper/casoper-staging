### YamlMime:ManagedReference
items:
- uid: System.Fabric.Repair.NodeRepairImpactDescription
  commentId: T:System.Fabric.Repair.NodeRepairImpactDescription
  id: NodeRepairImpactDescription
  parent: System.Fabric.Repair
  children:
  - System.Fabric.Repair.NodeRepairImpactDescription.#ctor
  - System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes
  - System.Fabric.Repair.NodeRepairImpactDescription.ToString
  langs:
  - csharp
  - vb
  name: NodeRepairImpactDescription
  nameWithType: NodeRepairImpactDescription
  fullName: System.Fabric.Repair.NodeRepairImpactDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeRepairImpactDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeRepairImpactDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeRepairImpactDescription.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Represents the expected impact of a repair on a set of nodes.</p>\n<p>This class supports the Service Fabric platform; it is not meant to be called directly from your code.</p>\n"
  example: []
  syntax:
    content: 'public sealed class NodeRepairImpactDescription : RepairImpactDescription'
    content.vb: >-
      Public NotInheritable Class NodeRepairImpactDescription
          Inherits RepairImpactDescription
  inheritance:
  - System.Object
  - System.Fabric.Repair.RepairImpactDescription
  inheritedMembers:
  - System.Fabric.Repair.RepairImpactDescription.Kind
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Repair.NodeRepairImpactDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Repair.NodeRepairImpactDescription.#ctor
  commentId: M:System.Fabric.Repair.NodeRepairImpactDescription.#ctor
  id: '#ctor'
  parent: System.Fabric.Repair.NodeRepairImpactDescription
  langs:
  - csharp
  - vb
  name: NodeRepairImpactDescription()
  nameWithType: NodeRepairImpactDescription.NodeRepairImpactDescription()
  fullName: System.Fabric.Repair.NodeRepairImpactDescription.NodeRepairImpactDescription()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeRepairImpactDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeRepairImpactDescription.cs
    startLine: 20
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Repair.NodeRepairImpactDescription\" data-throw-if-not-resolved=\"false\"></xref> class with \nan empty impact list.</p>\n"
  example: []
  syntax:
    content: public NodeRepairImpactDescription()
    content.vb: Public Sub New
  overload: System.Fabric.Repair.NodeRepairImpactDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes
  commentId: P:System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes
  id: ImpactedNodes
  parent: System.Fabric.Repair.NodeRepairImpactDescription
  langs:
  - csharp
  - vb
  name: ImpactedNodes
  nameWithType: NodeRepairImpactDescription.ImpactedNodes
  fullName: System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeRepairImpactDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ImpactedNodes
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeRepairImpactDescription.cs
    startLine: 37
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the list of impacted nodes.</p>\n"
  example: []
  syntax:
    content: public IList<NodeImpact> ImpactedNodes { get; }
    content.vb: Public ReadOnly Property ImpactedNodes As IList(Of NodeImpact)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Repair.NodeImpact}
      description: "\n<p>A list of <xref href=\"System.Fabric.Repair.NodeImpact\" data-throw-if-not-resolved=\"false\"></xref> objects describing the impact of the repair.</p>\n"
  overload: System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.NodeRepairImpactDescription.ToString
  commentId: M:System.Fabric.Repair.NodeRepairImpactDescription.ToString
  id: ToString
  parent: System.Fabric.Repair.NodeRepairImpactDescription
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NodeRepairImpactDescription.ToString()
  fullName: System.Fabric.Repair.NodeRepairImpactDescription.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeRepairImpactDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/NodeRepairImpactDescription.cs
    startLine: 78
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Converts the value of the current object to a string representation.</p>\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string representation of the value of <xref href=\"System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Object.ToString
  overload: System.Fabric.Repair.NodeRepairImpactDescription.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Repair
  commentId: N:System.Fabric.Repair
  isExternal: false
  name: System.Fabric.Repair
  nameWithType: System.Fabric.Repair
  fullName: System.Fabric.Repair
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Repair.RepairImpactDescription
  commentId: T:System.Fabric.Repair.RepairImpactDescription
  parent: System.Fabric.Repair
  isExternal: false
  name: RepairImpactDescription
  nameWithType: RepairImpactDescription
  fullName: System.Fabric.Repair.RepairImpactDescription
- uid: System.Fabric.Repair.RepairImpactDescription.Kind
  commentId: P:System.Fabric.Repair.RepairImpactDescription.Kind
  parent: System.Fabric.Repair.RepairImpactDescription
  isExternal: false
  name: Kind
  nameWithType: RepairImpactDescription.Kind
  fullName: System.Fabric.Repair.RepairImpactDescription.Kind
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Repair.NodeRepairImpactDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NodeRepairImpactDescription>()
  nameWithType: ByteArraySerializer.Serialize<NodeRepairImpactDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Repair.NodeRepairImpactDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NodeRepairImpactDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Repair.NodeRepairImpactDescription)()
  name.vb: Serialize(Of NodeRepairImpactDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NodeRepairImpactDescription>
    nameWithType: ByteArraySerializer.Serialize<NodeRepairImpactDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Repair.NodeRepairImpactDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NodeRepairImpactDescription)
    nameWithType: ByteArraySerializer.Serialize(Of NodeRepairImpactDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Repair.NodeRepairImpactDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Repair.NodeRepairImpactDescription
  commentId: T:System.Fabric.Repair.NodeRepairImpactDescription
  isExternal: false
  name: NodeRepairImpactDescription
  nameWithType: NodeRepairImpactDescription
  fullName: System.Fabric.Repair.NodeRepairImpactDescription
- uid: System.Fabric.Repair.NodeRepairImpactDescription.#ctor*
  commentId: Overload:System.Fabric.Repair.NodeRepairImpactDescription.#ctor
  isExternal: false
  name: NodeRepairImpactDescription
  nameWithType: NodeRepairImpactDescription.NodeRepairImpactDescription
  fullName: System.Fabric.Repair.NodeRepairImpactDescription.NodeRepairImpactDescription
- uid: System.Fabric.Repair.NodeImpact
  commentId: T:System.Fabric.Repair.NodeImpact
  isExternal: false
  name: NodeImpact
  nameWithType: NodeImpact
  fullName: System.Fabric.Repair.NodeImpact
- uid: System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes*
  commentId: Overload:System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes
  isExternal: false
  name: ImpactedNodes
  nameWithType: NodeRepairImpactDescription.ImpactedNodes
  fullName: System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes
- uid: System.Collections.Generic.IList{System.Fabric.Repair.NodeImpact}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Repair.NodeImpact}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<NodeImpact>
  nameWithType: IList<NodeImpact>
  fullName: System.Collections.Generic.IList<System.Fabric.Repair.NodeImpact>
  nameWithType.vb: IList(Of NodeImpact)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Repair.NodeImpact)
  name.vb: IList(Of NodeImpact)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Repair.NodeImpact
    name: NodeImpact
    nameWithType: NodeImpact
    fullName: System.Fabric.Repair.NodeImpact
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Repair.NodeImpact
    name: NodeImpact
    nameWithType: NodeImpact
    fullName: System.Fabric.Repair.NodeImpact
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes
  commentId: P:System.Fabric.Repair.NodeRepairImpactDescription.ImpactedNodes
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Repair.NodeRepairImpactDescription.ToString*
  commentId: Overload:System.Fabric.Repair.NodeRepairImpactDescription.ToString
  isExternal: false
  name: ToString
  nameWithType: NodeRepairImpactDescription.ToString
  fullName: System.Fabric.Repair.NodeRepairImpactDescription.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
