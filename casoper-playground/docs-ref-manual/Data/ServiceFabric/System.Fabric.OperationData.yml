### YamlMime:ManagedReference
items:
- uid: System.Fabric.OperationData
  commentId: T:System.Fabric.OperationData
  id: OperationData
  parent: System.Fabric
  children:
  - System.Fabric.OperationData.#ctor
  - System.Fabric.OperationData.#ctor(System.ArraySegment{System.Byte})
  - System.Fabric.OperationData.#ctor(System.Byte[])
  - System.Fabric.OperationData.#ctor(System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}})
  - System.Fabric.OperationData.#ctor(System.Collections.Generic.IEnumerable{System.Byte[]})
  langs:
  - csharp
  - vb
  name: OperationData
  nameWithType: OperationData
  fullName: System.Fabric.OperationData
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OperationData
    path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>An <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> is used to transfer copy state changes and copy context between replicas.</p>\n"
  example: []
  syntax:
    content: 'public class OperationData : Collection<ArraySegment<byte>>, IList<ArraySegment<byte>>, ICollection<ArraySegment<byte>>, IList, ICollection, IReadOnlyList<ArraySegment<byte>>, IReadOnlyCollection<ArraySegment<byte>>, IOperationData, IEnumerable<ArraySegment<byte>>, IEnumerable'
    content.vb: >-
      Public Class OperationData
          Inherits Collection(Of ArraySegment(Of Byte))
          Implements IList(Of ArraySegment(Of Byte)), ICollection(Of ArraySegment(Of Byte)), IList, ICollection, IReadOnlyList(Of ArraySegment(Of Byte)), IReadOnlyCollection(Of ArraySegment(Of Byte)), IOperationData, IEnumerable(Of ArraySegment(Of Byte)), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  implements:
  - System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
  - System.Collections.Generic.ICollection{System.ArraySegment{System.Byte}}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{System.ArraySegment{System.Byte}}
  - System.Collections.Generic.IReadOnlyCollection{System.ArraySegment{System.Byte}}
  - System.Fabric.IOperationData
  - System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Add(System.ArraySegment{System.Byte})
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Clear
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.CopyTo(System.ArraySegment{System.Byte}[],System.Int32)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Contains(System.ArraySegment{System.Byte})
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.GetEnumerator
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.IndexOf(System.ArraySegment{System.Byte})
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Insert(System.Int32,System.ArraySegment{System.Byte})
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Remove(System.ArraySegment{System.Byte})
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.ClearItems
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.InsertItem(System.Int32,System.ArraySegment{System.Byte})
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.RemoveItem(System.Int32)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.SetItem(System.Int32,System.ArraySegment{System.Byte})
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Count
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Items
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Item(System.Int32)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Item(System.Int32)
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#IsFixedSize
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.OperationData.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.OperationData.#ctor
  commentId: M:System.Fabric.OperationData.#ctor
  id: '#ctor'
  parent: System.Fabric.OperationData
  langs:
  - csharp
  - vb
  name: OperationData()
  nameWithType: OperationData.OperationData()
  fullName: System.Fabric.OperationData.OperationData()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
    startLine: 22
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public OperationData()
    content.vb: Public Sub New
  overload: System.Fabric.OperationData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.OperationData.#ctor(System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}})
  commentId: M:System.Fabric.OperationData.#ctor(System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}})'
  parent: System.Fabric.OperationData
  langs:
  - csharp
  - vb
  name: OperationData(IEnumerable<ArraySegment<Byte>>)
  nameWithType: OperationData.OperationData(IEnumerable<ArraySegment<Byte>>)
  fullName: System.Fabric.OperationData.OperationData(System.Collections.Generic.IEnumerable<System.ArraySegment<System.Byte>>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
    startLine: 34
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> class from the specified collection of \n<xref href=\"System.ArraySegment%601\" data-throw-if-not-resolved=\"false\"></xref> of bytes.</p>\n"
  example: []
  syntax:
    content: public OperationData(IEnumerable<ArraySegment<byte>> operationData)
    content.vb: Public Sub New(operationData As IEnumerable(Of ArraySegment(Of Byte)))
    parameters:
    - id: operationData
      type: System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}}
      description: "\n<p>The bytes from which to create \nthe <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  overload: System.Fabric.OperationData.#ctor*
  nameWithType.vb: OperationData.OperationData(IEnumerable(Of ArraySegment(Of Byte)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.OperationData.OperationData(System.Collections.Generic.IEnumerable(Of System.ArraySegment(Of System.Byte)))
  name.vb: OperationData(IEnumerable(Of ArraySegment(Of Byte)))
- uid: System.Fabric.OperationData.#ctor(System.ArraySegment{System.Byte})
  commentId: M:System.Fabric.OperationData.#ctor(System.ArraySegment{System.Byte})
  id: '#ctor(System.ArraySegment{System.Byte})'
  parent: System.Fabric.OperationData
  langs:
  - csharp
  - vb
  name: OperationData(ArraySegment<Byte>)
  nameWithType: OperationData.OperationData(ArraySegment<Byte>)
  fullName: System.Fabric.OperationData.OperationData(System.ArraySegment<System.Byte>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
    startLine: 45
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> class from the specified <xref href=\"System.ArraySegment%601\" data-throw-if-not-resolved=\"false\"></xref> of bytes.</p>\n"
  example: []
  syntax:
    content: public OperationData(ArraySegment<byte> operationData)
    content.vb: Public Sub New(operationData As ArraySegment(Of Byte))
    parameters:
    - id: operationData
      type: System.ArraySegment{System.Byte}
      description: "\n<p>The <xref href=\"System.ArraySegment%601\" data-throw-if-not-resolved=\"false\"></xref> of bytes from which to create the <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  overload: System.Fabric.OperationData.#ctor*
  nameWithType.vb: OperationData.OperationData(ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.OperationData.OperationData(System.ArraySegment(Of System.Byte))
  name.vb: OperationData(ArraySegment(Of Byte))
- uid: System.Fabric.OperationData.#ctor(System.Collections.Generic.IEnumerable{System.Byte[]})
  commentId: M:System.Fabric.OperationData.#ctor(System.Collections.Generic.IEnumerable{System.Byte[]})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Byte[]})'
  parent: System.Fabric.OperationData
  langs:
  - csharp
  - vb
  name: OperationData(IEnumerable<Byte[]>)
  nameWithType: OperationData.OperationData(IEnumerable<Byte[]>)
  fullName: System.Fabric.OperationData.OperationData(System.Collections.Generic.IEnumerable<System.Byte[]>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
    startLine: 56
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> class from the specified collection of byte arrays.</p>\n"
  example: []
  syntax:
    content: public OperationData(IEnumerable<byte[]> operationData)
    content.vb: Public Sub New(operationData As IEnumerable(Of Byte()))
    parameters:
    - id: operationData
      type: System.Collections.Generic.IEnumerable{System.Byte[]}
      description: "\n<p>The <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> of byte arrays from which to create the <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  overload: System.Fabric.OperationData.#ctor*
  nameWithType.vb: OperationData.OperationData(IEnumerable(Of Byte()))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.OperationData.OperationData(System.Collections.Generic.IEnumerable(Of System.Byte()))
  name.vb: OperationData(IEnumerable(Of Byte()))
- uid: System.Fabric.OperationData.#ctor(System.Byte[])
  commentId: M:System.Fabric.OperationData.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Fabric.OperationData
  langs:
  - csharp
  - vb
  name: OperationData(Byte[])
  nameWithType: OperationData.OperationData(Byte[])
  fullName: System.Fabric.OperationData.OperationData(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/OperationData.cs
    startLine: 67
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> class from the specified byte array.</p>\n"
  example: []
  syntax:
    content: public OperationData(byte[] operationData)
    content.vb: Public Sub New(operationData As Byte())
    parameters:
    - id: operationData
      type: System.Byte[]
      description: "\n<p>The byte array from which to create the <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  overload: System.Fabric.OperationData.#ctor*
  nameWithType.vb: OperationData.OperationData(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.OperationData.OperationData(System.Byte())
  name.vb: OperationData(Byte())
references:
- uid: System.Fabric.OperationData
  commentId: T:System.Fabric.OperationData
  parent: System.Fabric
  isExternal: false
  name: OperationData
  nameWithType: OperationData
  fullName: System.Fabric.OperationData
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  commentId: T:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<ArraySegment<Byte>>
  nameWithType: Collection<ArraySegment<Byte>>
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>
  nameWithType.vb: Collection(Of ArraySegment(Of Byte))
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte))
  name.vb: Collection(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
  commentId: T:System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ArraySegment<Byte>>
  nameWithType: IList<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IList<System.ArraySegment<System.Byte>>
  nameWithType.vb: IList(Of ArraySegment(Of Byte))
  fullname.vb: System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte))
  name.vb: IList(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.ArraySegment{System.Byte}}
  commentId: T:System.Collections.Generic.ICollection{System.ArraySegment{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ArraySegment<Byte>>
  nameWithType: ICollection<ArraySegment<Byte>>
  fullName: System.Collections.Generic.ICollection<System.ArraySegment<System.Byte>>
  nameWithType.vb: ICollection(Of ArraySegment(Of Byte))
  fullname.vb: System.Collections.Generic.ICollection(Of System.ArraySegment(Of System.Byte))
  name.vb: ICollection(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{System.ArraySegment{System.Byte}}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.ArraySegment{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ArraySegment<Byte>>
  nameWithType: IReadOnlyList<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IReadOnlyList<System.ArraySegment<System.Byte>>
  nameWithType.vb: IReadOnlyList(Of ArraySegment(Of Byte))
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.ArraySegment(Of System.Byte))
  name.vb: IReadOnlyList(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.ArraySegment{System.Byte}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.ArraySegment{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<ArraySegment<Byte>>
  nameWithType: IReadOnlyCollection<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.ArraySegment<System.Byte>>
  nameWithType.vb: IReadOnlyCollection(Of ArraySegment(Of Byte))
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.ArraySegment(Of System.Byte))
  name.vb: IReadOnlyCollection(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.IOperationData
  commentId: T:System.Fabric.IOperationData
  parent: System.Fabric
  isExternal: false
  name: IOperationData
  nameWithType: IOperationData
  fullName: System.Fabric.IOperationData
- uid: System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ArraySegment{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ArraySegment<Byte>>
  nameWithType: IEnumerable<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IEnumerable<System.ArraySegment<System.Byte>>
  nameWithType.vb: IEnumerable(Of ArraySegment(Of Byte))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.ArraySegment(Of System.Byte))
  name.vb: IEnumerable(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Add(System.ArraySegment{System.Byte})
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Add(System.ArraySegment{System.Byte})
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.Add(`0)
  name: Add(ArraySegment<Byte>)
  nameWithType: Collection<ArraySegment<Byte>>.Add(ArraySegment<Byte>)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Add(System.ArraySegment<System.Byte>)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).Add(ArraySegment(Of Byte))
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Add(System.ArraySegment(Of System.Byte))
  name.vb: Add(ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<ArraySegment<Byte>>.Add
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of ArraySegment(Of Byte)).Add
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Clear
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Clear
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.Clear
  name: Clear()
  nameWithType: Collection<ArraySegment<Byte>>.Clear()
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Clear()
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).Clear()
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<ArraySegment<Byte>>.Clear
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of ArraySegment(Of Byte)).Clear
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.CopyTo(System.ArraySegment{System.Byte}[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.CopyTo(System.ArraySegment{System.Byte}[],System.Int32)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(ArraySegment<Byte>[], Int32)
  nameWithType: Collection<ArraySegment<Byte>>.CopyTo(ArraySegment<Byte>[], Int32)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.CopyTo(System.ArraySegment<System.Byte>[], System.Int32)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).CopyTo(ArraySegment(Of Byte)(), Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).CopyTo(System.ArraySegment(Of System.Byte)(), System.Int32)
  name.vb: CopyTo(ArraySegment(Of Byte)(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<ArraySegment<Byte>>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of ArraySegment(Of Byte)).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Contains(System.ArraySegment{System.Byte})
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Contains(System.ArraySegment{System.Byte})
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.Contains(`0)
  name: Contains(ArraySegment<Byte>)
  nameWithType: Collection<ArraySegment<Byte>>.Contains(ArraySegment<Byte>)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Contains(System.ArraySegment<System.Byte>)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).Contains(ArraySegment(Of Byte))
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Contains(System.ArraySegment(Of System.Byte))
  name.vb: Contains(ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<ArraySegment<Byte>>.Contains
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of ArraySegment(Of Byte)).Contains
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.GetEnumerator
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Collection<ArraySegment<Byte>>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.GetEnumerator()
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<ArraySegment<Byte>>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of ArraySegment(Of Byte)).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.IndexOf(System.ArraySegment{System.Byte})
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.IndexOf(System.ArraySegment{System.Byte})
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  name: IndexOf(ArraySegment<Byte>)
  nameWithType: Collection<ArraySegment<Byte>>.IndexOf(ArraySegment<Byte>)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.IndexOf(System.ArraySegment<System.Byte>)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).IndexOf(ArraySegment(Of Byte))
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).IndexOf(System.ArraySegment(Of System.Byte))
  name.vb: IndexOf(ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<ArraySegment<Byte>>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of ArraySegment(Of Byte)).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Insert(System.Int32,System.ArraySegment{System.Byte})
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Insert(System.Int32,System.ArraySegment{System.Byte})
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  name: Insert(Int32, ArraySegment<Byte>)
  nameWithType: Collection<ArraySegment<Byte>>.Insert(Int32, ArraySegment<Byte>)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Insert(System.Int32, System.ArraySegment<System.Byte>)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).Insert(Int32, ArraySegment(Of Byte))
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Insert(System.Int32, System.ArraySegment(Of System.Byte))
  name.vb: Insert(Int32, ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<ArraySegment<Byte>>.Insert
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of ArraySegment(Of Byte)).Insert
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Remove(System.ArraySegment{System.Byte})
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Remove(System.ArraySegment{System.Byte})
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.Remove(`0)
  name: Remove(ArraySegment<Byte>)
  nameWithType: Collection<ArraySegment<Byte>>.Remove(ArraySegment<Byte>)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Remove(System.ArraySegment<System.Byte>)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).Remove(ArraySegment(Of Byte))
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Remove(System.ArraySegment(Of System.Byte))
  name.vb: Remove(ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<ArraySegment<Byte>>.Remove
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of ArraySegment(Of Byte)).Remove
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: Collection<ArraySegment<Byte>>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).RemoveAt(Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<ArraySegment<Byte>>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of ArraySegment(Of Byte)).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.ClearItems
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.ClearItems
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.ClearItems
  name: ClearItems()
  nameWithType: Collection<ArraySegment<Byte>>.ClearItems()
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.ClearItems()
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).ClearItems()
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection<ArraySegment<Byte>>.ClearItems
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection(Of ArraySegment(Of Byte)).ClearItems
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.InsertItem(System.Int32,System.ArraySegment{System.Byte})
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.InsertItem(System.Int32,System.ArraySegment{System.Byte})
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  name: InsertItem(Int32, ArraySegment<Byte>)
  nameWithType: Collection<ArraySegment<Byte>>.InsertItem(Int32, ArraySegment<Byte>)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.InsertItem(System.Int32, System.ArraySegment<System.Byte>)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).InsertItem(Int32, ArraySegment(Of Byte))
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).InsertItem(System.Int32, System.ArraySegment(Of System.Byte))
  name.vb: InsertItem(Int32, ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: Collection<ArraySegment<Byte>>.InsertItem
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: Collection(Of ArraySegment(Of Byte)).InsertItem
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  name: RemoveItem(Int32)
  nameWithType: Collection<ArraySegment<Byte>>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.RemoveItem(System.Int32)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).RemoveItem(Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: Collection<ArraySegment<Byte>>.RemoveItem
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: Collection(Of ArraySegment(Of Byte)).RemoveItem
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.SetItem(System.Int32,System.ArraySegment{System.Byte})
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.SetItem(System.Int32,System.ArraySegment{System.Byte})
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  name: SetItem(Int32, ArraySegment<Byte>)
  nameWithType: Collection<ArraySegment<Byte>>.SetItem(Int32, ArraySegment<Byte>)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.SetItem(System.Int32, System.ArraySegment<System.Byte>)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).SetItem(Int32, ArraySegment(Of Byte))
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).SetItem(System.Int32, System.ArraySegment(Of System.Byte))
  name.vb: SetItem(Int32, ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: Collection<ArraySegment<Byte>>.SetItem
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: Collection(Of ArraySegment(Of Byte)).SetItem
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<ArraySegment<Byte>>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<ArraySegment<Byte>>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of ArraySegment(Of Byte)).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<ArraySegment<Byte>>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.ICollection.CopyTo(Array, Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<ArraySegment<Byte>>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of ArraySegment(Of Byte)).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: Collection<ArraySegment<Byte>>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.get_Item(Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<ArraySegment<Byte>>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<ArraySegment<Byte>>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.set_Item(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<ArraySegment<Byte>>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: Collection<ArraySegment<Byte>>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.Add(Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<ArraySegment<Byte>>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: Collection<ArraySegment<Byte>>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.Contains(Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<ArraySegment<Byte>>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: Collection<ArraySegment<Byte>>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.IndexOf(Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<ArraySegment<Byte>>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<ArraySegment<Byte>>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.Insert(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<ArraySegment<Byte>>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: Collection<ArraySegment<Byte>>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.Remove(Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<ArraySegment<Byte>>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Count
  commentId: P:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Count
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.Count
  name: Count
  nameWithType: Collection<ArraySegment<Byte>>.Count
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Count
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).Count
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Count
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Items
  commentId: P:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Items
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.Items
  name: Items
  nameWithType: Collection<ArraySegment<Byte>>.Items
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Items
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).Items
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Items
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: Collection<ArraySegment<Byte>>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Item[System.Int32]
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).Item(Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<ArraySegment<Byte>>.Item
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of ArraySegment(Of Byte)).Item
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<ArraySegment<Byte>>.IsReadOnly
  nameWithType: Collection<ArraySegment<Byte>>.ICollection<ArraySegment<Byte>>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.Generic.ICollection<System.ArraySegment<System.Byte>>.IsReadOnly
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Collection<ArraySegment<Byte>>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.ICollection.IsSynchronized
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Collection<ArraySegment<Byte>>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.ICollection.SyncRoot
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: Collection<ArraySegment<Byte>>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.Item(Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<ArraySegment<Byte>>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: Collection<ArraySegment<Byte>>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection{System.ArraySegment{System.Byte}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: Collection<ArraySegment<Byte>>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<System.ArraySegment<System.Byte>>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of ArraySegment(Of Byte)).System.Collections.IList.IsFixedSize
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ArraySegment(Of System.Byte)).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.OperationData.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<OperationData>()
  nameWithType: ByteArraySerializer.Serialize<OperationData>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.OperationData>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of OperationData)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.OperationData)()
  name.vb: Serialize(Of OperationData)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<OperationData>
    nameWithType: ByteArraySerializer.Serialize<OperationData>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.OperationData>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of OperationData)
    nameWithType: ByteArraySerializer.Serialize(Of OperationData)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.OperationData)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: Collection<T>.Add(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)
  nameWithType.vb: Collection(Of T).Add(T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<T>.Add
    fullName: System.Collections.ObjectModel.Collection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of T).Add
    fullName: System.Collections.ObjectModel.Collection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Clear
  commentId: M:System.Collections.ObjectModel.Collection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: Collection<T>.Clear()
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
  nameWithType.vb: Collection(Of T).Clear()
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<T>.Clear
    fullName: System.Collections.ObjectModel.Collection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of T).Clear
    fullName: System.Collections.ObjectModel.Collection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: Collection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Collection(Of T).CopyTo(T(), Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<T>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of T).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: Collection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
  nameWithType.vb: Collection(Of T).Contains(T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<T>.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of T).Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Collection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
  nameWithType.vb: Collection(Of T).GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<T>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of T).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: Collection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
  nameWithType.vb: Collection(Of T).IndexOf(T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<T>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of T).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: Collection<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T)
  nameWithType.vb: Collection(Of T).Insert(Int32, T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<T>.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of T).Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: Collection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
  nameWithType.vb: Collection(Of T).Remove(T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<T>.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of T).Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: Collection<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of T).RemoveAt(Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<T>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of T).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.ClearItems
  commentId: M:System.Collections.ObjectModel.Collection`1.ClearItems
  isExternal: true
  name: ClearItems()
  nameWithType: Collection<T>.ClearItems()
  fullName: System.Collections.ObjectModel.Collection<T>.ClearItems()
  nameWithType.vb: Collection(Of T).ClearItems()
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection<T>.ClearItems
    fullName: System.Collections.ObjectModel.Collection<T>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection(Of T).ClearItems
    fullName: System.Collections.ObjectModel.Collection(Of T).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  isExternal: true
  name: InsertItem(Int32, T)
  nameWithType: Collection<T>.InsertItem(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.InsertItem(System.Int32, T)
  nameWithType.vb: Collection(Of T).InsertItem(Int32, T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).InsertItem(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: Collection<T>.InsertItem
    fullName: System.Collections.ObjectModel.Collection<T>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: Collection(Of T).InsertItem
    fullName: System.Collections.ObjectModel.Collection(Of T).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  isExternal: true
  name: RemoveItem(Int32)
  nameWithType: Collection<T>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem(System.Int32)
  nameWithType.vb: Collection(Of T).RemoveItem(Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: Collection<T>.RemoveItem
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: Collection(Of T).RemoveItem
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  isExternal: true
  name: SetItem(Int32, T)
  nameWithType: Collection<T>.SetItem(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.SetItem(System.Int32, T)
  nameWithType.vb: Collection(Of T).SetItem(Int32, T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).SetItem(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: Collection<T>.SetItem
    fullName: System.Collections.ObjectModel.Collection<T>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: Collection(Of T).SetItem
    fullName: System.Collections.ObjectModel.Collection(Of T).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<T>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: Collection<T>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.IList.get_Item(Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<T>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<T>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: Collection<T>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Add(Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<T>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of T).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: Collection<T>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Contains(Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<T>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of T).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: Collection<T>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.IndexOf(Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<T>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Insert(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<T>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of T).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: Collection<T>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Remove(Object)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<T>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of T).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Count
  commentId: P:System.Collections.ObjectModel.Collection`1.Count
  isExternal: true
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  nameWithType.vb: Collection(Of T).Count
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Count
- uid: System.Collections.ObjectModel.Collection`1.Items
  commentId: P:System.Collections.ObjectModel.Collection`1.Items
  isExternal: true
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  nameWithType.vb: Collection(Of T).Items
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Items
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: Collection<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.Item[System.Int32]
  nameWithType.vb: Collection(Of T).Item(Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<T>.Item
    fullName: System.Collections.ObjectModel.Collection<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of T).Item
    fullName: System.Collections.ObjectModel.Collection(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Collection<T>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.IsSynchronized
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Collection<T>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.SyncRoot
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: Collection<T>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of T).System.Collections.IList.Item(Int32)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<T>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of T).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: Collection<T>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: Collection<T>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsFixedSize
  fullname.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.OperationData.#ctor*
  commentId: Overload:System.Fabric.OperationData.#ctor
  isExternal: false
  name: OperationData
  nameWithType: OperationData.OperationData
  fullName: System.Fabric.OperationData.OperationData
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullname.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullname.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Byte[]}
  commentId: T:System.Collections.Generic.IEnumerable{System.Byte[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Byte[]>
  nameWithType: IEnumerable<Byte[]>
  fullName: System.Collections.Generic.IEnumerable<System.Byte[]>
  nameWithType.vb: IEnumerable(Of Byte())
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Byte())
  name.vb: IEnumerable(Of Byte())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
