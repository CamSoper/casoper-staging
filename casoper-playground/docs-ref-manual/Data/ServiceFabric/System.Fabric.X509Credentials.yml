### YamlMime:ManagedReference
items:
- uid: System.Fabric.X509Credentials
  commentId: T:System.Fabric.X509Credentials
  id: X509Credentials
  parent: System.Fabric
  children:
  - System.Fabric.X509Credentials.#ctor
  - System.Fabric.X509Credentials.AllowedCommonNames
  - System.Fabric.X509Credentials.FindType
  - System.Fabric.X509Credentials.FindValue
  - System.Fabric.X509Credentials.FindValueSecondary
  - System.Fabric.X509Credentials.IssuerThumbprints
  - System.Fabric.X509Credentials.ProtectionLevel
  - System.Fabric.X509Credentials.RemoteCertThumbprints
  - System.Fabric.X509Credentials.RemoteCommonNames
  - System.Fabric.X509Credentials.RemoteX509Names
  - System.Fabric.X509Credentials.StoreLocation
  - System.Fabric.X509Credentials.StoreName
  langs:
  - csharp
  - vb
  name: X509Credentials
  nameWithType: X509Credentials
  fullName: System.Fabric.X509Credentials
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: X509Credentials
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 99
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies the security credentials that are based upon X.509 certificates.</p>\n"
  example: []
  syntax:
    content: 'public sealed class X509Credentials : SecurityCredentials'
    content.vb: >-
      Public NotInheritable Class X509Credentials
          Inherits SecurityCredentials
  inheritance:
  - System.Object
  - System.Fabric.SecurityCredentials
  inheritedMembers:
  - System.Fabric.SecurityCredentials.CredentialType
  - System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.X509Credentials.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.X509Credentials.#ctor
  commentId: M:System.Fabric.X509Credentials.#ctor
  id: '#ctor'
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: X509Credentials()
  nameWithType: X509Credentials.X509Credentials()
  fullName: System.Fabric.X509Credentials.X509Credentials()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 112
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Creates a new instance of the <xref href=\"System.Fabric.X509Credentials\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public X509Credentials()
    content.vb: Public Sub New
  overload: System.Fabric.X509Credentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.X509Credentials.AllowedCommonNames
  commentId: P:System.Fabric.X509Credentials.AllowedCommonNames
  id: AllowedCommonNames
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: AllowedCommonNames
  nameWithType: X509Credentials.AllowedCommonNames
  fullName: System.Fabric.X509Credentials.AllowedCommonNames
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AllowedCommonNames
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 132
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Deprecated by RemoteCommonNames.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated by RemoteCommonNames")]

      public IList<string> AllowedCommonNames { get; }
    content.vb: >-
      <Obsolete("Deprecated by RemoteCommonNames")>

      Public ReadOnly Property AllowedCommonNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "\n<p>The allowed common names that you want Service Fabric to validate against.</p>\n"
  overload: System.Fabric.X509Credentials.AllowedCommonNames*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deprecated by RemoteCommonNames
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.X509Credentials.RemoteX509Names
  commentId: P:System.Fabric.X509Credentials.RemoteX509Names
  id: RemoteX509Names
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: RemoteX509Names
  nameWithType: X509Credentials.RemoteX509Names
  fullName: System.Fabric.X509Credentials.RemoteX509Names
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RemoteX509Names
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 151
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of X509Name to validate remote X509Credentials</p>\n"
  example: []
  syntax:
    content: public IList<X509Name> RemoteX509Names { get; }
    content.vb: Public ReadOnly Property RemoteX509Names As IList(Of X509Name)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.X509Name}
      description: "\n<p>the list of X509Name to validate remote X509Credentials</p>\n"
  overload: System.Fabric.X509Credentials.RemoteX509Names*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.X509Credentials.RemoteCommonNames
  commentId: P:System.Fabric.X509Credentials.RemoteCommonNames
  id: RemoteCommonNames
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: RemoteCommonNames
  nameWithType: X509Credentials.RemoteCommonNames
  fullName: System.Fabric.X509Credentials.RemoteCommonNames
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RemoteCommonNames
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 159
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates the expected common names of remote certificates that you want Service Fabric to validate against.</p>\n"
  example: []
  syntax:
    content: public IList<string> RemoteCommonNames { get; }
    content.vb: Public ReadOnly Property RemoteCommonNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "\n<p>The expected common names of remote certificates that you want Service Fabric to validate against.</p>\n"
  overload: System.Fabric.X509Credentials.RemoteCommonNames*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.X509Credentials.IssuerThumbprints
  commentId: P:System.Fabric.X509Credentials.IssuerThumbprints
  id: IssuerThumbprints
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: IssuerThumbprints
  nameWithType: X509Credentials.IssuerThumbprints
  fullName: System.Fabric.X509Credentials.IssuerThumbprints
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IssuerThumbprints
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 177
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>When not empty, this dictates the certificate thumbprints of direct issuer of remote certificates.</p>\n"
  example: []
  syntax:
    content: public IList<string> IssuerThumbprints { get; }
    content.vb: Public ReadOnly Property IssuerThumbprints As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "\n<p>The certificate thumbprints of direct issuer of remote certificates.</p>\n"
  overload: System.Fabric.X509Credentials.IssuerThumbprints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.X509Credentials.RemoteCertThumbprints
  commentId: P:System.Fabric.X509Credentials.RemoteCertThumbprints
  id: RemoteCertThumbprints
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: RemoteCertThumbprints
  nameWithType: X509Credentials.RemoteCertThumbprints
  fullName: System.Fabric.X509Credentials.RemoteCertThumbprints
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RemoteCertThumbprints
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 195
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of remote certificate thumbprints, used to validate remote X509Credentials</p>\n"
  example: []
  syntax:
    content: public IList<string> RemoteCertThumbprints { get; }
    content.vb: Public ReadOnly Property RemoteCertThumbprints As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "\n<p>List of remote certificate thumbprints, used to validate remote X509Credentials</p>\n"
  overload: System.Fabric.X509Credentials.RemoteCertThumbprints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.X509Credentials.FindType
  commentId: P:System.Fabric.X509Credentials.FindType
  id: FindType
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: FindType
  nameWithType: X509Credentials.FindType
  fullName: System.Fabric.X509Credentials.FindType
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FindType
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 203
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p> Specifies how to find local certificate in certificate store.Supported values:FindByThumbprint: find certificate by certificate thumbprintFindBySubjectName: find certificate by subject distinguished name or common name, when subject distinguished name is provided in FindValue, subject name in the certificate must be encoded in ASN encoding due to a restriction in native Windows crypto API. There is no such restriction when common name is provided in FindValue.</p>\n"
  example: []
  syntax:
    content: public X509FindType FindType { get; set; }
    content.vb: Public Property FindType As X509FindType
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "\n<p>The type of security credentials to use to secure the cluster.</p>\n"
  overload: System.Fabric.X509Credentials.FindType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.X509Credentials.FindValue
  commentId: P:System.Fabric.X509Credentials.FindValue
  id: FindValue
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: FindValue
  nameWithType: X509Credentials.FindValue
  fullName: System.Fabric.X509Credentials.FindValue
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FindValue
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 222
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies the filter value used to search local certificate in certificate store. FindType specifies the type of filter value.</p>\n"
  example: []
  syntax:
    content: public object FindValue { get; set; }
    content.vb: Public Property FindValue As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>The value of security credentials to use to secure the cluster.</p>\n"
  overload: System.Fabric.X509Credentials.FindValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.X509Credentials.FindValueSecondary
  commentId: P:System.Fabric.X509Credentials.FindValueSecondary
  id: FindValueSecondary
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: FindValueSecondary
  nameWithType: X509Credentials.FindValueSecondary
  fullName: System.Fabric.X509Credentials.FindValueSecondary
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FindValueSecondary
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 242
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the secondary find value for loading local certificate credential.</p>\n"
  example: []
  syntax:
    content: public object FindValueSecondary { get; set; }
    content.vb: Public Property FindValueSecondary As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>The secondary find value for loading local certificate credential.</p>\n"
  overload: System.Fabric.X509Credentials.FindValueSecondary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.X509Credentials.StoreLocation
  commentId: P:System.Fabric.X509Credentials.StoreLocation
  id: StoreLocation
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: StoreLocation
  nameWithType: X509Credentials.StoreLocation
  fullName: System.Fabric.X509Credentials.StoreLocation
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StoreLocation
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 250
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates the location of the certificate store.</p>\n"
  example: []
  syntax:
    content: public StoreLocation StoreLocation { get; set; }
    content.vb: Public Property StoreLocation As StoreLocation
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "\n<p>The location of the certificate store.</p>\n"
  overload: System.Fabric.X509Credentials.StoreLocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.X509Credentials.StoreName
  commentId: P:System.Fabric.X509Credentials.StoreName
  id: StoreName
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: StoreName
  nameWithType: X509Credentials.StoreName
  fullName: System.Fabric.X509Credentials.StoreName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StoreName
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 269
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates the name of the store where the certificate is stored.</p>\n"
  example: []
  syntax:
    content: public string StoreName { get; set; }
    content.vb: Public Property StoreName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the store where the certificate is stored.</p>\n"
  overload: System.Fabric.X509Credentials.StoreName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.X509Credentials.ProtectionLevel
  commentId: P:System.Fabric.X509Credentials.ProtectionLevel
  id: ProtectionLevel
  parent: System.Fabric.X509Credentials
  langs:
  - csharp
  - vb
  name: ProtectionLevel
  nameWithType: X509Credentials.ProtectionLevel
  fullName: System.Fabric.X509Credentials.ProtectionLevel
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ProtectionLevel
    path: src/prod/src/managed/Api/src/System/Fabric/Common/X509Credentials.cs
    startLine: 289
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates the string value that is used to specify whether the messages in the header and body have integrity and confidentiality guarantees applied to them when they are sent between the nodes of a cluster.</p>\n"
  example: []
  syntax:
    content: public ProtectionLevel ProtectionLevel { get; set; }
    content.vb: Public Property ProtectionLevel As ProtectionLevel
    parameters: []
    return:
      type: System.Fabric.ProtectionLevel
      description: "\n<p>The string value that is used to specify whether the messages in the header and body have integrity and confidentiality guarantees applied to them when they are sent between the nodes of a cluster.</p>\n"
  overload: System.Fabric.X509Credentials.ProtectionLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.SecurityCredentials
  commentId: T:System.Fabric.SecurityCredentials
  parent: System.Fabric
  isExternal: false
  name: SecurityCredentials
  nameWithType: SecurityCredentials
  fullName: System.Fabric.SecurityCredentials
- uid: System.Fabric.SecurityCredentials.CredentialType
  commentId: P:System.Fabric.SecurityCredentials.CredentialType
  parent: System.Fabric.SecurityCredentials
  isExternal: false
  name: CredentialType
  nameWithType: SecurityCredentials.CredentialType
  fullName: System.Fabric.SecurityCredentials.CredentialType
- uid: System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
  commentId: M:System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
  parent: System.Fabric.SecurityCredentials
  isExternal: true
  name: LoadFrom(CodePackageActivationContext, String, String)
  nameWithType: SecurityCredentials.LoadFrom(CodePackageActivationContext, String, String)
  fullName: System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext, System.String, System.String)
  spec.csharp:
  - uid: System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
    name: LoadFrom
    nameWithType: SecurityCredentials.LoadFrom
    fullName: System.Fabric.SecurityCredentials.LoadFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.CodePackageActivationContext
    name: CodePackageActivationContext
    nameWithType: CodePackageActivationContext
    fullName: System.Fabric.CodePackageActivationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
    name: LoadFrom
    nameWithType: SecurityCredentials.LoadFrom
    fullName: System.Fabric.SecurityCredentials.LoadFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.CodePackageActivationContext
    name: CodePackageActivationContext
    nameWithType: CodePackageActivationContext
    fullName: System.Fabric.CodePackageActivationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.X509Credentials.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<X509Credentials>()
  nameWithType: ByteArraySerializer.Serialize<X509Credentials>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.X509Credentials>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of X509Credentials)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.X509Credentials)()
  name.vb: Serialize(Of X509Credentials)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<X509Credentials>
    nameWithType: ByteArraySerializer.Serialize<X509Credentials>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.X509Credentials>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of X509Credentials)
    nameWithType: ByteArraySerializer.Serialize(Of X509Credentials)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.X509Credentials)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.X509Credentials
  commentId: T:System.Fabric.X509Credentials
  isExternal: false
  name: X509Credentials
  nameWithType: X509Credentials
  fullName: System.Fabric.X509Credentials
- uid: System.Fabric.X509Credentials.#ctor*
  commentId: Overload:System.Fabric.X509Credentials.#ctor
  isExternal: false
  name: X509Credentials
  nameWithType: X509Credentials.X509Credentials
  fullName: System.Fabric.X509Credentials.X509Credentials
- uid: System.Fabric.X509Credentials.AllowedCommonNames*
  commentId: Overload:System.Fabric.X509Credentials.AllowedCommonNames
  isExternal: false
  name: AllowedCommonNames
  nameWithType: X509Credentials.AllowedCommonNames
  fullName: System.Fabric.X509Credentials.AllowedCommonNames
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.X509Credentials.RemoteX509Names*
  commentId: Overload:System.Fabric.X509Credentials.RemoteX509Names
  isExternal: false
  name: RemoteX509Names
  nameWithType: X509Credentials.RemoteX509Names
  fullName: System.Fabric.X509Credentials.RemoteX509Names
- uid: System.Collections.Generic.IList{System.Fabric.X509Name}
  commentId: T:System.Collections.Generic.IList{System.Fabric.X509Name}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<X509Name>
  nameWithType: IList<X509Name>
  fullName: System.Collections.Generic.IList<System.Fabric.X509Name>
  nameWithType.vb: IList(Of X509Name)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.X509Name)
  name.vb: IList(Of X509Name)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.X509Name
    name: X509Name
    nameWithType: X509Name
    fullName: System.Fabric.X509Name
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.X509Name
    name: X509Name
    nameWithType: X509Name
    fullName: System.Fabric.X509Name
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.X509Credentials.RemoteCommonNames*
  commentId: Overload:System.Fabric.X509Credentials.RemoteCommonNames
  isExternal: false
  name: RemoteCommonNames
  nameWithType: X509Credentials.RemoteCommonNames
  fullName: System.Fabric.X509Credentials.RemoteCommonNames
- uid: System.Fabric.X509Credentials.IssuerThumbprints*
  commentId: Overload:System.Fabric.X509Credentials.IssuerThumbprints
  isExternal: false
  name: IssuerThumbprints
  nameWithType: X509Credentials.IssuerThumbprints
  fullName: System.Fabric.X509Credentials.IssuerThumbprints
- uid: System.Fabric.X509Credentials.RemoteCertThumbprints*
  commentId: Overload:System.Fabric.X509Credentials.RemoteCertThumbprints
  isExternal: false
  name: RemoteCertThumbprints
  nameWithType: X509Credentials.RemoteCertThumbprints
  fullName: System.Fabric.X509Credentials.RemoteCertThumbprints
- uid: System.Fabric.X509Credentials.FindType*
  commentId: Overload:System.Fabric.X509Credentials.FindType
  isExternal: false
  name: FindType
  nameWithType: X509Credentials.FindType
  fullName: System.Fabric.X509Credentials.FindType
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  commentId: T:System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Fabric.X509Credentials.FindValue*
  commentId: Overload:System.Fabric.X509Credentials.FindValue
  isExternal: false
  name: FindValue
  nameWithType: X509Credentials.FindValue
  fullName: System.Fabric.X509Credentials.FindValue
- uid: System.Fabric.X509Credentials.FindValueSecondary*
  commentId: Overload:System.Fabric.X509Credentials.FindValueSecondary
  isExternal: false
  name: FindValueSecondary
  nameWithType: X509Credentials.FindValueSecondary
  fullName: System.Fabric.X509Credentials.FindValueSecondary
- uid: System.Fabric.X509Credentials.StoreLocation*
  commentId: Overload:System.Fabric.X509Credentials.StoreLocation
  isExternal: false
  name: StoreLocation
  nameWithType: X509Credentials.StoreLocation
  fullName: System.Fabric.X509Credentials.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  commentId: T:System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Fabric.X509Credentials.StoreName*
  commentId: Overload:System.Fabric.X509Credentials.StoreName
  isExternal: false
  name: StoreName
  nameWithType: X509Credentials.StoreName
  fullName: System.Fabric.X509Credentials.StoreName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.X509Credentials.ProtectionLevel*
  commentId: Overload:System.Fabric.X509Credentials.ProtectionLevel
  isExternal: false
  name: ProtectionLevel
  nameWithType: X509Credentials.ProtectionLevel
  fullName: System.Fabric.X509Credentials.ProtectionLevel
- uid: System.Fabric.ProtectionLevel
  commentId: T:System.Fabric.ProtectionLevel
  parent: System.Fabric
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Fabric.ProtectionLevel
