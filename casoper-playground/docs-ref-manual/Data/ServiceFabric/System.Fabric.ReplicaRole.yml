### YamlMime:ManagedReference
items:
- uid: System.Fabric.ReplicaRole
  commentId: T:System.Fabric.ReplicaRole
  id: ReplicaRole
  parent: System.Fabric
  children:
  - System.Fabric.ReplicaRole.ActiveSecondary
  - System.Fabric.ReplicaRole.IdleSecondary
  - System.Fabric.ReplicaRole.None
  - System.Fabric.ReplicaRole.Primary
  - System.Fabric.ReplicaRole.Unknown
  langs:
  - csharp
  - vb
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: System.Fabric.ReplicaRole
  type: Enum
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaRole
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates the role of a stateful service replica. </p>\n"
  remarks: "\n<p>Service Fabric requires different behaviors from a service replica depending on what role it currently performs.</p>\n"
  example: []
  syntax:
    content: public enum ReplicaRole
    content.vb: Public Enum ReplicaRole
  extensionMethods:
  - System.Fabric.ReplicaRole.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Fabric.ReplicaRole.Unknown
  commentId: F:System.Fabric.ReplicaRole.Unknown
  id: Unknown
  parent: System.Fabric.ReplicaRole
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: ReplicaRole.Unknown
  fullName: System.Fabric.ReplicaRole.Unknown
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Unknown
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates the initial role that a replica is created in.</p>\n"
  example: []
  syntax:
    content: Unknown = 0
    return:
      type: System.Fabric.ReplicaRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.ReplicaRole.None
  commentId: F:System.Fabric.ReplicaRole.None
  id: None
  parent: System.Fabric.ReplicaRole
  langs:
  - csharp
  - vb
  name: None
  nameWithType: ReplicaRole.None
  fullName: System.Fabric.ReplicaRole.None
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: None
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
    startLine: 29
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies that the replica has no responsibility in regard to the replica set.</p>\n"
  remarks: "\n<p>When \n<xref href=\"System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> indicates \nthis role, it is safe to delete any persistent state that is associated with this replica.</p>\n"
  example: []
  syntax:
    content: None = 1
    return:
      type: System.Fabric.ReplicaRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.ReplicaRole.Primary
  commentId: F:System.Fabric.ReplicaRole.Primary
  id: Primary
  parent: System.Fabric.ReplicaRole
  langs:
  - csharp
  - vb
  name: Primary
  nameWithType: ReplicaRole.Primary
  fullName: System.Fabric.ReplicaRole.Primary
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Primary
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
    startLine: 36
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Refers to the replica in the set on which all read and write operations are complete in order to enforce strong consistency semantics. \nRead operations are handled directly by the Primary replica, while write operations must be acknowledged by a quorum of the replicas in the \nreplica set. There can only be one Primary replica in a replica set at a time. </p>\n"
  example: []
  syntax:
    content: Primary = 2
    return:
      type: System.Fabric.ReplicaRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.ReplicaRole.IdleSecondary
  commentId: F:System.Fabric.ReplicaRole.IdleSecondary
  id: IdleSecondary
  parent: System.Fabric.ReplicaRole
  langs:
  - csharp
  - vb
  name: IdleSecondary
  nameWithType: ReplicaRole.IdleSecondary
  fullName: System.Fabric.ReplicaRole.IdleSecondary
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IdleSecondary
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
    startLine: 42
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Refers to a replica in the set that receives a state transfer from the Primary replica to prepare for becoming an active Secondary replica. \nThere can be multiple Idle Secondary replicas in a replica set at a time. Idle Secondary replicas do not count as a part of a write quorum. </p>\n"
  example: []
  syntax:
    content: IdleSecondary = 3
    return:
      type: System.Fabric.ReplicaRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.ReplicaRole.ActiveSecondary
  commentId: F:System.Fabric.ReplicaRole.ActiveSecondary
  id: ActiveSecondary
  parent: System.Fabric.ReplicaRole
  langs:
  - csharp
  - vb
  name: ActiveSecondary
  nameWithType: ReplicaRole.ActiveSecondary
  fullName: System.Fabric.ReplicaRole.ActiveSecondary
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActiveSecondary
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaRole.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Refers to a replica in the set that receives state updates from the Primary replica, applies them, and sends acknowledgements back. \nSecondary replicas must participate in the write quorum for a replica set. There can be multiple active Secondary replicas in a replica set \nat a time. The number of active Secondary replicas is configurable that the reliability subsystem should maintain.  </p>\n"
  example: []
  syntax:
    content: ActiveSecondary = 4
    return:
      type: System.Fabric.ReplicaRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.ReplicaRole.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ReplicaRole>()
  nameWithType: ByteArraySerializer.Serialize<ReplicaRole>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ReplicaRole>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ReplicaRole)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ReplicaRole)()
  name.vb: Serialize(Of ReplicaRole)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ReplicaRole>
    nameWithType: ByteArraySerializer.Serialize<ReplicaRole>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ReplicaRole>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ReplicaRole)
    nameWithType: ByteArraySerializer.Serialize(Of ReplicaRole)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ReplicaRole)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.ReplicaRole
  commentId: T:System.Fabric.ReplicaRole
  parent: System.Fabric
  isExternal: false
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: System.Fabric.ReplicaRole
- uid: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  commentId: M:System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  parent: System.Fabric.IStatefulServiceReplica
  isExternal: true
  name: ChangeRoleAsync(ReplicaRole, CancellationToken)
  nameWithType: IStatefulServiceReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
  fullName: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
    name: ChangeRoleAsync
    nameWithType: IStatefulServiceReplica.ChangeRoleAsync
    fullName: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
    name: ChangeRoleAsync
    nameWithType: IStatefulServiceReplica.ChangeRoleAsync
    fullName: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.IStatefulServiceReplica
  commentId: T:System.Fabric.IStatefulServiceReplica
  parent: System.Fabric
  isExternal: false
  name: IStatefulServiceReplica
  nameWithType: IStatefulServiceReplica
  fullName: System.Fabric.IStatefulServiceReplica
