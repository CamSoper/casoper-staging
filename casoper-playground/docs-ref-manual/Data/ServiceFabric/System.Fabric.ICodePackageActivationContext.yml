### YamlMime:ManagedReference
items:
- uid: System.Fabric.ICodePackageActivationContext
  commentId: T:System.Fabric.ICodePackageActivationContext
  id: ICodePackageActivationContext
  parent: System.Fabric
  children:
  - System.Fabric.ICodePackageActivationContext.ApplicationName
  - System.Fabric.ICodePackageActivationContext.ApplicationTypeName
  - System.Fabric.ICodePackageActivationContext.CodePackageAddedEvent
  - System.Fabric.ICodePackageActivationContext.CodePackageModifiedEvent
  - System.Fabric.ICodePackageActivationContext.CodePackageName
  - System.Fabric.ICodePackageActivationContext.CodePackageRemovedEvent
  - System.Fabric.ICodePackageActivationContext.CodePackageVersion
  - System.Fabric.ICodePackageActivationContext.ConfigurationPackageAddedEvent
  - System.Fabric.ICodePackageActivationContext.ConfigurationPackageModifiedEvent
  - System.Fabric.ICodePackageActivationContext.ConfigurationPackageRemovedEvent
  - System.Fabric.ICodePackageActivationContext.ContextId
  - System.Fabric.ICodePackageActivationContext.DataPackageAddedEvent
  - System.Fabric.ICodePackageActivationContext.DataPackageModifiedEvent
  - System.Fabric.ICodePackageActivationContext.DataPackageRemovedEvent
  - System.Fabric.ICodePackageActivationContext.GetApplicationPrincipals
  - System.Fabric.ICodePackageActivationContext.GetCodePackageNames
  - System.Fabric.ICodePackageActivationContext.GetCodePackageObject(System.String)
  - System.Fabric.ICodePackageActivationContext.GetConfigurationPackageNames
  - System.Fabric.ICodePackageActivationContext.GetConfigurationPackageObject(System.String)
  - System.Fabric.ICodePackageActivationContext.GetDataPackageNames
  - System.Fabric.ICodePackageActivationContext.GetDataPackageObject(System.String)
  - System.Fabric.ICodePackageActivationContext.GetEndpoint(System.String)
  - System.Fabric.ICodePackageActivationContext.GetEndpoints
  - System.Fabric.ICodePackageActivationContext.GetServiceGroupTypes
  - System.Fabric.ICodePackageActivationContext.GetServiceManifestName
  - System.Fabric.ICodePackageActivationContext.GetServiceManifestVersion
  - System.Fabric.ICodePackageActivationContext.GetServiceTypes
  - System.Fabric.ICodePackageActivationContext.LogDirectory
  - System.Fabric.ICodePackageActivationContext.ReportApplicationHealth(System.Fabric.Health.HealthInformation)
  - System.Fabric.ICodePackageActivationContext.ReportDeployedApplicationHealth(System.Fabric.Health.HealthInformation)
  - System.Fabric.ICodePackageActivationContext.ReportDeployedServicePackageHealth(System.Fabric.Health.HealthInformation)
  - System.Fabric.ICodePackageActivationContext.TempDirectory
  - System.Fabric.ICodePackageActivationContext.WorkDirectory
  langs:
  - csharp
  - vb
  name: ICodePackageActivationContext
  nameWithType: ICodePackageActivationContext
  fullName: System.Fabric.ICodePackageActivationContext
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ICodePackageActivationContext
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRepresents activation context for the Service Fabric activated service.\n"
  remarks: >-
    Includes information from the service manifest as well as information

    about the currently activated code package like work directory, context id etc.
  example: []
  syntax:
    content: 'public interface ICodePackageActivationContext : IDisposable'
    content.vb: >-
      Public Interface ICodePackageActivationContext
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Fabric.ICodePackageActivationContext.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Fabric.ICodePackageActivationContext.CodePackageAddedEvent
  commentId: E:System.Fabric.ICodePackageActivationContext.CodePackageAddedEvent
  id: CodePackageAddedEvent
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: CodePackageAddedEvent
  nameWithType: ICodePackageActivationContext.CodePackageAddedEvent
  fullName: System.Fabric.ICodePackageActivationContext.CodePackageAddedEvent
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CodePackageAddedEvent
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 20
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nEvent raised when new <xref href=\"System.Fabric.CodePackage\" data-throw-if-not-resolved=\"false\"></xref> is added to the service manifest.\n"
  example: []
  syntax:
    content: event EventHandler<PackageAddedEventArgs<CodePackage>> CodePackageAddedEvent
    content.vb: Event CodePackageAddedEvent As EventHandler(Of PackageAddedEventArgs(Of CodePackage))
    return:
      type: System.EventHandler{System.Fabric.PackageAddedEventArgs{System.Fabric.CodePackage}}
- uid: System.Fabric.ICodePackageActivationContext.CodePackageRemovedEvent
  commentId: E:System.Fabric.ICodePackageActivationContext.CodePackageRemovedEvent
  id: CodePackageRemovedEvent
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: CodePackageRemovedEvent
  nameWithType: ICodePackageActivationContext.CodePackageRemovedEvent
  fullName: System.Fabric.ICodePackageActivationContext.CodePackageRemovedEvent
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CodePackageRemovedEvent
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 25
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nEvent raised when a <xref href=\"System.Fabric.CodePackage\" data-throw-if-not-resolved=\"false\"></xref> is removed from the service manifest.\n"
  example: []
  syntax:
    content: event EventHandler<PackageRemovedEventArgs<CodePackage>> CodePackageRemovedEvent
    content.vb: Event CodePackageRemovedEvent As EventHandler(Of PackageRemovedEventArgs(Of CodePackage))
    return:
      type: System.EventHandler{System.Fabric.PackageRemovedEventArgs{System.Fabric.CodePackage}}
- uid: System.Fabric.ICodePackageActivationContext.CodePackageModifiedEvent
  commentId: E:System.Fabric.ICodePackageActivationContext.CodePackageModifiedEvent
  id: CodePackageModifiedEvent
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: CodePackageModifiedEvent
  nameWithType: ICodePackageActivationContext.CodePackageModifiedEvent
  fullName: System.Fabric.ICodePackageActivationContext.CodePackageModifiedEvent
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CodePackageModifiedEvent
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 30
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nEvent raised when a <xref href=\"System.Fabric.CodePackage\" data-throw-if-not-resolved=\"false\"></xref> in the service manifest is modified.\n"
  example: []
  syntax:
    content: event EventHandler<PackageModifiedEventArgs<CodePackage>> CodePackageModifiedEvent
    content.vb: Event CodePackageModifiedEvent As EventHandler(Of PackageModifiedEventArgs(Of CodePackage))
    return:
      type: System.EventHandler{System.Fabric.PackageModifiedEventArgs{System.Fabric.CodePackage}}
- uid: System.Fabric.ICodePackageActivationContext.ConfigurationPackageAddedEvent
  commentId: E:System.Fabric.ICodePackageActivationContext.ConfigurationPackageAddedEvent
  id: ConfigurationPackageAddedEvent
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: ConfigurationPackageAddedEvent
  nameWithType: ICodePackageActivationContext.ConfigurationPackageAddedEvent
  fullName: System.Fabric.ICodePackageActivationContext.ConfigurationPackageAddedEvent
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ConfigurationPackageAddedEvent
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 35
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nEvent raised when new <xref href=\"System.Fabric.ConfigurationPackage\" data-throw-if-not-resolved=\"false\"></xref> is added to the service manifest.\n"
  example: []
  syntax:
    content: event EventHandler<PackageAddedEventArgs<ConfigurationPackage>> ConfigurationPackageAddedEvent
    content.vb: Event ConfigurationPackageAddedEvent As EventHandler(Of PackageAddedEventArgs(Of ConfigurationPackage))
    return:
      type: System.EventHandler{System.Fabric.PackageAddedEventArgs{System.Fabric.ConfigurationPackage}}
- uid: System.Fabric.ICodePackageActivationContext.ConfigurationPackageRemovedEvent
  commentId: E:System.Fabric.ICodePackageActivationContext.ConfigurationPackageRemovedEvent
  id: ConfigurationPackageRemovedEvent
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: ConfigurationPackageRemovedEvent
  nameWithType: ICodePackageActivationContext.ConfigurationPackageRemovedEvent
  fullName: System.Fabric.ICodePackageActivationContext.ConfigurationPackageRemovedEvent
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ConfigurationPackageRemovedEvent
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nEvent raised when a <xref href=\"System.Fabric.ConfigurationPackage\" data-throw-if-not-resolved=\"false\"></xref> is removed from the service manifest.\n"
  example: []
  syntax:
    content: event EventHandler<PackageRemovedEventArgs<ConfigurationPackage>> ConfigurationPackageRemovedEvent
    content.vb: Event ConfigurationPackageRemovedEvent As EventHandler(Of PackageRemovedEventArgs(Of ConfigurationPackage))
    return:
      type: System.EventHandler{System.Fabric.PackageRemovedEventArgs{System.Fabric.ConfigurationPackage}}
- uid: System.Fabric.ICodePackageActivationContext.ConfigurationPackageModifiedEvent
  commentId: E:System.Fabric.ICodePackageActivationContext.ConfigurationPackageModifiedEvent
  id: ConfigurationPackageModifiedEvent
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: ConfigurationPackageModifiedEvent
  nameWithType: ICodePackageActivationContext.ConfigurationPackageModifiedEvent
  fullName: System.Fabric.ICodePackageActivationContext.ConfigurationPackageModifiedEvent
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ConfigurationPackageModifiedEvent
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 45
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nEvent raised when a <xref href=\"System.Fabric.ConfigurationPackage\" data-throw-if-not-resolved=\"false\"></xref> in the service manifest is modified.\n"
  example: []
  syntax:
    content: event EventHandler<PackageModifiedEventArgs<ConfigurationPackage>> ConfigurationPackageModifiedEvent
    content.vb: Event ConfigurationPackageModifiedEvent As EventHandler(Of PackageModifiedEventArgs(Of ConfigurationPackage))
    return:
      type: System.EventHandler{System.Fabric.PackageModifiedEventArgs{System.Fabric.ConfigurationPackage}}
- uid: System.Fabric.ICodePackageActivationContext.DataPackageAddedEvent
  commentId: E:System.Fabric.ICodePackageActivationContext.DataPackageAddedEvent
  id: DataPackageAddedEvent
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: DataPackageAddedEvent
  nameWithType: ICodePackageActivationContext.DataPackageAddedEvent
  fullName: System.Fabric.ICodePackageActivationContext.DataPackageAddedEvent
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DataPackageAddedEvent
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 50
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nEvent raised when new <xref href=\"System.Fabric.DataPackage\" data-throw-if-not-resolved=\"false\"></xref> is added to the service manifest.\n"
  example: []
  syntax:
    content: event EventHandler<PackageAddedEventArgs<DataPackage>> DataPackageAddedEvent
    content.vb: Event DataPackageAddedEvent As EventHandler(Of PackageAddedEventArgs(Of DataPackage))
    return:
      type: System.EventHandler{System.Fabric.PackageAddedEventArgs{System.Fabric.DataPackage}}
- uid: System.Fabric.ICodePackageActivationContext.DataPackageRemovedEvent
  commentId: E:System.Fabric.ICodePackageActivationContext.DataPackageRemovedEvent
  id: DataPackageRemovedEvent
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: DataPackageRemovedEvent
  nameWithType: ICodePackageActivationContext.DataPackageRemovedEvent
  fullName: System.Fabric.ICodePackageActivationContext.DataPackageRemovedEvent
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DataPackageRemovedEvent
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 55
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nEvent raised when a <xref href=\"System.Fabric.DataPackage\" data-throw-if-not-resolved=\"false\"></xref> is removed from the service manifest.\n"
  example: []
  syntax:
    content: event EventHandler<PackageRemovedEventArgs<DataPackage>> DataPackageRemovedEvent
    content.vb: Event DataPackageRemovedEvent As EventHandler(Of PackageRemovedEventArgs(Of DataPackage))
    return:
      type: System.EventHandler{System.Fabric.PackageRemovedEventArgs{System.Fabric.DataPackage}}
- uid: System.Fabric.ICodePackageActivationContext.DataPackageModifiedEvent
  commentId: E:System.Fabric.ICodePackageActivationContext.DataPackageModifiedEvent
  id: DataPackageModifiedEvent
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: DataPackageModifiedEvent
  nameWithType: ICodePackageActivationContext.DataPackageModifiedEvent
  fullName: System.Fabric.ICodePackageActivationContext.DataPackageModifiedEvent
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DataPackageModifiedEvent
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 60
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nEvent raised when a <xref href=\"System.Fabric.DataPackage\" data-throw-if-not-resolved=\"false\"></xref> in the service manifest is modified.\n"
  example: []
  syntax:
    content: event EventHandler<PackageModifiedEventArgs<DataPackage>> DataPackageModifiedEvent
    content.vb: Event DataPackageModifiedEvent As EventHandler(Of PackageModifiedEventArgs(Of DataPackage))
    return:
      type: System.EventHandler{System.Fabric.PackageModifiedEventArgs{System.Fabric.DataPackage}}
- uid: System.Fabric.ICodePackageActivationContext.WorkDirectory
  commentId: P:System.Fabric.ICodePackageActivationContext.WorkDirectory
  id: WorkDirectory
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: WorkDirectory
  nameWithType: ICodePackageActivationContext.WorkDirectory
  fullName: System.Fabric.ICodePackageActivationContext.WorkDirectory
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WorkDirectory
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 66
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the path to the Work directory that the application can use.\n"
  example: []
  syntax:
    content: string WorkDirectory { get; }
    content.vb: ReadOnly Property WorkDirectory As String
    parameters: []
    return:
      type: System.String
      description: The path to the code package Work directory.
  overload: System.Fabric.ICodePackageActivationContext.WorkDirectory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.ICodePackageActivationContext.LogDirectory
  commentId: P:System.Fabric.ICodePackageActivationContext.LogDirectory
  id: LogDirectory
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: LogDirectory
  nameWithType: ICodePackageActivationContext.LogDirectory
  fullName: System.Fabric.ICodePackageActivationContext.LogDirectory
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LogDirectory
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 72
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the path to the Log directory that the application can use.\n"
  example: []
  syntax:
    content: string LogDirectory { get; }
    content.vb: ReadOnly Property LogDirectory As String
    parameters: []
    return:
      type: System.String
      description: The path to the code package Log directory.
  overload: System.Fabric.ICodePackageActivationContext.LogDirectory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.ICodePackageActivationContext.TempDirectory
  commentId: P:System.Fabric.ICodePackageActivationContext.TempDirectory
  id: TempDirectory
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: TempDirectory
  nameWithType: ICodePackageActivationContext.TempDirectory
  fullName: System.Fabric.ICodePackageActivationContext.TempDirectory
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TempDirectory
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 78
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the path to the Temp directory that the application can use.\n"
  example: []
  syntax:
    content: string TempDirectory { get; }
    content.vb: ReadOnly Property TempDirectory As String
    parameters: []
    return:
      type: System.String
      description: The path to the code package Temp directory.
  overload: System.Fabric.ICodePackageActivationContext.TempDirectory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.ICodePackageActivationContext.ContextId
  commentId: P:System.Fabric.ICodePackageActivationContext.ContextId
  id: ContextId
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: ContextId
  nameWithType: ICodePackageActivationContext.ContextId
  fullName: System.Fabric.ICodePackageActivationContext.ContextId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ContextId
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 85
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the context id.\n"
  remarks: The context id is the same for all code packages in the same service manifest.
  example: []
  syntax:
    content: string ContextId { get; }
    content.vb: ReadOnly Property ContextId As String
    parameters: []
    return:
      type: System.String
      description: The context id.
  overload: System.Fabric.ICodePackageActivationContext.ContextId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.ICodePackageActivationContext.CodePackageName
  commentId: P:System.Fabric.ICodePackageActivationContext.CodePackageName
  id: CodePackageName
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: CodePackageName
  nameWithType: ICodePackageActivationContext.CodePackageName
  fullName: System.Fabric.ICodePackageActivationContext.CodePackageName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CodePackageName
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 91
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the name of the fabric activated code package.\n"
  example: []
  syntax:
    content: string CodePackageName { get; }
    content.vb: ReadOnly Property CodePackageName As String
    parameters: []
    return:
      type: System.String
      description: The name of the fabric activated code package.
  overload: System.Fabric.ICodePackageActivationContext.CodePackageName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.ICodePackageActivationContext.CodePackageVersion
  commentId: P:System.Fabric.ICodePackageActivationContext.CodePackageVersion
  id: CodePackageVersion
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: CodePackageVersion
  nameWithType: ICodePackageActivationContext.CodePackageVersion
  fullName: System.Fabric.ICodePackageActivationContext.CodePackageVersion
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CodePackageVersion
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 97
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the version of the fabric activated code package.\n"
  example: []
  syntax:
    content: string CodePackageVersion { get; }
    content.vb: ReadOnly Property CodePackageVersion As String
    parameters: []
    return:
      type: System.String
      description: The version of the fabric activated code package.
  overload: System.Fabric.ICodePackageActivationContext.CodePackageVersion*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.ICodePackageActivationContext.ApplicationName
  commentId: P:System.Fabric.ICodePackageActivationContext.ApplicationName
  id: ApplicationName
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: ICodePackageActivationContext.ApplicationName
  fullName: System.Fabric.ICodePackageActivationContext.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 103
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the application name.\n"
  example: []
  syntax:
    content: string ApplicationName { get; }
    content.vb: ReadOnly Property ApplicationName As String
    parameters: []
    return:
      type: System.String
      description: The name of the application.
  overload: System.Fabric.ICodePackageActivationContext.ApplicationName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.ICodePackageActivationContext.ApplicationTypeName
  commentId: P:System.Fabric.ICodePackageActivationContext.ApplicationTypeName
  id: ApplicationTypeName
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: ApplicationTypeName
  nameWithType: ICodePackageActivationContext.ApplicationTypeName
  fullName: System.Fabric.ICodePackageActivationContext.ApplicationTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 109
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the application type name.\n"
  example: []
  syntax:
    content: string ApplicationTypeName { get; }
    content.vb: ReadOnly Property ApplicationTypeName As String
    parameters: []
    return:
      type: System.String
      description: The name of the application type.
  overload: System.Fabric.ICodePackageActivationContext.ApplicationTypeName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.ICodePackageActivationContext.GetServiceTypes
  commentId: M:System.Fabric.ICodePackageActivationContext.GetServiceTypes
  id: GetServiceTypes
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetServiceTypes()
  nameWithType: ICodePackageActivationContext.GetServiceTypes()
  fullName: System.Fabric.ICodePackageActivationContext.GetServiceTypes()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceTypes
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 115
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRetrieves the list of Service types in the service manifest.\n"
  example: []
  syntax:
    content: KeyedCollection<string, ServiceTypeDescription> GetServiceTypes()
    content.vb: Function GetServiceTypes As KeyedCollection(Of String, ServiceTypeDescription)
    return:
      type: System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceTypeDescription}
      description: The list of service types in the service manifest.
  overload: System.Fabric.ICodePackageActivationContext.GetServiceTypes*
- uid: System.Fabric.ICodePackageActivationContext.GetServiceGroupTypes
  commentId: M:System.Fabric.ICodePackageActivationContext.GetServiceGroupTypes
  id: GetServiceGroupTypes
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetServiceGroupTypes()
  nameWithType: ICodePackageActivationContext.GetServiceGroupTypes()
  fullName: System.Fabric.ICodePackageActivationContext.GetServiceGroupTypes()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceGroupTypes
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 121
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRetrieves the list of Service Group types in the service manifest.\n"
  example: []
  syntax:
    content: KeyedCollection<string, ServiceGroupTypeDescription> GetServiceGroupTypes()
    content.vb: Function GetServiceGroupTypes As KeyedCollection(Of String, ServiceGroupTypeDescription)
    return:
      type: System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceGroupTypeDescription}
      description: The list of Service Group types in the service manifest.
  overload: System.Fabric.ICodePackageActivationContext.GetServiceGroupTypes*
- uid: System.Fabric.ICodePackageActivationContext.GetApplicationPrincipals
  commentId: M:System.Fabric.ICodePackageActivationContext.GetApplicationPrincipals
  id: GetApplicationPrincipals
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetApplicationPrincipals()
  nameWithType: ICodePackageActivationContext.GetApplicationPrincipals()
  fullName: System.Fabric.ICodePackageActivationContext.GetApplicationPrincipals()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationPrincipals
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 127
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRetrieves the principals defined in the application manifest.\n"
  example: []
  syntax:
    content: ApplicationPrincipalsDescription GetApplicationPrincipals()
    content.vb: Function GetApplicationPrincipals As ApplicationPrincipalsDescription
    return:
      type: System.Fabric.Description.ApplicationPrincipalsDescription
      description: The principals defined in the application manifest.
  overload: System.Fabric.ICodePackageActivationContext.GetApplicationPrincipals*
- uid: System.Fabric.ICodePackageActivationContext.GetEndpoints
  commentId: M:System.Fabric.ICodePackageActivationContext.GetEndpoints
  id: GetEndpoints
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetEndpoints()
  nameWithType: ICodePackageActivationContext.GetEndpoints()
  fullName: System.Fabric.ICodePackageActivationContext.GetEndpoints()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetEndpoints
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 133
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRetrieves the endpoint resources in the service manifest.\n"
  example: []
  syntax:
    content: KeyedCollection<string, EndpointResourceDescription> GetEndpoints()
    content.vb: Function GetEndpoints As KeyedCollection(Of String, EndpointResourceDescription)
    return:
      type: System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.EndpointResourceDescription}
      description: The endpoint resources in the service manifest.
  overload: System.Fabric.ICodePackageActivationContext.GetEndpoints*
- uid: System.Fabric.ICodePackageActivationContext.GetEndpoint(System.String)
  commentId: M:System.Fabric.ICodePackageActivationContext.GetEndpoint(System.String)
  id: GetEndpoint(System.String)
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetEndpoint(String)
  nameWithType: ICodePackageActivationContext.GetEndpoint(String)
  fullName: System.Fabric.ICodePackageActivationContext.GetEndpoint(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetEndpoint
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 140
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRetrieves the endpoint resource with a given name from the service manifest.\n"
  example: []
  syntax:
    content: EndpointResourceDescription GetEndpoint(string endpointName)
    content.vb: Function GetEndpoint(endpointName As String) As
    parameters:
    - id: endpointName
      type: System.String
      description: The name of the endpoint.
    return:
      type: System.Fabric.Description.EndpointResourceDescription
      description: The endpoint resource with the specified name.
  overload: System.Fabric.ICodePackageActivationContext.GetEndpoint*
- uid: System.Fabric.ICodePackageActivationContext.GetCodePackageNames
  commentId: M:System.Fabric.ICodePackageActivationContext.GetCodePackageNames
  id: GetCodePackageNames
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetCodePackageNames()
  nameWithType: ICodePackageActivationContext.GetCodePackageNames()
  fullName: System.Fabric.ICodePackageActivationContext.GetCodePackageNames()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetCodePackageNames
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 146
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRetrieves the list of code package names in the service manifest.\n"
  example: []
  syntax:
    content: IList<string> GetCodePackageNames()
    content.vb: Function GetCodePackageNames As IList(Of String)
    return:
      type: System.Collections.Generic.IList{System.String}
      description: The list of code package names in the service manifest.
  overload: System.Fabric.ICodePackageActivationContext.GetCodePackageNames*
- uid: System.Fabric.ICodePackageActivationContext.GetConfigurationPackageNames
  commentId: M:System.Fabric.ICodePackageActivationContext.GetConfigurationPackageNames
  id: GetConfigurationPackageNames
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetConfigurationPackageNames()
  nameWithType: ICodePackageActivationContext.GetConfigurationPackageNames()
  fullName: System.Fabric.ICodePackageActivationContext.GetConfigurationPackageNames()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetConfigurationPackageNames
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 152
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRetrieves the list of configuration package names in the service manifest.\n"
  example: []
  syntax:
    content: IList<string> GetConfigurationPackageNames()
    content.vb: Function GetConfigurationPackageNames As IList(Of String)
    return:
      type: System.Collections.Generic.IList{System.String}
      description: The list of configuration package names in the service manifest.
  overload: System.Fabric.ICodePackageActivationContext.GetConfigurationPackageNames*
- uid: System.Fabric.ICodePackageActivationContext.GetDataPackageNames
  commentId: M:System.Fabric.ICodePackageActivationContext.GetDataPackageNames
  id: GetDataPackageNames
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetDataPackageNames()
  nameWithType: ICodePackageActivationContext.GetDataPackageNames()
  fullName: System.Fabric.ICodePackageActivationContext.GetDataPackageNames()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDataPackageNames
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 158
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRetrieves the list of data package names in the service manifest.\n"
  example: []
  syntax:
    content: IList<string> GetDataPackageNames()
    content.vb: Function GetDataPackageNames As IList(Of String)
    return:
      type: System.Collections.Generic.IList{System.String}
      description: The list of data package names in the service manifest.
  overload: System.Fabric.ICodePackageActivationContext.GetDataPackageNames*
- uid: System.Fabric.ICodePackageActivationContext.GetCodePackageObject(System.String)
  commentId: M:System.Fabric.ICodePackageActivationContext.GetCodePackageObject(System.String)
  id: GetCodePackageObject(System.String)
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetCodePackageObject(String)
  nameWithType: ICodePackageActivationContext.GetCodePackageObject(String)
  fullName: System.Fabric.ICodePackageActivationContext.GetCodePackageObject(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetCodePackageObject
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 166
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nReturns the <xref href=\"System.Fabric.CodePackage\" data-throw-if-not-resolved=\"false\"></xref> object from Service Package that matches the desired package name.\n"
  remarks: Throws KeyNotFoundException exception if the package is not found.
  example: []
  syntax:
    content: CodePackage GetCodePackageObject(string packageName)
    content.vb: Function GetCodePackageObject(packageName As String) As CodePackage
    parameters:
    - id: packageName
      type: System.String
      description: The name of the code package.
    return:
      type: System.Fabric.CodePackage
      description: The <xref href="System.Fabric.CodePackage" data-throw-if-not-resolved="false"></xref> object from Service Package that matches the desired package name.
  overload: System.Fabric.ICodePackageActivationContext.GetCodePackageObject*
- uid: System.Fabric.ICodePackageActivationContext.GetConfigurationPackageObject(System.String)
  commentId: M:System.Fabric.ICodePackageActivationContext.GetConfigurationPackageObject(System.String)
  id: GetConfigurationPackageObject(System.String)
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetConfigurationPackageObject(String)
  nameWithType: ICodePackageActivationContext.GetConfigurationPackageObject(String)
  fullName: System.Fabric.ICodePackageActivationContext.GetConfigurationPackageObject(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetConfigurationPackageObject
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 174
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nReturns the <xref href=\"System.Fabric.ConfigurationPackage\" data-throw-if-not-resolved=\"false\"></xref> object from Service Package that matches the desired package name.\n"
  remarks: Throws KeyNotFoundException exception if the package is not found.
  example: []
  syntax:
    content: ConfigurationPackage GetConfigurationPackageObject(string packageName)
    content.vb: Function GetConfigurationPackageObject(packageName As String) As ConfigurationPackage
    parameters:
    - id: packageName
      type: System.String
      description: The name of the configuration package.
    return:
      type: System.Fabric.ConfigurationPackage
      description: The <xref href="System.Fabric.ConfigurationPackage" data-throw-if-not-resolved="false"></xref> object from Service Package that matches the desired package name.
  overload: System.Fabric.ICodePackageActivationContext.GetConfigurationPackageObject*
- uid: System.Fabric.ICodePackageActivationContext.GetDataPackageObject(System.String)
  commentId: M:System.Fabric.ICodePackageActivationContext.GetDataPackageObject(System.String)
  id: GetDataPackageObject(System.String)
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetDataPackageObject(String)
  nameWithType: ICodePackageActivationContext.GetDataPackageObject(String)
  fullName: System.Fabric.ICodePackageActivationContext.GetDataPackageObject(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDataPackageObject
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 182
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nReturns the <xref href=\"System.Fabric.DataPackage\" data-throw-if-not-resolved=\"false\"></xref> object from Service Package that matches the desired package name.\n"
  remarks: Throws KeyNotFoundException exception if the package is not found.
  example: []
  syntax:
    content: DataPackage GetDataPackageObject(string packageName)
    content.vb: Function GetDataPackageObject(packageName As String) As DataPackage
    parameters:
    - id: packageName
      type: System.String
      description: The name of the data package.
    return:
      type: System.Fabric.DataPackage
      description: The <xref href="System.Fabric.DataPackage" data-throw-if-not-resolved="false"></xref> object from Service Package that matches the desired package name.
  overload: System.Fabric.ICodePackageActivationContext.GetDataPackageObject*
- uid: System.Fabric.ICodePackageActivationContext.GetServiceManifestName
  commentId: M:System.Fabric.ICodePackageActivationContext.GetServiceManifestName
  id: GetServiceManifestName
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetServiceManifestName()
  nameWithType: ICodePackageActivationContext.GetServiceManifestName()
  fullName: System.Fabric.ICodePackageActivationContext.GetServiceManifestName()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceManifestName
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 188
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRetrieves the name of the service manifest.\n"
  example: []
  syntax:
    content: string GetServiceManifestName()
    content.vb: Function GetServiceManifestName As String
    return:
      type: System.String
      description: The name of the service manifest.
  overload: System.Fabric.ICodePackageActivationContext.GetServiceManifestName*
- uid: System.Fabric.ICodePackageActivationContext.GetServiceManifestVersion
  commentId: M:System.Fabric.ICodePackageActivationContext.GetServiceManifestVersion
  id: GetServiceManifestVersion
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: GetServiceManifestVersion()
  nameWithType: ICodePackageActivationContext.GetServiceManifestVersion()
  fullName: System.Fabric.ICodePackageActivationContext.GetServiceManifestVersion()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceManifestVersion
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 194
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRetrieves the version of the service manifest.\n"
  example: []
  syntax:
    content: string GetServiceManifestVersion()
    content.vb: Function GetServiceManifestVersion As String
    return:
      type: System.String
      description: The version of the service manifest.
  overload: System.Fabric.ICodePackageActivationContext.GetServiceManifestVersion*
- uid: System.Fabric.ICodePackageActivationContext.ReportApplicationHealth(System.Fabric.Health.HealthInformation)
  commentId: M:System.Fabric.ICodePackageActivationContext.ReportApplicationHealth(System.Fabric.Health.HealthInformation)
  id: ReportApplicationHealth(System.Fabric.Health.HealthInformation)
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: ReportApplicationHealth(HealthInformation)
  nameWithType: ICodePackageActivationContext.ReportApplicationHealth(HealthInformation)
  fullName: System.Fabric.ICodePackageActivationContext.ReportApplicationHealth(System.Fabric.Health.HealthInformation)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReportApplicationHealth
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 201
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nReports health for current application. \n"
  example: []
  syntax:
    content: void ReportApplicationHealth(HealthInformation healthInfo)
    content.vb: Sub ReportApplicationHealth(healthInfo As HealthInformation)
    parameters:
    - id: healthInfo
      type: System.Fabric.Health.HealthInformation
      description: Health information that is to be reported.
  overload: System.Fabric.ICodePackageActivationContext.ReportApplicationHealth*
- uid: System.Fabric.ICodePackageActivationContext.ReportDeployedApplicationHealth(System.Fabric.Health.HealthInformation)
  commentId: M:System.Fabric.ICodePackageActivationContext.ReportDeployedApplicationHealth(System.Fabric.Health.HealthInformation)
  id: ReportDeployedApplicationHealth(System.Fabric.Health.HealthInformation)
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: ReportDeployedApplicationHealth(HealthInformation)
  nameWithType: ICodePackageActivationContext.ReportDeployedApplicationHealth(HealthInformation)
  fullName: System.Fabric.ICodePackageActivationContext.ReportDeployedApplicationHealth(System.Fabric.Health.HealthInformation)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReportDeployedApplicationHealth
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 208
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nReports health for current deployed application. \n"
  example: []
  syntax:
    content: void ReportDeployedApplicationHealth(HealthInformation healthInfo)
    content.vb: Sub ReportDeployedApplicationHealth(healthInfo As HealthInformation)
    parameters:
    - id: healthInfo
      type: System.Fabric.Health.HealthInformation
      description: Health information that is to be reported.
  overload: System.Fabric.ICodePackageActivationContext.ReportDeployedApplicationHealth*
- uid: System.Fabric.ICodePackageActivationContext.ReportDeployedServicePackageHealth(System.Fabric.Health.HealthInformation)
  commentId: M:System.Fabric.ICodePackageActivationContext.ReportDeployedServicePackageHealth(System.Fabric.Health.HealthInformation)
  id: ReportDeployedServicePackageHealth(System.Fabric.Health.HealthInformation)
  parent: System.Fabric.ICodePackageActivationContext
  langs:
  - csharp
  - vb
  name: ReportDeployedServicePackageHealth(HealthInformation)
  nameWithType: ICodePackageActivationContext.ReportDeployedServicePackageHealth(HealthInformation)
  fullName: System.Fabric.ICodePackageActivationContext.ReportDeployedServicePackageHealth(System.Fabric.Health.HealthInformation)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReportDeployedServicePackageHealth
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ICodePackageActivationContext.cs
    startLine: 215
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nReports health for current deployed service package. \n"
  example: []
  syntax:
    content: void ReportDeployedServicePackageHealth(HealthInformation healthInfo)
    content.vb: Sub ReportDeployedServicePackageHealth(healthInfo As HealthInformation)
    parameters:
    - id: healthInfo
      type: System.Fabric.Health.HealthInformation
      description: Health information that is to be reported.
  overload: System.Fabric.ICodePackageActivationContext.ReportDeployedServicePackageHealth*
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ICodePackageActivationContext.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ICodePackageActivationContext>()
  nameWithType: ByteArraySerializer.Serialize<ICodePackageActivationContext>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ICodePackageActivationContext>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ICodePackageActivationContext)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ICodePackageActivationContext)()
  name.vb: Serialize(Of ICodePackageActivationContext)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ICodePackageActivationContext>
    nameWithType: ByteArraySerializer.Serialize<ICodePackageActivationContext>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ICodePackageActivationContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ICodePackageActivationContext)
    nameWithType: ByteArraySerializer.Serialize(Of ICodePackageActivationContext)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ICodePackageActivationContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.CodePackage
  commentId: T:System.Fabric.CodePackage
  parent: System.Fabric
  isExternal: false
  name: CodePackage
  nameWithType: CodePackage
  fullName: System.Fabric.CodePackage
- uid: System.EventHandler{System.Fabric.PackageAddedEventArgs{System.Fabric.CodePackage}}
  commentId: T:System.EventHandler{System.Fabric.PackageAddedEventArgs{System.Fabric.CodePackage}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageAddedEventArgs<CodePackage>>
  nameWithType: EventHandler<PackageAddedEventArgs<CodePackage>>
  fullName: System.EventHandler<System.Fabric.PackageAddedEventArgs<System.Fabric.CodePackage>>
  nameWithType.vb: EventHandler(Of PackageAddedEventArgs(Of CodePackage))
  fullname.vb: System.EventHandler(Of System.Fabric.PackageAddedEventArgs(Of System.Fabric.CodePackage))
  name.vb: EventHandler(Of PackageAddedEventArgs(Of CodePackage))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.PackageAddedEventArgs`1
    name: PackageAddedEventArgs
    nameWithType: PackageAddedEventArgs
    fullName: System.Fabric.PackageAddedEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.CodePackage
    name: CodePackage
    nameWithType: CodePackage
    fullName: System.Fabric.CodePackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.PackageAddedEventArgs`1
    name: PackageAddedEventArgs
    nameWithType: PackageAddedEventArgs
    fullName: System.Fabric.PackageAddedEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.CodePackage
    name: CodePackage
    nameWithType: CodePackage
    fullName: System.Fabric.CodePackage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.Fabric.PackageRemovedEventArgs{System.Fabric.CodePackage}}
  commentId: T:System.EventHandler{System.Fabric.PackageRemovedEventArgs{System.Fabric.CodePackage}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageRemovedEventArgs<CodePackage>>
  nameWithType: EventHandler<PackageRemovedEventArgs<CodePackage>>
  fullName: System.EventHandler<System.Fabric.PackageRemovedEventArgs<System.Fabric.CodePackage>>
  nameWithType.vb: EventHandler(Of PackageRemovedEventArgs(Of CodePackage))
  fullname.vb: System.EventHandler(Of System.Fabric.PackageRemovedEventArgs(Of System.Fabric.CodePackage))
  name.vb: EventHandler(Of PackageRemovedEventArgs(Of CodePackage))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.PackageRemovedEventArgs`1
    name: PackageRemovedEventArgs
    nameWithType: PackageRemovedEventArgs
    fullName: System.Fabric.PackageRemovedEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.CodePackage
    name: CodePackage
    nameWithType: CodePackage
    fullName: System.Fabric.CodePackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.PackageRemovedEventArgs`1
    name: PackageRemovedEventArgs
    nameWithType: PackageRemovedEventArgs
    fullName: System.Fabric.PackageRemovedEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.CodePackage
    name: CodePackage
    nameWithType: CodePackage
    fullName: System.Fabric.CodePackage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.Fabric.PackageModifiedEventArgs{System.Fabric.CodePackage}}
  commentId: T:System.EventHandler{System.Fabric.PackageModifiedEventArgs{System.Fabric.CodePackage}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageModifiedEventArgs<CodePackage>>
  nameWithType: EventHandler<PackageModifiedEventArgs<CodePackage>>
  fullName: System.EventHandler<System.Fabric.PackageModifiedEventArgs<System.Fabric.CodePackage>>
  nameWithType.vb: EventHandler(Of PackageModifiedEventArgs(Of CodePackage))
  fullname.vb: System.EventHandler(Of System.Fabric.PackageModifiedEventArgs(Of System.Fabric.CodePackage))
  name.vb: EventHandler(Of PackageModifiedEventArgs(Of CodePackage))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.PackageModifiedEventArgs`1
    name: PackageModifiedEventArgs
    nameWithType: PackageModifiedEventArgs
    fullName: System.Fabric.PackageModifiedEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.CodePackage
    name: CodePackage
    nameWithType: CodePackage
    fullName: System.Fabric.CodePackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.PackageModifiedEventArgs`1
    name: PackageModifiedEventArgs
    nameWithType: PackageModifiedEventArgs
    fullName: System.Fabric.PackageModifiedEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.CodePackage
    name: CodePackage
    nameWithType: CodePackage
    fullName: System.Fabric.CodePackage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ConfigurationPackage
  commentId: T:System.Fabric.ConfigurationPackage
  parent: System.Fabric
  isExternal: false
  name: ConfigurationPackage
  nameWithType: ConfigurationPackage
  fullName: System.Fabric.ConfigurationPackage
- uid: System.EventHandler{System.Fabric.PackageAddedEventArgs{System.Fabric.ConfigurationPackage}}
  commentId: T:System.EventHandler{System.Fabric.PackageAddedEventArgs{System.Fabric.ConfigurationPackage}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageAddedEventArgs<ConfigurationPackage>>
  nameWithType: EventHandler<PackageAddedEventArgs<ConfigurationPackage>>
  fullName: System.EventHandler<System.Fabric.PackageAddedEventArgs<System.Fabric.ConfigurationPackage>>
  nameWithType.vb: EventHandler(Of PackageAddedEventArgs(Of ConfigurationPackage))
  fullname.vb: System.EventHandler(Of System.Fabric.PackageAddedEventArgs(Of System.Fabric.ConfigurationPackage))
  name.vb: EventHandler(Of PackageAddedEventArgs(Of ConfigurationPackage))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.PackageAddedEventArgs`1
    name: PackageAddedEventArgs
    nameWithType: PackageAddedEventArgs
    fullName: System.Fabric.PackageAddedEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.ConfigurationPackage
    name: ConfigurationPackage
    nameWithType: ConfigurationPackage
    fullName: System.Fabric.ConfigurationPackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.PackageAddedEventArgs`1
    name: PackageAddedEventArgs
    nameWithType: PackageAddedEventArgs
    fullName: System.Fabric.PackageAddedEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.ConfigurationPackage
    name: ConfigurationPackage
    nameWithType: ConfigurationPackage
    fullName: System.Fabric.ConfigurationPackage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.Fabric.PackageRemovedEventArgs{System.Fabric.ConfigurationPackage}}
  commentId: T:System.EventHandler{System.Fabric.PackageRemovedEventArgs{System.Fabric.ConfigurationPackage}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageRemovedEventArgs<ConfigurationPackage>>
  nameWithType: EventHandler<PackageRemovedEventArgs<ConfigurationPackage>>
  fullName: System.EventHandler<System.Fabric.PackageRemovedEventArgs<System.Fabric.ConfigurationPackage>>
  nameWithType.vb: EventHandler(Of PackageRemovedEventArgs(Of ConfigurationPackage))
  fullname.vb: System.EventHandler(Of System.Fabric.PackageRemovedEventArgs(Of System.Fabric.ConfigurationPackage))
  name.vb: EventHandler(Of PackageRemovedEventArgs(Of ConfigurationPackage))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.PackageRemovedEventArgs`1
    name: PackageRemovedEventArgs
    nameWithType: PackageRemovedEventArgs
    fullName: System.Fabric.PackageRemovedEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.ConfigurationPackage
    name: ConfigurationPackage
    nameWithType: ConfigurationPackage
    fullName: System.Fabric.ConfigurationPackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.PackageRemovedEventArgs`1
    name: PackageRemovedEventArgs
    nameWithType: PackageRemovedEventArgs
    fullName: System.Fabric.PackageRemovedEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.ConfigurationPackage
    name: ConfigurationPackage
    nameWithType: ConfigurationPackage
    fullName: System.Fabric.ConfigurationPackage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.Fabric.PackageModifiedEventArgs{System.Fabric.ConfigurationPackage}}
  commentId: T:System.EventHandler{System.Fabric.PackageModifiedEventArgs{System.Fabric.ConfigurationPackage}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageModifiedEventArgs<ConfigurationPackage>>
  nameWithType: EventHandler<PackageModifiedEventArgs<ConfigurationPackage>>
  fullName: System.EventHandler<System.Fabric.PackageModifiedEventArgs<System.Fabric.ConfigurationPackage>>
  nameWithType.vb: EventHandler(Of PackageModifiedEventArgs(Of ConfigurationPackage))
  fullname.vb: System.EventHandler(Of System.Fabric.PackageModifiedEventArgs(Of System.Fabric.ConfigurationPackage))
  name.vb: EventHandler(Of PackageModifiedEventArgs(Of ConfigurationPackage))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.PackageModifiedEventArgs`1
    name: PackageModifiedEventArgs
    nameWithType: PackageModifiedEventArgs
    fullName: System.Fabric.PackageModifiedEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.ConfigurationPackage
    name: ConfigurationPackage
    nameWithType: ConfigurationPackage
    fullName: System.Fabric.ConfigurationPackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.PackageModifiedEventArgs`1
    name: PackageModifiedEventArgs
    nameWithType: PackageModifiedEventArgs
    fullName: System.Fabric.PackageModifiedEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.ConfigurationPackage
    name: ConfigurationPackage
    nameWithType: ConfigurationPackage
    fullName: System.Fabric.ConfigurationPackage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.DataPackage
  commentId: T:System.Fabric.DataPackage
  parent: System.Fabric
  isExternal: false
  name: DataPackage
  nameWithType: DataPackage
  fullName: System.Fabric.DataPackage
- uid: System.EventHandler{System.Fabric.PackageAddedEventArgs{System.Fabric.DataPackage}}
  commentId: T:System.EventHandler{System.Fabric.PackageAddedEventArgs{System.Fabric.DataPackage}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageAddedEventArgs<DataPackage>>
  nameWithType: EventHandler<PackageAddedEventArgs<DataPackage>>
  fullName: System.EventHandler<System.Fabric.PackageAddedEventArgs<System.Fabric.DataPackage>>
  nameWithType.vb: EventHandler(Of PackageAddedEventArgs(Of DataPackage))
  fullname.vb: System.EventHandler(Of System.Fabric.PackageAddedEventArgs(Of System.Fabric.DataPackage))
  name.vb: EventHandler(Of PackageAddedEventArgs(Of DataPackage))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.PackageAddedEventArgs`1
    name: PackageAddedEventArgs
    nameWithType: PackageAddedEventArgs
    fullName: System.Fabric.PackageAddedEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.DataPackage
    name: DataPackage
    nameWithType: DataPackage
    fullName: System.Fabric.DataPackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.PackageAddedEventArgs`1
    name: PackageAddedEventArgs
    nameWithType: PackageAddedEventArgs
    fullName: System.Fabric.PackageAddedEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.DataPackage
    name: DataPackage
    nameWithType: DataPackage
    fullName: System.Fabric.DataPackage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.Fabric.PackageRemovedEventArgs{System.Fabric.DataPackage}}
  commentId: T:System.EventHandler{System.Fabric.PackageRemovedEventArgs{System.Fabric.DataPackage}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageRemovedEventArgs<DataPackage>>
  nameWithType: EventHandler<PackageRemovedEventArgs<DataPackage>>
  fullName: System.EventHandler<System.Fabric.PackageRemovedEventArgs<System.Fabric.DataPackage>>
  nameWithType.vb: EventHandler(Of PackageRemovedEventArgs(Of DataPackage))
  fullname.vb: System.EventHandler(Of System.Fabric.PackageRemovedEventArgs(Of System.Fabric.DataPackage))
  name.vb: EventHandler(Of PackageRemovedEventArgs(Of DataPackage))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.PackageRemovedEventArgs`1
    name: PackageRemovedEventArgs
    nameWithType: PackageRemovedEventArgs
    fullName: System.Fabric.PackageRemovedEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.DataPackage
    name: DataPackage
    nameWithType: DataPackage
    fullName: System.Fabric.DataPackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.PackageRemovedEventArgs`1
    name: PackageRemovedEventArgs
    nameWithType: PackageRemovedEventArgs
    fullName: System.Fabric.PackageRemovedEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.DataPackage
    name: DataPackage
    nameWithType: DataPackage
    fullName: System.Fabric.DataPackage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.Fabric.PackageModifiedEventArgs{System.Fabric.DataPackage}}
  commentId: T:System.EventHandler{System.Fabric.PackageModifiedEventArgs{System.Fabric.DataPackage}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageModifiedEventArgs<DataPackage>>
  nameWithType: EventHandler<PackageModifiedEventArgs<DataPackage>>
  fullName: System.EventHandler<System.Fabric.PackageModifiedEventArgs<System.Fabric.DataPackage>>
  nameWithType.vb: EventHandler(Of PackageModifiedEventArgs(Of DataPackage))
  fullname.vb: System.EventHandler(Of System.Fabric.PackageModifiedEventArgs(Of System.Fabric.DataPackage))
  name.vb: EventHandler(Of PackageModifiedEventArgs(Of DataPackage))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.PackageModifiedEventArgs`1
    name: PackageModifiedEventArgs
    nameWithType: PackageModifiedEventArgs
    fullName: System.Fabric.PackageModifiedEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.DataPackage
    name: DataPackage
    nameWithType: DataPackage
    fullName: System.Fabric.DataPackage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.PackageModifiedEventArgs`1
    name: PackageModifiedEventArgs
    nameWithType: PackageModifiedEventArgs
    fullName: System.Fabric.PackageModifiedEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.DataPackage
    name: DataPackage
    nameWithType: DataPackage
    fullName: System.Fabric.DataPackage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ICodePackageActivationContext.WorkDirectory*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.WorkDirectory
  isExternal: false
  name: WorkDirectory
  nameWithType: ICodePackageActivationContext.WorkDirectory
  fullName: System.Fabric.ICodePackageActivationContext.WorkDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.ICodePackageActivationContext.LogDirectory*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.LogDirectory
  isExternal: false
  name: LogDirectory
  nameWithType: ICodePackageActivationContext.LogDirectory
  fullName: System.Fabric.ICodePackageActivationContext.LogDirectory
- uid: System.Fabric.ICodePackageActivationContext.TempDirectory*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.TempDirectory
  isExternal: false
  name: TempDirectory
  nameWithType: ICodePackageActivationContext.TempDirectory
  fullName: System.Fabric.ICodePackageActivationContext.TempDirectory
- uid: System.Fabric.ICodePackageActivationContext.ContextId*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.ContextId
  isExternal: false
  name: ContextId
  nameWithType: ICodePackageActivationContext.ContextId
  fullName: System.Fabric.ICodePackageActivationContext.ContextId
- uid: System.Fabric.ICodePackageActivationContext.CodePackageName*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.CodePackageName
  isExternal: false
  name: CodePackageName
  nameWithType: ICodePackageActivationContext.CodePackageName
  fullName: System.Fabric.ICodePackageActivationContext.CodePackageName
- uid: System.Fabric.ICodePackageActivationContext.CodePackageVersion*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.CodePackageVersion
  isExternal: false
  name: CodePackageVersion
  nameWithType: ICodePackageActivationContext.CodePackageVersion
  fullName: System.Fabric.ICodePackageActivationContext.CodePackageVersion
- uid: System.Fabric.ICodePackageActivationContext.ApplicationName*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: ICodePackageActivationContext.ApplicationName
  fullName: System.Fabric.ICodePackageActivationContext.ApplicationName
- uid: System.Fabric.ICodePackageActivationContext.ApplicationTypeName*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.ApplicationTypeName
  isExternal: false
  name: ApplicationTypeName
  nameWithType: ICodePackageActivationContext.ApplicationTypeName
  fullName: System.Fabric.ICodePackageActivationContext.ApplicationTypeName
- uid: System.Fabric.ICodePackageActivationContext.GetServiceTypes*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetServiceTypes
  isExternal: false
  name: GetServiceTypes
  nameWithType: ICodePackageActivationContext.GetServiceTypes
  fullName: System.Fabric.ICodePackageActivationContext.GetServiceTypes
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceTypeDescription}
  commentId: T:System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceTypeDescription}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.KeyedCollection`2
  name: KeyedCollection<String, ServiceTypeDescription>
  nameWithType: KeyedCollection<String, ServiceTypeDescription>
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, System.Fabric.Description.ServiceTypeDescription>
  nameWithType.vb: KeyedCollection(Of String, ServiceTypeDescription)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, System.Fabric.Description.ServiceTypeDescription)
  name.vb: KeyedCollection(Of String, ServiceTypeDescription)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Description.ServiceTypeDescription
    name: ServiceTypeDescription
    nameWithType: ServiceTypeDescription
    fullName: System.Fabric.Description.ServiceTypeDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Description.ServiceTypeDescription
    name: ServiceTypeDescription
    nameWithType: ServiceTypeDescription
    fullName: System.Fabric.Description.ServiceTypeDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2
  commentId: T:System.Collections.ObjectModel.KeyedCollection`2
  isExternal: true
  name: KeyedCollection<TKey, TItem>
  nameWithType: KeyedCollection<TKey, TItem>
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>
  nameWithType.vb: KeyedCollection(Of TKey, TItem)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem)
  name.vb: KeyedCollection(Of TKey, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Fabric.ICodePackageActivationContext.GetServiceGroupTypes*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetServiceGroupTypes
  isExternal: false
  name: GetServiceGroupTypes
  nameWithType: ICodePackageActivationContext.GetServiceGroupTypes
  fullName: System.Fabric.ICodePackageActivationContext.GetServiceGroupTypes
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceGroupTypeDescription}
  commentId: T:System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceGroupTypeDescription}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.KeyedCollection`2
  name: KeyedCollection<String, ServiceGroupTypeDescription>
  nameWithType: KeyedCollection<String, ServiceGroupTypeDescription>
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, System.Fabric.Description.ServiceGroupTypeDescription>
  nameWithType.vb: KeyedCollection(Of String, ServiceGroupTypeDescription)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, System.Fabric.Description.ServiceGroupTypeDescription)
  name.vb: KeyedCollection(Of String, ServiceGroupTypeDescription)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Description.ServiceGroupTypeDescription
    name: ServiceGroupTypeDescription
    nameWithType: ServiceGroupTypeDescription
    fullName: System.Fabric.Description.ServiceGroupTypeDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Description.ServiceGroupTypeDescription
    name: ServiceGroupTypeDescription
    nameWithType: ServiceGroupTypeDescription
    fullName: System.Fabric.Description.ServiceGroupTypeDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ICodePackageActivationContext.GetApplicationPrincipals*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetApplicationPrincipals
  isExternal: false
  name: GetApplicationPrincipals
  nameWithType: ICodePackageActivationContext.GetApplicationPrincipals
  fullName: System.Fabric.ICodePackageActivationContext.GetApplicationPrincipals
- uid: System.Fabric.Description.ApplicationPrincipalsDescription
  commentId: T:System.Fabric.Description.ApplicationPrincipalsDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ApplicationPrincipalsDescription
  nameWithType: ApplicationPrincipalsDescription
  fullName: System.Fabric.Description.ApplicationPrincipalsDescription
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Fabric.ICodePackageActivationContext.GetEndpoints*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetEndpoints
  isExternal: false
  name: GetEndpoints
  nameWithType: ICodePackageActivationContext.GetEndpoints
  fullName: System.Fabric.ICodePackageActivationContext.GetEndpoints
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.EndpointResourceDescription}
  commentId: T:System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.EndpointResourceDescription}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.KeyedCollection`2
  name: KeyedCollection<String, EndpointResourceDescription>
  nameWithType: KeyedCollection<String, EndpointResourceDescription>
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, System.Fabric.Description.EndpointResourceDescription>
  nameWithType.vb: KeyedCollection(Of String, EndpointResourceDescription)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, System.Fabric.Description.EndpointResourceDescription)
  name.vb: KeyedCollection(Of String, EndpointResourceDescription)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Description.EndpointResourceDescription
    name: EndpointResourceDescription
    nameWithType: EndpointResourceDescription
    fullName: System.Fabric.Description.EndpointResourceDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Description.EndpointResourceDescription
    name: EndpointResourceDescription
    nameWithType: EndpointResourceDescription
    fullName: System.Fabric.Description.EndpointResourceDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ICodePackageActivationContext.GetEndpoint*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetEndpoint
  isExternal: false
  name: GetEndpoint
  nameWithType: ICodePackageActivationContext.GetEndpoint
  fullName: System.Fabric.ICodePackageActivationContext.GetEndpoint
- uid: System.Fabric.Description.EndpointResourceDescription
  commentId: T:System.Fabric.Description.EndpointResourceDescription
  parent: System.Fabric.Description
  isExternal: false
  name: EndpointResourceDescription
  nameWithType: EndpointResourceDescription
  fullName: System.Fabric.Description.EndpointResourceDescription
- uid: System.Fabric.ICodePackageActivationContext.GetCodePackageNames*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetCodePackageNames
  isExternal: false
  name: GetCodePackageNames
  nameWithType: ICodePackageActivationContext.GetCodePackageNames
  fullName: System.Fabric.ICodePackageActivationContext.GetCodePackageNames
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.ICodePackageActivationContext.GetConfigurationPackageNames*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetConfigurationPackageNames
  isExternal: false
  name: GetConfigurationPackageNames
  nameWithType: ICodePackageActivationContext.GetConfigurationPackageNames
  fullName: System.Fabric.ICodePackageActivationContext.GetConfigurationPackageNames
- uid: System.Fabric.ICodePackageActivationContext.GetDataPackageNames*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetDataPackageNames
  isExternal: false
  name: GetDataPackageNames
  nameWithType: ICodePackageActivationContext.GetDataPackageNames
  fullName: System.Fabric.ICodePackageActivationContext.GetDataPackageNames
- uid: System.Fabric.ICodePackageActivationContext.GetCodePackageObject*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetCodePackageObject
  isExternal: false
  name: GetCodePackageObject
  nameWithType: ICodePackageActivationContext.GetCodePackageObject
  fullName: System.Fabric.ICodePackageActivationContext.GetCodePackageObject
- uid: System.Fabric.ICodePackageActivationContext.GetConfigurationPackageObject*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetConfigurationPackageObject
  isExternal: false
  name: GetConfigurationPackageObject
  nameWithType: ICodePackageActivationContext.GetConfigurationPackageObject
  fullName: System.Fabric.ICodePackageActivationContext.GetConfigurationPackageObject
- uid: System.Fabric.ICodePackageActivationContext.GetDataPackageObject*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetDataPackageObject
  isExternal: false
  name: GetDataPackageObject
  nameWithType: ICodePackageActivationContext.GetDataPackageObject
  fullName: System.Fabric.ICodePackageActivationContext.GetDataPackageObject
- uid: System.Fabric.ICodePackageActivationContext.GetServiceManifestName*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetServiceManifestName
  isExternal: false
  name: GetServiceManifestName
  nameWithType: ICodePackageActivationContext.GetServiceManifestName
  fullName: System.Fabric.ICodePackageActivationContext.GetServiceManifestName
- uid: System.Fabric.ICodePackageActivationContext.GetServiceManifestVersion*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.GetServiceManifestVersion
  isExternal: false
  name: GetServiceManifestVersion
  nameWithType: ICodePackageActivationContext.GetServiceManifestVersion
  fullName: System.Fabric.ICodePackageActivationContext.GetServiceManifestVersion
- uid: System.Fabric.ICodePackageActivationContext.ReportApplicationHealth*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.ReportApplicationHealth
  isExternal: false
  name: ReportApplicationHealth
  nameWithType: ICodePackageActivationContext.ReportApplicationHealth
  fullName: System.Fabric.ICodePackageActivationContext.ReportApplicationHealth
- uid: System.Fabric.Health.HealthInformation
  commentId: T:System.Fabric.Health.HealthInformation
  parent: System.Fabric.Health
  isExternal: false
  name: HealthInformation
  nameWithType: HealthInformation
  fullName: System.Fabric.Health.HealthInformation
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.ICodePackageActivationContext.ReportDeployedApplicationHealth*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.ReportDeployedApplicationHealth
  isExternal: false
  name: ReportDeployedApplicationHealth
  nameWithType: ICodePackageActivationContext.ReportDeployedApplicationHealth
  fullName: System.Fabric.ICodePackageActivationContext.ReportDeployedApplicationHealth
- uid: System.Fabric.ICodePackageActivationContext.ReportDeployedServicePackageHealth*
  commentId: Overload:System.Fabric.ICodePackageActivationContext.ReportDeployedServicePackageHealth
  isExternal: false
  name: ReportDeployedServicePackageHealth
  nameWithType: ICodePackageActivationContext.ReportDeployedServicePackageHealth
  fullName: System.Fabric.ICodePackageActivationContext.ReportDeployedServicePackageHealth
