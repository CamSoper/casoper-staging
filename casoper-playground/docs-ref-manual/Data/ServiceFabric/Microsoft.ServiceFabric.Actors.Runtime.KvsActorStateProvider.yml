### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  id: KvsActorStateProvider
  parent: Microsoft.ServiceFabric.Actors.Runtime
  children:
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor(System.Boolean)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor(System.Boolean,System.Int32)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor(System.Fabric.ReplicatorSettings,System.Fabric.LocalStoreSettings)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize(System.Fabric.StatefulServiceInitializationParameters)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.OnDataLossAsync
  langs:
  - csharp
  - vb
  name: KvsActorStateProvider
  nameWithType: KvsActorStateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: KvsActorStateProvider
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nProvides an implementation of <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider\" data-throw-if-not-resolved=\"false\"></xref> which \nuses <xref href=\"System.Fabric.KeyValueStoreReplica\" data-throw-if-not-resolved=\"false\"></xref> to store and persist the actor state.\n"
  example: []
  syntax:
    content: 'public sealed class KvsActorStateProvider : IActorStateProvider, IStateProviderReplica, VolatileLogicalTimeManager.ISnapshotHandler, IActorStateProviderInternal'
    content.vb: >-
      Public NotInheritable Class KvsActorStateProvider
          Implements IActorStateProvider, IStateProviderReplica, VolatileLogicalTimeManager.ISnapshotHandler, IActorStateProviderInternal
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  - Microsoft.ServiceFabric.Data.IStateProviderReplica
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: KvsActorStateProvider()
  nameWithType: KvsActorStateProvider.KvsActorStateProvider()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.KvsActorStateProvider()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 88
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nCreates an instance of <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider\" data-throw-if-not-resolved=\"false\"></xref> with default settings.\n"
  example: []
  syntax:
    content: public KvsActorStateProvider()
    content.vb: Public Sub New
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor(System.Fabric.ReplicatorSettings,System.Fabric.LocalStoreSettings)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor(System.Fabric.ReplicatorSettings,System.Fabric.LocalStoreSettings)
  id: '#ctor(System.Fabric.ReplicatorSettings,System.Fabric.LocalStoreSettings)'
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: KvsActorStateProvider(ReplicatorSettings, LocalStoreSettings)
  nameWithType: KvsActorStateProvider.KvsActorStateProvider(ReplicatorSettings, LocalStoreSettings)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.KvsActorStateProvider(System.Fabric.ReplicatorSettings, System.Fabric.LocalStoreSettings)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 103
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nCreates an instance of <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider\" data-throw-if-not-resolved=\"false\"></xref> with specified\nreplicator and local key-value store settings.\n"
  example: []
  syntax:
    content: public KvsActorStateProvider(ReplicatorSettings replicatorSettings = null, LocalStoreSettings localStoreSettings = null)
    content.vb: Public Sub New(replicatorSettings As ReplicatorSettings = Nothing, localStoreSettings As LocalStoreSettings = Nothing)
    parameters:
    - id: replicatorSettings
      type: System.Fabric.ReplicatorSettings
      description: "\nA <xref href=\"System.Fabric.ReplicatorSettings\" data-throw-if-not-resolved=\"false\"></xref> that describes replicator settings.\n"
    - id: localStoreSettings
      type: System.Fabric.LocalStoreSettings
      description: "\nA <xref href=\"System.Fabric.LocalStoreSettings\" data-throw-if-not-resolved=\"false\"></xref> that describes local key value store settings.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor(System.Boolean)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: KvsActorStateProvider(Boolean)
  nameWithType: KvsActorStateProvider.KvsActorStateProvider(Boolean)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.KvsActorStateProvider(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 115
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nCreates an instance of <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider\" data-throw-if-not-resolved=\"false\"></xref> with specified settings.\n"
  example: []
  syntax:
    content: public KvsActorStateProvider(bool enableIncrementalBackup)
    content.vb: Public Sub New(enableIncrementalBackup As Boolean)
    parameters:
    - id: enableIncrementalBackup
      type: System.Boolean
      description: "\nIndicates whether to enable incremental backup feature.\nThis sets the <xref href=\"System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup\" data-throw-if-not-resolved=\"false\"></xref> setting.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor(System.Boolean,System.Int32)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor(System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Int32)'
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: KvsActorStateProvider(Boolean, Int32)
  nameWithType: KvsActorStateProvider.KvsActorStateProvider(Boolean, Int32)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.KvsActorStateProvider(System.Boolean, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 137
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nCreates an instance of <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider\" data-throw-if-not-resolved=\"false\"></xref> with specified settings.\n"
  remarks: "\nWhen incremental backup is enabled for <xref href=\"System.Fabric.KeyValueStoreReplica\" data-throw-if-not-resolved=\"false\"></xref>, it does not use circular buffer\nto manage its transaction logs and periodically truncates the logs both on primary and secondary replica(s).\nThe process of taking backup(s) automatically truncates logs. On the primary replica, if no user backup\nis initiated for <em>logTruncationIntervalInMinutes</em>, <xref href=\"System.Fabric.KeyValueStoreReplica\" data-throw-if-not-resolved=\"false\"></xref>\nautomatically truncates the logs.\n"
  example: []
  syntax:
    content: public KvsActorStateProvider(bool enableIncrementalBackup, int logTruncationIntervalInMinutes)
    content.vb: Public Sub New(enableIncrementalBackup As Boolean, logTruncationIntervalInMinutes As Integer)
    parameters:
    - id: enableIncrementalBackup
      type: System.Boolean
      description: "\nIndicates whether to enable incremental backup feature.\nThis sets the <xref href=\"System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup\" data-throw-if-not-resolved=\"false\"></xref> setting.\n"
    - id: logTruncationIntervalInMinutes
      type: System.Int32
      description: "\nIndicates the interval after which <xref href=\"System.Fabric.KeyValueStoreReplica\" data-throw-if-not-resolved=\"false\"></xref> tries to truncate local store logs.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.OnDataLossAsync
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.OnDataLossAsync
  id: OnDataLossAsync
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: OnDataLossAsync
  nameWithType: KvsActorStateProvider.OnDataLossAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.OnDataLossAsync
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnDataLossAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 184
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nFunction called during suspected data-loss.\n"
  example: []
  syntax:
    content: public Func<CancellationToken, Task<bool>> OnDataLossAsync { set; }
    content.vb: Public WriteOnly Property OnDataLossAsync As Func(Of CancellationToken, Task(Of Boolean))
    parameters: []
    return:
      type: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
      description: "\nA function representing data-loss callback function.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.OnDataLossAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.Initialize(ActorTypeInformation)
  nameWithType: KvsActorStateProvider.IActorStateProvider.Initialize(ActorTypeInformation)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 203
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nInitializes the actor state provider with type information\nof the actor type associated with it.\n"
  example: []
  syntax:
    content: void IActorStateProvider.Initialize(ActorTypeInformation actorTypeInformation)
    content.vb: Sub Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(actorTypeInformation As ActorTypeInformation) Implements IActorStateProvider.Initialize
    parameters:
    - id: actorTypeInformation
      type: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
      description: Type information of the actor class
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(ActorTypeInformation)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(ActorTypeInformation)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.ActorActivatedAsync(ActorId, CancellationToken)
  nameWithType: KvsActorStateProvider.IActorStateProvider.ActorActivatedAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 215
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nThis method is invoked as part of the activation process of the actor with the specified Id. \n"
  example: []
  syntax:
    content: Task IActorStateProvider.ActorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(actorId As ActorId, cancellationToken As CancellationToken) As Task Implements IActorStateProvider.ActorActivatedAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: ID of the actor that is activated.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous Actor activation notification processing.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The operation was canceled.
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(ActorId, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(ActorId, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
  nameWithType: KvsActorStateProvider.IActorStateProvider.ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.IActorReminder, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 246
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nThis method is invoked when a reminder fires and finishes executing its callback \n<xref href=\"Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync(System.String%2cSystem.Byte%5b%5d%2cSystem.TimeSpan%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> successfully.\n"
  example: []
  syntax:
    content: Task IActorStateProvider.ReminderCallbackCompletedAsync(ActorId actorId, IActorReminder reminder, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(actorId As ActorId, reminder As IActorReminder, cancellationToken As CancellationToken) As Task Implements IActorStateProvider.ReminderCallbackCompletedAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: ID of the actor which own reminder
    - id: reminder
      type: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
      description: Actor reminder that completed successfully.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA task that represents the asynchronous reminder callback completed notification processing.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.LoadStateAsync<T>(ActorId, String, CancellationToken)
  nameWithType: KvsActorStateProvider.IActorStateProvider.LoadStateAsync<T>(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync<T>(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 274
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nLoads the actor state associated with the specified state name.\n"
  example: []
  syntax:
    content: Task<T> IActorStateProvider.LoadStateAsync<T>(ActorId actorId, string stateName, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)(actorId As ActorId, stateName As String, cancellationToken As CancellationToken) As Task(Of T) Implements IActorStateProvider.LoadStateAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: ID of the actor for which to load the state.
    - id: stateName
      type: System.String
      description: Name of the actor state to load.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    typeParameters:
    - id: T
      description: Type of value of actor state associated with given state name.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: "\nA task that represents the asynchronous load operation. The value of TResult\nparameter contains value of actor state associated with given state name.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync*
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: Actor state associated with specified state name does not exist.
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The operation was canceled.
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)(ActorId, String, CancellationToken)
  fullName.vb: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)(ActorId, String, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection<ActorStateChange>, CancellationToken)
  nameWithType: KvsActorStateProvider.IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection<ActorStateChange>, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Collections.Generic.IReadOnlyCollection<Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 316
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nSaves the specified set of actor state changes atomically.\n"
  remarks: "\nThe collection of state changes should contain only one item for a given state name.\nThe save operation will fail on trying to add an actor state which already exists \nor update/remove an actor state which does not exist.\n"
  example: []
  syntax:
    content: Task IActorStateProvider.SaveStateAsync(ActorId actorId, IReadOnlyCollection<ActorStateChange> stateChanges, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(actorId As ActorId, stateChanges As IReadOnlyCollection(Of ActorStateChange), cancellationToken As CancellationToken) As Task Implements IActorStateProvider.SaveStateAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: ID of the actor for which to save the state changes.
    - id: stateChanges
      type: System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange}
      description: Collection of state changes to save.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous save operation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nWhen <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind.None\" data-throw-if-not-resolved=\"false\"></xref>\n"
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The operation was canceled.
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection(Of ActorStateChange), CancellationToken)
  fullName.vb: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Collections.Generic.IReadOnlyCollection(Of Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange), System.Threading.CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection(Of ActorStateChange), CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.ContainsStateAsync(ActorId, String, CancellationToken)
  nameWithType: KvsActorStateProvider.IActorStateProvider.ContainsStateAsync(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 335
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nChecks whether actor state provider contains an actor state with \nspecified state name.\n"
  example: []
  syntax:
    content: Task<bool> IActorStateProvider.ContainsStateAsync(ActorId actorId, string stateName, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(actorId As ActorId, stateName As String, cancellationToken As CancellationToken) As Task(Of Boolean) Implements IActorStateProvider.ContainsStateAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: ID of the actor for which to check state existence.
    - id: stateName
      type: System.String
      description: Name of the actor state to check for existence.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\nA task that represents the asynchronous check operation. The value of TResult\nparameter is <code>true</code> if state with specified name exists otherwise <code>false</code>.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The operation was canceled.
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(ActorId, String, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(ActorId, String, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.RemoveActorAsync(ActorId, CancellationToken)
  nameWithType: KvsActorStateProvider.IActorStateProvider.RemoveActorAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 360
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nRemoves all the existing states and reminders associated with specified actor atomically.\n"
  example: []
  syntax:
    content: Task IActorStateProvider.RemoveActorAsync(ActorId actorId, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(actorId As ActorId, cancellationToken As CancellationToken) As Task Implements IActorStateProvider.RemoveActorAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: ID of the actor for which to remove state.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous remove operation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The operation was canceled.
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(ActorId, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(ActorId, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.EnumerateStateNamesAsync(ActorId, CancellationToken)
  nameWithType: KvsActorStateProvider.IActorStateProvider.EnumerateStateNamesAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 382
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nCreates an enumerable of all the state names associated with specified actor.\n"
  remarks: "\nThe enumerator returned from actor state provider is safe to use concurrently\nwith reads and writes to the state provider. It represents a snapshot consistent\nview of the state provider.\n"
  example: []
  syntax:
    content: Task<IEnumerable<string>> IActorStateProvider.EnumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(actorId As ActorId, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of String)) Implements IActorStateProvider.EnumerateStateNamesAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: ID of the actor for which to create enumerable.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
      description: "\nA task that represents the asynchronous enumeration operation. The value of TResult\nparameter is an enumerable of all state names associated with specified actor.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The operation was canceled.
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(ActorId, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(ActorId, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.GetActorsAsync(Int32, ContinuationToken, CancellationToken)
  nameWithType: KvsActorStateProvider.IActorStateProvider.GetActorsAsync(Int32, ContinuationToken, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32, Microsoft.ServiceFabric.Actors.Query.ContinuationToken, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 407
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets ActorIds from the State Provider.\n"
  remarks: "\nThe <em>continuationToken</em> is relative to the state of actor state provider\nat the time of invocation of this API. If the state of actor state provider changes (i.e.\nnew actors are activated or existing actors are deleted) in between calls to this API and\nthe continuation token from previous call (before the state was modified) is supplied, the \nresult may contain entries that were already fetched in previous calls.\n"
  example: []
  syntax:
    content: Task<PagedResult<ActorId>> IActorStateProvider.GetActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(numItemsToReturn As Integer, continuationToken As ContinuationToken, cancellationToken As CancellationToken) As Task(Of PagedResult(Of ActorId)) Implements IActorStateProvider.GetActorsAsync
    parameters:
    - id: numItemsToReturn
      type: System.Int32
      description: Number of items requested to be returned.
    - id: continuationToken
      type: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
      description: "\nA continuation token to start querying the results from.\nA null value of continuation token means start returning values form the beginning.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Query.PagedResult{Microsoft.ServiceFabric.Actors.ActorId}}
      description: A task that represents the asynchronous operation of call to server.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The operation was canceled.
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(Int32, ContinuationToken, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(Int32, ContinuationToken, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
  nameWithType: KvsActorStateProvider.IActorStateProvider.SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.IActorReminder, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 427
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nSaves the specified actor reminder. If an actor reminder with\ngiven name does not exist, it adds the actor reminder otherwise\nexisting actor reminder with same name is updated. \n"
  example: []
  syntax:
    content: Task IActorStateProvider.SaveReminderAsync(ActorId actorId, IActorReminder reminder, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(actorId As ActorId, reminder As IActorReminder, cancellationToken As CancellationToken) As Task Implements IActorStateProvider.SaveReminderAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: ID of the actor for which to save the reminder.
    - id: reminder
      type: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
      description: Actor reminder to save.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous save operation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The operation was canceled.
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.DeleteReminderAsync(ActorId, String, CancellationToken)
  nameWithType: KvsActorStateProvider.IActorStateProvider.DeleteReminderAsync(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 452
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nDeletes the specified actor reminder if it exists.\n"
  example: []
  syntax:
    content: Task IActorStateProvider.DeleteReminderAsync(ActorId actorId, string reminderName, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(actorId As ActorId, reminderName As String, cancellationToken As CancellationToken) As Task Implements IActorStateProvider.DeleteReminderAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: ID of the actor for which to delete the reminder.
    - id: reminderName
      type: System.String
      description: Name of the reminder to delete.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous delete operation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The operation was canceled.
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(ActorId, String, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(ActorId, String, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync(System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync(System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.LoadRemindersAsync(CancellationToken)
  nameWithType: KvsActorStateProvider.IActorStateProvider.LoadRemindersAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 475
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nLoads all the reminders contained in the actor state provider.\n"
  example: []
  syntax:
    content: Task<IActorReminderCollection> IActorStateProvider.LoadRemindersAsync(CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(cancellationToken As CancellationToken) As Task(Of IActorReminderCollection) Implements IActorStateProvider.LoadRemindersAsync
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token for asynchronous load operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection}
      description: "\nA task that represents the asynchronous load operation. The value of TResult\nparameter is a collection of all actor reminders contained in the actor state provider.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The operation was canceled.
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize(System.Fabric.StatefulServiceInitializationParameters)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize(System.Fabric.StatefulServiceInitializationParameters)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize(System.Fabric.StatefulServiceInitializationParameters)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.Initialize(StatefulServiceInitializationParameters)
  nameWithType: KvsActorStateProvider.IStateProviderReplica.Initialize(StatefulServiceInitializationParameters)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 495
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nInitialize the state provider replica using the service initialization information.\n"
  remarks: "\nNo complex processing should be done during Initialize. Expensive or long-running initialization should be done in OpenAsync.\n"
  example: []
  syntax:
    content: void IStateProviderReplica.Initialize(StatefulServiceInitializationParameters initializationParameters)
    content.vb: Sub Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(initializationParameters As StatefulServiceInitializationParameters) Implements IStateProviderReplica.Initialize
    parameters:
    - id: initializationParameters
      type: System.Fabric.StatefulServiceInitializationParameters
      description: "\nService initialization information such as service name, partition id, replica id, and code package information.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(StatefulServiceInitializationParameters)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(StatefulServiceInitializationParameters)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
  nameWithType: KvsActorStateProvider.IStateProviderReplica.OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode, System.Fabric.IStatefulServicePartition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 516
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nOpen the state provider replica for use.\n"
  remarks: "\nExtended state provider initialization tasks can be started at this time.\n"
  example: []
  syntax:
    content: Task<IReplicator> IStateProviderReplica.OpenAsync(ReplicaOpenMode openMode, IStatefulServicePartition partition, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(openMode As ReplicaOpenMode, partition As IStatefulServicePartition, cancellationToken As CancellationToken) As Task(Of IReplicator) Implements IStateProviderReplica.OpenAsync
    parameters:
    - id: openMode
      type: System.Fabric.ReplicaOpenMode
      description: Indicates whether this is a new or existing replica.
    - id: partition
      type: System.Fabric.IStatefulServicePartition
      description: The partition this replica belongs to.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{System.Fabric.IReplicator}
      description: "\nTask that represents the asynchronous open operation. The result contains the replicator\nresponsible for replicating state between other state provider replicas in the partition.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
  nameWithType: KvsActorStateProvider.IStateProviderReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 536
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nNotify the state provider replica that its role is changing, for example to Primary or Secondary.\n"
  example: []
  syntax:
    content: Task IStateProviderReplica.ChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(newRole As ReplicaRole, cancellationToken As CancellationToken) As Task Implements IStateProviderReplica.ChangeRoleAsync
    parameters:
    - id: newRole
      type: System.Fabric.ReplicaRole
      description: The new replica role, such as primary or secondary.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous change role operation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync(System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync(System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.CloseAsync(CancellationToken)
  nameWithType: KvsActorStateProvider.IStateProviderReplica.CloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 563
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGracefully close the state provider replica.\n"
  remarks: "\nThis generally occurs when the replica's code is being upgrade, the replica is being moved\ndue to load balancing, or a transient fault is detected.\n"
  example: []
  syntax:
    content: Task IStateProviderReplica.CloseAsync(CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(cancellationToken As CancellationToken) As Task Implements IStateProviderReplica.CloseAsync
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous close operation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(CancellationToken)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.Abort()
  nameWithType: KvsActorStateProvider.IStateProviderReplica.Abort()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 581
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nForcefully abort the state provider replica.\n"
  remarks: "\nThis generally occurs when a permanent fault is detected on the node, or when\nService Fabric cannot reliably manage the replica's life-cycle due to internal failures.\n"
  example: []
  syntax:
    content: void IStateProviderReplica.Abort()
    content.vb: Sub Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort Implements IStateProviderReplica.Abort
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort()
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort()
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.BackupAsync(Func<BackupInfo, CancellationToken, Task<Boolean>>)
  nameWithType: KvsActorStateProvider.IStateProviderReplica.BackupAsync(Func<BackupInfo, CancellationToken, Task<Boolean>>)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 600
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nPerforms a full backup of all reliable state managed by this actor sate provider.\n"
  remarks: "\nA FULL backup will be performed with a one-hour timeout.\nBoolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location.\nIf false is returned, BackupAsync throws InvalidOperationException with the relevant message indicating backupCallback returned false.\nAlso, backup will be marked as unsuccessful.\n"
  example: []
  syntax:
    content: Task IStateProviderReplica.BackupAsync(Func<BackupInfo, CancellationToken, Task<bool>> backupCallback)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(backupCallback As Func(Of BackupInfo, CancellationToken, Task(Of Boolean))) As Task Implements IStateProviderReplica.BackupAsync
    parameters:
    - id: backupCallback
      type: System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
      description: Callback to be called when the backup folder has been created locally and is ready to be moved out of the node.
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous backup operation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  fullName.vb: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)))
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func<BackupInfo, CancellationToken, Task<Boolean>>)
  nameWithType: KvsActorStateProvider.IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func<BackupInfo, CancellationToken, Task<Boolean>>)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption, System.TimeSpan, System.Threading.CancellationToken, System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 617
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nPerforms backup of reliable state managed by this actor sate provider.\n"
  remarks: "\nKVSActorStateProvider Backup only support Full backup. KVS BackupInfo does not contain backup version.\nThe Backup version is set to invalid.\n"
  example: []
  syntax:
    content: Task IStateProviderReplica.BackupAsync(BackupOption option, TimeSpan timeout, CancellationToken cancellationToken, Func<BackupInfo, CancellationToken, Task<bool>> backupCallback)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(option As BackupOption, timeout As TimeSpan, cancellationToken As CancellationToken, backupCallback As Func(Of BackupInfo, CancellationToken, Task(Of Boolean))) As Task Implements IStateProviderReplica.BackupAsync
    parameters:
    - id: option
      type: Microsoft.ServiceFabric.Data.BackupOption
      description: Option for the backup.
    - id: timeout
      type: System.TimeSpan
      description: Timeout for the backup.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token for the backup.
    - id: backupCallback
      type: System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
      description: Callback to be called once the backup folder is ready.
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous operation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  fullName.vb: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption, System.TimeSpan, System.Threading.CancellationToken, System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)))
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.RestoreAsync(String)
  nameWithType: KvsActorStateProvider.IStateProviderReplica.RestoreAsync(String)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 652
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nRestore a backup taken by <xref href=\"Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func%7bMicrosoft.ServiceFabric.Data.BackupInfo%2cSystem.Threading.CancellationToken%2cSystem.Threading.Tasks.Task%7bSystem.Boolean%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption%2cSystem.TimeSpan%2cSystem.Threading.CancellationToken%2cSystem.Func%7bMicrosoft.ServiceFabric.Data.BackupInfo%2cSystem.Threading.CancellationToken%2cSystem.Threading.Tasks.Task%7bSystem.Boolean%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: Task IStateProviderReplica.RestoreAsync(string backupFolderPath)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(backupFolderPath As String) As Task Implements IStateProviderReplica.RestoreAsync
    parameters:
    - id: backupFolderPath
      type: System.String
      description: "\nThe directory where the replica is to be restored from.\nThis parameter cannot be null, empty or contain just whitespace. \nUNC paths may also be provided.\n"
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous restore operation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(String)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(String)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.RestoreAsync(String, RestorePolicy, CancellationToken)
  nameWithType: KvsActorStateProvider.IStateProviderReplica.RestoreAsync(String, RestorePolicy, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String, Microsoft.ServiceFabric.Data.RestorePolicy, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/KvsActorStateProvider.cs
    startLine: 669
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nRestore a backup taken by <xref href=\"Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func%7bMicrosoft.ServiceFabric.Data.BackupInfo%2cSystem.Threading.CancellationToken%2cSystem.Threading.Tasks.Task%7bSystem.Boolean%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption%2cSystem.TimeSpan%2cSystem.Threading.CancellationToken%2cSystem.Func%7bMicrosoft.ServiceFabric.Data.BackupInfo%2cSystem.Threading.CancellationToken%2cSystem.Threading.Tasks.Task%7bSystem.Boolean%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: Task IStateProviderReplica.RestoreAsync(string backupFolderPath, RestorePolicy restorePolicy, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(backupFolderPath As String, restorePolicy As RestorePolicy, cancellationToken As CancellationToken) As Task Implements IStateProviderReplica.RestoreAsync
    parameters:
    - id: backupFolderPath
      type: System.String
      description: "\nThe directory where the replica is to be restored from.\nThis parameter cannot be null, empty or contain just whitespace. \nUNC paths may also be provided.\n"
    - id: restorePolicy
      type: Microsoft.ServiceFabric.Data.RestorePolicy
      description: The restore policy.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous restore operation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(String, RestorePolicy, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(String, RestorePolicy, CancellationToken)
references:
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: IActorStateProvider
  nameWithType: IActorStateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
- uid: System.Fabric.KeyValueStoreReplica
  commentId: T:System.Fabric.KeyValueStoreReplica
  isExternal: false
  name: KeyValueStoreReplica
  nameWithType: KeyValueStoreReplica
  fullName: System.Fabric.KeyValueStoreReplica
- uid: Microsoft.ServiceFabric.Actors.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica
  commentId: T:Microsoft.ServiceFabric.Data.IStateProviderReplica
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: IStateProviderReplica
  nameWithType: IStateProviderReplica
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<KvsActorStateProvider>()
  nameWithType: ByteArraySerializer.Serialize<KvsActorStateProvider>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of KvsActorStateProvider)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider)()
  name.vb: Serialize(Of KvsActorStateProvider)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<KvsActorStateProvider>
    nameWithType: ByteArraySerializer.Serialize<KvsActorStateProvider>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of KvsActorStateProvider)
    nameWithType: ByteArraySerializer.Serialize(Of KvsActorStateProvider)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
  isExternal: false
  name: KvsActorStateProvider
  nameWithType: KvsActorStateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.#ctor
  isExternal: false
  name: KvsActorStateProvider
  nameWithType: KvsActorStateProvider.KvsActorStateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.KvsActorStateProvider
- uid: System.Fabric.ReplicatorSettings
  commentId: T:System.Fabric.ReplicatorSettings
  parent: System.Fabric
  isExternal: false
  name: ReplicatorSettings
  nameWithType: ReplicatorSettings
  fullName: System.Fabric.ReplicatorSettings
- uid: System.Fabric.LocalStoreSettings
  commentId: T:System.Fabric.LocalStoreSettings
  parent: System.Fabric
  isExternal: false
  name: LocalStoreSettings
  nameWithType: LocalStoreSettings
  fullName: System.Fabric.LocalStoreSettings
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup
  commentId: P:System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.OnDataLossAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.OnDataLossAsync
  isExternal: false
  name: OnDataLossAsync
  nameWithType: KvsActorStateProvider.OnDataLossAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.OnDataLossAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
  commentId: P:Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: false
  name: OnDataLossAsync
  nameWithType: IStateProviderReplica.OnDataLossAsync
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
- uid: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
  commentId: T:System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
  parent: System
  definition: System.Func`2
  name: Func<CancellationToken, Task<Boolean>>
  nameWithType: Func<CancellationToken, Task<Boolean>>
  fullName: System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>
  nameWithType.vb: Func(Of CancellationToken, Task(Of Boolean))
  fullname.vb: System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean))
  name.vb: Func(Of CancellationToken, Task(Of Boolean))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize
  isExternal: false
  name: IActorStateProvider.Initialize
  nameWithType: KvsActorStateProvider.IActorStateProvider.Initialize
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: false
  name: Initialize(ActorTypeInformation)
  nameWithType: IActorStateProvider.Initialize(ActorTypeInformation)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
    name: Initialize
    nameWithType: IActorStateProvider.Initialize
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
    name: Initialize
    nameWithType: IActorStateProvider.Initialize
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync
  isExternal: false
  name: IActorStateProvider.ActorActivatedAsync
  nameWithType: KvsActorStateProvider.IActorStateProvider.ActorActivatedAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: ActorActivatedAsync(ActorId, CancellationToken)
  nameWithType: IActorStateProvider.ActorActivatedAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: ActorActivatedAsync
    nameWithType: IActorStateProvider.ActorActivatedAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: ActorActivatedAsync
    nameWithType: IActorStateProvider.ActorActivatedAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.OperationCanceledException
  commentId: T:System.OperationCanceledException
- uid: Microsoft.ServiceFabric.Actors.ActorId
  commentId: T:Microsoft.ServiceFabric.Actors.ActorId
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: ActorId
  nameWithType: ActorId
  fullName: Microsoft.ServiceFabric.Actors.ActorId
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Actors
  commentId: N:Microsoft.ServiceFabric.Actors
  isExternal: false
  name: Microsoft.ServiceFabric.Actors
  nameWithType: Microsoft.ServiceFabric.Actors
  fullName: Microsoft.ServiceFabric.Actors
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync(System.String,System.Byte[],System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync(System.String,System.Byte[],System.TimeSpan,System.TimeSpan)
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync
  isExternal: false
  name: IActorStateProvider.ReminderCallbackCompletedAsync
  nameWithType: KvsActorStateProvider.IActorStateProvider.ReminderCallbackCompletedAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
  nameWithType: IActorStateProvider.ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.IActorReminder, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
    name: ReminderCallbackCompletedAsync
    nameWithType: IActorStateProvider.ReminderCallbackCompletedAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    name: IActorReminder
    nameWithType: IActorReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
    name: ReminderCallbackCompletedAsync
    nameWithType: IActorStateProvider.ReminderCallbackCompletedAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    name: IActorReminder
    nameWithType: IActorReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: IActorReminder
  nameWithType: IActorReminder
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync
  isExternal: false
  name: IActorStateProvider.LoadStateAsync<T>
  nameWithType: KvsActorStateProvider.IActorStateProvider.LoadStateAsync<T>
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync<T>
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)
  fullname.vb: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: LoadStateAsync<T>(ActorId, String, CancellationToken)
  nameWithType: IActorStateProvider.LoadStateAsync<T>(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync<T>(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IActorStateProvider.LoadStateAsync(Of T)(ActorId, String, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  name.vb: LoadStateAsync(Of T)(ActorId, String, CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: LoadStateAsync<T>
    nameWithType: IActorStateProvider.LoadStateAsync<T>
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: LoadStateAsync(Of T)
    nameWithType: IActorStateProvider.LoadStateAsync(Of T)
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullname.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: StateChangeKind
  nameWithType: StateChangeKind
  fullName: Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind
- uid: Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind.None
  commentId: F:Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind.None
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync
  isExternal: false
  name: IActorStateProvider.SaveStateAsync
  nameWithType: KvsActorStateProvider.IActorStateProvider.SaveStateAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: SaveStateAsync(ActorId, IReadOnlyCollection<ActorStateChange>, CancellationToken)
  nameWithType: IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection<ActorStateChange>, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Collections.Generic.IReadOnlyCollection<Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange>, System.Threading.CancellationToken)
  nameWithType.vb: IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection(Of ActorStateChange), CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Collections.Generic.IReadOnlyCollection(Of Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange), System.Threading.CancellationToken)
  name.vb: SaveStateAsync(ActorId, IReadOnlyCollection(Of ActorStateChange), CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
    name: SaveStateAsync
    nameWithType: IActorStateProvider.SaveStateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
    name: ActorStateChange
    nameWithType: ActorStateChange
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
    name: SaveStateAsync
    nameWithType: IActorStateProvider.SaveStateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
    name: ActorStateChange
    nameWithType: ActorStateChange
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<ActorStateChange>
  nameWithType: IReadOnlyCollection<ActorStateChange>
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange>
  nameWithType.vb: IReadOnlyCollection(Of ActorStateChange)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange)
  name.vb: IReadOnlyCollection(Of ActorStateChange)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
    name: ActorStateChange
    nameWithType: ActorStateChange
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
    name: ActorStateChange
    nameWithType: ActorStateChange
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync
  isExternal: false
  name: IActorStateProvider.ContainsStateAsync
  nameWithType: KvsActorStateProvider.IActorStateProvider.ContainsStateAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: ContainsStateAsync(ActorId, String, CancellationToken)
  nameWithType: IActorStateProvider.ContainsStateAsync(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: ContainsStateAsync
    nameWithType: IActorStateProvider.ContainsStateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: ContainsStateAsync
    nameWithType: IActorStateProvider.ContainsStateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync
  isExternal: false
  name: IActorStateProvider.RemoveActorAsync
  nameWithType: KvsActorStateProvider.IActorStateProvider.RemoveActorAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: RemoveActorAsync(ActorId, CancellationToken)
  nameWithType: IActorStateProvider.RemoveActorAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: RemoveActorAsync
    nameWithType: IActorStateProvider.RemoveActorAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: RemoveActorAsync
    nameWithType: IActorStateProvider.RemoveActorAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync
  isExternal: false
  name: IActorStateProvider.EnumerateStateNamesAsync
  nameWithType: KvsActorStateProvider.IActorStateProvider.EnumerateStateNamesAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: EnumerateStateNamesAsync(ActorId, CancellationToken)
  nameWithType: IActorStateProvider.EnumerateStateNamesAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: EnumerateStateNamesAsync
    nameWithType: IActorStateProvider.EnumerateStateNamesAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: EnumerateStateNamesAsync
    nameWithType: IActorStateProvider.EnumerateStateNamesAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<String>>
  nameWithType: Task<IEnumerable<String>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<System.String>>
  nameWithType.vb: Task(Of IEnumerable(Of String))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Task(Of IEnumerable(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync
  isExternal: false
  name: IActorStateProvider.GetActorsAsync
  nameWithType: KvsActorStateProvider.IActorStateProvider.GetActorsAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: GetActorsAsync(Int32, ContinuationToken, CancellationToken)
  nameWithType: IActorStateProvider.GetActorsAsync(Int32, ContinuationToken, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32, Microsoft.ServiceFabric.Actors.Query.ContinuationToken, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
    name: GetActorsAsync
    nameWithType: IActorStateProvider.GetActorsAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
    name: ContinuationToken
    nameWithType: ContinuationToken
    fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
    name: GetActorsAsync
    nameWithType: IActorStateProvider.GetActorsAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
    name: ContinuationToken
    nameWithType: ContinuationToken
    fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  commentId: T:Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  parent: Microsoft.ServiceFabric.Actors.Query
  isExternal: false
  name: ContinuationToken
  nameWithType: ContinuationToken
  fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
- uid: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Query.PagedResult{Microsoft.ServiceFabric.Actors.ActorId}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Query.PagedResult{Microsoft.ServiceFabric.Actors.ActorId}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PagedResult<ActorId>>
  nameWithType: Task<PagedResult<ActorId>>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceFabric.Actors.Query.PagedResult<Microsoft.ServiceFabric.Actors.ActorId>>
  nameWithType.vb: Task(Of PagedResult(Of ActorId))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceFabric.Actors.Query.PagedResult(Of Microsoft.ServiceFabric.Actors.ActorId))
  name.vb: Task(Of PagedResult(Of ActorId))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
    name: PagedResult
    nameWithType: PagedResult
    fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
    name: PagedResult
    nameWithType: PagedResult
    fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Query
  commentId: N:Microsoft.ServiceFabric.Actors.Query
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Query
  nameWithType: Microsoft.ServiceFabric.Actors.Query
  fullName: Microsoft.ServiceFabric.Actors.Query
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync
  isExternal: false
  name: IActorStateProvider.SaveReminderAsync
  nameWithType: KvsActorStateProvider.IActorStateProvider.SaveReminderAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
  nameWithType: IActorStateProvider.SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.IActorReminder, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
    name: SaveReminderAsync
    nameWithType: IActorStateProvider.SaveReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    name: IActorReminder
    nameWithType: IActorReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
    name: SaveReminderAsync
    nameWithType: IActorStateProvider.SaveReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    name: IActorReminder
    nameWithType: IActorReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync
  isExternal: false
  name: IActorStateProvider.DeleteReminderAsync
  nameWithType: KvsActorStateProvider.IActorStateProvider.DeleteReminderAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: DeleteReminderAsync(ActorId, String, CancellationToken)
  nameWithType: IActorStateProvider.DeleteReminderAsync(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: DeleteReminderAsync
    nameWithType: IActorStateProvider.DeleteReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: DeleteReminderAsync
    nameWithType: IActorStateProvider.DeleteReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync
  isExternal: false
  name: IActorStateProvider.LoadRemindersAsync
  nameWithType: KvsActorStateProvider.IActorStateProvider.LoadRemindersAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: LoadRemindersAsync(CancellationToken)
  nameWithType: IActorStateProvider.LoadRemindersAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
    name: LoadRemindersAsync
    nameWithType: IActorStateProvider.LoadRemindersAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
    name: LoadRemindersAsync
    nameWithType: IActorStateProvider.LoadRemindersAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IActorReminderCollection>
  nameWithType: Task<IActorReminderCollection>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection>
  nameWithType.vb: Task(Of IActorReminderCollection)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection)
  name.vb: Task(Of IActorReminderCollection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection
    name: IActorReminderCollection
    nameWithType: IActorReminderCollection
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection
    name: IActorReminderCollection
    nameWithType: IActorReminderCollection
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize
  isExternal: false
  name: IStateProviderReplica.Initialize
  nameWithType: KvsActorStateProvider.IStateProviderReplica.Initialize
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: false
  name: Initialize(StatefulServiceInitializationParameters)
  nameWithType: IStateProviderReplica.Initialize(StatefulServiceInitializationParameters)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
    name: Initialize
    nameWithType: IStateProviderReplica.Initialize
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.StatefulServiceInitializationParameters
    name: StatefulServiceInitializationParameters
    nameWithType: StatefulServiceInitializationParameters
    fullName: System.Fabric.StatefulServiceInitializationParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
    name: Initialize
    nameWithType: IStateProviderReplica.Initialize
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.StatefulServiceInitializationParameters
    name: StatefulServiceInitializationParameters
    nameWithType: StatefulServiceInitializationParameters
    fullName: System.Fabric.StatefulServiceInitializationParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.StatefulServiceInitializationParameters
  commentId: T:System.Fabric.StatefulServiceInitializationParameters
  parent: System.Fabric
  isExternal: false
  name: StatefulServiceInitializationParameters
  nameWithType: StatefulServiceInitializationParameters
  fullName: System.Fabric.StatefulServiceInitializationParameters
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync
  isExternal: false
  name: IStateProviderReplica.OpenAsync
  nameWithType: KvsActorStateProvider.IStateProviderReplica.OpenAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
  nameWithType: IStateProviderReplica.OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode, System.Fabric.IStatefulServicePartition, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: IStateProviderReplica.OpenAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaOpenMode
    name: ReplicaOpenMode
    nameWithType: ReplicaOpenMode
    fullName: System.Fabric.ReplicaOpenMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.IStatefulServicePartition
    name: IStatefulServicePartition
    nameWithType: IStatefulServicePartition
    fullName: System.Fabric.IStatefulServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: IStateProviderReplica.OpenAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaOpenMode
    name: ReplicaOpenMode
    nameWithType: ReplicaOpenMode
    fullName: System.Fabric.ReplicaOpenMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.IStatefulServicePartition
    name: IStatefulServicePartition
    nameWithType: IStatefulServicePartition
    fullName: System.Fabric.IStatefulServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReplicaOpenMode
  commentId: T:System.Fabric.ReplicaOpenMode
  parent: System.Fabric
  isExternal: false
  name: ReplicaOpenMode
  nameWithType: ReplicaOpenMode
  fullName: System.Fabric.ReplicaOpenMode
- uid: System.Fabric.IStatefulServicePartition
  commentId: T:System.Fabric.IStatefulServicePartition
  parent: System.Fabric
  isExternal: false
  name: IStatefulServicePartition
  nameWithType: IStatefulServicePartition
  fullName: System.Fabric.IStatefulServicePartition
- uid: System.Threading.Tasks.Task{System.Fabric.IReplicator}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.IReplicator}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IReplicator>
  nameWithType: Task<IReplicator>
  fullName: System.Threading.Tasks.Task<System.Fabric.IReplicator>
  nameWithType.vb: Task(Of IReplicator)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.IReplicator)
  name.vb: Task(Of IReplicator)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.IReplicator
    name: IReplicator
    nameWithType: IReplicator
    fullName: System.Fabric.IReplicator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.IReplicator
    name: IReplicator
    nameWithType: IReplicator
    fullName: System.Fabric.IReplicator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync
  isExternal: false
  name: IStateProviderReplica.ChangeRoleAsync
  nameWithType: KvsActorStateProvider.IStateProviderReplica.ChangeRoleAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: ChangeRoleAsync(ReplicaRole, CancellationToken)
  nameWithType: IStateProviderReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
    name: ChangeRoleAsync
    nameWithType: IStateProviderReplica.ChangeRoleAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
    name: ChangeRoleAsync
    nameWithType: IStateProviderReplica.ChangeRoleAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReplicaRole
  commentId: T:System.Fabric.ReplicaRole
  parent: System.Fabric
  isExternal: false
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: System.Fabric.ReplicaRole
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync
  isExternal: false
  name: IStateProviderReplica.CloseAsync
  nameWithType: KvsActorStateProvider.IStateProviderReplica.CloseAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: CloseAsync(CancellationToken)
  nameWithType: IStateProviderReplica.CloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: IStateProviderReplica.CloseAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: IStateProviderReplica.CloseAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort
  isExternal: false
  name: IStateProviderReplica.Abort
  nameWithType: KvsActorStateProvider.IStateProviderReplica.Abort
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: false
  name: Abort()
  nameWithType: IStateProviderReplica.Abort()
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
    name: Abort
    nameWithType: IStateProviderReplica.Abort
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
    name: Abort
    nameWithType: IStateProviderReplica.Abort
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync
  isExternal: false
  name: IStateProviderReplica.BackupAsync
  nameWithType: KvsActorStateProvider.IStateProviderReplica.BackupAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: BackupAsync(Func<BackupInfo, CancellationToken, Task<Boolean>>)
  nameWithType: IStateProviderReplica.BackupAsync(Func<BackupInfo, CancellationToken, Task<Boolean>>)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>)
  nameWithType.vb: IStateProviderReplica.BackupAsync(Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  fullname.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)))
  name.vb: BackupAsync(Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
    name: BackupAsync
    nameWithType: IStateProviderReplica.BackupAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
    name: BackupAsync
    nameWithType: IStateProviderReplica.BackupAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
  commentId: T:System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
  parent: System
  definition: System.Func`3
  name: Func<BackupInfo, CancellationToken, Task<Boolean>>
  nameWithType: Func<BackupInfo, CancellationToken, Task<Boolean>>
  fullName: System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>
  nameWithType.vb: Func(Of BackupInfo, CancellationToken, Task(Of Boolean))
  fullname.vb: System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean))
  name.vb: Func(Of BackupInfo, CancellationToken, Task(Of Boolean))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: BackupAsync(BackupOption, TimeSpan, CancellationToken, Func<BackupInfo, CancellationToken, Task<Boolean>>)
  nameWithType: IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func<BackupInfo, CancellationToken, Task<Boolean>>)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption, System.TimeSpan, System.Threading.CancellationToken, System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>)
  nameWithType.vb: IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  fullname.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption, System.TimeSpan, System.Threading.CancellationToken, System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)))
  name.vb: BackupAsync(BackupOption, TimeSpan, CancellationToken, Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
    name: BackupAsync
    nameWithType: IStateProviderReplica.BackupAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.BackupOption
    name: BackupOption
    nameWithType: BackupOption
    fullName: Microsoft.ServiceFabric.Data.BackupOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
    name: BackupAsync
    nameWithType: IStateProviderReplica.BackupAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.BackupOption
    name: BackupOption
    nameWithType: BackupOption
    fullName: Microsoft.ServiceFabric.Data.BackupOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.BackupOption
  commentId: T:Microsoft.ServiceFabric.Data.BackupOption
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: BackupOption
  nameWithType: BackupOption
  fullName: Microsoft.ServiceFabric.Data.BackupOption
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync
  isExternal: false
  name: IStateProviderReplica.RestoreAsync
  nameWithType: KvsActorStateProvider.IStateProviderReplica.RestoreAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  nameWithType.vb: KvsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: RestoreAsync(String)
  nameWithType: IStateProviderReplica.RestoreAsync(String)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
    name: RestoreAsync
    nameWithType: IStateProviderReplica.RestoreAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
    name: RestoreAsync
    nameWithType: IStateProviderReplica.RestoreAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: RestoreAsync(String, RestorePolicy, CancellationToken)
  nameWithType: IStateProviderReplica.RestoreAsync(String, RestorePolicy, CancellationToken)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String, Microsoft.ServiceFabric.Data.RestorePolicy, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
    name: RestoreAsync
    nameWithType: IStateProviderReplica.RestoreAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Data.RestorePolicy
    name: RestorePolicy
    nameWithType: RestorePolicy
    fullName: Microsoft.ServiceFabric.Data.RestorePolicy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
    name: RestoreAsync
    nameWithType: IStateProviderReplica.RestoreAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Data.RestorePolicy
    name: RestorePolicy
    nameWithType: RestorePolicy
    fullName: Microsoft.ServiceFabric.Data.RestorePolicy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.RestorePolicy
  commentId: T:Microsoft.ServiceFabric.Data.RestorePolicy
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: RestorePolicy
  nameWithType: RestorePolicy
  fullName: Microsoft.ServiceFabric.Data.RestorePolicy
