### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  id: CommunicationClientFactoryBase`1
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  children:
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.#ctor(Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},System.String)
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient(`0)
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientConnected
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientDisconnected
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ExceptionHandlers
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ServiceResolver
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.TraceId
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(`0)
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(System.String,`0)
  langs:
  - csharp
  - vb
  name: CommunicationClientFactoryBase<TCommunicationClient>
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CommunicationClientFactoryBase
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 21
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nProvides the base implementation of ICommunicationClientFactory for creating communication clients to talk to service fabric services. Extend the\nCommunicationClientFactoryBase class to create communication clients for custom transport implementations. This class maintains a cache of communication\nclients and attempts to reuse the clients for requests to the same service endpoint.\n"
  example: []
  syntax:
    content: 'public abstract class CommunicationClientFactoryBase<TCommunicationClient> : ICommunicationClientFactory<TCommunicationClient> where TCommunicationClient : ICommunicationClient'
    content.vb: >-
      Public MustInherit Class CommunicationClientFactoryBase(Of TCommunicationClient As ICommunicationClient)
          Implements ICommunicationClientFactory(Of TCommunicationClient)
    typeParameters:
    - id: TCommunicationClient
      description: The type of communication client
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient)
  name.vb: CommunicationClientFactoryBase(Of TCommunicationClient)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ServiceResolver
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ServiceResolver
  id: ServiceResolver
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: ServiceResolver
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ServiceResolver
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ServiceResolver
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceResolver
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 35
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the ServicePartitionResolver used by the client factory for resolving the service endpoint.\n"
  example: []
  syntax:
    content: public IServicePartitionResolver ServiceResolver { get; }
    content.vb: Public ReadOnly Property ServiceResolver As IServicePartitionResolver
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
      description: ServicePartitionResolver
  overload: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ServiceResolver*
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ServiceResolver
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ServiceResolver
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ExceptionHandlers
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ExceptionHandlers
  id: ExceptionHandlers
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: ExceptionHandlers
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ExceptionHandlers
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ExceptionHandlers
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ExceptionHandlers
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 44
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the custom exception handlers for handling exceptions on the client to service communication channel.\n"
  example: []
  syntax:
    content: public IEnumerable<IExceptionHandler> ExceptionHandlers { get; }
    content.vb: Public ReadOnly Property ExceptionHandlers As IEnumerable(Of IExceptionHandler)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
      description: List of Exception handlers
  overload: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ExceptionHandlers*
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ExceptionHandlers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ExceptionHandlers
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.TraceId
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.TraceId
  id: TraceId
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: TraceId
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.TraceId
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.TraceId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TraceId
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the diagnostics trace identifier for this component.\n"
  example: []
  syntax:
    content: protected string TraceId { get; }
    content.vb: Protected ReadOnly Property TraceId As String
    parameters: []
    return:
      type: System.String
      description: Trace identifier
  overload: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.TraceId*
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).TraceId
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).TraceId
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.#ctor(Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.#ctor(Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},System.String)
  id: '#ctor(Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},System.String)'
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: CommunicationClientFactoryBase(IServicePartitionResolver, IEnumerable<IExceptionHandler>, String)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.CommunicationClientFactoryBase(IServicePartitionResolver, IEnumerable<IExceptionHandler>, String)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.CommunicationClientFactoryBase(Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 64
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nInitializes a new instance of the communication client factory.\n"
  example: []
  syntax:
    content: protected CommunicationClientFactoryBase(IServicePartitionResolver servicePartitionResolver = null, IEnumerable<IExceptionHandler> exceptionHandlers = null, string traceId = null)
    content.vb: Protected Sub New(servicePartitionResolver As IServicePartitionResolver = Nothing, exceptionHandlers As IEnumerable(Of IExceptionHandler) = Nothing, traceId As String = Nothing)
    parameters:
    - id: servicePartitionResolver
      type: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
      description: Optional ServicePartitionResolver
    - id: exceptionHandlers
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
      description: Optional Custom exception handlers for the exceptions on the Client to Service communication channel
    - id: traceId
      type: System.String
      description: 'Identifier to use in diagnostics traces from this component '
  overload: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.#ctor*
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).CommunicationClientFactoryBase(IServicePartitionResolver, IEnumerable(Of IExceptionHandler), String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).CommunicationClientFactoryBase(Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler), System.String)
  name.vb: CommunicationClientFactoryBase(IServicePartitionResolver, IEnumerable(Of IExceptionHandler), String)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientConnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientConnected
  id: ClientConnected
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: ClientConnected
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ClientConnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ClientConnected
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClientConnected
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 91
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nEvent handler that is fired when the Communication client connects to the service endpoint.\n"
  example: []
  syntax:
    content: public event EventHandler<CommunicationClientEventArgs<TCommunicationClient>> ClientConnected
    content.vb: Public Event ClientConnected As EventHandler(Of CommunicationClientEventArgs(Of TCommunicationClient))
    return:
      type: System.EventHandler{Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs{{TCommunicationClient}}}
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}.ClientConnected
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ClientConnected
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ClientConnected
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientDisconnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientDisconnected
  id: ClientDisconnected
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: ClientDisconnected
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ClientDisconnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ClientDisconnected
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClientDisconnected
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 96
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nEvent handler that is fired when the Communication client disconnects from the service endpoint.\n"
  example: []
  syntax:
    content: public event EventHandler<CommunicationClientEventArgs<TCommunicationClient>> ClientDisconnected
    content.vb: Public Event ClientDisconnected As EventHandler(Of CommunicationClientEventArgs(Of TCommunicationClient))
    return:
      type: System.EventHandler{Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs{{TCommunicationClient}}}
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}.ClientDisconnected
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ClientDisconnected
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ClientDisconnected
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  id: GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetClientAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 114
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nResolves a partition of the specified service containing one or more communication listeners and returns a client to communicate \nto the endpoint corresponding to the given listenerName. \n\nThe endpoint of the service is of the form - {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}\n"
  example: []
  syntax:
    content: public Task<TCommunicationClient> GetClientAsync(Uri serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, string listenerName, OperationRetrySettings retrySettings, CancellationToken cancellationToken)
    content.vb: Public Function GetClientAsync(serviceUri As Uri, partitionKey As ServicePartitionKey, targetReplicaSelector As TargetReplicaSelector, listenerName As String, retrySettings As OperationRetrySettings, cancellationToken As CancellationToken) As Task(Of TCommunicationClient)
    parameters:
    - id: serviceUri
      type: System.Uri
      description: Uri of the service to resolve
    - id: partitionKey
      type: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
      description: Key that identifies the partition to resolve
    - id: targetReplicaSelector
      type: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
      description: Specifies which replica in the partition identified by the partition key, the client should connect to
    - id: listenerName
      type: System.String
      description: Specifies which listener in the endpoint of the chosen replica, to which the client should connect to
    - id: retrySettings
      type: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
      description: Specifies the retry policy that should be used for exceptions that occur when creating the client.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{{TCommunicationClient}}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. The result of the Task is\nthe CommunicationClient(<xref href=\"Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient\" data-throw-if-not-resolved=\"false\"></xref>) object.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  id: GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetClientAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 149
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets or Creates the CommunicationClient for the specified listener name by resolving based on the given previousRsp.\n"
  example: []
  syntax:
    content: public Task<TCommunicationClient> GetClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplica, string listenerName, OperationRetrySettings retrySettings, CancellationToken cancellationToken)
    content.vb: Public Function GetClientAsync(previousRsp As ResolvedServicePartition, targetReplica As TargetReplicaSelector, listenerName As String, retrySettings As OperationRetrySettings, cancellationToken As CancellationToken) As Task(Of TCommunicationClient)
    parameters:
    - id: previousRsp
      type: System.Fabric.ResolvedServicePartition
      description: Previous ResolvedServicePartition value
    - id: targetReplica
      type: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
      description: Specifies which replica in the partition identified by the partition key, the client should connect to
    - id: listenerName
      type: System.String
      description: Specifies which listener in the endpoint of the chosen replica, to which the client should connect to
    - id: retrySettings
      type: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
      description: Specifies the retry policy that should be used for exceptions that occur when creating the client.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{{TCommunicationClient}}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. The result of the Task is\nthe CommunicationClient(<xref href=\"Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient\" data-throw-if-not-resolved=\"false\"></xref>) object.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  id: ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ReportOperationExceptionAsync(TCommunicationClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReportOperationExceptionAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 237
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nHandles the exceptions that occur in the CommunicationClient when sending a message to the Service\n"
  example: []
  syntax:
    content: public Task<OperationRetryControl> ReportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings, CancellationToken cancellationToken)
    content.vb: Public Function ReportOperationExceptionAsync(client As TCommunicationClient, exceptionInformation As ExceptionInformation, retrySettings As OperationRetrySettings, cancellationToken As CancellationToken) As Task(Of OperationRetryControl)
    parameters:
    - id: client
      type: '{TCommunicationClient}'
      description: Communication client
    - id: exceptionInformation
      type: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
      description: Information about the exception that occurred when communicating with the service.
    - id: retrySettings
      type: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
      description: Specifies the retry policy that should be used for handling the reported exception.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. The result of the Task is\na <xref href=\"Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl\" data-throw-if-not-resolved=\"false\"></xref> object that determines\nhow the retry policy for this exception.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}.ReportOperationExceptionAsync({TCommunicationClient},Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ReportOperationExceptionAsync(TCommunicationClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(`0)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(`0)
  id: ValidateClient(`0)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: ValidateClient(TCommunicationClient)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient(TCommunicationClient)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient(TCommunicationClient)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ValidateClient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 319
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nReturns true if the client is still valid. Connection oriented transports can use this method to indicate that the client is no longer\nconnected to the service.\n"
  example: []
  syntax:
    content: protected abstract bool ValidateClient(TCommunicationClient client)
    content.vb: Protected MustOverride Function ValidateClient(client As TCommunicationClient) As Boolean
    parameters:
    - id: client
      type: '{TCommunicationClient}'
      description: the communication client
    return:
      type: System.Boolean
      description: true if the client is valid, false otherwise
  overload: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient*
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient(TCommunicationClient)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient(TCommunicationClient)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(System.String,`0)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(System.String,`0)
  id: ValidateClient(System.String,`0)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: ValidateClient(String, TCommunicationClient)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient(String, TCommunicationClient)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient(System.String, TCommunicationClient)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ValidateClient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 327
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nReturns true if the client is still valid and connected to the endpoint specified in the parameter.\n"
  example: []
  syntax:
    content: protected abstract bool ValidateClient(string endpoint, TCommunicationClient client)
    content.vb: Protected MustOverride Function ValidateClient(endpoint As String, client As TCommunicationClient) As Boolean
    parameters:
    - id: endpoint
      type: System.String
      description: Specifies the expected endpoint to which we think the client is connected to
    - id: client
      type: '{TCommunicationClient}'
      description: the communication client
    return:
      type: System.Boolean
      description: true if the client is valid, false otherwise
  overload: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient*
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient(String, TCommunicationClient)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient(System.String, TCommunicationClient)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
  id: CreateClientAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: CreateClientAsync(String, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.CreateClientAsync(String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.CreateClientAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateClientAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 337
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nCreates a communication client for the given endpoint address.\n"
  example: []
  syntax:
    content: protected abstract Task<TCommunicationClient> CreateClientAsync(string endpoint, CancellationToken cancellationToken)
    content.vb: Protected MustOverride Function CreateClientAsync(endpoint As String, cancellationToken As CancellationToken) As Task(Of TCommunicationClient)
    parameters:
    - id: endpoint
      type: System.String
      description: listener address where the replica is listening
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{{TCommunicationClient}}
      description: The communication client that was created
  overload: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync*
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).CreateClientAsync(String, CancellationToken)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).CreateClientAsync(System.String, System.Threading.CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient(`0)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient(`0)
  id: AbortClient(`0)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  langs:
  - csharp
  - vb
  name: AbortClient(TCommunicationClient)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.AbortClient(TCommunicationClient)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.AbortClient(TCommunicationClient)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AbortClient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/CommunicationClientFactoryBase.cs
    startLine: 345
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nAborts the given client\n"
  example: []
  syntax:
    content: protected abstract void AbortClient(TCommunicationClient client)
    content.vb: Protected MustOverride Sub AbortClient(client As TCommunicationClient)
    parameters:
    - id: client
      type: '{TCommunicationClient}'
      description: Communication client
  overload: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient*
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).AbortClient(TCommunicationClient)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).AbortClient(TCommunicationClient)
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0}
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  name: ICommunicationClientFactory<TCommunicationClient>
  nameWithType: ICommunicationClientFactory<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient)
  name.vb: ICommunicationClientFactory(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<CommunicationClientFactoryBase<TCommunicationClient>>()
  nameWithType: ByteArraySerializer.Serialize<CommunicationClientFactoryBase<TCommunicationClient>>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of CommunicationClientFactoryBase(Of TCommunicationClient))()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient))()
  name.vb: Serialize(Of CommunicationClientFactoryBase(Of TCommunicationClient))()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<CommunicationClientFactoryBase<TCommunicationClient>>
    nameWithType: ByteArraySerializer.Serialize<CommunicationClientFactoryBase<TCommunicationClient>>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of CommunicationClientFactoryBase(Of TCommunicationClient))
    nameWithType: ByteArraySerializer.Serialize(Of CommunicationClientFactoryBase(Of TCommunicationClient))
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  isExternal: false
  name: ICommunicationClientFactory<TCommunicationClient>
  nameWithType: ICommunicationClientFactory<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient)
  name.vb: ICommunicationClientFactory(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ServiceResolver*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ServiceResolver
  isExternal: false
  name: ServiceResolver
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ServiceResolver
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ServiceResolver
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ServiceResolver
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ServiceResolver
- uid: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
  commentId: T:Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
  parent: Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: IServicePartitionResolver
  nameWithType: IServicePartitionResolver
  fullName: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
- uid: Microsoft.ServiceFabric.Services.Client
  commentId: N:Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Client
  nameWithType: Microsoft.ServiceFabric.Services.Client
  fullName: Microsoft.ServiceFabric.Services.Client
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ExceptionHandlers*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ExceptionHandlers
  isExternal: false
  name: ExceptionHandlers
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ExceptionHandlers
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ExceptionHandlers
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ExceptionHandlers
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ExceptionHandlers
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IExceptionHandler>
  nameWithType: IEnumerable<IExceptionHandler>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>
  nameWithType.vb: IEnumerable(Of IExceptionHandler)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler)
  name.vb: IEnumerable(Of IExceptionHandler)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.TraceId*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.TraceId
  isExternal: false
  name: TraceId
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.TraceId
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.TraceId
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).TraceId
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).TraceId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.#ctor
  isExternal: false
  name: CommunicationClientFactoryBase
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.CommunicationClientFactoryBase
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.CommunicationClientFactoryBase
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).CommunicationClientFactoryBase
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).CommunicationClientFactoryBase
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}.ClientConnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0}.ClientConnected
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientConnected
  name: ClientConnected
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.ClientConnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ClientConnected
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).ClientConnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ClientConnected
- uid: System.EventHandler{Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs{{TCommunicationClient}}}
  commentId: T:System.EventHandler{Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs{`0}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<CommunicationClientEventArgs<TCommunicationClient>>
  nameWithType: EventHandler<CommunicationClientEventArgs<TCommunicationClient>>
  fullName: System.EventHandler<Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs<TCommunicationClient>>
  nameWithType.vb: EventHandler(Of CommunicationClientEventArgs(Of TCommunicationClient))
  fullname.vb: System.EventHandler(Of Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs(Of TCommunicationClient))
  name.vb: EventHandler(Of CommunicationClientEventArgs(Of TCommunicationClient))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs`1
    name: CommunicationClientEventArgs
    nameWithType: CommunicationClientEventArgs
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs`1
    name: CommunicationClientEventArgs
    nameWithType: CommunicationClientEventArgs
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientConnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientConnected
  isExternal: false
  name: ClientConnected
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.ClientConnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ClientConnected
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).ClientConnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ClientConnected
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}.ClientDisconnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0}.ClientDisconnected
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientDisconnected
  name: ClientDisconnected
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.ClientDisconnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ClientDisconnected
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).ClientDisconnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ClientDisconnected
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientDisconnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientDisconnected
  isExternal: false
  name: ClientDisconnected
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.ClientDisconnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ClientDisconnected
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).ClientDisconnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ClientDisconnected
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: ICommunicationClient
  nameWithType: ICommunicationClient
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync
  isExternal: false
  name: GetClientAsync
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0}.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  name: GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  commentId: T:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  parent: Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
- uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: TargetReplicaSelector
  nameWithType: TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: OperationRetrySettings
  nameWithType: OperationRetrySettings
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TCommunicationClient}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TCommunicationClient>
  nameWithType: Task<TCommunicationClient>
  fullName: System.Threading.Tasks.Task<TCommunicationClient>
  nameWithType.vb: Task(Of TCommunicationClient)
  fullname.vb: System.Threading.Tasks.Task(Of TCommunicationClient)
  name.vb: Task(Of TCommunicationClient)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isExternal: true
  name: GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0}.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  name: GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ResolvedServicePartition
  commentId: T:System.Fabric.ResolvedServicePartition
  parent: System.Fabric
  isExternal: false
  name: ResolvedServicePartition
  nameWithType: ResolvedServicePartition
  fullName: System.Fabric.ResolvedServicePartition
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isExternal: true
  name: GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  isExternal: false
  name: OperationRetryControl
  nameWithType: OperationRetryControl
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync
  isExternal: false
  name: ReportOperationExceptionAsync
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ReportOperationExceptionAsync
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ReportOperationExceptionAsync
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ReportOperationExceptionAsync
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ReportOperationExceptionAsync
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}.ReportOperationExceptionAsync({TCommunicationClient},Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0}.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  name: ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync(TCommunicationClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync(TCommunicationClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TCommunicationClient}'
  commentId: '!:TCommunicationClient'
  definition: TCommunicationClient
  name: TCommunicationClient
  nameWithType: TCommunicationClient
  fullName: TCommunicationClient
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: ExceptionInformation
  nameWithType: ExceptionInformation
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
- uid: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationRetryControl>
  nameWithType: Task<OperationRetryControl>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl>
  nameWithType.vb: Task(Of OperationRetryControl)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl)
  name.vb: Task(Of OperationRetryControl)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
    name: OperationRetryControl
    nameWithType: OperationRetryControl
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
    name: OperationRetryControl
    nameWithType: OperationRetryControl
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isExternal: true
  name: ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync(TCommunicationClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync(TCommunicationClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TCommunicationClient
  isExternal: false
  name: TCommunicationClient
  nameWithType: TCommunicationClient
  fullName: TCommunicationClient
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient
  isExternal: false
  name: ValidateClient
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync
  isExternal: false
  name: CreateClientAsync
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.CreateClientAsync
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.CreateClientAsync
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).CreateClientAsync
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).CreateClientAsync
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient
  isExternal: false
  name: AbortClient
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.AbortClient
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.AbortClient
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).AbortClient
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).AbortClient
