### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  id: ServiceReplicaListener
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime
  children:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.#ctor(System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener},System.String,System.Boolean)
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.CreateCommunicationListener
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.DefaultName
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.ListenOnSecondary
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.Name
  langs:
  - csharp
  - vb
  name: ServiceReplicaListener
  nameWithType: ServiceReplicaListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceReplicaListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Runtime
  summary: "\nRepresents the communication listener and its properties for a Stateful Service Replica.\nEndpoints given out by the communication listener are associated with name of the communication listener.\n"
  example: []
  syntax:
    content: public sealed class ServiceReplicaListener
    content.vb: Public NotInheritable Class ServiceReplicaListener
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.DefaultName
  commentId: F:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.DefaultName
  id: DefaultName
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  langs:
  - csharp
  - vb
  name: DefaultName
  nameWithType: ServiceReplicaListener.DefaultName
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.DefaultName
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DefaultName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Runtime
  summary: "\nThe default name used when the ServiceReplicaListener is not given a name.\n"
  example: []
  syntax:
    content: public const string DefaultName = ""
    content.vb: Public Const DefaultName As String = ""
    return:
      type: System.String
      description: Default name of the Service instance listener
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.Name
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.Name
  id: Name
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ServiceReplicaListener.Name
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
    startLine: 25
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Runtime
  summary: "\nName of the communication listener.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: Name
  overload: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.ListenOnSecondary
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.ListenOnSecondary
  id: ListenOnSecondary
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  langs:
  - csharp
  - vb
  name: ListenOnSecondary
  nameWithType: ServiceReplicaListener.ListenOnSecondary
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.ListenOnSecondary
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ListenOnSecondary
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
    startLine: 33
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Runtime
  summary: "\nIndicates if this communication listener should be opened when the stateful service replica \nbecomes an ActiveSecondary. When this member is not set(or set to false), the communication listener\nis opened only when the replica becomes Primary.\n"
  example: []
  syntax:
    content: public bool ListenOnSecondary { get; }
    content.vb: Public ReadOnly Property ListenOnSecondary As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Boolean value that indicates if this communication listener should be opened when the replica is ActiveSecondary
  overload: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.ListenOnSecondary*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.CreateCommunicationListener
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.CreateCommunicationListener
  id: CreateCommunicationListener
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  langs:
  - csharp
  - vb
  name: CreateCommunicationListener
  nameWithType: ServiceReplicaListener.CreateCommunicationListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.CreateCommunicationListener
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateCommunicationListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
    startLine: 39
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Runtime
  summary: "\nFactory method for creating the communication listener.\n"
  example: []
  syntax:
    content: public Func<StatefulServiceContext, ICommunicationListener> CreateCommunicationListener { get; }
    content.vb: Public ReadOnly Property CreateCommunicationListener As Func(Of StatefulServiceContext, ICommunicationListener)
    parameters: []
    return:
      type: System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener}
      description: Factory method
  overload: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.CreateCommunicationListener*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.#ctor(System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener},System.String,System.Boolean)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.#ctor(System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener},System.String,System.Boolean)
  id: '#ctor(System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener},System.String,System.Boolean)'
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  langs:
  - csharp
  - vb
  name: ServiceReplicaListener(Func<StatefulServiceContext, ICommunicationListener>, String, Boolean)
  nameWithType: ServiceReplicaListener.ServiceReplicaListener(Func<StatefulServiceContext, ICommunicationListener>, String, Boolean)
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.ServiceReplicaListener(System.Func<System.Fabric.StatefulServiceContext, Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener>, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceReplicaListener.cs
    startLine: 47
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Runtime
  summary: "\nCreates the ServiceReplicaListener\n"
  example: []
  syntax:
    content: public ServiceReplicaListener(Func<StatefulServiceContext, ICommunicationListener> createCommunicationListener, string name = "", bool listenOnSecondary = false)
    content.vb: Public Sub New(createCommunicationListener As Func(Of StatefulServiceContext, ICommunicationListener), name As String = "", listenOnSecondary As Boolean = False)
    parameters:
    - id: createCommunicationListener
      type: System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener}
      description: Factory method for creating the communication listener
    - id: name
      type: System.String
      description: Name of the communication listener. This parameter is optional, if the service has only one communication listener
    - id: listenOnSecondary
      type: System.Boolean
      description: Specifies if the communication listener needs to be opened when the replica becomes Active secondary. THis parameter is optional
  overload: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.#ctor*
  nameWithType.vb: ServiceReplicaListener.ServiceReplicaListener(Func(Of StatefulServiceContext, ICommunicationListener), String, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.ServiceReplicaListener(System.Func(Of System.Fabric.StatefulServiceContext, Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener), System.String, System.Boolean)
  name.vb: ServiceReplicaListener(Func(Of StatefulServiceContext, ICommunicationListener), String, Boolean)
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Runtime
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceReplicaListener>()
  nameWithType: ByteArraySerializer.Serialize<ServiceReplicaListener>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceReplicaListener)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener)()
  name.vb: Serialize(Of ServiceReplicaListener)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceReplicaListener>
    nameWithType: ByteArraySerializer.Serialize<ServiceReplicaListener>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceReplicaListener)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceReplicaListener)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.Name*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.Name
  isExternal: false
  name: Name
  nameWithType: ServiceReplicaListener.Name
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.Name
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.ListenOnSecondary*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.ListenOnSecondary
  isExternal: false
  name: ListenOnSecondary
  nameWithType: ServiceReplicaListener.ListenOnSecondary
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.ListenOnSecondary
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.CreateCommunicationListener*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.CreateCommunicationListener
  isExternal: false
  name: CreateCommunicationListener
  nameWithType: ServiceReplicaListener.CreateCommunicationListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.CreateCommunicationListener
- uid: System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener}
  commentId: T:System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener}
  parent: System
  definition: System.Func`2
  name: Func<StatefulServiceContext, ICommunicationListener>
  nameWithType: Func<StatefulServiceContext, ICommunicationListener>
  fullName: System.Func<System.Fabric.StatefulServiceContext, Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener>
  nameWithType.vb: Func(Of StatefulServiceContext, ICommunicationListener)
  fullname.vb: System.Func(Of System.Fabric.StatefulServiceContext, Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener)
  name.vb: Func(Of StatefulServiceContext, ICommunicationListener)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.StatefulServiceContext
    name: StatefulServiceContext
    nameWithType: StatefulServiceContext
    fullName: System.Fabric.StatefulServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
    name: ICommunicationListener
    nameWithType: ICommunicationListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.StatefulServiceContext
    name: StatefulServiceContext
    nameWithType: StatefulServiceContext
    fullName: System.Fabric.StatefulServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
    name: ICommunicationListener
    nameWithType: ICommunicationListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.#ctor
  isExternal: false
  name: ServiceReplicaListener
  nameWithType: ServiceReplicaListener.ServiceReplicaListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener.ServiceReplicaListener
