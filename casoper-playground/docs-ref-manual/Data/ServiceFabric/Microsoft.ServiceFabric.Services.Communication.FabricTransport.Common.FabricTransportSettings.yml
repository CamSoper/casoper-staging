### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  commentId: T:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  id: FabricTransportSettings
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  children:
  - Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.#ctor
  - Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout
  - Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.LoadFrom(System.String,System.String,System.String)
  - Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls
  - Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize
  - Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize
  - Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout
  - Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials
  - Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.TryLoadFrom(System.String,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings@,System.String,System.String)
  langs:
  - csharp
  - vb
  name: FabricTransportSettings
  nameWithType: FabricTransportSettings
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FabricTransportSettings
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
    startLine: 16
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  summary: "\nSettings that configures the  FabricTransport communication.\n"
  example: []
  syntax:
    content: public class FabricTransportSettings
    content.vb: Public Class FabricTransportSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.#ctor
  commentId: M:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  langs:
  - csharp
  - vb
  name: FabricTransportSettings()
  nameWithType: FabricTransportSettings.FabricTransportSettings()
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.FabricTransportSettings()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
    startLine: 29
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  summary: "\nCreates a new FabricTransportSettings with default Values.\n"
  example: []
  syntax:
    content: public FabricTransportSettings()
    content.vb: Public Sub New
  overload: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout
  id: OperationTimeout
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  langs:
  - csharp
  - vb
  name: OperationTimeout
  nameWithType: FabricTransportSettings.OperationTimeout
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OperationTimeout
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
    startLine: 45
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  summary: "\nOperation Timeout  which governs the whole process of sending a message, including receiving a reply message for a request/reply service operation.\nThis timeout also applies when sending reply messages from a callback contract method.\n"
  remarks: Default Value for Operation Timeout is set as 5 mins
  example: []
  syntax:
    content: public TimeSpan OperationTimeout { get; set; }
    content.vb: Public Property OperationTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: OperationTimeout as <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout
  id: KeepAliveTimeout
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  langs:
  - csharp
  - vb
  name: KeepAliveTimeout
  nameWithType: FabricTransportSettings.KeepAliveTimeout
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: KeepAliveTimeout
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  summary: "\nKeepAliveTimeout is provides a way to configure  Tcp keep-alive option.\n"
  remarks: "Default Value for KeepAliveTimeout Timeout is set as TimeSpan.Zero. which indicates we disable the tcp keepalive option.\nIf you are using loadbalancer , you may need to configure this in order to avoid  the loadbalancer to close the connection after certain time "
  example: []
  syntax:
    content: public TimeSpan KeepAliveTimeout { get; set; }
    content.vb: Public Property KeepAliveTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: KeepAliveTimeout as <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize
  id: MaxMessageSize
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  langs:
  - csharp
  - vb
  name: MaxMessageSize
  nameWithType: FabricTransportSettings.MaxMessageSize
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxMessageSize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
    startLine: 63
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  summary: "\nMaxMessageSize represents  the maximum size for a message that can be received on a channel configured with this setting.\n"
  remarks: "\nDefault Value for MaxMessageSize used is 4194304 bytes\n"
  example: []
  syntax:
    content: public long MaxMessageSize { get; set; }
    content.vb: Public Property MaxMessageSize As Long
    parameters: []
    return:
      type: System.Int64
      description: >
        Maximum size of the message in bytes.
  overload: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize
  id: MaxQueueSize
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  langs:
  - csharp
  - vb
  name: MaxQueueSize
  nameWithType: FabricTransportSettings.MaxQueueSize
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxQueueSize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
    startLine: 72
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  summary: "\nThe maximum size, of a queue that stores messages while they are processed for an endpoint configured with this setting. \n"
  remarks: "\nDefault value is 10,000 messages"
  example: []
  syntax:
    content: public long MaxQueueSize { get; set; }
    content.vb: Public Property MaxQueueSize As Long
    parameters: []
    return:
      type: System.Int64
      description: "Max Size for a Queue that recieves messages from the channel \n"
  overload: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls
  id: MaxConcurrentCalls
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  langs:
  - csharp
  - vb
  name: MaxConcurrentCalls
  nameWithType: FabricTransportSettings.MaxConcurrentCalls
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxConcurrentCalls
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
    startLine: 83
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  summary: "\nMaxConcurrentCalls represents maximum number of messages actively service processes at one time.\n"
  remarks: "\nDefaults  value for the MaxConcurrentCalls is to the Number of processors.\n"
  example: []
  syntax:
    content: public long MaxConcurrentCalls { get; set; }
    content.vb: Public Property MaxConcurrentCalls As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nMaxConcurrentCalls is  the upper limit of active messages in the service.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials
  id: SecurityCredentials
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  langs:
  - csharp
  - vb
  name: SecurityCredentials
  nameWithType: FabricTransportSettings.SecurityCredentials
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SecurityCredentials
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
    startLine: 95
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  summary: "\nSecurity credentials for securing the communication \n"
  remarks: "\nDefault Value for SecurityCredentials is None\nSecurityCredential can be of type x509SecurityCredentail <xref href=\"System.Fabric.X509Credentials\" data-throw-if-not-resolved=\"false\"></xref>or\nWindowsCredentials <xref href=\"System.Fabric.WindowsCredentials\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public SecurityCredentials SecurityCredentials { get; set; }
    content.vb: Public Property SecurityCredentials As SecurityCredentials
    parameters: []
    return:
      type: System.Fabric.SecurityCredentials
      description: >
        SecurityCredentials as  <xref href="System.Fabric.SecurityCredentials" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.LoadFrom(System.String,System.String,System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.LoadFrom(System.String,System.String,System.String)
  id: LoadFrom(System.String,System.String,System.String)
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  langs:
  - csharp
  - vb
  name: LoadFrom(String, String, String)
  nameWithType: FabricTransportSettings.LoadFrom(String, String, String)
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.LoadFrom(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LoadFrom
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
    startLine: 119
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  summary: "\nLoads the FabricTransport settings from a sectionName specified in the configuration file \nConfiguration File can be specified using the filePath or using the name of the configuration package specified in the service manifest .\nIt will first try to load config using configPackageName . if configPackageName is not specified then try to load  from filePath.\n"
  remarks: "\nThe following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings.\n\n1. MaxQueueSize - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize\" data-throw-if-not-resolved=\"false\"></xref>value in long.\n2. MaxMessageSize - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize\" data-throw-if-not-resolved=\"false\"></xref>value in bytes.\n3. MaxConcurrentCalls - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls\" data-throw-if-not-resolved=\"false\"></xref>value in long.\n4. SecurityCredentials - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials\" data-throw-if-not-resolved=\"false\"></xref> value.\n5. OperationTimeoutInSeconds - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref> value in seconds.\n6. KeepAliveTimeoutInSeconds - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout\" data-throw-if-not-resolved=\"false\"></xref> value in seconds.\n"
  example: []
  syntax:
    content: public static FabricTransportSettings LoadFrom(string sectionName, string filepath = null, string configPackageName = null)
    content.vb: Public Shared Function LoadFrom(sectionName As String, filepath As String = Nothing, configPackageName As String = Nothing) As FabricTransportSettings
    parameters:
    - id: sectionName
      type: System.String
      description: Name of the section within the configuration file. If not found section in configuration file, it will throw ArgumentException
    - id: filepath
      type: System.String
      description: "Full path of the file where the settings will be loaded from. \nIf not specified , it will first try to load from default Config Package\"Config\" , if not found then load from Settings \"ClientExeName.Settings.xml\" present in Client Exe directory. "
    - id: configPackageName
      type: System.String
      description: Name of the configuration package.If its null or empty,it will check for file in filePath
    return:
      type: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
      description: FabricTransportSettings
  overload: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.LoadFrom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.TryLoadFrom(System.String,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings@,System.String,System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.TryLoadFrom(System.String,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings@,System.String,System.String)
  id: TryLoadFrom(System.String,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings@,System.String,System.String)
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  langs:
  - csharp
  - vb
  name: TryLoadFrom(String, out FabricTransportSettings, String, String)
  nameWithType: FabricTransportSettings.TryLoadFrom(String, out FabricTransportSettings, String, String)
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.TryLoadFrom(System.String, out Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TryLoadFrom
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/FabricTransport/Common/FabricTransportSettings.cs
    startLine: 196
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  summary: "\nTry to load the FabricTransport settings from a sectionName specified in the configuration file.\nConfiguration File can be specified using the filePath or using the name of the configuration package specified in the service manifest .\nIt will first try to load config using configPackageName . if configPackageName is not specified then try to load  from filePath.\n"
  remarks: "\nThe following are the parameter names that should be provided in the configuration file,to be recognizable by service fabric to load the transport settings.\n\n1. MaxQueueSize - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize\" data-throw-if-not-resolved=\"false\"></xref>value in long.\n2. MaxMessageSize - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize\" data-throw-if-not-resolved=\"false\"></xref>value in bytes.\n3. MaxConcurrentCalls - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls\" data-throw-if-not-resolved=\"false\"></xref>value in long.\n4. SecurityCredentials - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials\" data-throw-if-not-resolved=\"false\"></xref> value.\n5. OperationTimeoutInSeconds - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout\" data-throw-if-not-resolved=\"false\"></xref> value in seconds.\n6. KeepAliveTimeoutInSeconds - <xref href=\"Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout\" data-throw-if-not-resolved=\"false\"></xref> value in seconds.\n"
  example: []
  syntax:
    content: public static bool TryLoadFrom(string sectionName, out FabricTransportSettings settings, string filepath = null, string configPackageName = null)
    content.vb: Public Shared Function TryLoadFrom(sectionName As String, ByRef settings As FabricTransportSettings, filepath As String = Nothing, configPackageName As String = Nothing) As Boolean
    parameters:
    - id: sectionName
      type: System.String
      description: Name of the section within the configuration file. If not found section in configuration file, it return false
    - id: settings
      type: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
      description: 'When this method returns it sets the <xref href="Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings" data-throw-if-not-resolved="false"></xref> settings if load from Config succeeded. If fails ,its sets settings to null/&gt; '
    - id: filepath
      type: System.String
      description: "Full path of the file where the settings will be loaded from. \nIf not specified , it will first try to load from default Config Package\"Config\" , if not found then load from Settings \"ClientExeName.Settings.xml\" present in Client Exe directory. "
    - id: configPackageName
      type: System.String
      description: Name of the configuration package. If its null or empty,it will check for file in filePath
    return:
      type: System.Boolean
      description: "<xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> specifies whether the settings get loaded successfully from Config.\n    It returns true when load from Config succeeded, else return false. "
  overload: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.TryLoadFrom*
  nameWithType.vb: FabricTransportSettings.TryLoadFrom(String, ByRef FabricTransportSettings, String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.TryLoadFrom(System.String, ByRef Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings, System.String, System.String)
  name.vb: TryLoadFrom(String, ByRef FabricTransportSettings, String, String)
references:
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  commentId: N:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  nameWithType: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<FabricTransportSettings>()
  nameWithType: ByteArraySerializer.Serialize<FabricTransportSettings>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of FabricTransportSettings)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings)()
  name.vb: Serialize(Of FabricTransportSettings)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<FabricTransportSettings>
    nameWithType: ByteArraySerializer.Serialize<FabricTransportSettings>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of FabricTransportSettings)
    nameWithType: ByteArraySerializer.Serialize(Of FabricTransportSettings)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.#ctor
  isExternal: false
  name: FabricTransportSettings
  nameWithType: FabricTransportSettings.FabricTransportSettings
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.FabricTransportSettings
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout
  isExternal: false
  name: OperationTimeout
  nameWithType: FabricTransportSettings.OperationTimeout
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout
  isExternal: false
  name: KeepAliveTimeout
  nameWithType: FabricTransportSettings.KeepAliveTimeout
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize
  isExternal: false
  name: MaxMessageSize
  nameWithType: FabricTransportSettings.MaxMessageSize
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize
  isExternal: false
  name: MaxQueueSize
  nameWithType: FabricTransportSettings.MaxQueueSize
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls
  isExternal: false
  name: MaxConcurrentCalls
  nameWithType: FabricTransportSettings.MaxConcurrentCalls
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls
- uid: System.Fabric.SecurityCredentials
  commentId: T:System.Fabric.SecurityCredentials
  parent: System.Fabric
  isExternal: false
  name: SecurityCredentials
  nameWithType: SecurityCredentials
  fullName: System.Fabric.SecurityCredentials
- uid: System.Fabric.X509Credentials
  commentId: T:System.Fabric.X509Credentials
  isExternal: false
  name: X509Credentials
  nameWithType: X509Credentials
  fullName: System.Fabric.X509Credentials
- uid: System.Fabric.WindowsCredentials
  commentId: T:System.Fabric.WindowsCredentials
  isExternal: false
  name: WindowsCredentials
  nameWithType: WindowsCredentials
  fullName: System.Fabric.WindowsCredentials
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials
  isExternal: false
  name: SecurityCredentials
  nameWithType: FabricTransportSettings.SecurityCredentials
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  isExternal: false
  name: MaxQueueSize
  nameWithType: FabricTransportSettings.MaxQueueSize
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxQueueSize
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  isExternal: false
  name: MaxMessageSize
  nameWithType: FabricTransportSettings.MaxMessageSize
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxMessageSize
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  isExternal: false
  name: MaxConcurrentCalls
  nameWithType: FabricTransportSettings.MaxConcurrentCalls
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.MaxConcurrentCalls
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  isExternal: false
  name: SecurityCredentials
  nameWithType: FabricTransportSettings.SecurityCredentials
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.SecurityCredentials
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  isExternal: false
  name: OperationTimeout
  nameWithType: FabricTransportSettings.OperationTimeout
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.OperationTimeout
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout
  commentId: P:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  isExternal: false
  name: KeepAliveTimeout
  nameWithType: FabricTransportSettings.KeepAliveTimeout
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.KeepAliveTimeout
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.LoadFrom*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.LoadFrom
  isExternal: false
  name: LoadFrom
  nameWithType: FabricTransportSettings.LoadFrom
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.LoadFrom
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  commentId: T:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common
  isExternal: false
  name: FabricTransportSettings
  nameWithType: FabricTransportSettings
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.TryLoadFrom*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.TryLoadFrom
  isExternal: false
  name: TryLoadFrom
  nameWithType: FabricTransportSettings.TryLoadFrom
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Common.FabricTransportSettings.TryLoadFrom
