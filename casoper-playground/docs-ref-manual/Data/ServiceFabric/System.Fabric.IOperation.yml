### YamlMime:ManagedReference
items:
- uid: System.Fabric.IOperation
  commentId: T:System.Fabric.IOperation
  id: IOperation
  parent: System.Fabric
  children:
  - System.Fabric.IOperation.Acknowledge
  - System.Fabric.IOperation.AtomicGroupId
  - System.Fabric.IOperation.Data
  - System.Fabric.IOperation.OperationType
  - System.Fabric.IOperation.SequenceNumber
  langs:
  - csharp
  - vb
  name: IOperation
  nameWithType: IOperation
  fullName: System.Fabric.IOperation
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IOperation
    path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Describes the data that is obtained from the state replicator. </p>\n"
  remarks: "\n<p>\n<xref href=\"System.Fabric.IOperation\" data-throw-if-not-resolved=\"false\"></xref> is the base interface that describes state changes that are delivered to a Secondary replica. </p>\n<p>\n    They contain the <xref href=\"System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData%2cSystem.Threading.CancellationToken%2cSystem.Int64%40)\" data-throw-if-not-resolved=\"false\"></xref> and the sequence number and other identifying information.</p>\n"
  example: []
  syntax:
    content: public interface IOperation
    content.vb: Public Interface IOperation
  extensionMethods:
  - System.Fabric.IOperation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Fabric.IOperation.OperationType
  commentId: P:System.Fabric.IOperation.OperationType
  id: OperationType
  parent: System.Fabric.IOperation
  langs:
  - csharp
  - vb
  name: OperationType
  nameWithType: IOperation.OperationType
  fullName: System.Fabric.IOperation.OperationType
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OperationType
    path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
    startLine: 26
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the type of this operation. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Fabric.OperationType\" data-throw-if-not-resolved=\"false\"></xref> indicates the type of operation. \"Normal\" operations are those operations that are sent by non-service grouped services as part of either the copy or replication streams. Other types of operations represent control operations that are specific to service groups.</p>\n"
  example: []
  syntax:
    content: OperationType OperationType { get; }
    content.vb: ReadOnly Property OperationType As OperationType
    parameters: []
    return:
      type: System.Fabric.OperationType
      description: "\n<p>Returns <xref href=\"System.Fabric.OperationType\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.IOperation.OperationType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.IOperation.SequenceNumber
  commentId: P:System.Fabric.IOperation.SequenceNumber
  id: SequenceNumber
  parent: System.Fabric.IOperation
  langs:
  - csharp
  - vb
  name: SequenceNumber
  nameWithType: IOperation.SequenceNumber
  fullName: System.Fabric.IOperation.SequenceNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the sequence number of this operation. </p>\n"
  remarks: "\n<p>\n    The sequence number is provided as a part of the <xref href=\"System.Fabric.IOperation.SequenceNumber\" data-throw-if-not-resolved=\"false\"></xref></p>\n<p>\n    For operations received from the replication stream (<xref href=\"System.Fabric.IStateReplicator.GetReplicationStream\" data-throw-if-not-resolved=\"false\"></xref>) the sequence number is the same that the Primary replica that are receives from <xref href=\"System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData%2cSystem.Threading.CancellationToken%2cSystem.Int64%40)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example: []
  syntax:
    content: long SequenceNumber { get; }
    content.vb: ReadOnly Property SequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>Returns <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.IOperation.SequenceNumber*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.IOperation.AtomicGroupId
  commentId: P:System.Fabric.IOperation.AtomicGroupId
  id: AtomicGroupId
  parent: System.Fabric.IOperation
  langs:
  - csharp
  - vb
  name: AtomicGroupId
  nameWithType: IOperation.AtomicGroupId
  fullName: System.Fabric.IOperation.AtomicGroupId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AtomicGroupId
    path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Identifies the atomic group, if this object that implements <xref href=\"System.Fabric.IOperation\" data-throw-if-not-resolved=\"false\"></xref>\nis a part of an atomic group. Atomic groups are only available when a service is a part of service group.</p>\n"
  example: []
  syntax:
    content: long AtomicGroupId { get; }
    content.vb: ReadOnly Property AtomicGroupId As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>Returns <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.IOperation.AtomicGroupId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.IOperation.Data
  commentId: P:System.Fabric.IOperation.Data
  id: Data
  parent: System.Fabric.IOperation
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: IOperation.Data
  fullName: System.Fabric.IOperation.Data
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Data
    path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
    startLine: 60
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> that are provided by the Primary replica.</p>\n"
  remarks: "\n<p></p>\n"
  example: []
  syntax:
    content: OperationData Data { get; }
    content.vb: ReadOnly Property Data As OperationData
    parameters: []
    return:
      type: System.Fabric.OperationData
      description: "\n<p>Returns <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.IOperation.Data*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Fabric.IOperation.Acknowledge
  commentId: M:System.Fabric.IOperation.Acknowledge
  id: Acknowledge
  parent: System.Fabric.IOperation
  langs:
  - csharp
  - vb
  name: Acknowledge()
  nameWithType: IOperation.Acknowledge()
  fullName: System.Fabric.IOperation.Acknowledge()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Acknowledge
    path: src/prod/src/managed/Api/src/System/Fabric/IOperation.cs
    startLine: 75
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Acknowledges that this operation has been successfully applied at the Secondary replica.  </p>\n"
  remarks: "\n<p>Services should call this method when they have obtained an <xref href=\"System.Fabric.IOperation\" data-throw-if-not-resolved=\"false\"></xref>\nfrom the replicator and successfully applied it to their local store.\nFor persisted services, calling this method is mandatory because the <xref href=\"System.Fabric.FabricReplicator\" data-throw-if-not-resolved=\"false\"></xref>\ndoes not release additional objects that implement <xref href=\"System.Fabric.IOperation\" data-throw-if-not-resolved=\"false\"></xref>. For volatile services, the replicator\nimplicitly acknowledges operations when they are received unless they are configured otherwise by setting the value\n<xref href=\"System.Fabric.ReplicatorSettings.RequireServiceAck\" data-throw-if-not-resolved=\"false\"></xref> to true.\nAn operation must be acknowledged by a quorum of replicas before the Primary replica receives the\n<xref href=\"System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData%2cSystem.Threading.CancellationToken%2cSystem.Int64%40)\" data-throw-if-not-resolved=\"false\"></xref> operation complete responses.</p>\n"
  example: []
  syntax:
    content: void Acknowledge()
    content.vb: Sub Acknowledge
  overload: System.Fabric.IOperation.Acknowledge*
references:
- uid: System.Fabric.IOperation
  commentId: T:System.Fabric.IOperation
  isExternal: false
  name: IOperation
  nameWithType: IOperation
  fullName: System.Fabric.IOperation
- uid: System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)
  commentId: M:System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)
  parent: System.Fabric.IStateReplicator
  isExternal: true
  name: ReplicateAsync(OperationData, CancellationToken, Int64)
  nameWithType: IStateReplicator.ReplicateAsync(OperationData, CancellationToken, Int64)
  fullName: System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData, System.Threading.CancellationToken, System.Int64)
  spec.csharp:
  - uid: System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)
    name: ReplicateAsync
    nameWithType: IStateReplicator.ReplicateAsync
    fullName: System.Fabric.IStateReplicator.ReplicateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.OperationData
    name: OperationData
    nameWithType: OperationData
    fullName: System.Fabric.OperationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)
    name: ReplicateAsync
    nameWithType: IStateReplicator.ReplicateAsync
    fullName: System.Fabric.IStateReplicator.ReplicateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.OperationData
    name: OperationData
    nameWithType: OperationData
    fullName: System.Fabric.OperationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.IOperation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IOperation>()
  nameWithType: ByteArraySerializer.Serialize<IOperation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.IOperation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IOperation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.IOperation)()
  name.vb: Serialize(Of IOperation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IOperation>
    nameWithType: ByteArraySerializer.Serialize<IOperation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.IOperation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IOperation)
    nameWithType: ByteArraySerializer.Serialize(Of IOperation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.IOperation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.IStateReplicator
  commentId: T:System.Fabric.IStateReplicator
  parent: System.Fabric
  isExternal: false
  name: IStateReplicator
  nameWithType: IStateReplicator
  fullName: System.Fabric.IStateReplicator
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.OperationType
  commentId: T:System.Fabric.OperationType
  parent: System.Fabric
  isExternal: false
  name: OperationType
  nameWithType: OperationType
  fullName: System.Fabric.OperationType
- uid: System.Fabric.IOperation.OperationType*
  commentId: Overload:System.Fabric.IOperation.OperationType
  isExternal: false
  name: OperationType
  nameWithType: IOperation.OperationType
  fullName: System.Fabric.IOperation.OperationType
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.IOperation.SequenceNumber
  commentId: P:System.Fabric.IOperation.SequenceNumber
- uid: System.Fabric.IStateReplicator.GetReplicationStream
  commentId: M:System.Fabric.IStateReplicator.GetReplicationStream
  parent: System.Fabric.IStateReplicator
  isExternal: false
  name: GetReplicationStream()
  nameWithType: IStateReplicator.GetReplicationStream()
  fullName: System.Fabric.IStateReplicator.GetReplicationStream()
  spec.csharp:
  - uid: System.Fabric.IStateReplicator.GetReplicationStream
    name: GetReplicationStream
    nameWithType: IStateReplicator.GetReplicationStream
    fullName: System.Fabric.IStateReplicator.GetReplicationStream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.IStateReplicator.GetReplicationStream
    name: GetReplicationStream
    nameWithType: IStateReplicator.GetReplicationStream
    fullName: System.Fabric.IStateReplicator.GetReplicationStream
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.IOperation.SequenceNumber*
  commentId: Overload:System.Fabric.IOperation.SequenceNumber
  isExternal: false
  name: SequenceNumber
  nameWithType: IOperation.SequenceNumber
  fullName: System.Fabric.IOperation.SequenceNumber
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.IOperation.AtomicGroupId*
  commentId: Overload:System.Fabric.IOperation.AtomicGroupId
  isExternal: false
  name: AtomicGroupId
  nameWithType: IOperation.AtomicGroupId
  fullName: System.Fabric.IOperation.AtomicGroupId
- uid: System.Fabric.OperationData
  commentId: T:System.Fabric.OperationData
  parent: System.Fabric
  isExternal: false
  name: OperationData
  nameWithType: OperationData
  fullName: System.Fabric.OperationData
- uid: System.Fabric.IOperation.Data*
  commentId: Overload:System.Fabric.IOperation.Data
  isExternal: false
  name: Data
  nameWithType: IOperation.Data
  fullName: System.Fabric.IOperation.Data
- uid: System.Fabric.FabricReplicator
  commentId: T:System.Fabric.FabricReplicator
  parent: System.Fabric
  isExternal: false
  name: FabricReplicator
  nameWithType: FabricReplicator
  fullName: System.Fabric.FabricReplicator
- uid: System.Fabric.ReplicatorSettings.RequireServiceAck
  commentId: P:System.Fabric.ReplicatorSettings.RequireServiceAck
- uid: System.Fabric.IOperation.Acknowledge*
  commentId: Overload:System.Fabric.IOperation.Acknowledge
  isExternal: false
  name: Acknowledge
  nameWithType: IOperation.Acknowledge
  fullName: System.Fabric.IOperation.Acknowledge
