### YamlMime:ManagedReference
items:
- uid: System.Fabric.KeyValueStoreReplicaSettings
  commentId: T:System.Fabric.KeyValueStoreReplicaSettings
  id: KeyValueStoreReplicaSettings
  parent: System.Fabric
  children:
  - System.Fabric.KeyValueStoreReplicaSettings.#ctor
  - System.Fabric.KeyValueStoreReplicaSettings.EnableCopyNotificationPrefetch
  - System.Fabric.KeyValueStoreReplicaSettings.FullCopyMode
  - System.Fabric.KeyValueStoreReplicaSettings.LogTruncationIntervalInMinutes
  - System.Fabric.KeyValueStoreReplicaSettings.SecondaryNotificationMode
  - System.Fabric.KeyValueStoreReplicaSettings.TransactionDrainTimeout
  langs:
  - csharp
  - vb
  name: KeyValueStoreReplicaSettings
  nameWithType: KeyValueStoreReplicaSettings
  fullName: System.Fabric.KeyValueStoreReplicaSettings
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: KeyValueStoreReplicaSettings
    path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nRepresents the settings for a key/value store replica.\n"
  example: []
  syntax:
    content: public class KeyValueStoreReplicaSettings
    content.vb: Public Class KeyValueStoreReplicaSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.KeyValueStoreReplicaSettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.KeyValueStoreReplicaSettings.#ctor
  commentId: M:System.Fabric.KeyValueStoreReplicaSettings.#ctor
  id: '#ctor'
  parent: System.Fabric.KeyValueStoreReplicaSettings
  langs:
  - csharp
  - vb
  name: KeyValueStoreReplicaSettings()
  nameWithType: KeyValueStoreReplicaSettings.KeyValueStoreReplicaSettings()
  fullName: System.Fabric.KeyValueStoreReplicaSettings.KeyValueStoreReplicaSettings()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
    startLine: 20
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nInitializes a new instance of the <xref href=\"System.Fabric.KeyValueStoreReplicaSettings\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public KeyValueStoreReplicaSettings()
    content.vb: Public Sub New
  overload: System.Fabric.KeyValueStoreReplicaSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.KeyValueStoreReplicaSettings.TransactionDrainTimeout
  commentId: P:System.Fabric.KeyValueStoreReplicaSettings.TransactionDrainTimeout
  id: TransactionDrainTimeout
  parent: System.Fabric.KeyValueStoreReplicaSettings
  langs:
  - csharp
  - vb
  name: TransactionDrainTimeout
  nameWithType: KeyValueStoreReplicaSettings.TransactionDrainTimeout
  fullName: System.Fabric.KeyValueStoreReplicaSettings.TransactionDrainTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TransactionDrainTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
    startLine: 31
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets or sets a value indicating the amount of time outstanding transactions have to drain during demotion from primary role before the host process is forcefully terminated.\n"
  example: []
  syntax:
    content: public TimeSpan TransactionDrainTimeout { get; set; }
    content.vb: Public Property TransactionDrainTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nReturns the drain timeout.\n"
  overload: System.Fabric.KeyValueStoreReplicaSettings.TransactionDrainTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.KeyValueStoreReplicaSettings.SecondaryNotificationMode
  commentId: P:System.Fabric.KeyValueStoreReplicaSettings.SecondaryNotificationMode
  id: SecondaryNotificationMode
  parent: System.Fabric.KeyValueStoreReplicaSettings
  langs:
  - csharp
  - vb
  name: SecondaryNotificationMode
  nameWithType: KeyValueStoreReplicaSettings.SecondaryNotificationMode
  fullName: System.Fabric.KeyValueStoreReplicaSettings.SecondaryNotificationMode
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SecondaryNotificationMode
    path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
    startLine: 39
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets or sets a value indicating the secondary notification mode to enable. <xref href=\"System.Fabric.KeyValueStoreReplica.SecondaryNotificationMode\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public KeyValueStoreReplica.SecondaryNotificationMode SecondaryNotificationMode { get; set; }
    content.vb: Public Property SecondaryNotificationMode As KeyValueStoreReplica.SecondaryNotificationMode
    parameters: []
    return:
      type: System.Fabric.KeyValueStoreReplica.SecondaryNotificationMode
      description: "\nReturns the secondary notification mode.\n"
  overload: System.Fabric.KeyValueStoreReplicaSettings.SecondaryNotificationMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.KeyValueStoreReplicaSettings.EnableCopyNotificationPrefetch
  commentId: P:System.Fabric.KeyValueStoreReplicaSettings.EnableCopyNotificationPrefetch
  id: EnableCopyNotificationPrefetch
  parent: System.Fabric.KeyValueStoreReplicaSettings
  langs:
  - csharp
  - vb
  name: EnableCopyNotificationPrefetch
  nameWithType: KeyValueStoreReplicaSettings.EnableCopyNotificationPrefetch
  fullName: System.Fabric.KeyValueStoreReplicaSettings.EnableCopyNotificationPrefetch
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EnableCopyNotificationPrefetch
    path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
    startLine: 47
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets or sets a value indicating whether or not to prefetch the database during open.\n"
  example: []
  syntax:
    content: public bool EnableCopyNotificationPrefetch { get; set; }
    content.vb: Public Property EnableCopyNotificationPrefetch As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\nReturns true if enabled, false otherwise.\n"
  overload: System.Fabric.KeyValueStoreReplicaSettings.EnableCopyNotificationPrefetch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.KeyValueStoreReplicaSettings.FullCopyMode
  commentId: P:System.Fabric.KeyValueStoreReplicaSettings.FullCopyMode
  id: FullCopyMode
  parent: System.Fabric.KeyValueStoreReplicaSettings
  langs:
  - csharp
  - vb
  name: FullCopyMode
  nameWithType: KeyValueStoreReplicaSettings.FullCopyMode
  fullName: System.Fabric.KeyValueStoreReplicaSettings.FullCopyMode
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FullCopyMode
    path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
    startLine: 55
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets or sets a value indicating the full copy mode to use when building secondary replicas. <xref href=\"System.Fabric.KeyValueStoreReplica.FullCopyMode\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public KeyValueStoreReplica.FullCopyMode FullCopyMode { get; set; }
    content.vb: Public Property FullCopyMode As KeyValueStoreReplica.FullCopyMode
    parameters: []
    return:
      type: System.Fabric.KeyValueStoreReplica.FullCopyMode
      description: "\nReturns the full copy mode.\n"
  overload: System.Fabric.KeyValueStoreReplicaSettings.FullCopyMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.KeyValueStoreReplicaSettings.LogTruncationIntervalInMinutes
  commentId: P:System.Fabric.KeyValueStoreReplicaSettings.LogTruncationIntervalInMinutes
  id: LogTruncationIntervalInMinutes
  parent: System.Fabric.KeyValueStoreReplicaSettings
  langs:
  - csharp
  - vb
  name: LogTruncationIntervalInMinutes
  nameWithType: KeyValueStoreReplicaSettings.LogTruncationIntervalInMinutes
  fullName: System.Fabric.KeyValueStoreReplicaSettings.LogTruncationIntervalInMinutes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LogTruncationIntervalInMinutes
    path: src/prod/src/managed/Api/src/System/Fabric/KeyValueStoreReplicaSettings.cs
    startLine: 61
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets or sets the interval after which <xref href=\"System.Fabric.KeyValueStoreReplica\" data-throw-if-not-resolved=\"false\"></xref> tries to truncate local store logs\nif local store has <xref href=\"System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup\" data-throw-if-not-resolved=\"false\"></xref> enabled and no backup has been initiated by user during this interval.\n"
  example: []
  syntax:
    content: public int LogTruncationIntervalInMinutes { get; set; }
    content.vb: Public Property LogTruncationIntervalInMinutes As Integer
    parameters: []
    return:
      type: System.Int32
  overload: System.Fabric.KeyValueStoreReplicaSettings.LogTruncationIntervalInMinutes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.KeyValueStoreReplicaSettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<KeyValueStoreReplicaSettings>()
  nameWithType: ByteArraySerializer.Serialize<KeyValueStoreReplicaSettings>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.KeyValueStoreReplicaSettings>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of KeyValueStoreReplicaSettings)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.KeyValueStoreReplicaSettings)()
  name.vb: Serialize(Of KeyValueStoreReplicaSettings)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<KeyValueStoreReplicaSettings>
    nameWithType: ByteArraySerializer.Serialize<KeyValueStoreReplicaSettings>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.KeyValueStoreReplicaSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of KeyValueStoreReplicaSettings)
    nameWithType: ByteArraySerializer.Serialize(Of KeyValueStoreReplicaSettings)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.KeyValueStoreReplicaSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.KeyValueStoreReplicaSettings
  commentId: T:System.Fabric.KeyValueStoreReplicaSettings
  parent: System.Fabric
  isExternal: false
  name: KeyValueStoreReplicaSettings
  nameWithType: KeyValueStoreReplicaSettings
  fullName: System.Fabric.KeyValueStoreReplicaSettings
- uid: System.Fabric.KeyValueStoreReplicaSettings.#ctor*
  commentId: Overload:System.Fabric.KeyValueStoreReplicaSettings.#ctor
  isExternal: false
  name: KeyValueStoreReplicaSettings
  nameWithType: KeyValueStoreReplicaSettings.KeyValueStoreReplicaSettings
  fullName: System.Fabric.KeyValueStoreReplicaSettings.KeyValueStoreReplicaSettings
- uid: System.Fabric.KeyValueStoreReplicaSettings.TransactionDrainTimeout*
  commentId: Overload:System.Fabric.KeyValueStoreReplicaSettings.TransactionDrainTimeout
  isExternal: false
  name: TransactionDrainTimeout
  nameWithType: KeyValueStoreReplicaSettings.TransactionDrainTimeout
  fullName: System.Fabric.KeyValueStoreReplicaSettings.TransactionDrainTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.KeyValueStoreReplica.SecondaryNotificationMode
  commentId: T:System.Fabric.KeyValueStoreReplica.SecondaryNotificationMode
  parent: System.Fabric
  isExternal: false
  name: KeyValueStoreReplica.SecondaryNotificationMode
  nameWithType: KeyValueStoreReplica.SecondaryNotificationMode
  fullName: System.Fabric.KeyValueStoreReplica.SecondaryNotificationMode
- uid: System.Fabric.KeyValueStoreReplicaSettings.SecondaryNotificationMode*
  commentId: Overload:System.Fabric.KeyValueStoreReplicaSettings.SecondaryNotificationMode
  isExternal: false
  name: SecondaryNotificationMode
  nameWithType: KeyValueStoreReplicaSettings.SecondaryNotificationMode
  fullName: System.Fabric.KeyValueStoreReplicaSettings.SecondaryNotificationMode
- uid: System.Fabric.KeyValueStoreReplicaSettings.EnableCopyNotificationPrefetch*
  commentId: Overload:System.Fabric.KeyValueStoreReplicaSettings.EnableCopyNotificationPrefetch
  isExternal: false
  name: EnableCopyNotificationPrefetch
  nameWithType: KeyValueStoreReplicaSettings.EnableCopyNotificationPrefetch
  fullName: System.Fabric.KeyValueStoreReplicaSettings.EnableCopyNotificationPrefetch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.KeyValueStoreReplica.FullCopyMode
  commentId: T:System.Fabric.KeyValueStoreReplica.FullCopyMode
  parent: System.Fabric
  isExternal: false
  name: KeyValueStoreReplica.FullCopyMode
  nameWithType: KeyValueStoreReplica.FullCopyMode
  fullName: System.Fabric.KeyValueStoreReplica.FullCopyMode
- uid: System.Fabric.KeyValueStoreReplicaSettings.FullCopyMode*
  commentId: Overload:System.Fabric.KeyValueStoreReplicaSettings.FullCopyMode
  isExternal: false
  name: FullCopyMode
  nameWithType: KeyValueStoreReplicaSettings.FullCopyMode
  fullName: System.Fabric.KeyValueStoreReplicaSettings.FullCopyMode
- uid: System.Fabric.KeyValueStoreReplica
  commentId: T:System.Fabric.KeyValueStoreReplica
  isExternal: false
  name: KeyValueStoreReplica
  nameWithType: KeyValueStoreReplica
  fullName: System.Fabric.KeyValueStoreReplica
- uid: System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup
  commentId: P:System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup
- uid: System.Fabric.KeyValueStoreReplicaSettings.LogTruncationIntervalInMinutes*
  commentId: Overload:System.Fabric.KeyValueStoreReplicaSettings.LogTruncationIntervalInMinutes
  isExternal: false
  name: LogTruncationIntervalInMinutes
  nameWithType: KeyValueStoreReplicaSettings.LogTruncationIntervalInMinutes
  fullName: System.Fabric.KeyValueStoreReplicaSettings.LogTruncationIntervalInMinutes
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
