### YamlMime:ManagedReference
items:
- uid: System.Fabric.RollingUpgradeMode
  commentId: T:System.Fabric.RollingUpgradeMode
  id: RollingUpgradeMode
  parent: System.Fabric
  children:
  - System.Fabric.RollingUpgradeMode.Invalid
  - System.Fabric.RollingUpgradeMode.Monitored
  - System.Fabric.RollingUpgradeMode.UnmonitoredAuto
  - System.Fabric.RollingUpgradeMode.UnmonitoredManual
  langs:
  - csharp
  - vb
  name: RollingUpgradeMode
  nameWithType: RollingUpgradeMode
  fullName: System.Fabric.RollingUpgradeMode
  type: Enum
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/RollingUpgradeMode.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RollingUpgradeMode
    path: src/prod/src/managed/Api/src/System/Fabric/RollingUpgradeMode.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies the type of rolling upgrade when upgrading an application instance or cluster.</p>\n"
  remarks: "\n<p>For more information, see Upgrade and Scale a Service Fabric Cluster and Upgrade an Application.</p>\n"
  example: []
  syntax:
    content: public enum RollingUpgradeMode
    content.vb: Public Enum RollingUpgradeMode
  extensionMethods:
  - System.Fabric.RollingUpgradeMode.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Fabric.RollingUpgradeMode.Invalid
  commentId: F:System.Fabric.RollingUpgradeMode.Invalid
  id: Invalid
  parent: System.Fabric.RollingUpgradeMode
  langs:
  - csharp
  - vb
  name: Invalid
  nameWithType: RollingUpgradeMode.Invalid
  fullName: System.Fabric.RollingUpgradeMode.Invalid
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/RollingUpgradeMode.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Invalid
    path: src/prod/src/managed/Api/src/System/Fabric/RollingUpgradeMode.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>All Service Fabric enumerations have reserved Invalid flag.</p>\n"
  example: []
  syntax:
    content: Invalid = 0
    return:
      type: System.Fabric.RollingUpgradeMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.RollingUpgradeMode.UnmonitoredAuto
  commentId: F:System.Fabric.RollingUpgradeMode.UnmonitoredAuto
  id: UnmonitoredAuto
  parent: System.Fabric.RollingUpgradeMode
  langs:
  - csharp
  - vb
  name: UnmonitoredAuto
  nameWithType: RollingUpgradeMode.UnmonitoredAuto
  fullName: System.Fabric.RollingUpgradeMode.UnmonitoredAuto
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/RollingUpgradeMode.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UnmonitoredAuto
    path: src/prod/src/managed/Api/src/System/Fabric/RollingUpgradeMode.cs
    startLine: 27
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies that the upgrade should be unmonitored automatic.</p>\n"
  remarks: "\n<p>Using this mode,  automatically proceeds to upgrading the next upgrade domain until all upgrade domains are upgraded.</p>\n"
  example: []
  syntax:
    content: UnmonitoredAuto = 1
    return:
      type: System.Fabric.RollingUpgradeMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.RollingUpgradeMode.UnmonitoredManual
  commentId: F:System.Fabric.RollingUpgradeMode.UnmonitoredManual
  id: UnmonitoredManual
  parent: System.Fabric.RollingUpgradeMode
  langs:
  - csharp
  - vb
  name: UnmonitoredManual
  nameWithType: RollingUpgradeMode.UnmonitoredManual
  fullName: System.Fabric.RollingUpgradeMode.UnmonitoredManual
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/RollingUpgradeMode.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UnmonitoredManual
    path: src/prod/src/managed/Api/src/System/Fabric/RollingUpgradeMode.cs
    startLine: 38
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies that the upgrade should be unmonitored manual.</p>\n"
  remarks: "\n<p>Using this mode, the administrator needs to instruct  to move to the next upgrade domain (using the \n<xref href=\"System.Fabric.FabricClient.ApplicationManagementClient.MoveNextApplicationUpgradeDomainAsync(System.Fabric.ApplicationUpgradeProgress)\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"System.Fabric.FabricClient.ClusterManagementClient.MoveNextFabricUpgradeDomainAsync(System.Fabric.FabricUpgradeProgress)\" data-throw-if-not-resolved=\"false\"></xref> methods) and continue \nthe upgrade.</p>\n"
  example: []
  syntax:
    content: UnmonitoredManual = 2
    return:
      type: System.Fabric.RollingUpgradeMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.RollingUpgradeMode.Monitored
  commentId: F:System.Fabric.RollingUpgradeMode.Monitored
  id: Monitored
  parent: System.Fabric.RollingUpgradeMode
  langs:
  - csharp
  - vb
  name: Monitored
  nameWithType: RollingUpgradeMode.Monitored
  fullName: System.Fabric.RollingUpgradeMode.Monitored
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/RollingUpgradeMode.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Monitored
    path: src/prod/src/managed/Api/src/System/Fabric/RollingUpgradeMode.cs
    startLine: 48
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies that the upgrade should be monitored automatic.</p>\n"
  remarks: "\n<p>After an upgrade domain (UD) is upgraded, Service Fabric will proceed to upgrade the next UD if the health of the UD and the cluster meets the \ndefined health policies for that upgrade. Otherwise, the entire upgrade is marked as failed and the upgrade failure action is taken. The default failure \naction is to roll-back the entire upgrade.</p>\n"
  example: []
  syntax:
    content: Monitored = 3
    return:
      type: System.Fabric.RollingUpgradeMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.RollingUpgradeMode.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<RollingUpgradeMode>()
  nameWithType: ByteArraySerializer.Serialize<RollingUpgradeMode>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.RollingUpgradeMode>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of RollingUpgradeMode)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.RollingUpgradeMode)()
  name.vb: Serialize(Of RollingUpgradeMode)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<RollingUpgradeMode>
    nameWithType: ByteArraySerializer.Serialize<RollingUpgradeMode>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.RollingUpgradeMode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of RollingUpgradeMode)
    nameWithType: ByteArraySerializer.Serialize(Of RollingUpgradeMode)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.RollingUpgradeMode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.RollingUpgradeMode
  commentId: T:System.Fabric.RollingUpgradeMode
  parent: System.Fabric
  isExternal: false
  name: RollingUpgradeMode
  nameWithType: RollingUpgradeMode
  fullName: System.Fabric.RollingUpgradeMode
- uid: System.Fabric.FabricClient.ApplicationManagementClient.MoveNextApplicationUpgradeDomainAsync(System.Fabric.ApplicationUpgradeProgress)
  commentId: M:System.Fabric.FabricClient.ApplicationManagementClient.MoveNextApplicationUpgradeDomainAsync(System.Fabric.ApplicationUpgradeProgress)
- uid: System.Fabric.FabricClient.ClusterManagementClient.MoveNextFabricUpgradeDomainAsync(System.Fabric.FabricUpgradeProgress)
  commentId: M:System.Fabric.FabricClient.ClusterManagementClient.MoveNextFabricUpgradeDomainAsync(System.Fabric.FabricUpgradeProgress)
