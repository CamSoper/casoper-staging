### YamlMime:ManagedReference
items:
- uid: System.Fabric.ServiceInitializationParameters
  commentId: T:System.Fabric.ServiceInitializationParameters
  id: ServiceInitializationParameters
  parent: System.Fabric
  children:
  - System.Fabric.ServiceInitializationParameters.CodePackageActivationContext
  - System.Fabric.ServiceInitializationParameters.InitializationData
  - System.Fabric.ServiceInitializationParameters.PartitionId
  - System.Fabric.ServiceInitializationParameters.ServiceName
  - System.Fabric.ServiceInitializationParameters.ServiceTypeName
  langs:
  - csharp
  - vb
  name: ServiceInitializationParameters
  nameWithType: ServiceInitializationParameters
  fullName: System.Fabric.ServiceInitializationParameters
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceInitializationParameters
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Represents the base class for service initialization parameters that are passed to the <xref href=\"System.Fabric.IStatefulServiceReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)\" data-throw-if-not-resolved=\"false\"></xref> method of \na service.</p>\n"
  remarks: "\n<p>Derived types define initialization data that are specific to stateless and stateful services.</p>\n"
  example: []
  syntax:
    content: public abstract class ServiceInitializationParameters
    content.vb: Public MustInherit Class ServiceInitializationParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.ServiceInitializationParameters.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.ServiceInitializationParameters.CodePackageActivationContext
  commentId: P:System.Fabric.ServiceInitializationParameters.CodePackageActivationContext
  id: CodePackageActivationContext
  parent: System.Fabric.ServiceInitializationParameters
  langs:
  - csharp
  - vb
  name: CodePackageActivationContext
  nameWithType: ServiceInitializationParameters.CodePackageActivationContext
  fullName: System.Fabric.ServiceInitializationParameters.CodePackageActivationContext
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CodePackageActivationContext
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
    startLine: 34
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies the activation context that is associated with the code package that contains the service.</p>\n"
  example: []
  syntax:
    content: public CodePackageActivationContext CodePackageActivationContext { get; }
    content.vb: Public ReadOnly Property CodePackageActivationContext As CodePackageActivationContext
    parameters: []
    return:
      type: System.Fabric.CodePackageActivationContext
      description: "\n<p>Returns <xref href=\"System.Fabric.CodePackageActivationContext\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.ServiceInitializationParameters.CodePackageActivationContext*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ServiceInitializationParameters.ServiceTypeName
  commentId: P:System.Fabric.ServiceInitializationParameters.ServiceTypeName
  id: ServiceTypeName
  parent: System.Fabric.ServiceInitializationParameters
  langs:
  - csharp
  - vb
  name: ServiceTypeName
  nameWithType: ServiceInitializationParameters.ServiceTypeName
  fullName: System.Fabric.ServiceInitializationParameters.ServiceTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
    startLine: 53
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates the name of the type of the service.</p>\n"
  example: []
  syntax:
    content: public string ServiceTypeName { get; }
    content.vb: Public ReadOnly Property ServiceTypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.ServiceInitializationParameters.ServiceTypeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ServiceInitializationParameters.ServiceName
  commentId: P:System.Fabric.ServiceInitializationParameters.ServiceName
  id: ServiceName
  parent: System.Fabric.ServiceInitializationParameters
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: ServiceInitializationParameters.ServiceName
  fullName: System.Fabric.ServiceInitializationParameters.ServiceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceName
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
    startLine: 65
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates the Service Fabric name of the service.</p>\n"
  example: []
  syntax:
    content: public Uri ServiceName { get; }
    content.vb: Public ReadOnly Property ServiceName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>Returns <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.ServiceInitializationParameters.ServiceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ServiceInitializationParameters.InitializationData
  commentId: P:System.Fabric.ServiceInitializationParameters.InitializationData
  id: InitializationData
  parent: System.Fabric.ServiceInitializationParameters
  langs:
  - csharp
  - vb
  name: InitializationData
  nameWithType: ServiceInitializationParameters.InitializationData
  fullName: System.Fabric.ServiceInitializationParameters.InitializationData
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InitializationData
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
    startLine: 77
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies custom initialization data that is provided by the creator of the service as part of the <xref href=\"System.Fabric.Description.ServiceDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public byte[] InitializationData { get; }
    content.vb: Public ReadOnly Property InitializationData As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: "\n<p>Returns <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.ServiceInitializationParameters.InitializationData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ServiceInitializationParameters.PartitionId
  commentId: P:System.Fabric.ServiceInitializationParameters.PartitionId
  id: PartitionId
  parent: System.Fabric.ServiceInitializationParameters
  langs:
  - csharp
  - vb
  name: PartitionId
  nameWithType: ServiceInitializationParameters.PartitionId
  fullName: System.Fabric.ServiceInitializationParameters.PartitionId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionId
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceInitializationParameters.cs
    startLine: 89
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies the unique identifier of the service partition.</p>\n"
  example: []
  syntax:
    content: public Guid PartitionId { get; }
    content.vb: Public ReadOnly Property PartitionId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>Returns <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.ServiceInitializationParameters.PartitionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.IStatefulServiceReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  commentId: M:System.Fabric.IStatefulServiceReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  parent: System.Fabric.IStatefulServiceReplica
  isExternal: false
  name: Initialize(StatefulServiceInitializationParameters)
  nameWithType: IStatefulServiceReplica.Initialize(StatefulServiceInitializationParameters)
  fullName: System.Fabric.IStatefulServiceReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  spec.csharp:
  - uid: System.Fabric.IStatefulServiceReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
    name: Initialize
    nameWithType: IStatefulServiceReplica.Initialize
    fullName: System.Fabric.IStatefulServiceReplica.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.StatefulServiceInitializationParameters
    name: StatefulServiceInitializationParameters
    nameWithType: StatefulServiceInitializationParameters
    fullName: System.Fabric.StatefulServiceInitializationParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.IStatefulServiceReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
    name: Initialize
    nameWithType: IStatefulServiceReplica.Initialize
    fullName: System.Fabric.IStatefulServiceReplica.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.StatefulServiceInitializationParameters
    name: StatefulServiceInitializationParameters
    nameWithType: StatefulServiceInitializationParameters
    fullName: System.Fabric.StatefulServiceInitializationParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ServiceInitializationParameters.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceInitializationParameters>()
  nameWithType: ByteArraySerializer.Serialize<ServiceInitializationParameters>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ServiceInitializationParameters>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceInitializationParameters)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ServiceInitializationParameters)()
  name.vb: Serialize(Of ServiceInitializationParameters)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceInitializationParameters>
    nameWithType: ByteArraySerializer.Serialize<ServiceInitializationParameters>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ServiceInitializationParameters>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceInitializationParameters)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceInitializationParameters)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ServiceInitializationParameters)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.IStatefulServiceReplica
  commentId: T:System.Fabric.IStatefulServiceReplica
  parent: System.Fabric
  isExternal: false
  name: IStatefulServiceReplica
  nameWithType: IStatefulServiceReplica
  fullName: System.Fabric.IStatefulServiceReplica
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.CodePackageActivationContext
  commentId: T:System.Fabric.CodePackageActivationContext
  parent: System.Fabric
  isExternal: false
  name: CodePackageActivationContext
  nameWithType: CodePackageActivationContext
  fullName: System.Fabric.CodePackageActivationContext
- uid: System.Fabric.ServiceInitializationParameters.CodePackageActivationContext*
  commentId: Overload:System.Fabric.ServiceInitializationParameters.CodePackageActivationContext
  isExternal: false
  name: CodePackageActivationContext
  nameWithType: ServiceInitializationParameters.CodePackageActivationContext
  fullName: System.Fabric.ServiceInitializationParameters.CodePackageActivationContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.ServiceInitializationParameters.ServiceTypeName*
  commentId: Overload:System.Fabric.ServiceInitializationParameters.ServiceTypeName
  isExternal: false
  name: ServiceTypeName
  nameWithType: ServiceInitializationParameters.ServiceTypeName
  fullName: System.Fabric.ServiceInitializationParameters.ServiceTypeName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.ServiceInitializationParameters.ServiceName*
  commentId: Overload:System.Fabric.ServiceInitializationParameters.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: ServiceInitializationParameters.ServiceName
  fullName: System.Fabric.ServiceInitializationParameters.ServiceName
- uid: System.Fabric.Description.ServiceDescription
  commentId: T:System.Fabric.Description.ServiceDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.Fabric.Description.ServiceDescription
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Fabric.ServiceInitializationParameters.InitializationData*
  commentId: Overload:System.Fabric.ServiceInitializationParameters.InitializationData
  isExternal: false
  name: InitializationData
  nameWithType: ServiceInitializationParameters.InitializationData
  fullName: System.Fabric.ServiceInitializationParameters.InitializationData
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.ServiceInitializationParameters.PartitionId*
  commentId: Overload:System.Fabric.ServiceInitializationParameters.PartitionId
  isExternal: false
  name: PartitionId
  nameWithType: ServiceInitializationParameters.PartitionId
  fullName: System.Fabric.ServiceInitializationParameters.PartitionId
