### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Runtime.IRemindable
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IRemindable
  id: IRemindable
  parent: Microsoft.ServiceFabric.Actors.Runtime
  children:
  - Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync(System.String,System.Byte[],System.TimeSpan,System.TimeSpan)
  langs:
  - csharp
  - vb
  name: IRemindable
  nameWithType: IRemindable
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IRemindable
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IRemindable.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IRemindable
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IRemindable.cs
    startLine: 12
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nInterface which actors that use reminders must implement.\n"
  example: []
  syntax:
    content: public interface IRemindable
    content.vb: Public Interface IRemindable
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Runtime.IRemindable.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync(System.String,System.Byte[],System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync(System.String,System.Byte[],System.TimeSpan,System.TimeSpan)
  id: ReceiveReminderAsync(System.String,System.Byte[],System.TimeSpan,System.TimeSpan)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IRemindable
  langs:
  - csharp
  - vb
  name: ReceiveReminderAsync(String, Byte[], TimeSpan, TimeSpan)
  nameWithType: IRemindable.ReceiveReminderAsync(String, Byte[], TimeSpan, TimeSpan)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync(System.String, System.Byte[], System.TimeSpan, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IRemindable.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReceiveReminderAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IRemindable.cs
    startLine: 32
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nReminder call back invoked when an actor reminder is triggered.\n"
  remarks: "\n<p>When a reminder is triggered, Actors runtime will invoke ReceiveReminderAsync method on the Actor. \nAn actor can register multiple reminders and the ReceiveReminderAsync method is invoked any time\nany of those reminders is triggered. The actor can use the reminder name that is passed in to the\nReceiveReminderAsync method to figure out which reminder was triggered.</p>\n<p>The Actors runtime saves the actor state when the ReceiveReminderAsync call completes.\nIf an error occurs in saving the state, that actor object will be deactivated and a new instance\nwill be activated.\nto specify that the state need not be saved upon completion of the reminder</p>."
  example: []
  syntax:
    content: Task ReceiveReminderAsync(string reminderName, byte[] context, TimeSpan dueTime, TimeSpan period)
    content.vb: Function ReceiveReminderAsync(reminderName As String, context As Byte(), dueTime As TimeSpan, period As TimeSpan) As Task
    parameters:
    - id: reminderName
      type: System.String
      description: Name of reminder.
    - id: context
      type: System.Byte[]
      description: >-
        Context associated with this reminder was passed to Actors runtime

        when reminder was created.
    - id: dueTime
      type: System.TimeSpan
      description: Time when reminder with name reminderName is due.
    - id: period
      type: System.TimeSpan
      description: The time interval between triggering of reminder with name reminderName.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation performed by this callback.
  overload: Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync*
  nameWithType.vb: IRemindable.ReceiveReminderAsync(String, Byte(), TimeSpan, TimeSpan)
  fullName.vb: Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync(System.String, System.Byte(), System.TimeSpan, System.TimeSpan)
  name.vb: ReceiveReminderAsync(String, Byte(), TimeSpan, TimeSpan)
references:
- uid: Microsoft.ServiceFabric.Actors.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Runtime
- uid: Microsoft.ServiceFabric.Actors.Runtime.IRemindable.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IRemindable>()
  nameWithType: ByteArraySerializer.Serialize<IRemindable>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.IRemindable>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IRemindable)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.IRemindable)()
  name.vb: Serialize(Of IRemindable)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IRemindable>
    nameWithType: ByteArraySerializer.Serialize<IRemindable>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.IRemindable>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IRemindable)
    nameWithType: ByteArraySerializer.Serialize(Of IRemindable)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.IRemindable)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync
  isExternal: false
  name: ReceiveReminderAsync
  nameWithType: IRemindable.ReceiveReminderAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IRemindable.ReceiveReminderAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
