### YamlMime:ManagedReference
items:
- uid: System.Fabric.TransactionBase
  commentId: T:System.Fabric.TransactionBase
  id: TransactionBase
  parent: System.Fabric
  children:
  - System.Fabric.TransactionBase.Dispose
  - System.Fabric.TransactionBase.Finalize
  - System.Fabric.TransactionBase.Id
  - System.Fabric.TransactionBase.IsDisposed
  - System.Fabric.TransactionBase.IsolationLevel
  - System.Fabric.TransactionBase.OnDispose
  langs:
  - csharp
  - vb
  name: TransactionBase
  nameWithType: TransactionBase
  fullName: System.Fabric.TransactionBase
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TransactionBase
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Provides an abstract base class for a transaction.</p>\n"
  example: []
  syntax:
    content: 'public abstract class TransactionBase : IDisposable'
    content.vb: >-
      Public MustInherit Class TransactionBase
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.TransactionBase.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.TransactionBase.Finalize
  commentId: M:System.Fabric.TransactionBase.Finalize
  id: Finalize
  parent: System.Fabric.TransactionBase
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: TransactionBase.Finalize()
  fullName: System.Fabric.TransactionBase.Finalize()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Finalize
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
    startLine: 30
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Enables an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: System.Fabric.TransactionBase.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.TransactionBase.Id
  commentId: P:System.Fabric.TransactionBase.Id
  id: Id
  parent: System.Fabric.TransactionBase
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TransactionBase.Id
  fullName: System.Fabric.TransactionBase.Id
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Id
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
    startLine: 41
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the ID of the transaction as a <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public Guid Id { get; }
    content.vb: Public ReadOnly Property Id As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>The transaction ID as a <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.TransactionBase.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.TransactionBase.IsolationLevel
  commentId: P:System.Fabric.TransactionBase.IsolationLevel
  id: IsolationLevel
  parent: System.Fabric.TransactionBase
  langs:
  - csharp
  - vb
  name: IsolationLevel
  nameWithType: TransactionBase.IsolationLevel
  fullName: System.Fabric.TransactionBase.IsolationLevel
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsolationLevel
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
    startLine: 53
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the isolation level of the transaction as a <xref href=\"System.Fabric.TransactionIsolationLevel\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The isolation level of a transaction determines what level of access to volatile data other transactions have before a transaction finishes. \nFor more information about isolation levels, see the documentation for the <xref href=\"System.Fabric.TransactionIsolationLevel\" data-throw-if-not-resolved=\"false\"></xref> enumeration.</p>\n"
  example: []
  syntax:
    content: public TransactionIsolationLevel IsolationLevel { get; }
    content.vb: Public ReadOnly Property IsolationLevel As TransactionIsolationLevel
    parameters: []
    return:
      type: System.Fabric.TransactionIsolationLevel
      description: "\n<p>A <xref href=\"System.Fabric.TransactionIsolationLevel\" data-throw-if-not-resolved=\"false\"></xref> object that represents the isolation level of the transaction.</p>\n"
  overload: System.Fabric.TransactionBase.IsolationLevel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.TransactionBase.Dispose
  commentId: M:System.Fabric.TransactionBase.Dispose
  id: Dispose
  parent: System.Fabric.TransactionBase
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TransactionBase.Dispose()
  fullName: System.Fabric.TransactionBase.Dispose()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Dispose
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
    startLine: 60
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Performs application-defined tasks that are associated with freeing, releasing, or resetting unmanaged resources.</p>\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: System.Fabric.TransactionBase.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.TransactionBase.OnDispose
  commentId: M:System.Fabric.TransactionBase.OnDispose
  id: OnDispose
  parent: System.Fabric.TransactionBase
  langs:
  - csharp
  - vb
  name: OnDispose()
  nameWithType: TransactionBase.OnDispose()
  fullName: System.Fabric.TransactionBase.OnDispose()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnDispose
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
    startLine: 78
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>The dispose event occurs when the transaction is disposed of through the <strong>OnDispose</strong> method.</p>\n"
  remarks: "\n<p>When overriding <xref href=\"System.Fabric.Transaction.OnDispose\" data-throw-if-not-resolved=\"false\"></xref>, be sure to call the <strong>OnDispose</strong> \nmethod on the base class.</p>\n"
  example: []
  syntax:
    content: protected virtual void OnDispose()
    content.vb: Protected Overridable Sub OnDispose
  overload: System.Fabric.TransactionBase.OnDispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Fabric.TransactionBase.IsDisposed
  commentId: M:System.Fabric.TransactionBase.IsDisposed
  id: IsDisposed
  parent: System.Fabric.TransactionBase
  langs:
  - csharp
  - vb
  name: IsDisposed()
  nameWithType: TransactionBase.IsDisposed()
  fullName: System.Fabric.TransactionBase.IsDisposed()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsDisposed
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionBase.cs
    startLine: 98
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets a value that indicates whether the object has been disposed.</p>\n"
  example: []
  syntax:
    content: protected bool IsDisposed()
    content.vb: Protected Function IsDisposed As Boolean
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if the object has been disposed; otherwise, returns <strong>false</strong>.</p>\n"
  overload: System.Fabric.TransactionBase.IsDisposed*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.TransactionBase.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<TransactionBase>()
  nameWithType: ByteArraySerializer.Serialize<TransactionBase>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.TransactionBase>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of TransactionBase)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.TransactionBase)()
  name.vb: Serialize(Of TransactionBase)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<TransactionBase>
    nameWithType: ByteArraySerializer.Serialize<TransactionBase>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.TransactionBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of TransactionBase)
    nameWithType: ByteArraySerializer.Serialize(Of TransactionBase)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.TransactionBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.TransactionBase.Finalize*
  commentId: Overload:System.Fabric.TransactionBase.Finalize
  isExternal: false
  name: Finalize
  nameWithType: TransactionBase.Finalize
  fullName: System.Fabric.TransactionBase.Finalize
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.TransactionBase.Id*
  commentId: Overload:System.Fabric.TransactionBase.Id
  isExternal: false
  name: Id
  nameWithType: TransactionBase.Id
  fullName: System.Fabric.TransactionBase.Id
- uid: System.Fabric.TransactionIsolationLevel
  commentId: T:System.Fabric.TransactionIsolationLevel
  parent: System.Fabric
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: TransactionIsolationLevel
  fullName: System.Fabric.TransactionIsolationLevel
- uid: System.Fabric.TransactionBase.IsolationLevel*
  commentId: Overload:System.Fabric.TransactionBase.IsolationLevel
  isExternal: false
  name: IsolationLevel
  nameWithType: TransactionBase.IsolationLevel
  fullName: System.Fabric.TransactionBase.IsolationLevel
- uid: System.Fabric.TransactionBase.Dispose*
  commentId: Overload:System.Fabric.TransactionBase.Dispose
  isExternal: false
  name: Dispose
  nameWithType: TransactionBase.Dispose
  fullName: System.Fabric.TransactionBase.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Transaction.OnDispose
  commentId: M:System.Fabric.Transaction.OnDispose
- uid: System.Fabric.TransactionBase.OnDispose*
  commentId: Overload:System.Fabric.TransactionBase.OnDispose
  isExternal: false
  name: OnDispose
  nameWithType: TransactionBase.OnDispose
  fullName: System.Fabric.TransactionBase.OnDispose
- uid: System.Fabric.TransactionBase.IsDisposed*
  commentId: Overload:System.Fabric.TransactionBase.IsDisposed
  isExternal: false
  name: IsDisposed
  nameWithType: TransactionBase.IsDisposed
  fullName: System.Fabric.TransactionBase.IsDisposed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
