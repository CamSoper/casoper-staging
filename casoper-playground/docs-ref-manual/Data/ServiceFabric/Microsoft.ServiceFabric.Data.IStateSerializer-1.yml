### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.IStateSerializer`1
  commentId: T:Microsoft.ServiceFabric.Data.IStateSerializer`1
  id: IStateSerializer`1
  parent: Microsoft.ServiceFabric.Data
  children:
  - Microsoft.ServiceFabric.Data.IStateSerializer`1.Read(`0,System.IO.BinaryReader)
  - Microsoft.ServiceFabric.Data.IStateSerializer`1.Read(System.IO.BinaryReader)
  - Microsoft.ServiceFabric.Data.IStateSerializer`1.Write(`0,`0,System.IO.BinaryWriter)
  - Microsoft.ServiceFabric.Data.IStateSerializer`1.Write(`0,System.IO.BinaryWriter)
  langs:
  - csharp
  - vb
  name: IStateSerializer<T>
  nameWithType: IStateSerializer<T>
  fullName: Microsoft.ServiceFabric.Data.IStateSerializer<T>
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IStateSerializer.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IStateSerializer
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IStateSerializer.cs
    startLine: 63
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nRepresents a custom serializer for type <em>T</em>.\n"
  remarks: "\nUse <xref href=\"Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer%60%601(Microsoft.ServiceFabric.Data.IStateSerializer%7b%60%600%7d)\" data-throw-if-not-resolved=\"false\"></xref> to register a custom serializer.\n"
  example:
  - "\nIn this example, implementation of the Read and Write overloads simply call their counterpart overloads.\nThe currentValue and baseValue parameters are not set by the platform and should be ignored.\n<pre><code>class Order\n{\n    public byte Warehouse { get; set; }\n    public short District { get; set; }\n    public int Customer { get; set; }\n    public long OrderNumber { get; set; }\n}\n\nclass OrderSerializer : IStateSerializer&lt;Order&gt;\n{\n    void Write(Order value, BinaryWriter writer)\n    {\n        writer.Write(value.Warehouse);\n        writer.Write(value.District);\n        writer.Write(value.Customer);\n        writer.Write(value.OrderNumber);\n    }\n\n    Order Read(BinaryReader reader)\n    {\n        Order value = new Order();\n\n        value.Warehouse = reader.ReadByte();\n        value.District = reader.ReadInt16();\n        value.Customer = reader.ReadInt32();\n        value.OrderNumber = reader.ReadInt64();\n\n        return value;\n    }\n\n    void Write(Order currentValue, Order newValue, BinaryWriter writer)\n    {\n        this.Write(newValue, writer);\n    }\n\n    Order Read(Order baseValue, BinaryReader reader)\n    {\n        return this.Read(reader);\n    }\n}</code></pre>\n"
  syntax:
    content: public interface IStateSerializer<T>
    content.vb: Public Interface IStateSerializer(Of T)
    typeParameters:
    - id: T
      description: Type to serialize and deserialize.
  extensionMethods:
  - Microsoft.ServiceFabric.Data.IStateSerializer`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  nameWithType.vb: IStateSerializer(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.ServiceFabric.Data.IStateSerializer(Of T)
  name.vb: IStateSerializer(Of T)
- uid: Microsoft.ServiceFabric.Data.IStateSerializer`1.Read(System.IO.BinaryReader)
  commentId: M:Microsoft.ServiceFabric.Data.IStateSerializer`1.Read(System.IO.BinaryReader)
  id: Read(System.IO.BinaryReader)
  parent: Microsoft.ServiceFabric.Data.IStateSerializer`1
  langs:
  - csharp
  - vb
  name: Read(BinaryReader)
  nameWithType: IStateSerializer<T>.Read(BinaryReader)
  fullName: Microsoft.ServiceFabric.Data.IStateSerializer<T>.Read(System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IStateSerializer.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Read
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IStateSerializer.cs
    startLine: 74
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nDeserializes from the given <xref href=\"System.IO.BinaryReader\" data-throw-if-not-resolved=\"false\"></xref> to <em>T</em>.\n"
  remarks: "\nWhen accessing the <xref href=\"System.IO.BinaryReader\" data-throw-if-not-resolved=\"false\"></xref> base stream, care must be taken when moving the position in the stream.\nReading must begin at the current stream position and end at the current position plus the length of your data.\n"
  example: []
  syntax:
    content: T Read(BinaryReader binaryReader)
    content.vb: Function Read(binaryReader As BinaryReader) As T
    parameters:
    - id: binaryReader
      type: System.IO.BinaryReader
      description: The <xref href="System.IO.BinaryReader" data-throw-if-not-resolved="false"></xref> to deserialize from.
    return:
      type: '{T}'
      description: The deserialized value.
  overload: Microsoft.ServiceFabric.Data.IStateSerializer`1.Read*
  nameWithType.vb: IStateSerializer(Of T).Read(BinaryReader)
  fullName.vb: Microsoft.ServiceFabric.Data.IStateSerializer(Of T).Read(System.IO.BinaryReader)
- uid: Microsoft.ServiceFabric.Data.IStateSerializer`1.Write(`0,System.IO.BinaryWriter)
  commentId: M:Microsoft.ServiceFabric.Data.IStateSerializer`1.Write(`0,System.IO.BinaryWriter)
  id: Write(`0,System.IO.BinaryWriter)
  parent: Microsoft.ServiceFabric.Data.IStateSerializer`1
  langs:
  - csharp
  - vb
  name: Write(T, BinaryWriter)
  nameWithType: IStateSerializer<T>.Write(T, BinaryWriter)
  fullName: Microsoft.ServiceFabric.Data.IStateSerializer<T>.Write(T, System.IO.BinaryWriter)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IStateSerializer.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Write
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IStateSerializer.cs
    startLine: 85
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nSerializes a value and writes it to the given <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nWhen accessing the <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref> base stream, care must be taken when moving the position in the stream.\nWriting must begin at the current stream position and end at the current position plus the length of your data.\n"
  example: []
  syntax:
    content: void Write(T value, BinaryWriter binaryWriter)
    content.vb: Sub Write(value As T, binaryWriter As BinaryWriter)
    parameters:
    - id: value
      type: '{T}'
      description: The value to serialize.
    - id: binaryWriter
      type: System.IO.BinaryWriter
      description: The <xref href="System.IO.BinaryWriter" data-throw-if-not-resolved="false"></xref> to serialize to.
  overload: Microsoft.ServiceFabric.Data.IStateSerializer`1.Write*
  nameWithType.vb: IStateSerializer(Of T).Write(T, BinaryWriter)
  fullName.vb: Microsoft.ServiceFabric.Data.IStateSerializer(Of T).Write(T, System.IO.BinaryWriter)
- uid: Microsoft.ServiceFabric.Data.IStateSerializer`1.Read(`0,System.IO.BinaryReader)
  commentId: M:Microsoft.ServiceFabric.Data.IStateSerializer`1.Read(`0,System.IO.BinaryReader)
  id: Read(`0,System.IO.BinaryReader)
  parent: Microsoft.ServiceFabric.Data.IStateSerializer`1
  langs:
  - csharp
  - vb
  name: Read(T, BinaryReader)
  nameWithType: IStateSerializer<T>.Read(T, BinaryReader)
  fullName: Microsoft.ServiceFabric.Data.IStateSerializer<T>.Read(T, System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IStateSerializer.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Read
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IStateSerializer.cs
    startLine: 97
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nDeserializes from the given <xref href=\"System.IO.BinaryReader\" data-throw-if-not-resolved=\"false\"></xref> to <em>T</em>.\n"
  remarks: "\nWhen accessing the <xref href=\"System.IO.BinaryReader\" data-throw-if-not-resolved=\"false\"></xref> base stream, care must be taken when moving the position in the stream.\nReading must begin at the current stream position and end at the current position plus the length of your data.\n"
  example: []
  syntax:
    content: T Read(T baseValue, BinaryReader binaryReader)
    content.vb: Function Read(baseValue As T, binaryReader As BinaryReader) As T
    parameters:
    - id: baseValue
      type: '{T}'
      description: The base value for the deserialization.
    - id: binaryReader
      type: System.IO.BinaryReader
      description: The <xref href="System.IO.BinaryReader" data-throw-if-not-resolved="false"></xref> to deserialize from.
    return:
      type: '{T}'
      description: The deserialized value.
  overload: Microsoft.ServiceFabric.Data.IStateSerializer`1.Read*
  nameWithType.vb: IStateSerializer(Of T).Read(T, BinaryReader)
  fullName.vb: Microsoft.ServiceFabric.Data.IStateSerializer(Of T).Read(T, System.IO.BinaryReader)
- uid: Microsoft.ServiceFabric.Data.IStateSerializer`1.Write(`0,`0,System.IO.BinaryWriter)
  commentId: M:Microsoft.ServiceFabric.Data.IStateSerializer`1.Write(`0,`0,System.IO.BinaryWriter)
  id: Write(`0,`0,System.IO.BinaryWriter)
  parent: Microsoft.ServiceFabric.Data.IStateSerializer`1
  langs:
  - csharp
  - vb
  name: Write(T, T, BinaryWriter)
  nameWithType: IStateSerializer<T>.Write(T, T, BinaryWriter)
  fullName: Microsoft.ServiceFabric.Data.IStateSerializer<T>.Write(T, T, System.IO.BinaryWriter)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IStateSerializer.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Write
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IStateSerializer.cs
    startLine: 109
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nSerializes an object and writes it to the given <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nWhen accessing the <xref href=\"System.IO.BinaryWriter\" data-throw-if-not-resolved=\"false\"></xref> base stream, care must be taken when moving the position in the stream.\nWriting must begin at the current stream position and end at the current position plus the length of your data.\n"
  example: []
  syntax:
    content: void Write(T baseValue, T targetValue, BinaryWriter binaryWriter)
    content.vb: Sub Write(baseValue As T, targetValue As T, binaryWriter As BinaryWriter)
    parameters:
    - id: baseValue
      type: '{T}'
      description: The base value for the serialization.
    - id: targetValue
      type: '{T}'
      description: The value to serialize.
    - id: binaryWriter
      type: System.IO.BinaryWriter
      description: The <xref href="System.IO.BinaryWriter" data-throw-if-not-resolved="false"></xref> to serialize to.
  overload: Microsoft.ServiceFabric.Data.IStateSerializer`1.Write*
  nameWithType.vb: IStateSerializer(Of T).Write(T, T, BinaryWriter)
  fullName.vb: Microsoft.ServiceFabric.Data.IStateSerializer(Of T).Write(T, T, System.IO.BinaryWriter)
references:
- uid: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer``1(Microsoft.ServiceFabric.Data.IStateSerializer{``0})
  commentId: M:Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer``1(Microsoft.ServiceFabric.Data.IStateSerializer{``0})
  isExternal: false
  name: TryAddStateSerializer<T>(IStateSerializer<T>)
  nameWithType: IReliableStateManager.TryAddStateSerializer<T>(IStateSerializer<T>)
  fullName: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer<T>(Microsoft.ServiceFabric.Data.IStateSerializer<T>)
  nameWithType.vb: IReliableStateManager.TryAddStateSerializer(Of T)(IStateSerializer(Of T))
  fullname.vb: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer(Of T)(Microsoft.ServiceFabric.Data.IStateSerializer(Of T))
  name.vb: TryAddStateSerializer(Of T)(IStateSerializer(Of T))
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer``1(Microsoft.ServiceFabric.Data.IStateSerializer{``0})
    name: TryAddStateSerializer<T>
    nameWithType: IReliableStateManager.TryAddStateSerializer<T>
    fullName: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.IStateSerializer`1
    name: IStateSerializer
    nameWithType: IStateSerializer
    fullName: Microsoft.ServiceFabric.Data.IStateSerializer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer``1(Microsoft.ServiceFabric.Data.IStateSerializer{``0})
    name: TryAddStateSerializer(Of T)
    nameWithType: IReliableStateManager.TryAddStateSerializer(Of T)
    fullName: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.IStateSerializer`1
    name: IStateSerializer
    nameWithType: IStateSerializer
    fullName: Microsoft.ServiceFabric.Data.IStateSerializer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: Microsoft.ServiceFabric.Data.IStateSerializer`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IStateSerializer<T>>()
  nameWithType: ByteArraySerializer.Serialize<IStateSerializer<T>>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.IStateSerializer<T>>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IStateSerializer(Of T))()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.IStateSerializer(Of T))()
  name.vb: Serialize(Of IStateSerializer(Of T))()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IStateSerializer<T>>
    nameWithType: ByteArraySerializer.Serialize<IStateSerializer<T>>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.IStateSerializer<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IStateSerializer(Of T))
    nameWithType: ByteArraySerializer.Serialize(Of IStateSerializer(Of T))
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.IStateSerializer(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: Microsoft.ServiceFabric.Data.IStateSerializer`1.Read*
  commentId: Overload:Microsoft.ServiceFabric.Data.IStateSerializer`1.Read
  isExternal: false
  name: Read
  nameWithType: IStateSerializer<T>.Read
  fullName: Microsoft.ServiceFabric.Data.IStateSerializer<T>.Read
  nameWithType.vb: IStateSerializer(Of T).Read
  fullname.vb: Microsoft.ServiceFabric.Data.IStateSerializer(Of T).Read
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: Microsoft.ServiceFabric.Data.IStateSerializer`1.Write*
  commentId: Overload:Microsoft.ServiceFabric.Data.IStateSerializer`1.Write
  isExternal: false
  name: Write
  nameWithType: IStateSerializer<T>.Write
  fullName: Microsoft.ServiceFabric.Data.IStateSerializer<T>.Write
  nameWithType.vb: IStateSerializer(Of T).Write
  fullname.vb: Microsoft.ServiceFabric.Data.IStateSerializer(Of T).Write
