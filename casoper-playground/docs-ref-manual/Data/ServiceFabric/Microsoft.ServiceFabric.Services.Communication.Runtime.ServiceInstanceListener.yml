### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
  id: ServiceInstanceListener
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime
  children:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.#ctor(System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener},System.String)
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.CreateCommunicationListener
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.DefaultName
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.Name
  langs:
  - csharp
  - vb
  name: ServiceInstanceListener
  nameWithType: ServiceInstanceListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceInstanceListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceInstanceListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceInstanceListener.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Runtime
  summary: "\nRepresents the communication listener and its properties for a Stateless Service Instance.\nEndpoints given out by the communication listener are associated with name of the communication listener.\n"
  example: []
  syntax:
    content: public sealed class ServiceInstanceListener
    content.vb: Public NotInheritable Class ServiceInstanceListener
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.DefaultName
  commentId: F:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.DefaultName
  id: DefaultName
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
  langs:
  - csharp
  - vb
  name: DefaultName
  nameWithType: ServiceInstanceListener.DefaultName
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.DefaultName
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceInstanceListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DefaultName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceInstanceListener.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Runtime
  summary: "\nThe default name used when the ServiceInstanceListener is not given a name.\n"
  example: []
  syntax:
    content: public const string DefaultName = ""
    content.vb: Public Const DefaultName As String = ""
    return:
      type: System.String
      description: Default name of the Service instance listener
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.Name
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.Name
  id: Name
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ServiceInstanceListener.Name
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceInstanceListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceInstanceListener.cs
    startLine: 25
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Runtime
  summary: "\nName of the communication listener.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: Name
  overload: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.CreateCommunicationListener
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.CreateCommunicationListener
  id: CreateCommunicationListener
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
  langs:
  - csharp
  - vb
  name: CreateCommunicationListener
  nameWithType: ServiceInstanceListener.CreateCommunicationListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.CreateCommunicationListener
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceInstanceListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateCommunicationListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceInstanceListener.cs
    startLine: 31
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Runtime
  summary: "\nFactory method for creating the communication listener.\n"
  example: []
  syntax:
    content: public Func<StatelessServiceContext, ICommunicationListener> CreateCommunicationListener { get; }
    content.vb: Public ReadOnly Property CreateCommunicationListener As Func(Of StatelessServiceContext, ICommunicationListener)
    parameters: []
    return:
      type: System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener}
      description: Factory method
  overload: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.CreateCommunicationListener*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.#ctor(System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener},System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.#ctor(System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener},System.String)
  id: '#ctor(System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener},System.String)'
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
  langs:
  - csharp
  - vb
  name: ServiceInstanceListener(Func<StatelessServiceContext, ICommunicationListener>, String)
  nameWithType: ServiceInstanceListener.ServiceInstanceListener(Func<StatelessServiceContext, ICommunicationListener>, String)
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.ServiceInstanceListener(System.Func<System.Fabric.StatelessServiceContext, Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener>, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceInstanceListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Runtime/ServiceInstanceListener.cs
    startLine: 38
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Runtime
  summary: "\nCreates the ServiceInstanceListener\n"
  example: []
  syntax:
    content: public ServiceInstanceListener(Func<StatelessServiceContext, ICommunicationListener> createCommunicationListener, string name = "")
    content.vb: Public Sub New(createCommunicationListener As Func(Of StatelessServiceContext, ICommunicationListener), name As String = "")
    parameters:
    - id: createCommunicationListener
      type: System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener}
      description: Factory method for creating the communication listener
    - id: name
      type: System.String
      description: Name of the communication listener. This parameter is optional, if the service has only one communication listener
  overload: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.#ctor*
  nameWithType.vb: ServiceInstanceListener.ServiceInstanceListener(Func(Of StatelessServiceContext, ICommunicationListener), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.ServiceInstanceListener(System.Func(Of System.Fabric.StatelessServiceContext, Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener), System.String)
  name.vb: ServiceInstanceListener(Func(Of StatelessServiceContext, ICommunicationListener), String)
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Runtime
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceInstanceListener>()
  nameWithType: ByteArraySerializer.Serialize<ServiceInstanceListener>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceInstanceListener)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener)()
  name.vb: Serialize(Of ServiceInstanceListener)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceInstanceListener>
    nameWithType: ByteArraySerializer.Serialize<ServiceInstanceListener>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceInstanceListener)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceInstanceListener)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.Name*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.Name
  isExternal: false
  name: Name
  nameWithType: ServiceInstanceListener.Name
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.Name
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.CreateCommunicationListener*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.CreateCommunicationListener
  isExternal: false
  name: CreateCommunicationListener
  nameWithType: ServiceInstanceListener.CreateCommunicationListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.CreateCommunicationListener
- uid: System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener}
  commentId: T:System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener}
  parent: System
  definition: System.Func`2
  name: Func<StatelessServiceContext, ICommunicationListener>
  nameWithType: Func<StatelessServiceContext, ICommunicationListener>
  fullName: System.Func<System.Fabric.StatelessServiceContext, Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener>
  nameWithType.vb: Func(Of StatelessServiceContext, ICommunicationListener)
  fullname.vb: System.Func(Of System.Fabric.StatelessServiceContext, Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener)
  name.vb: Func(Of StatelessServiceContext, ICommunicationListener)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.StatelessServiceContext
    name: StatelessServiceContext
    nameWithType: StatelessServiceContext
    fullName: System.Fabric.StatelessServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
    name: ICommunicationListener
    nameWithType: ICommunicationListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.StatelessServiceContext
    name: StatelessServiceContext
    nameWithType: StatelessServiceContext
    fullName: System.Fabric.StatelessServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
    name: ICommunicationListener
    nameWithType: ICommunicationListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.#ctor
  isExternal: false
  name: ServiceInstanceListener
  nameWithType: ServiceInstanceListener.ServiceInstanceListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener.ServiceInstanceListener
