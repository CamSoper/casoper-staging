### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions
  id: ServiceRemotingExtensions
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  children:
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener``1(``0,System.Fabric.StatefulServiceContext)
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener``1(``0,System.Fabric.StatelessServiceContext)
  langs:
  - csharp
  - vb
  name: ServiceRemotingExtensions
  nameWithType: ServiceRemotingExtensions
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceRemotingExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceRemotingExtensions
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceRemotingExtensions.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Runtime
  summary: "\nThis class adds extensions methods to create <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener\" data-throw-if-not-resolved=\"false\"></xref>\nfor remoting methods of the service interfaces that are derived from \n<xref href=\"Microsoft.ServiceFabric.Services.Remoting.IService\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: public static class ServiceRemotingExtensions
    content.vb: Public Module ServiceRemotingExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener``1(``0,System.Fabric.StatefulServiceContext)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener``1(``0,System.Fabric.StatefulServiceContext)
  id: CreateServiceRemotingListener``1(``0,System.Fabric.StatefulServiceContext)
  isExtensionMethod: true
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions
  langs:
  - csharp
  - vb
  name: CreateServiceRemotingListener<TStatefulService>(TStatefulService, StatefulServiceContext)
  nameWithType: ServiceRemotingExtensions.CreateServiceRemotingListener<TStatefulService>(TStatefulService, StatefulServiceContext)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener<TStatefulService>(TStatefulService, System.Fabric.StatefulServiceContext)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceRemotingExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateServiceRemotingListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceRemotingExtensions.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Runtime
  summary: "\nAn extension method that creates an <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener\" data-throw-if-not-resolved=\"false\"></xref>\nfor a stateful service implementation.\n"
  example: []
  syntax:
    content: 'public static IServiceRemotingListener CreateServiceRemotingListener<TStatefulService>(this TStatefulService serviceImplementation, StatefulServiceContext serviceContext)where TStatefulService : StatefulServiceBase, IService'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateServiceRemotingListener(Of TStatefulService As {StatefulServiceBase, IService})(serviceImplementation As TStatefulService, serviceContext As StatefulServiceContext) As IServiceRemotingListener
    parameters:
    - id: serviceImplementation
      type: '{TStatefulService}'
      description: A stateful service implementation.
    - id: serviceContext
      type: System.Fabric.StatefulServiceContext
      description: The context under which the service is operating.
    typeParameters:
    - id: TStatefulService
      description: >-
        Type constraint on the service implementation. The service implementation must

        derive from <xref href="Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase" data-throw-if-not-resolved="false"></xref> and implement one or more

        interfaces that derive from <xref href="Microsoft.ServiceFabric.Services.Remoting.IService" data-throw-if-not-resolved="false"></xref> interface.
    return:
      type: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
      description: >-
        A <xref href="Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener" data-throw-if-not-resolved="false"></xref> communication

        listener that remotes the interfaces deriving from <xref href="Microsoft.ServiceFabric.Services.Remoting.IService" data-throw-if-not-resolved="false"></xref> interface.
  overload: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener*
  nameWithType.vb: ServiceRemotingExtensions.CreateServiceRemotingListener(Of TStatefulService)(TStatefulService, StatefulServiceContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener(Of TStatefulService)(TStatefulService, System.Fabric.StatefulServiceContext)
  name.vb: CreateServiceRemotingListener(Of TStatefulService)(TStatefulService, StatefulServiceContext)
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener``1(``0,System.Fabric.StatelessServiceContext)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener``1(``0,System.Fabric.StatelessServiceContext)
  id: CreateServiceRemotingListener``1(``0,System.Fabric.StatelessServiceContext)
  isExtensionMethod: true
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions
  langs:
  - csharp
  - vb
  name: CreateServiceRemotingListener<TStatelessService>(TStatelessService, StatelessServiceContext)
  nameWithType: ServiceRemotingExtensions.CreateServiceRemotingListener<TStatelessService>(TStatelessService, StatelessServiceContext)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener<TStatelessService>(TStatelessService, System.Fabric.StatelessServiceContext)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceRemotingExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateServiceRemotingListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceRemotingExtensions.cs
    startLine: 46
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Runtime
  summary: "\nAn extension method that creates an <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener\" data-throw-if-not-resolved=\"false\"></xref>\nfor a stateless service implementation.\n"
  example: []
  syntax:
    content: 'public static IServiceRemotingListener CreateServiceRemotingListener<TStatelessService>(this TStatelessService serviceImplementation, StatelessServiceContext serviceContext)where TStatelessService : StatelessService, IService'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateServiceRemotingListener(Of TStatelessService As {StatelessService, IService})(serviceImplementation As TStatelessService, serviceContext As StatelessServiceContext) As IServiceRemotingListener
    parameters:
    - id: serviceImplementation
      type: '{TStatelessService}'
      description: A stateless service implementation.
    - id: serviceContext
      type: System.Fabric.StatelessServiceContext
      description: The context under which the service is operating.
    typeParameters:
    - id: TStatelessService
      description: >-
        Type constraint on the service implementation. The service implementation must

        derive from <xref href="Microsoft.ServiceFabric.Services.Runtime.StatelessService" data-throw-if-not-resolved="false"></xref> and implement one or more

        interfaces that derive from <xref href="Microsoft.ServiceFabric.Services.Remoting.IService" data-throw-if-not-resolved="false"></xref> interface.
    return:
      type: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
      description: >-
        A <xref href="Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener" data-throw-if-not-resolved="false"></xref> communication

        listener that remotes the interfaces deriving from <xref href="Microsoft.ServiceFabric.Services.Remoting.IService" data-throw-if-not-resolved="false"></xref> interface.
  overload: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener*
  nameWithType.vb: ServiceRemotingExtensions.CreateServiceRemotingListener(Of TStatelessService)(TStatelessService, StatelessServiceContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener(Of TStatelessService)(TStatelessService, System.Fabric.StatelessServiceContext)
  name.vb: CreateServiceRemotingListener(Of TStatelessService)(TStatelessService, StatelessServiceContext)
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: IServiceRemotingListener
  nameWithType: IServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
- uid: Microsoft.ServiceFabric.Services.Remoting.IService
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.IService
  parent: Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: IService
  nameWithType: IService
  fullName: Microsoft.ServiceFabric.Services.Remoting.IService
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Runtime
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting
  commentId: N:Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting
  nameWithType: Microsoft.ServiceFabric.Services.Remoting
  fullName: Microsoft.ServiceFabric.Services.Remoting
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  commentId: T:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  parent: Microsoft.ServiceFabric.Services.Runtime
  isExternal: false
  name: StatefulServiceBase
  nameWithType: StatefulServiceBase
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener
  isExternal: false
  name: CreateServiceRemotingListener<TStatefulService>
  nameWithType: ServiceRemotingExtensions.CreateServiceRemotingListener<TStatefulService>
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener<TStatefulService>
  nameWithType.vb: ServiceRemotingExtensions.CreateServiceRemotingListener(Of TStatefulService)
  fullname.vb: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingExtensions.CreateServiceRemotingListener(Of TStatefulService)
  name.vb: CreateServiceRemotingListener(Of TStatefulService)
- uid: '{TStatefulService}'
  commentId: '!:TStatefulService'
  definition: TStatefulService
  name: TStatefulService
  nameWithType: TStatefulService
  fullName: TStatefulService
- uid: System.Fabric.StatefulServiceContext
  commentId: T:System.Fabric.StatefulServiceContext
  parent: System.Fabric
  isExternal: false
  name: StatefulServiceContext
  nameWithType: StatefulServiceContext
  fullName: System.Fabric.StatefulServiceContext
- uid: Microsoft.ServiceFabric.Services.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Runtime
  fullName: Microsoft.ServiceFabric.Services.Runtime
- uid: TStatefulService
  commentId: '!:TStatefulService'
  isExternal: false
  name: TStatefulService
  nameWithType: TStatefulService
  fullName: TStatefulService
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  commentId: T:Microsoft.ServiceFabric.Services.Runtime.StatelessService
  isExternal: false
  name: StatelessService
  nameWithType: StatelessService
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService
- uid: '{TStatelessService}'
  commentId: '!:TStatelessService'
  definition: TStatelessService
  name: TStatelessService
  nameWithType: TStatelessService
  fullName: TStatelessService
- uid: System.Fabric.StatelessServiceContext
  commentId: T:System.Fabric.StatelessServiceContext
  parent: System.Fabric
  isExternal: false
  name: StatelessServiceContext
  nameWithType: StatelessServiceContext
  fullName: System.Fabric.StatelessServiceContext
- uid: TStatelessService
  commentId: '!:TStatelessService'
  isExternal: false
  name: TStatelessService
  nameWithType: TStatelessService
  fullName: TStatelessService
