### YamlMime:ManagedReference
items:
- uid: System.Fabric.NodeUpgradeProgress
  commentId: T:System.Fabric.NodeUpgradeProgress
  id: NodeUpgradeProgress
  parent: System.Fabric
  children:
  - System.Fabric.NodeUpgradeProgress.NodeName
  - System.Fabric.NodeUpgradeProgress.PendingSafetyChecks
  - System.Fabric.NodeUpgradeProgress.UpgradePhase
  langs:
  - csharp
  - vb
  name: NodeUpgradeProgress
  nameWithType: NodeUpgradeProgress
  fullName: System.Fabric.NodeUpgradeProgress
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NodeUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeUpgradeProgress
    path: src/prod/src/managed/Api/src/System/Fabric/NodeUpgradeProgress.cs
    startLine: 13
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Provides the outlines for the upgrade progress details of a node.</p>\n"
  example: []
  syntax:
    content: public sealed class NodeUpgradeProgress
    content.vb: Public NotInheritable Class NodeUpgradeProgress
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.NodeUpgradeProgress.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.NodeUpgradeProgress.NodeName
  commentId: P:System.Fabric.NodeUpgradeProgress.NodeName
  id: NodeName
  parent: System.Fabric.NodeUpgradeProgress
  langs:
  - csharp
  - vb
  name: NodeName
  nameWithType: NodeUpgradeProgress.NodeName
  fullName: System.Fabric.NodeUpgradeProgress.NodeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NodeUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeName
    path: src/prod/src/managed/Api/src/System/Fabric/NodeUpgradeProgress.cs
    startLine: 25
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the name of the node having upgrade progress details.</p>\n"
  example: []
  syntax:
    content: public string NodeName { get; }
    content.vb: Public ReadOnly Property NodeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the node having upgrade progress details.</p>\n"
  overload: System.Fabric.NodeUpgradeProgress.NodeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NodeUpgradeProgress.UpgradePhase
  commentId: P:System.Fabric.NodeUpgradeProgress.UpgradePhase
  id: UpgradePhase
  parent: System.Fabric.NodeUpgradeProgress
  langs:
  - csharp
  - vb
  name: UpgradePhase
  nameWithType: NodeUpgradeProgress.UpgradePhase
  fullName: System.Fabric.NodeUpgradeProgress.UpgradePhase
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NodeUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradePhase
    path: src/prod/src/managed/Api/src/System/Fabric/NodeUpgradeProgress.cs
    startLine: 37
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the upgrade phase of the node.</p>\n"
  example: []
  syntax:
    content: public NodeUpgradePhase UpgradePhase { get; }
    content.vb: Public ReadOnly Property UpgradePhase As NodeUpgradePhase
    parameters: []
    return:
      type: System.Fabric.NodeUpgradePhase
      description: "\n<p>The upgrade phase of the node.</p>\n"
  overload: System.Fabric.NodeUpgradeProgress.UpgradePhase*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NodeUpgradeProgress.PendingSafetyChecks
  commentId: P:System.Fabric.NodeUpgradeProgress.PendingSafetyChecks
  id: PendingSafetyChecks
  parent: System.Fabric.NodeUpgradeProgress
  langs:
  - csharp
  - vb
  name: PendingSafetyChecks
  nameWithType: NodeUpgradeProgress.PendingSafetyChecks
  fullName: System.Fabric.NodeUpgradeProgress.PendingSafetyChecks
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NodeUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PendingSafetyChecks
    path: src/prod/src/managed/Api/src/System/Fabric/NodeUpgradeProgress.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of safety checks that Service Fabric is currently performing on the corresponding node.</p>\n"
  example: []
  syntax:
    content: public IList<UpgradeSafetyCheck> PendingSafetyChecks { get; }
    content.vb: Public ReadOnly Property PendingSafetyChecks As IList(Of UpgradeSafetyCheck)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.UpgradeSafetyCheck}
      description: "\n<p>The list of safety checks that is Service Fabric currently performing on the corresponding node.</p>\n"
  overload: System.Fabric.NodeUpgradeProgress.PendingSafetyChecks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.NodeUpgradeProgress.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NodeUpgradeProgress>()
  nameWithType: ByteArraySerializer.Serialize<NodeUpgradeProgress>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.NodeUpgradeProgress>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NodeUpgradeProgress)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.NodeUpgradeProgress)()
  name.vb: Serialize(Of NodeUpgradeProgress)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NodeUpgradeProgress>
    nameWithType: ByteArraySerializer.Serialize<NodeUpgradeProgress>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.NodeUpgradeProgress>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NodeUpgradeProgress)
    nameWithType: ByteArraySerializer.Serialize(Of NodeUpgradeProgress)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.NodeUpgradeProgress)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.NodeUpgradeProgress.NodeName*
  commentId: Overload:System.Fabric.NodeUpgradeProgress.NodeName
  isExternal: false
  name: NodeName
  nameWithType: NodeUpgradeProgress.NodeName
  fullName: System.Fabric.NodeUpgradeProgress.NodeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.NodeUpgradeProgress.UpgradePhase*
  commentId: Overload:System.Fabric.NodeUpgradeProgress.UpgradePhase
  isExternal: false
  name: UpgradePhase
  nameWithType: NodeUpgradeProgress.UpgradePhase
  fullName: System.Fabric.NodeUpgradeProgress.UpgradePhase
- uid: System.Fabric.NodeUpgradePhase
  commentId: T:System.Fabric.NodeUpgradePhase
  parent: System.Fabric
  isExternal: false
  name: NodeUpgradePhase
  nameWithType: NodeUpgradePhase
  fullName: System.Fabric.NodeUpgradePhase
- uid: System.Fabric.NodeUpgradeProgress.PendingSafetyChecks*
  commentId: Overload:System.Fabric.NodeUpgradeProgress.PendingSafetyChecks
  isExternal: false
  name: PendingSafetyChecks
  nameWithType: NodeUpgradeProgress.PendingSafetyChecks
  fullName: System.Fabric.NodeUpgradeProgress.PendingSafetyChecks
- uid: System.Collections.Generic.IList{System.Fabric.UpgradeSafetyCheck}
  commentId: T:System.Collections.Generic.IList{System.Fabric.UpgradeSafetyCheck}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<UpgradeSafetyCheck>
  nameWithType: IList<UpgradeSafetyCheck>
  fullName: System.Collections.Generic.IList<System.Fabric.UpgradeSafetyCheck>
  nameWithType.vb: IList(Of UpgradeSafetyCheck)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.UpgradeSafetyCheck)
  name.vb: IList(Of UpgradeSafetyCheck)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.UpgradeSafetyCheck
    name: UpgradeSafetyCheck
    nameWithType: UpgradeSafetyCheck
    fullName: System.Fabric.UpgradeSafetyCheck
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.UpgradeSafetyCheck
    name: UpgradeSafetyCheck
    nameWithType: UpgradeSafetyCheck
    fullName: System.Fabric.UpgradeSafetyCheck
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
