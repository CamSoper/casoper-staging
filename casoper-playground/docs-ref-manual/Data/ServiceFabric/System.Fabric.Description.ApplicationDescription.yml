### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.ApplicationDescription
  commentId: T:System.Fabric.Description.ApplicationDescription
  id: ApplicationDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.ApplicationDescription.#ctor
  - System.Fabric.Description.ApplicationDescription.#ctor(System.Uri,System.String,System.String)
  - System.Fabric.Description.ApplicationDescription.#ctor(System.Uri,System.String,System.String,System.Collections.Specialized.NameValueCollection)
  - System.Fabric.Description.ApplicationDescription.ApplicationName
  - System.Fabric.Description.ApplicationDescription.ApplicationParameters
  - System.Fabric.Description.ApplicationDescription.ApplicationTypeName
  - System.Fabric.Description.ApplicationDescription.ApplicationTypeVersion
  - System.Fabric.Description.ApplicationDescription.MaximumNodes
  - System.Fabric.Description.ApplicationDescription.Metrics
  - System.Fabric.Description.ApplicationDescription.MinimumNodes
  langs:
  - csharp
  - vb
  name: ApplicationDescription
  nameWithType: ApplicationDescription
  fullName: System.Fabric.Description.ApplicationDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Describes an application to be created by using \n<xref href=\"System.Fabric.FabricClient.ApplicationManagementClient.CreateApplicationAsync(System.Fabric.Description.ApplicationDescription)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public sealed class ApplicationDescription
    content.vb: Public NotInheritable Class ApplicationDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.ApplicationDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.ApplicationDescription.#ctor
  commentId: M:System.Fabric.Description.ApplicationDescription.#ctor
  id: '#ctor'
  parent: System.Fabric.Description.ApplicationDescription
  langs:
  - csharp
  - vb
  name: ApplicationDescription()
  nameWithType: ApplicationDescription.ApplicationDescription()
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationDescription()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
    startLine: 24
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Instantiates an instance of <xref href=\"System.Fabric.Description.ApplicationDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ApplicationDescription()
    content.vb: Public Sub New
  overload: System.Fabric.Description.ApplicationDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationDescription.#ctor(System.Uri,System.String,System.String)
  commentId: M:System.Fabric.Description.ApplicationDescription.#ctor(System.Uri,System.String,System.String)
  id: '#ctor(System.Uri,System.String,System.String)'
  parent: System.Fabric.Description.ApplicationDescription
  langs:
  - csharp
  - vb
  name: ApplicationDescription(Uri, String, String)
  nameWithType: ApplicationDescription.ApplicationDescription(Uri, String, String)
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationDescription(System.Uri, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
    startLine: 41
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Instantiates an instance of <xref href=\"System.Fabric.Description.ApplicationDescription\" data-throw-if-not-resolved=\"false\"></xref> with the application instance name, the application \ntype name, and the application type version.</p>\n"
  example: []
  syntax:
    content: public ApplicationDescription(Uri applicationName, string applicationTypeName, string applicationTypeVersion)
    content.vb: Public Sub New(applicationName As Uri, applicationTypeName As String, applicationTypeVersion As String)
    parameters:
    - id: applicationName
      type: System.Uri
      description: "\n<p>URI of the application instance name.</p>\n"
    - id: applicationTypeName
      type: System.String
      description: "\n<p>Name of the application type.</p>\n"
    - id: applicationTypeVersion
      type: System.String
      description: "\n<p>Version of the application type.</p>\n"
  overload: System.Fabric.Description.ApplicationDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationDescription.#ctor(System.Uri,System.String,System.String,System.Collections.Specialized.NameValueCollection)
  commentId: M:System.Fabric.Description.ApplicationDescription.#ctor(System.Uri,System.String,System.String,System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Uri,System.String,System.String,System.Collections.Specialized.NameValueCollection)'
  parent: System.Fabric.Description.ApplicationDescription
  langs:
  - csharp
  - vb
  name: ApplicationDescription(Uri, String, String, NameValueCollection)
  nameWithType: ApplicationDescription.ApplicationDescription(Uri, String, String, NameValueCollection)
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationDescription(System.Uri, System.String, System.String, System.Collections.Specialized.NameValueCollection)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
    startLine: 62
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Instantiates an instance of <xref href=\"System.Fabric.Description.ApplicationDescription\" data-throw-if-not-resolved=\"false\"></xref> with the application instance name, the application \ntype name, the application type version, and the collection of application parameters.</p>\n"
  example: []
  syntax:
    content: public ApplicationDescription(Uri applicationName, string applicationTypeName, string applicationTypeVersion, NameValueCollection applicationParameters)
    content.vb: Public Sub New(applicationName As Uri, applicationTypeName As String, applicationTypeVersion As String, applicationParameters As NameValueCollection)
    parameters:
    - id: applicationName
      type: System.Uri
      description: "\n<p>URI of the application instance name.</p>\n"
    - id: applicationTypeName
      type: System.String
      description: "\n<p>Name of the application type.</p>\n"
    - id: applicationTypeVersion
      type: System.String
      description: "\n<p>Version of the application type.</p>\n"
    - id: applicationParameters
      type: System.Collections.Specialized.NameValueCollection
      description: "\n<p>Collection of name-value pairs for the parameters that are specified in the ApplicationManifest.xml.</p>\n"
  overload: System.Fabric.Description.ApplicationDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationDescription.ApplicationName
  commentId: P:System.Fabric.Description.ApplicationDescription.ApplicationName
  id: ApplicationName
  parent: System.Fabric.Description.ApplicationDescription
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: ApplicationDescription.ApplicationName
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
    startLine: 80
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the URI name of the application instance.</p>\n"
  example: []
  syntax:
    content: public Uri ApplicationName { get; set; }
    content.vb: Public Property ApplicationName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The application name.</p>\n"
  overload: System.Fabric.Description.ApplicationDescription.ApplicationName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationDescription.ApplicationTypeName
  commentId: P:System.Fabric.Description.ApplicationDescription.ApplicationTypeName
  id: ApplicationTypeName
  parent: System.Fabric.Description.ApplicationDescription
  langs:
  - csharp
  - vb
  name: ApplicationTypeName
  nameWithType: ApplicationDescription.ApplicationTypeName
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
    startLine: 89
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the name of the Service Fabric application type.</p>\n"
  example: []
  syntax:
    content: public string ApplicationTypeName { get; set; }
    content.vb: Public Property ApplicationTypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The application type name.</p>\n"
  overload: System.Fabric.Description.ApplicationDescription.ApplicationTypeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationDescription.ApplicationTypeVersion
  commentId: P:System.Fabric.Description.ApplicationDescription.ApplicationTypeVersion
  id: ApplicationTypeVersion
  parent: System.Fabric.Description.ApplicationDescription
  langs:
  - csharp
  - vb
  name: ApplicationTypeVersion
  nameWithType: ApplicationDescription.ApplicationTypeVersion
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationTypeVersion
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationTypeVersion
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
    startLine: 98
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the version of the application type.</p>\n"
  example: []
  syntax:
    content: public string ApplicationTypeVersion { get; set; }
    content.vb: Public Property ApplicationTypeVersion As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The application type version.</p>\n"
  overload: System.Fabric.Description.ApplicationDescription.ApplicationTypeVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationDescription.ApplicationParameters
  commentId: P:System.Fabric.Description.ApplicationDescription.ApplicationParameters
  id: ApplicationParameters
  parent: System.Fabric.Description.ApplicationDescription
  langs:
  - csharp
  - vb
  name: ApplicationParameters
  nameWithType: ApplicationDescription.ApplicationParameters
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationParameters
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationParameters
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
    startLine: 107
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the collection of name-value pairs for the parameters that are specified in the ApplicationManifest.xml.</p>\n"
  example: []
  syntax:
    content: public NameValueCollection ApplicationParameters { get; }
    content.vb: Public ReadOnly Property ApplicationParameters As NameValueCollection
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "\n<p>The collection of name-value pairs for the parameters that are specified in the ApplicationManifest.xml.</p>\n"
  overload: System.Fabric.Description.ApplicationDescription.ApplicationParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ApplicationDescription.MaximumNodes
  commentId: P:System.Fabric.Description.ApplicationDescription.MaximumNodes
  id: MaximumNodes
  parent: System.Fabric.Description.ApplicationDescription
  langs:
  - csharp
  - vb
  name: MaximumNodes
  nameWithType: ApplicationDescription.MaximumNodes
  fullName: System.Fabric.Description.ApplicationDescription.MaximumNodes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaximumNodes
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
    startLine: 132
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\nGets or sets the maximum number of nodes where this application can be instantiated.\n"
  example: []
  syntax:
    content: public long MaximumNodes { get; set; }
    content.vb: Public Property MaximumNodes As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>\nNumber of nodes this application is allowed to span. Default value is zero.\nIf it is zero, Application can span any number of nodes in the cluster.\n</p>\n<p>\nIf this parameter is smaller than <xref href=\"System.Fabric.Description.ApplicationDescription.MinimumNodes\" data-throw-if-not-resolved=\"false\"></xref> an\n<xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> will be thrown when <xref href=\"System.Fabric.FabricClient.ApplicationManagementClient.CreateApplicationAsync(System.Fabric.Description.ApplicationDescription)\" data-throw-if-not-resolved=\"false\"></xref>\nis called.\n</p>\n"
  overload: System.Fabric.Description.ApplicationDescription.MaximumNodes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationDescription.MinimumNodes
  commentId: P:System.Fabric.Description.ApplicationDescription.MinimumNodes
  id: MinimumNodes
  parent: System.Fabric.Description.ApplicationDescription
  langs:
  - csharp
  - vb
  name: MinimumNodes
  nameWithType: ApplicationDescription.MinimumNodes
  fullName: System.Fabric.Description.ApplicationDescription.MinimumNodes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MinimumNodes
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
    startLine: 151
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\nGets or sets the minimum number of nodes where Service Fabric will reserve capacity for this application.\n"
  example: []
  syntax:
    content: public long MinimumNodes { get; set; }
    content.vb: Public Property MinimumNodes As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>\nNumber of nodes where Service Fabric will reserve Capacity in the cluster for this Application to be placed.\nNote that this does not mean that the Application is guaranteed to have replicas on all those nodes.\n</p>\n<p>\nIf this parameter is set to zero, no capacity will be reserved.\n</p>\n<p>\nIf this parameters is greater than <xref href=\"System.Fabric.Description.ApplicationDescription.MaximumNodes\" data-throw-if-not-resolved=\"false\"></xref> an\n<xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> will be thrown when <xref href=\"System.Fabric.FabricClient.ApplicationManagementClient.CreateApplicationAsync(System.Fabric.Description.ApplicationDescription)\" data-throw-if-not-resolved=\"false\"></xref>\nis called.\n</p>\n"
  overload: System.Fabric.Description.ApplicationDescription.MinimumNodes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationDescription.Metrics
  commentId: F:System.Fabric.Description.ApplicationDescription.Metrics
  id: Metrics
  parent: System.Fabric.Description.ApplicationDescription
  langs:
  - csharp
  - vb
  name: Metrics
  nameWithType: ApplicationDescription.Metrics
  fullName: System.Fabric.Description.ApplicationDescription.Metrics
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Metrics
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationDescription.cs
    startLine: 160
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\nGets or sets the list of metrics for which the application capacity is defined.\n"
  example: []
  syntax:
    content: public IList<ApplicationMetricDescription> Metrics
    content.vb: Public Metrics As IList(Of ApplicationMetricDescription)
    return:
      type: System.Collections.Generic.IList{System.Fabric.Description.ApplicationMetricDescription}
      description: "\nSpecifies the metric Capacity of the Application. Capacity is specified for each metric by using\n<xref href=\"System.Fabric.Description.ApplicationMetricDescription\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.FabricClient.ApplicationManagementClient.CreateApplicationAsync(System.Fabric.Description.ApplicationDescription)
  commentId: M:System.Fabric.FabricClient.ApplicationManagementClient.CreateApplicationAsync(System.Fabric.Description.ApplicationDescription)
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ApplicationDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ApplicationDescription>()
  nameWithType: ByteArraySerializer.Serialize<ApplicationDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ApplicationDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ApplicationDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ApplicationDescription)()
  name.vb: Serialize(Of ApplicationDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ApplicationDescription>
    nameWithType: ByteArraySerializer.Serialize<ApplicationDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ApplicationDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ApplicationDescription)
    nameWithType: ByteArraySerializer.Serialize(Of ApplicationDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ApplicationDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.ApplicationDescription
  commentId: T:System.Fabric.Description.ApplicationDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ApplicationDescription
  nameWithType: ApplicationDescription
  fullName: System.Fabric.Description.ApplicationDescription
- uid: System.Fabric.Description.ApplicationDescription.#ctor*
  commentId: Overload:System.Fabric.Description.ApplicationDescription.#ctor
  isExternal: false
  name: ApplicationDescription
  nameWithType: ApplicationDescription.ApplicationDescription
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationDescription
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  commentId: T:System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: true
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Fabric.Description.ApplicationDescription.ApplicationName*
  commentId: Overload:System.Fabric.Description.ApplicationDescription.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: ApplicationDescription.ApplicationName
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationName
- uid: System.Fabric.Description.ApplicationDescription.ApplicationTypeName*
  commentId: Overload:System.Fabric.Description.ApplicationDescription.ApplicationTypeName
  isExternal: false
  name: ApplicationTypeName
  nameWithType: ApplicationDescription.ApplicationTypeName
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationTypeName
- uid: System.Fabric.Description.ApplicationDescription.ApplicationTypeVersion*
  commentId: Overload:System.Fabric.Description.ApplicationDescription.ApplicationTypeVersion
  isExternal: false
  name: ApplicationTypeVersion
  nameWithType: ApplicationDescription.ApplicationTypeVersion
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationTypeVersion
- uid: System.Fabric.Description.ApplicationDescription.ApplicationParameters*
  commentId: Overload:System.Fabric.Description.ApplicationDescription.ApplicationParameters
  isExternal: false
  name: ApplicationParameters
  nameWithType: ApplicationDescription.ApplicationParameters
  fullName: System.Fabric.Description.ApplicationDescription.ApplicationParameters
- uid: System.Fabric.Description.ApplicationDescription.MinimumNodes
  commentId: P:System.Fabric.Description.ApplicationDescription.MinimumNodes
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Fabric.Description.ApplicationDescription.MaximumNodes*
  commentId: Overload:System.Fabric.Description.ApplicationDescription.MaximumNodes
  isExternal: false
  name: MaximumNodes
  nameWithType: ApplicationDescription.MaximumNodes
  fullName: System.Fabric.Description.ApplicationDescription.MaximumNodes
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Description.ApplicationDescription.MaximumNodes
  commentId: P:System.Fabric.Description.ApplicationDescription.MaximumNodes
- uid: System.Fabric.Description.ApplicationDescription.MinimumNodes*
  commentId: Overload:System.Fabric.Description.ApplicationDescription.MinimumNodes
  isExternal: false
  name: MinimumNodes
  nameWithType: ApplicationDescription.MinimumNodes
  fullName: System.Fabric.Description.ApplicationDescription.MinimumNodes
- uid: System.Fabric.Description.ApplicationMetricDescription
  commentId: T:System.Fabric.Description.ApplicationMetricDescription
  isExternal: false
  name: ApplicationMetricDescription
  nameWithType: ApplicationMetricDescription
  fullName: System.Fabric.Description.ApplicationMetricDescription
- uid: System.Collections.Generic.IList{System.Fabric.Description.ApplicationMetricDescription}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Description.ApplicationMetricDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApplicationMetricDescription>
  nameWithType: IList<ApplicationMetricDescription>
  fullName: System.Collections.Generic.IList<System.Fabric.Description.ApplicationMetricDescription>
  nameWithType.vb: IList(Of ApplicationMetricDescription)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Description.ApplicationMetricDescription)
  name.vb: IList(Of ApplicationMetricDescription)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Description.ApplicationMetricDescription
    name: ApplicationMetricDescription
    nameWithType: ApplicationMetricDescription
    fullName: System.Fabric.Description.ApplicationMetricDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Description.ApplicationMetricDescription
    name: ApplicationMetricDescription
    nameWithType: ApplicationMetricDescription
    fullName: System.Fabric.Description.ApplicationMetricDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
