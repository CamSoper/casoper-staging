### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.UnplacedReplicaInformation
  commentId: T:System.Fabric.Query.UnplacedReplicaInformation
  id: UnplacedReplicaInformation
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.UnplacedReplicaInformation.#ctor(System.String,System.Guid,System.Collections.Generic.IList{System.String})
  - System.Fabric.Query.UnplacedReplicaInformation.PartitionId
  - System.Fabric.Query.UnplacedReplicaInformation.ServiceName
  - System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaReasons
  langs:
  - csharp
  - vb
  name: UnplacedReplicaInformation
  nameWithType: UnplacedReplicaInformation
  fullName: System.Fabric.Query.UnplacedReplicaInformation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/UnplacedReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UnplacedReplicaInformation
    path: src/prod/src/managed/Api/src/System/Fabric/Query/UnplacedReplicaInformation.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nContains information for an unplaced replica.\n</p>\n"
  example: []
  syntax:
    content: public class UnplacedReplicaInformation
    content.vb: Public Class UnplacedReplicaInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.UnplacedReplicaInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Query.UnplacedReplicaInformation.ServiceName
  commentId: P:System.Fabric.Query.UnplacedReplicaInformation.ServiceName
  id: ServiceName
  parent: System.Fabric.Query.UnplacedReplicaInformation
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: UnplacedReplicaInformation.ServiceName
  fullName: System.Fabric.Query.UnplacedReplicaInformation.ServiceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/UnplacedReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/UnplacedReplicaInformation.cs
    startLine: 24
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p> \nGets the name of the service whose replica could not be placed.\n</p>\n"
  example: []
  syntax:
    content: public string ServiceName { get; }
    content.vb: Public ReadOnly Property ServiceName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p> The string to which ServiceName will be set. </p>\n"
  overload: System.Fabric.Query.UnplacedReplicaInformation.ServiceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.UnplacedReplicaInformation.PartitionId
  commentId: P:System.Fabric.Query.UnplacedReplicaInformation.PartitionId
  id: PartitionId
  parent: System.Fabric.Query.UnplacedReplicaInformation
  langs:
  - csharp
  - vb
  name: PartitionId
  nameWithType: UnplacedReplicaInformation.PartitionId
  fullName: System.Fabric.Query.UnplacedReplicaInformation.PartitionId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/UnplacedReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionId
    path: src/prod/src/managed/Api/src/System/Fabric/Query/UnplacedReplicaInformation.cs
    startLine: 34
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p> \nGets the Partition Id (as a Guid) of the service whose replica could not be placed.\n</p>\n"
  example: []
  syntax:
    content: public Guid PartitionId { get; }
    content.vb: Public ReadOnly Property PartitionId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p> The Guid to which PartitionId will be set. </p>\n"
  overload: System.Fabric.Query.UnplacedReplicaInformation.PartitionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaReasons
  commentId: P:System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaReasons
  id: UnplacedReplicaReasons
  parent: System.Fabric.Query.UnplacedReplicaInformation
  langs:
  - csharp
  - vb
  name: UnplacedReplicaReasons
  nameWithType: UnplacedReplicaInformation.UnplacedReplicaReasons
  fullName: System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaReasons
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/UnplacedReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UnplacedReplicaReasons
    path: src/prod/src/managed/Api/src/System/Fabric/Query/UnplacedReplicaInformation.cs
    startLine: 44
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p> \nGets the reasons (as a list of strings) why a service's replicas could not be placed.\n</p>\n"
  example: []
  syntax:
    content: public IList<string> UnplacedReplicaReasons { get; }
    content.vb: Public ReadOnly Property UnplacedReplicaReasons As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "\n<p>The reasons why service replicas could not be placed.</p>\n"
  overload: System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaReasons*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.UnplacedReplicaInformation.#ctor(System.String,System.Guid,System.Collections.Generic.IList{System.String})
  commentId: M:System.Fabric.Query.UnplacedReplicaInformation.#ctor(System.String,System.Guid,System.Collections.Generic.IList{System.String})
  id: '#ctor(System.String,System.Guid,System.Collections.Generic.IList{System.String})'
  parent: System.Fabric.Query.UnplacedReplicaInformation
  langs:
  - csharp
  - vb
  name: UnplacedReplicaInformation(String, Guid, IList<String>)
  nameWithType: UnplacedReplicaInformation.UnplacedReplicaInformation(String, Guid, IList<String>)
  fullName: System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaInformation(System.String, System.Guid, System.Collections.Generic.IList<System.String>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/UnplacedReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/UnplacedReplicaInformation.cs
    startLine: 60
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p> \nConstructor that creates an object of UnplacedReplicaInformation.\n</p>\n"
  example: []
  syntax:
    content: public UnplacedReplicaInformation(string serviceName, Guid partitionId, IList<string> reasonsList)
    content.vb: Public Sub New(serviceName As String, partitionId As Guid, reasonsList As IList(Of String))
    parameters:
    - id: serviceName
      type: System.String
      description: "\n<p>The name of the service whose replica could not be placed. </p>\n"
    - id: partitionId
      type: System.Guid
      description: "\n<p>The Partition Id (as a Guid) of the service whose replica could not be placed. </p>\n"
    - id: reasonsList
      type: System.Collections.Generic.IList{System.String}
      description: "\n<p>The reasons (as a list of strings) why a service's replicas could not be placed. </p>\n"
  overload: System.Fabric.Query.UnplacedReplicaInformation.#ctor*
  nameWithType.vb: UnplacedReplicaInformation.UnplacedReplicaInformation(String, Guid, IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaInformation(System.String, System.Guid, System.Collections.Generic.IList(Of System.String))
  name.vb: UnplacedReplicaInformation(String, Guid, IList(Of String))
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.UnplacedReplicaInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<UnplacedReplicaInformation>()
  nameWithType: ByteArraySerializer.Serialize<UnplacedReplicaInformation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.UnplacedReplicaInformation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of UnplacedReplicaInformation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.UnplacedReplicaInformation)()
  name.vb: Serialize(Of UnplacedReplicaInformation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<UnplacedReplicaInformation>
    nameWithType: ByteArraySerializer.Serialize<UnplacedReplicaInformation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.UnplacedReplicaInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of UnplacedReplicaInformation)
    nameWithType: ByteArraySerializer.Serialize(Of UnplacedReplicaInformation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.UnplacedReplicaInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.UnplacedReplicaInformation.ServiceName*
  commentId: Overload:System.Fabric.Query.UnplacedReplicaInformation.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: UnplacedReplicaInformation.ServiceName
  fullName: System.Fabric.Query.UnplacedReplicaInformation.ServiceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Query.UnplacedReplicaInformation.PartitionId*
  commentId: Overload:System.Fabric.Query.UnplacedReplicaInformation.PartitionId
  isExternal: false
  name: PartitionId
  nameWithType: UnplacedReplicaInformation.PartitionId
  fullName: System.Fabric.Query.UnplacedReplicaInformation.PartitionId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaReasons*
  commentId: Overload:System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaReasons
  isExternal: false
  name: UnplacedReplicaReasons
  nameWithType: UnplacedReplicaInformation.UnplacedReplicaReasons
  fullName: System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaReasons
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.Query.UnplacedReplicaInformation.#ctor*
  commentId: Overload:System.Fabric.Query.UnplacedReplicaInformation.#ctor
  isExternal: false
  name: UnplacedReplicaInformation
  nameWithType: UnplacedReplicaInformation.UnplacedReplicaInformation
  fullName: System.Fabric.Query.UnplacedReplicaInformation.UnplacedReplicaInformation
