### YamlMime:ManagedReference
items:
- uid: System.Fabric.Messaging.Stream.PartitionKey
  commentId: T:System.Fabric.Messaging.Stream.PartitionKey
  id: PartitionKey
  parent: System.Fabric.Messaging.Stream
  children:
  - System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri)
  - System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri,System.Int64)
  - System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri,System.Int64,System.Int64)
  - System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri,System.String)
  - System.Fabric.Messaging.Stream.PartitionKey.CompareTo(System.Fabric.Messaging.Stream.PartitionKey)
  - System.Fabric.Messaging.Stream.PartitionKey.Equals(System.Fabric.Messaging.Stream.PartitionKey)
  - System.Fabric.Messaging.Stream.PartitionKey.GetHashCode
  - System.Fabric.Messaging.Stream.PartitionKey.Kind
  - System.Fabric.Messaging.Stream.PartitionKey.PartitionName
  - System.Fabric.Messaging.Stream.PartitionKey.PartitionNumber
  - System.Fabric.Messaging.Stream.PartitionKey.PartitionRange
  - System.Fabric.Messaging.Stream.PartitionKey.ServiceInstanceName
  - System.Fabric.Messaging.Stream.PartitionKey.ToString
  langs:
  - csharp
  - vb
  name: PartitionKey
  nameWithType: PartitionKey
  fullName: System.Fabric.Messaging.Stream.PartitionKey
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionKey
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 46
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nRepresents a service (partition).\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class PartitionKey : IComparable<PartitionKey>, IEquatable<PartitionKey>
    content.vb: >-
      <Serializable>

      Public Class PartitionKey
          Implements IComparable(Of PartitionKey), IEquatable(Of PartitionKey)
  inheritance:
  - System.Object
  implements:
  - System.IComparable{System.Fabric.Messaging.Stream.PartitionKey}
  - System.IEquatable{System.Fabric.Messaging.Stream.PartitionKey}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Messaging.Stream.PartitionKey.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Messaging.Stream.PartitionKey.Kind
  commentId: P:System.Fabric.Messaging.Stream.PartitionKey.Kind
  id: Kind
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: PartitionKey.Kind
  fullName: System.Fabric.Messaging.Stream.PartitionKey.Kind
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Kind
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 58
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\n\n"
  example: []
  syntax:
    content: public PartitionKind Kind { get; }
    content.vb: Public ReadOnly Property Kind As PartitionKind
    parameters: []
    return:
      type: System.Fabric.Messaging.Stream.PartitionKind
  overload: System.Fabric.Messaging.Stream.PartitionKey.Kind*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Messaging.Stream.PartitionKey.ServiceInstanceName
  commentId: P:System.Fabric.Messaging.Stream.PartitionKey.ServiceInstanceName
  id: ServiceInstanceName
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: ServiceInstanceName
  nameWithType: PartitionKey.ServiceInstanceName
  fullName: System.Fabric.Messaging.Stream.PartitionKey.ServiceInstanceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceInstanceName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 63
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\n\n"
  example: []
  syntax:
    content: public Uri ServiceInstanceName { get; }
    content.vb: Public ReadOnly Property ServiceInstanceName As Uri
    parameters: []
    return:
      type: System.Uri
  overload: System.Fabric.Messaging.Stream.PartitionKey.ServiceInstanceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Messaging.Stream.PartitionKey.PartitionName
  commentId: P:System.Fabric.Messaging.Stream.PartitionKey.PartitionName
  id: PartitionName
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: PartitionName
  nameWithType: PartitionKey.PartitionName
  fullName: System.Fabric.Messaging.Stream.PartitionKey.PartitionName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 68
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\n\n"
  example: []
  syntax:
    content: public string PartitionName { get; }
    content.vb: Public ReadOnly Property PartitionName As String
    parameters: []
    return:
      type: System.String
  overload: System.Fabric.Messaging.Stream.PartitionKey.PartitionName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Messaging.Stream.PartitionKey.PartitionRange
  commentId: P:System.Fabric.Messaging.Stream.PartitionKey.PartitionRange
  id: PartitionRange
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: PartitionRange
  nameWithType: PartitionKey.PartitionRange
  fullName: System.Fabric.Messaging.Stream.PartitionKey.PartitionRange
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionRange
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 73
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\n\n"
  example: []
  syntax:
    content: public IntegerPartitionKeyRange PartitionRange { get; }
    content.vb: Public ReadOnly Property PartitionRange As IntegerPartitionKeyRange
    parameters: []
    return:
      type: System.Fabric.ReliableMessaging.Session.IntegerPartitionKeyRange
  overload: System.Fabric.Messaging.Stream.PartitionKey.PartitionRange*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Messaging.Stream.PartitionKey.PartitionNumber
  commentId: P:System.Fabric.Messaging.Stream.PartitionKey.PartitionNumber
  id: PartitionNumber
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: PartitionNumber
  nameWithType: PartitionKey.PartitionNumber
  fullName: System.Fabric.Messaging.Stream.PartitionKey.PartitionNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionNumber
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 81
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\n\n"
  example: []
  syntax:
    content: public long PartitionNumber { get; }
    content.vb: Public ReadOnly Property PartitionNumber As Long
    parameters: []
    return:
      type: System.Int64
  overload: System.Fabric.Messaging.Stream.PartitionKey.PartitionNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri)
  commentId: M:System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: PartitionKey(Uri)
  nameWithType: PartitionKey.PartitionKey(Uri)
  fullName: System.Fabric.Messaging.Stream.PartitionKey.PartitionKey(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 95
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreates a new PartitionKey specifing its service instance name and set the partition kind to default to \nsingleton.\n"
  example: []
  syntax:
    content: public PartitionKey(Uri serviceInstanceName)
    content.vb: Public Sub New(serviceInstanceName As Uri)
    parameters:
    - id: serviceInstanceName
      type: System.Uri
      description: Service name of the role
  overload: System.Fabric.Messaging.Stream.PartitionKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri,System.Int64)
  commentId: M:System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri,System.Int64)
  id: '#ctor(System.Uri,System.Int64)'
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: PartitionKey(Uri, Int64)
  nameWithType: PartitionKey.PartitionKey(Uri, Int64)
  fullName: System.Fabric.Messaging.Stream.PartitionKey.PartitionKey(System.Uri, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 108
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreates a new PartitionKey specifing its service instance name and set the partition kind to numbered.\n"
  example: []
  syntax:
    content: public PartitionKey(Uri serviceInstanceName, long partitionNumber)
    content.vb: Public Sub New(serviceInstanceName As Uri, partitionNumber As Long)
    parameters:
    - id: serviceInstanceName
      type: System.Uri
      description: Service name of the role
    - id: partitionNumber
      type: System.Int64
      description: Service partition number
  overload: System.Fabric.Messaging.Stream.PartitionKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri,System.Int64,System.Int64)
  commentId: M:System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri,System.Int64,System.Int64)
  id: '#ctor(System.Uri,System.Int64,System.Int64)'
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: PartitionKey(Uri, Int64, Int64)
  nameWithType: PartitionKey.PartitionKey(Uri, Int64, Int64)
  fullName: System.Fabric.Messaging.Stream.PartitionKey.PartitionKey(System.Uri, System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 123
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreates a new PartitionKey specifing its service instance name, partition range and numbered kind.\n"
  example: []
  syntax:
    content: public PartitionKey(Uri serviceInstanceName, long lowKey, long highKey)
    content.vb: Public Sub New(serviceInstanceName As Uri, lowKey As Long, highKey As Long)
    parameters:
    - id: serviceInstanceName
      type: System.Uri
      description: Service name of the role
    - id: lowKey
      type: System.Int64
      description: Partition range - Low key
    - id: highKey
      type: System.Int64
      description: Partition range - High key
  overload: System.Fabric.Messaging.Stream.PartitionKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri,System.String)
  commentId: M:System.Fabric.Messaging.Stream.PartitionKey.#ctor(System.Uri,System.String)
  id: '#ctor(System.Uri,System.String)'
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: PartitionKey(Uri, String)
  nameWithType: PartitionKey.PartitionKey(Uri, String)
  fullName: System.Fabric.Messaging.Stream.PartitionKey.PartitionKey(System.Uri, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 137
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreates a new PartitionKey specifing its service instance name and partition name\n"
  example: []
  syntax:
    content: public PartitionKey(Uri serviceInstanceName, string partitionName)
    content.vb: Public Sub New(serviceInstanceName As Uri, partitionName As String)
    parameters:
    - id: serviceInstanceName
      type: System.Uri
      description: Service name of the role
    - id: partitionName
      type: System.String
      description: Partition name of the role
  overload: System.Fabric.Messaging.Stream.PartitionKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.PartitionKey.GetHashCode
  commentId: M:System.Fabric.Messaging.Stream.PartitionKey.GetHashCode
  id: GetHashCode
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PartitionKey.GetHashCode()
  fullName: System.Fabric.Messaging.Stream.PartitionKey.GetHashCode()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetHashCode
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 241
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nOverrides the Hash function for this object. \nreturn Bitwise exclusive-OR column by column of\nserviceInstanceName^Partition Info\n\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\nA hash code for the current \n<see>\n<cref>T:System.Fabric.Messaging.Stream.PartitionKey</cref>\n</see>\n"
  overridden: System.Object.GetHashCode
  overload: System.Fabric.Messaging.Stream.PartitionKey.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Fabric.Messaging.Stream.PartitionKey.CompareTo(System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.Fabric.Messaging.Stream.PartitionKey.CompareTo(System.Fabric.Messaging.Stream.PartitionKey)
  id: CompareTo(System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: CompareTo(PartitionKey)
  nameWithType: PartitionKey.CompareTo(PartitionKey)
  fullName: System.Fabric.Messaging.Stream.PartitionKey.CompareTo(System.Fabric.Messaging.Stream.PartitionKey)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CompareTo
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 266
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCompares the current object with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(PartitionKey other)
    content.vb: Public Function CompareTo(other As PartitionKey) As Integer
    parameters:
    - id: other
      type: System.Fabric.Messaging.Stream.PartitionKey
      description: An object to compare with this object.
    return:
      type: System.Int32
      description: "\nA value that indicates the relative order of the objects being compared. \nThe return value has the following meanings: Value Meaning Less than zero This object is less than the \n<em>other</em> parameter.Zero This object is equal to <em>other</em>. Greater than zero This object is greater than <em>other</em>. \n"
  overload: System.Fabric.Messaging.Stream.PartitionKey.CompareTo*
  implements:
  - System.IComparable{System.Fabric.Messaging.Stream.PartitionKey}.CompareTo(System.Fabric.Messaging.Stream.PartitionKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.PartitionKey.Equals(System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.Fabric.Messaging.Stream.PartitionKey.Equals(System.Fabric.Messaging.Stream.PartitionKey)
  id: Equals(System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: Equals(PartitionKey)
  nameWithType: PartitionKey.Equals(PartitionKey)
  fullName: System.Fabric.Messaging.Stream.PartitionKey.Equals(System.Fabric.Messaging.Stream.PartitionKey)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Equals
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 318
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nIndicates whether the current object is equal to another object of the same type.\n"
  example: []
  syntax:
    content: public bool Equals(PartitionKey other)
    content.vb: Public Function Equals(other As PartitionKey) As Boolean
    parameters:
    - id: other
      type: System.Fabric.Messaging.Stream.PartitionKey
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: "\ntrue if the current object is equal to the <em>other</em> parameter; otherwise, false.\n"
  overload: System.Fabric.Messaging.Stream.PartitionKey.Equals*
  implements:
  - System.IEquatable{System.Fabric.Messaging.Stream.PartitionKey}.Equals(System.Fabric.Messaging.Stream.PartitionKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.PartitionKey.ToString
  commentId: M:System.Fabric.Messaging.Stream.PartitionKey.ToString
  id: ToString
  parent: System.Fabric.Messaging.Stream.PartitionKey
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PartitionKey.ToString()
  fullName: System.Fabric.Messaging.Stream.PartitionKey.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/PartitionKey.cs
    startLine: 391
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nString representation of the PartitionKey\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: String representation of the PartitionKey
  overridden: System.Object.ToString
  overload: System.Fabric.Messaging.Stream.PartitionKey.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable{System.Fabric.Messaging.Stream.PartitionKey}
  commentId: T:System.IComparable{System.Fabric.Messaging.Stream.PartitionKey}
  parent: System
  definition: System.IComparable`1
  name: IComparable<PartitionKey>
  nameWithType: IComparable<PartitionKey>
  fullName: System.IComparable<System.Fabric.Messaging.Stream.PartitionKey>
  nameWithType.vb: IComparable(Of PartitionKey)
  fullname.vb: System.IComparable(Of System.Fabric.Messaging.Stream.PartitionKey)
  name.vb: IComparable(Of PartitionKey)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{System.Fabric.Messaging.Stream.PartitionKey}
  commentId: T:System.IEquatable{System.Fabric.Messaging.Stream.PartitionKey}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<PartitionKey>
  nameWithType: IEquatable<PartitionKey>
  fullName: System.IEquatable<System.Fabric.Messaging.Stream.PartitionKey>
  nameWithType.vb: IEquatable(Of PartitionKey)
  fullname.vb: System.IEquatable(Of System.Fabric.Messaging.Stream.PartitionKey)
  name.vb: IEquatable(Of PartitionKey)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.PartitionKey.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<PartitionKey>()
  nameWithType: ByteArraySerializer.Serialize<PartitionKey>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Messaging.Stream.PartitionKey>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of PartitionKey)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Messaging.Stream.PartitionKey)()
  name.vb: Serialize(Of PartitionKey)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<PartitionKey>
    nameWithType: ByteArraySerializer.Serialize<PartitionKey>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Messaging.Stream.PartitionKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of PartitionKey)
    nameWithType: ByteArraySerializer.Serialize(Of PartitionKey)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Messaging.Stream.PartitionKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream.PartitionKey.Kind*
  commentId: Overload:System.Fabric.Messaging.Stream.PartitionKey.Kind
  isExternal: false
  name: Kind
  nameWithType: PartitionKey.Kind
  fullName: System.Fabric.Messaging.Stream.PartitionKey.Kind
- uid: System.Fabric.Messaging.Stream.PartitionKind
  commentId: T:System.Fabric.Messaging.Stream.PartitionKind
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: PartitionKind
  nameWithType: PartitionKind
  fullName: System.Fabric.Messaging.Stream.PartitionKind
- uid: System.Fabric.Messaging.Stream.PartitionKey.ServiceInstanceName*
  commentId: Overload:System.Fabric.Messaging.Stream.PartitionKey.ServiceInstanceName
  isExternal: false
  name: ServiceInstanceName
  nameWithType: PartitionKey.ServiceInstanceName
  fullName: System.Fabric.Messaging.Stream.PartitionKey.ServiceInstanceName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Messaging.Stream.PartitionKey.PartitionName*
  commentId: Overload:System.Fabric.Messaging.Stream.PartitionKey.PartitionName
  isExternal: false
  name: PartitionName
  nameWithType: PartitionKey.PartitionName
  fullName: System.Fabric.Messaging.Stream.PartitionKey.PartitionName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Messaging.Stream.PartitionKey.PartitionRange*
  commentId: Overload:System.Fabric.Messaging.Stream.PartitionKey.PartitionRange
  isExternal: false
  name: PartitionRange
  nameWithType: PartitionKey.PartitionRange
  fullName: System.Fabric.Messaging.Stream.PartitionKey.PartitionRange
- uid: System.Fabric.ReliableMessaging.Session.IntegerPartitionKeyRange
  commentId: T:System.Fabric.ReliableMessaging.Session.IntegerPartitionKeyRange
  parent: System.Fabric.ReliableMessaging.Session
  isExternal: false
  name: IntegerPartitionKeyRange
  nameWithType: IntegerPartitionKeyRange
  fullName: System.Fabric.ReliableMessaging.Session.IntegerPartitionKeyRange
- uid: System.Fabric.ReliableMessaging.Session
  commentId: N:System.Fabric.ReliableMessaging.Session
  isExternal: false
  name: System.Fabric.ReliableMessaging.Session
  nameWithType: System.Fabric.ReliableMessaging.Session
  fullName: System.Fabric.ReliableMessaging.Session
- uid: System.Fabric.Messaging.Stream.PartitionKey.PartitionNumber*
  commentId: Overload:System.Fabric.Messaging.Stream.PartitionKey.PartitionNumber
  isExternal: false
  name: PartitionNumber
  nameWithType: PartitionKey.PartitionNumber
  fullName: System.Fabric.Messaging.Stream.PartitionKey.PartitionNumber
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Messaging.Stream.PartitionKey.#ctor*
  commentId: Overload:System.Fabric.Messaging.Stream.PartitionKey.#ctor
  isExternal: false
  name: PartitionKey
  nameWithType: PartitionKey.PartitionKey
  fullName: System.Fabric.Messaging.Stream.PartitionKey.PartitionKey
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.PartitionKey.GetHashCode*
  commentId: Overload:System.Fabric.Messaging.Stream.PartitionKey.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: PartitionKey.GetHashCode
  fullName: System.Fabric.Messaging.Stream.PartitionKey.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Fabric.Messaging.Stream.PartitionKey.CompareTo*
  commentId: Overload:System.Fabric.Messaging.Stream.PartitionKey.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: PartitionKey.CompareTo
  fullName: System.Fabric.Messaging.Stream.PartitionKey.CompareTo
- uid: System.IComparable{System.Fabric.Messaging.Stream.PartitionKey}.CompareTo(System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.IComparable{System.Fabric.Messaging.Stream.PartitionKey}.CompareTo(System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.IComparable{System.Fabric.Messaging.Stream.PartitionKey}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(PartitionKey)
  nameWithType: IComparable<PartitionKey>.CompareTo(PartitionKey)
  fullName: System.IComparable<System.Fabric.Messaging.Stream.PartitionKey>.CompareTo(System.Fabric.Messaging.Stream.PartitionKey)
  nameWithType.vb: IComparable(Of PartitionKey).CompareTo(PartitionKey)
  fullname.vb: System.IComparable(Of System.Fabric.Messaging.Stream.PartitionKey).CompareTo(System.Fabric.Messaging.Stream.PartitionKey)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<PartitionKey>.CompareTo
    fullName: System.IComparable<System.Fabric.Messaging.Stream.PartitionKey>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of PartitionKey).CompareTo
    fullName: System.IComparable(Of System.Fabric.Messaging.Stream.PartitionKey).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.PartitionKey
  commentId: T:System.Fabric.Messaging.Stream.PartitionKey
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: PartitionKey
  nameWithType: PartitionKey
  fullName: System.Fabric.Messaging.Stream.PartitionKey
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.PartitionKey.Equals*
  commentId: Overload:System.Fabric.Messaging.Stream.PartitionKey.Equals
  isExternal: false
  name: Equals
  nameWithType: PartitionKey.Equals
  fullName: System.Fabric.Messaging.Stream.PartitionKey.Equals
- uid: System.IEquatable{System.Fabric.Messaging.Stream.PartitionKey}.Equals(System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.IEquatable{System.Fabric.Messaging.Stream.PartitionKey}.Equals(System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.IEquatable{System.Fabric.Messaging.Stream.PartitionKey}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(PartitionKey)
  nameWithType: IEquatable<PartitionKey>.Equals(PartitionKey)
  fullName: System.IEquatable<System.Fabric.Messaging.Stream.PartitionKey>.Equals(System.Fabric.Messaging.Stream.PartitionKey)
  nameWithType.vb: IEquatable(Of PartitionKey).Equals(PartitionKey)
  fullname.vb: System.IEquatable(Of System.Fabric.Messaging.Stream.PartitionKey).Equals(System.Fabric.Messaging.Stream.PartitionKey)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<PartitionKey>.Equals
    fullName: System.IEquatable<System.Fabric.Messaging.Stream.PartitionKey>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of PartitionKey).Equals
    fullName: System.IEquatable(Of System.Fabric.Messaging.Stream.PartitionKey).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.PartitionKey.ToString*
  commentId: Overload:System.Fabric.Messaging.Stream.PartitionKey.ToString
  isExternal: false
  name: ToString
  nameWithType: PartitionKey.ToString
  fullName: System.Fabric.Messaging.Stream.PartitionKey.ToString
