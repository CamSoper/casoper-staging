### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  id: WcfServiceRemotingClientFactory
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  children:
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor(System.ServiceModel.Channels.Binding,Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,System.Func{System.ServiceModel.Channels.Binding,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}})
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: WcfServiceRemotingClientFactory
  nameWithType: WcfServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WcfServiceRemotingClientFactory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
    startLine: 26
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  summary: "\nAn <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory\" data-throw-if-not-resolved=\"false\"></xref> that uses\nWindows Communication Foundation to create <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient\" data-throw-if-not-resolved=\"false\"></xref> to communicate with stateless\nand stateful services over interfaces that are remoted via \n<xref href=\"Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class WcfServiceRemotingClientFactory : IServiceRemotingClientFactory, ICommunicationClientFactory<IServiceRemotingClient>'
    content.vb: >-
      Public Class WcfServiceRemotingClientFactory
          Implements IServiceRemotingClientFactory, ICommunicationClientFactory(Of IServiceRemotingClient)
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
  commentId: E:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
  id: ClientConnected
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  langs:
  - csharp
  - vb
  name: ClientConnected
  nameWithType: WcfServiceRemotingClientFactory.ClientConnected
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClientConnected
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
    startLine: 33
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  summary: "\nEvent handler that is fired when a client is connected to the service endpoint.\n"
  example: []
  syntax:
    content: public event EventHandler<CommunicationClientEventArgs<IServiceRemotingClient>> ClientConnected
    content.vb: Public Event ClientConnected As EventHandler(Of CommunicationClientEventArgs(Of IServiceRemotingClient))
    return:
      type: System.EventHandler{Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}}
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.ClientConnected
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
  commentId: E:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
  id: ClientDisconnected
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  langs:
  - csharp
  - vb
  name: ClientDisconnected
  nameWithType: WcfServiceRemotingClientFactory.ClientDisconnected
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
  type: Event
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClientDisconnected
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
    startLine: 38
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  summary: "\nEvent handler that is fired when a client is disconnected from the service endpoint.\n"
  example: []
  syntax:
    content: public event EventHandler<CommunicationClientEventArgs<IServiceRemotingClient>> ClientDisconnected
    content.vb: Public Event ClientDisconnected As EventHandler(Of CommunicationClientEventArgs(Of IServiceRemotingClient))
    return:
      type: System.EventHandler{Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}}
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.ClientDisconnected
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor(System.ServiceModel.Channels.Binding,Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,System.Func{System.ServiceModel.Channels.Binding,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}})
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor(System.ServiceModel.Channels.Binding,Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,System.Func{System.ServiceModel.Channels.Binding,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}})
  id: '#ctor(System.ServiceModel.Channels.Binding,Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,System.Func{System.ServiceModel.Channels.Binding,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}})'
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  langs:
  - csharp
  - vb
  name: WcfServiceRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, Func<Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory<IServiceRemotingContract>>)
  nameWithType: WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, Func<Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory<IServiceRemotingContract>>)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory(System.ServiceModel.Channels.Binding, Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>, Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.String, System.Func<System.ServiceModel.Channels.Binding, System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>, Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.String, Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract>>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
    startLine: 70
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  summary: "\nConstructs a WCF based service remoting client factory.\n"
  remarks: "\nThis factory uses <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Client.ServiceRemotingExceptionHandler\" data-throw-if-not-resolved=\"false\"></xref> in addition to the \nexception handlers supplied to the constructor. \n"
  example: []
  syntax:
    content: public WcfServiceRemotingClientFactory(Binding clientBinding = null, IServiceRemotingCallbackClient callbackClient = null, IEnumerable<IExceptionHandler> exceptionHandlers = null, IServicePartitionResolver servicePartitionResolver = null, string traceId = null, Func<Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, string, IServiceRemotingCallbackContract, WcfCommunicationClientFactory<IServiceRemotingContract>> createWcfClientFactory = null)
    content.vb: Public Sub New(clientBinding As Binding = Nothing, callbackClient As IServiceRemotingCallbackClient = Nothing, exceptionHandlers As IEnumerable(Of IExceptionHandler) = Nothing, servicePartitionResolver As IServicePartitionResolver = Nothing, traceId As String = Nothing, createWcfClientFactory As Func(Of Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory(Of IServiceRemotingContract)) = Nothing)
    parameters:
    - id: clientBinding
      type: System.ServiceModel.Channels.Binding
      description: "\nWCF binding to use for the client. If the client binding is not specified or null,\na default client binding is created using \n<xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method \nwhich creates a <xref href=\"System.ServiceModel.NetTcpBinding\" data-throw-if-not-resolved=\"false\"></xref> with no security.\n"
    - id: callbackClient
      type: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
      description: "\nThe callback client that receives the callbacks from the service.\n"
    - id: exceptionHandlers
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
      description: "\nException handlers to handle the exceptions encountered in communicating with the service.\n"
    - id: servicePartitionResolver
      type: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
      description: "\nService partition resolver to resolve the service endpoints. If not specified, a default \nservice partition resolver returned by <xref href=\"Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver.GetDefault\" data-throw-if-not-resolved=\"false\"></xref> is used.\n"
    - id: traceId
      type: System.String
      description: "\nId to use in diagnostics traces from this component.\n"
    - id: createWcfClientFactory
      type: System.Func{System.ServiceModel.Channels.Binding,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}}
      description: "\nDelegate function that creates <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory%601\" data-throw-if-not-resolved=\"false\"></xref> using the \n<xref href=\"Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor*
  nameWithType.vb: WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, Func(Of Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory(Of IServiceRemotingContract)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory(System.ServiceModel.Channels.Binding, Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler), Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.String, System.Func(Of System.ServiceModel.Channels.Binding, System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler), Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.String, Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract)))
  name.vb: WcfServiceRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, Func(Of Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory(Of IServiceRemotingContract)))
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  langs:
  - csharp
  - vb
  name: ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: WcfServiceRemotingClientFactory.ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
    startLine: 128
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  summary: "\nResolves a partition of the specified service containing one or more communication listeners and returns a client to communicate \nto the endpoint corresponding to the given listenerName. \n\nThe endpoint of the service is of the form - {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}\n"
  example: []
  syntax:
    content: Task<IServiceRemotingClient> ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(Uri serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, string listenerName, OperationRetrySettings retrySettings, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(serviceUri As Uri, partitionKey As ServicePartitionKey, targetReplicaSelector As TargetReplicaSelector, listenerName As String, retrySettings As OperationRetrySettings, cancellationToken As CancellationToken) As Task(Of IServiceRemotingClient) Implements ICommunicationClientFactory(Of IServiceRemotingClient).GetClientAsync
    parameters:
    - id: serviceUri
      type: System.Uri
      description: Uri of the service to resolve
    - id: partitionKey
      type: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
      description: Key that identifies the partition to resolve
    - id: targetReplicaSelector
      type: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
      description: Specifies which replica in the partition identified by the partition key, the client should connect to
    - id: listenerName
      type: System.String
      description: Specifies which listener in the endpoint of the chosen replica, to which the client should connect to
    - id: retrySettings
      type: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
      description: Specifies the retry policy that should be used for exceptions that occur when creating the client.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. The result of the Task is\nthe CommunicationClient(<xref href=\"Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient\" data-throw-if-not-resolved=\"false\"></xref>) object.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  nameWithType.vb: WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  langs:
  - csharp
  - vb
  name: ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: WcfServiceRemotingClientFactory.ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
    startLine: 162
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  summary: "\nRe-resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate \nto the endpoint corresponding to the given listenerName. \n\nThe endpoint of the service is of the form - {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}\n"
  example: []
  syntax:
    content: Task<IServiceRemotingClient> ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, string listenerName, OperationRetrySettings retrySettings, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(previousRsp As ResolvedServicePartition, targetReplicaSelector As TargetReplicaSelector, listenerName As String, retrySettings As OperationRetrySettings, cancellationToken As CancellationToken) As Task(Of IServiceRemotingClient) Implements ICommunicationClientFactory(Of IServiceRemotingClient).GetClientAsync
    parameters:
    - id: previousRsp
      type: System.Fabric.ResolvedServicePartition
      description: Previous ResolvedServicePartition value
    - id: targetReplicaSelector
      type: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
      description: Specifies which replica in the partition identified by the partition key, the client should connect to
    - id: listenerName
      type: System.String
      description: Specifies which listener in the endpoint of the chosen replica, to which the client should connect to
    - id: retrySettings
      type: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
      description: Specifies the retry policy that should be used for exceptions that occur when creating the client.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. The result of the Task is\nthe CommunicationClient(<xref href=\"Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient\" data-throw-if-not-resolved=\"false\"></xref>) object.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  nameWithType.vb: WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  langs:
  - csharp
  - vb
  name: ICommunicationClientFactory<IServiceRemotingClient>.ReportOperationExceptionAsync(IServiceRemotingClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  nameWithType: WcfServiceRemotingClientFactory.ICommunicationClientFactory<IServiceRemotingClient>.ReportOperationExceptionAsync(IServiceRemotingClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Client/WcfServiceRemotingClientFactory.cs
    startLine: 190
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  summary: "\nHandles the exceptions that occur in the CommunicationClient when sending a message to the Service\n"
  example: []
  syntax:
    content: Task<OperationRetryControl> ICommunicationClientFactory<IServiceRemotingClient>.ReportOperationExceptionAsync(IServiceRemotingClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync(client As IServiceRemotingClient, exceptionInformation As ExceptionInformation, retrySettings As OperationRetrySettings, cancellationToken As CancellationToken) As Task(Of OperationRetryControl) Implements ICommunicationClientFactory(Of IServiceRemotingClient).ReportOperationExceptionAsync
    parameters:
    - id: client
      type: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
      description: Communication client
    - id: exceptionInformation
      type: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
      description: Information about exception that happened while communicating with the service.
    - id: retrySettings
      type: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
      description: Specifies the retry policy that should be used for handling the reported exception.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. The result of the Task is\na <xref href=\"Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl\" data-throw-if-not-resolved=\"false\"></xref> object that provides information on retry policy for this exception.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  nameWithType.vb: WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync(IServiceRemotingClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync(IServiceRemotingClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: IServiceRemotingClientFactory
  nameWithType: IServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: IServiceRemotingClient
  nameWithType: IServiceRemotingClient
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  isExternal: false
  name: WcfServiceRemotingListener
  nameWithType: WcfServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  name: ICommunicationClientFactory<IServiceRemotingClient>
  nameWithType: ICommunicationClientFactory<IServiceRemotingClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>
  nameWithType.vb: ICommunicationClientFactory(Of IServiceRemotingClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient)
  name.vb: ICommunicationClientFactory(Of IServiceRemotingClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<WcfServiceRemotingClientFactory>()
  nameWithType: ByteArraySerializer.Serialize<WcfServiceRemotingClientFactory>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of WcfServiceRemotingClientFactory)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory)()
  name.vb: Serialize(Of WcfServiceRemotingClientFactory)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<WcfServiceRemotingClientFactory>
    nameWithType: ByteArraySerializer.Serialize<WcfServiceRemotingClientFactory>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of WcfServiceRemotingClientFactory)
    nameWithType: ByteArraySerializer.Serialize(Of WcfServiceRemotingClientFactory)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Client
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Client
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Client
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  isExternal: false
  name: ICommunicationClientFactory<TCommunicationClient>
  nameWithType: ICommunicationClientFactory<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient)
  name.vb: ICommunicationClientFactory(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.ClientConnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.ClientConnected
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientConnected
  name: ClientConnected
  nameWithType: ICommunicationClientFactory<IServiceRemotingClient>.ClientConnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ClientConnected
  nameWithType.vb: ICommunicationClientFactory(Of IServiceRemotingClient).ClientConnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient).ClientConnected
- uid: System.EventHandler{Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}}
  commentId: T:System.EventHandler{Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<CommunicationClientEventArgs<IServiceRemotingClient>>
  nameWithType: EventHandler<CommunicationClientEventArgs<IServiceRemotingClient>>
  fullName: System.EventHandler<Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>>
  nameWithType.vb: EventHandler(Of CommunicationClientEventArgs(Of IServiceRemotingClient))
  fullname.vb: System.EventHandler(Of Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient))
  name.vb: EventHandler(Of CommunicationClientEventArgs(Of IServiceRemotingClient))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs`1
    name: CommunicationClientEventArgs
    nameWithType: CommunicationClientEventArgs
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs`1
    name: CommunicationClientEventArgs
    nameWithType: CommunicationClientEventArgs
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientConnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientConnected
  isExternal: false
  name: ClientConnected
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.ClientConnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ClientConnected
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).ClientConnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ClientConnected
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.ClientDisconnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.ClientDisconnected
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientDisconnected
  name: ClientDisconnected
  nameWithType: ICommunicationClientFactory<IServiceRemotingClient>.ClientDisconnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ClientDisconnected
  nameWithType.vb: ICommunicationClientFactory(Of IServiceRemotingClient).ClientDisconnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient).ClientDisconnected
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientDisconnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ClientDisconnected
  isExternal: false
  name: ClientDisconnected
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.ClientDisconnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ClientDisconnected
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).ClientDisconnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ClientDisconnected
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
- uid: System.ServiceModel.NetTcpBinding
  commentId: T:System.ServiceModel.NetTcpBinding
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver.GetDefault
  commentId: M:Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver.GetDefault
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  isExternal: false
  name: WcfCommunicationClientFactory<TServiceContract>
  nameWithType: WcfCommunicationClientFactory<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract)
  name.vb: WcfCommunicationClientFactory(Of TServiceContract)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
  isExternal: false
  name: IServiceRemotingContract
  nameWithType: IServiceRemotingContract
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
  isExternal: false
  name: WcfExceptionHandler
  nameWithType: WcfExceptionHandler
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceRemotingExceptionHandler
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.ServiceRemotingExceptionHandler
  isExternal: false
  name: ServiceRemotingExceptionHandler
  nameWithType: ServiceRemotingExceptionHandler
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceRemotingExceptionHandler
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.#ctor
  isExternal: false
  name: WcfServiceRemotingClientFactory
  nameWithType: WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.WcfServiceRemotingClientFactory
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  parent: Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: IServiceRemotingCallbackClient
  nameWithType: IServiceRemotingCallbackClient
  fullName: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IExceptionHandler>
  nameWithType: IEnumerable<IExceptionHandler>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>
  nameWithType.vb: IEnumerable(Of IExceptionHandler)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler)
  name.vb: IEnumerable(Of IExceptionHandler)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
  commentId: T:Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
  parent: Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: IServicePartitionResolver
  nameWithType: IServicePartitionResolver
  fullName: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.ServiceModel.Channels.Binding,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}}
  commentId: T:System.Func{System.ServiceModel.Channels.Binding,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract}}
  parent: System
  definition: System.Func`6
  name: Func<Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory<IServiceRemotingContract>>
  nameWithType: Func<Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory<IServiceRemotingContract>>
  fullName: System.Func<System.ServiceModel.Channels.Binding, System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>, Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.String, Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract>>
  nameWithType.vb: Func(Of Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory(Of IServiceRemotingContract))
  fullname.vb: System.Func(Of System.ServiceModel.Channels.Binding, System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler), Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.String, Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract))
  name.vb: Func(Of Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, IServiceRemotingCallbackContract, WcfCommunicationClientFactory(Of IServiceRemotingContract))
  spec.csharp:
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
    name: IServicePartitionResolver
    nameWithType: IServicePartitionResolver
    fullName: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract
    name: IServiceRemotingCallbackContract
    nameWithType: IServiceRemotingCallbackContract
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
    name: IServiceRemotingContract
    nameWithType: IServiceRemotingContract
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    nameWithType: Binding
    fullName: System.ServiceModel.Channels.Binding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
    name: IServicePartitionResolver
    nameWithType: IServicePartitionResolver
    fullName: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract
    name: IServiceRemotingCallbackContract
    nameWithType: IServiceRemotingCallbackContract
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingCallbackContract
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
    name: IServiceRemotingContract
    nameWithType: IServiceRemotingContract
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.IServiceRemotingContract
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: Microsoft.ServiceFabric.Services.Remoting
  commentId: N:Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting
  nameWithType: Microsoft.ServiceFabric.Services.Remoting
  fullName: Microsoft.ServiceFabric.Services.Remoting
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceFabric.Services.Client
  commentId: N:Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Client
  nameWithType: Microsoft.ServiceFabric.Services.Client
  fullName: Microsoft.ServiceFabric.Services.Client
- uid: System.Func`6
  commentId: T:System.Func`6
  isExternal: true
  name: Func<T1, T2, T3, T4, T5, TResult>
  nameWithType: Func<T1, T2, T3, T4, T5, TResult>
  fullName: System.Func<T1, T2, T3, T4, T5, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, T4, T5, TResult)
  fullname.vb: System.Func(Of T1, T2, T3, T4, T5, TResult)
  name.vb: Func(Of T1, T2, T3, T4, T5, TResult)
  spec.csharp:
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`6
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T5
    nameWithType: T5
    fullName: T5
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: ICommunicationClient
  nameWithType: ICommunicationClient
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync
  isExternal: false
  name: ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync
  nameWithType: WcfServiceRemotingClientFactory.ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
  nameWithType.vb: WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
  name.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  name: GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of IServiceRemotingClient).GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient).GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory(Of IServiceRemotingClient).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  commentId: T:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  parent: Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
- uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: TargetReplicaSelector
  nameWithType: TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: OperationRetrySettings
  nameWithType: OperationRetrySettings
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IServiceRemotingClient>
  nameWithType: Task<IServiceRemotingClient>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>
  nameWithType.vb: Task(Of IServiceRemotingClient)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient)
  name.vb: Task(Of IServiceRemotingClient)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isExternal: true
  name: GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  name: GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of IServiceRemotingClient).GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient).GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory(Of IServiceRemotingClient).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ResolvedServicePartition
  commentId: T:System.Fabric.ResolvedServicePartition
  parent: System.Fabric
  isExternal: false
  name: ResolvedServicePartition
  nameWithType: ResolvedServicePartition
  fullName: System.Fabric.ResolvedServicePartition
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isExternal: true
  name: GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  isExternal: false
  name: OperationRetryControl
  nameWithType: OperationRetryControl
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync
  isExternal: false
  name: ICommunicationClientFactory<IServiceRemotingClient>.ReportOperationExceptionAsync
  nameWithType: WcfServiceRemotingClientFactory.ICommunicationClientFactory<IServiceRemotingClient>.ReportOperationExceptionAsync
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync
  nameWithType.vb: WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync
  name.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}.ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  name: ReportOperationExceptionAsync(IServiceRemotingClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<IServiceRemotingClient>.ReportOperationExceptionAsync(IServiceRemotingClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of IServiceRemotingClient).ReportOperationExceptionAsync(IServiceRemotingClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient).ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: ICommunicationClientFactory<IServiceRemotingClient>.ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: ICommunicationClientFactory(Of IServiceRemotingClient).ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient).ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: ExceptionInformation
  nameWithType: ExceptionInformation
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
- uid: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationRetryControl>
  nameWithType: Task<OperationRetryControl>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl>
  nameWithType.vb: Task(Of OperationRetryControl)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl)
  name.vb: Task(Of OperationRetryControl)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
    name: OperationRetryControl
    nameWithType: OperationRetryControl
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
    name: OperationRetryControl
    nameWithType: OperationRetryControl
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isExternal: true
  name: ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  nameWithType: ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync(TCommunicationClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync(TCommunicationClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>.ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient).ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
