### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.DeployedServiceReplica
  commentId: T:System.Fabric.Query.DeployedServiceReplica
  id: DeployedServiceReplica
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.DeployedServiceReplica.#ctor(System.Fabric.Query.ServiceKind)
  - System.Fabric.Query.DeployedServiceReplica.Address
  - System.Fabric.Query.DeployedServiceReplica.CodePackageName
  - System.Fabric.Query.DeployedServiceReplica.Partitionid
  - System.Fabric.Query.DeployedServiceReplica.ReplicaStatus
  - System.Fabric.Query.DeployedServiceReplica.ServiceKind
  - System.Fabric.Query.DeployedServiceReplica.ServiceManifestName
  - System.Fabric.Query.DeployedServiceReplica.ServiceManifestVersion
  - System.Fabric.Query.DeployedServiceReplica.ServiceName
  - System.Fabric.Query.DeployedServiceReplica.ServiceTypeName
  langs:
  - csharp
  - vb
  name: DeployedServiceReplica
  nameWithType: DeployedServiceReplica
  fullName: System.Fabric.Query.DeployedServiceReplica
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DeployedServiceReplica
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Represents the view of a replica on a node</p>\n"
  example: []
  syntax:
    content: >-
      [KnownType(typeof (DeployedStatefulServiceReplica))]

      [KnownType(typeof (DeployedStatelessServiceInstance))]

      public abstract class DeployedServiceReplica
    content.vb: >-
      <KnownType(GetType(DeployedStatefulServiceReplica))>

      <KnownType(GetType(DeployedStatelessServiceInstance))>

      Public MustInherit Class DeployedServiceReplica
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.DeployedServiceReplica.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Query.DeployedStatefulServiceReplica
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Query.DeployedStatelessServiceInstance
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Query.DeployedServiceReplica.#ctor(System.Fabric.Query.ServiceKind)
  commentId: M:System.Fabric.Query.DeployedServiceReplica.#ctor(System.Fabric.Query.ServiceKind)
  id: '#ctor(System.Fabric.Query.ServiceKind)'
  parent: System.Fabric.Query.DeployedServiceReplica
  langs:
  - csharp
  - vb
  name: DeployedServiceReplica(ServiceKind)
  nameWithType: DeployedServiceReplica.DeployedServiceReplica(ServiceKind)
  fullName: System.Fabric.Query.DeployedServiceReplica.DeployedServiceReplica(System.Fabric.Query.ServiceKind)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
    startLine: 28
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Query.DeployedServiceReplica\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: protected DeployedServiceReplica(ServiceKind kind)
    content.vb: Protected Sub New(kind As ServiceKind)
    parameters:
    - id: kind
      type: System.Fabric.Query.ServiceKind
      description: "\n<p>The service kind.</p>\n"
  overload: System.Fabric.Query.DeployedServiceReplica.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Query.DeployedServiceReplica.ServiceKind
  commentId: P:System.Fabric.Query.DeployedServiceReplica.ServiceKind
  id: ServiceKind
  parent: System.Fabric.Query.DeployedServiceReplica
  langs:
  - csharp
  - vb
  name: ServiceKind
  nameWithType: DeployedServiceReplica.ServiceKind
  fullName: System.Fabric.Query.DeployedServiceReplica.ServiceKind
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceKind
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
    startLine: 39
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>The type of the replica (Stateful or Stateless)</p>\n"
  example: []
  syntax:
    content: public ServiceKind ServiceKind { get; }
    content.vb: Public ReadOnly Property ServiceKind As ServiceKind
    parameters: []
    return:
      type: System.Fabric.Query.ServiceKind
      description: "\n<p>Returns <xref href=\"System.Fabric.Query.ServiceKind\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Query.DeployedServiceReplica.ServiceKind*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedServiceReplica.ServiceName
  commentId: P:System.Fabric.Query.DeployedServiceReplica.ServiceName
  id: ServiceName
  parent: System.Fabric.Query.DeployedServiceReplica
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: DeployedServiceReplica.ServiceName
  fullName: System.Fabric.Query.DeployedServiceReplica.ServiceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
    startLine: 48
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets or sets the name of the service.</p>\n"
  example: []
  syntax:
    content: public Uri ServiceName { get; }
    content.vb: Public ReadOnly Property ServiceName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The name of the service.</p>\n"
  overload: System.Fabric.Query.DeployedServiceReplica.ServiceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedServiceReplica.ServiceTypeName
  commentId: P:System.Fabric.Query.DeployedServiceReplica.ServiceTypeName
  id: ServiceTypeName
  parent: System.Fabric.Query.DeployedServiceReplica
  langs:
  - csharp
  - vb
  name: ServiceTypeName
  nameWithType: DeployedServiceReplica.ServiceTypeName
  fullName: System.Fabric.Query.DeployedServiceReplica.ServiceTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
    startLine: 56
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets or sets the name of the service type.</p>\n"
  example: []
  syntax:
    content: public string ServiceTypeName { get; }
    content.vb: Public ReadOnly Property ServiceTypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the service type.</p>\n"
  overload: System.Fabric.Query.DeployedServiceReplica.ServiceTypeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedServiceReplica.ServiceManifestVersion
  commentId: P:System.Fabric.Query.DeployedServiceReplica.ServiceManifestVersion
  id: ServiceManifestVersion
  parent: System.Fabric.Query.DeployedServiceReplica
  langs:
  - csharp
  - vb
  name: ServiceManifestVersion
  nameWithType: DeployedServiceReplica.ServiceManifestVersion
  fullName: System.Fabric.Query.DeployedServiceReplica.ServiceManifestVersion
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceManifestVersion
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
    startLine: 64
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets or sets the version of the service manifest.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This property is no longer supported", false)]

      public string ServiceManifestVersion { get; }
    content.vb: >-
      <Obsolete("This property is no longer supported", False)>

      Public ReadOnly Property ServiceManifestVersion As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The version of the service manifest.</p>\n"
  overload: System.Fabric.Query.DeployedServiceReplica.ServiceManifestVersion*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This property is no longer supported
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedServiceReplica.CodePackageName
  commentId: P:System.Fabric.Query.DeployedServiceReplica.CodePackageName
  id: CodePackageName
  parent: System.Fabric.Query.DeployedServiceReplica
  langs:
  - csharp
  - vb
  name: CodePackageName
  nameWithType: DeployedServiceReplica.CodePackageName
  fullName: System.Fabric.Query.DeployedServiceReplica.CodePackageName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CodePackageName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
    startLine: 73
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets or sets the name of the code package that hosts this replica.</p>\n"
  example: []
  syntax:
    content: public string CodePackageName { get; }
    content.vb: Public ReadOnly Property CodePackageName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the code package that hosts this replica.</p>\n"
  overload: System.Fabric.Query.DeployedServiceReplica.CodePackageName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedServiceReplica.Partitionid
  commentId: P:System.Fabric.Query.DeployedServiceReplica.Partitionid
  id: Partitionid
  parent: System.Fabric.Query.DeployedServiceReplica
  langs:
  - csharp
  - vb
  name: Partitionid
  nameWithType: DeployedServiceReplica.Partitionid
  fullName: System.Fabric.Query.DeployedServiceReplica.Partitionid
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Partitionid
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
    startLine: 81
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets or sets the partition id for this replia.</p>\n"
  example: []
  syntax:
    content: public Guid Partitionid { get; }
    content.vb: Public ReadOnly Property Partitionid As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>The partition id for this replia.</p>\n"
  overload: System.Fabric.Query.DeployedServiceReplica.Partitionid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedServiceReplica.ServiceManifestName
  commentId: P:System.Fabric.Query.DeployedServiceReplica.ServiceManifestName
  id: ServiceManifestName
  parent: System.Fabric.Query.DeployedServiceReplica
  langs:
  - csharp
  - vb
  name: ServiceManifestName
  nameWithType: DeployedServiceReplica.ServiceManifestName
  fullName: System.Fabric.Query.DeployedServiceReplica.ServiceManifestName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceManifestName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
    startLine: 90
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>The name of the service package that contains the code package hosting this replica.</p>\n"
  example: []
  syntax:
    content: public string ServiceManifestName { get; }
    content.vb: Public ReadOnly Property ServiceManifestName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Query.DeployedServiceReplica.ServiceManifestName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedServiceReplica.ReplicaStatus
  commentId: P:System.Fabric.Query.DeployedServiceReplica.ReplicaStatus
  id: ReplicaStatus
  parent: System.Fabric.Query.DeployedServiceReplica
  langs:
  - csharp
  - vb
  name: ReplicaStatus
  nameWithType: DeployedServiceReplica.ReplicaStatus
  fullName: System.Fabric.Query.DeployedServiceReplica.ReplicaStatus
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
    startLine: 98
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets or sets the status of the replica.</p>\n"
  example: []
  syntax:
    content: public ServiceReplicaStatus ReplicaStatus { get; }
    content.vb: Public ReadOnly Property ReplicaStatus As ServiceReplicaStatus
    parameters: []
    return:
      type: System.Fabric.Query.ServiceReplicaStatus
      description: "\n<p>The status of the replica.</p>\n"
  overload: System.Fabric.Query.DeployedServiceReplica.ReplicaStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedServiceReplica.Address
  commentId: P:System.Fabric.Query.DeployedServiceReplica.Address
  id: Address
  parent: System.Fabric.Query.DeployedServiceReplica
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: DeployedServiceReplica.Address
  fullName: System.Fabric.Query.DeployedServiceReplica.Address
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Address
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceReplicaResultItem.cs
    startLine: 106
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets or sets the last address returned by the replica in Open or ChangeRole.</p>\n"
  example: []
  syntax:
    content: public string Address { get; }
    content.vb: Public ReadOnly Property Address As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The last address returned by the replica in Open or ChangeRole.</p>\n"
  overload: System.Fabric.Query.DeployedServiceReplica.Address*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.DeployedServiceReplica.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<DeployedServiceReplica>()
  nameWithType: ByteArraySerializer.Serialize<DeployedServiceReplica>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.DeployedServiceReplica>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of DeployedServiceReplica)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.DeployedServiceReplica)()
  name.vb: Serialize(Of DeployedServiceReplica)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<DeployedServiceReplica>
    nameWithType: ByteArraySerializer.Serialize<DeployedServiceReplica>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.DeployedServiceReplica>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of DeployedServiceReplica)
    nameWithType: ByteArraySerializer.Serialize(Of DeployedServiceReplica)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.DeployedServiceReplica)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.DeployedServiceReplica
  commentId: T:System.Fabric.Query.DeployedServiceReplica
  parent: System.Fabric.Query
  isExternal: false
  name: DeployedServiceReplica
  nameWithType: DeployedServiceReplica
  fullName: System.Fabric.Query.DeployedServiceReplica
- uid: System.Fabric.Query.DeployedServiceReplica.#ctor*
  commentId: Overload:System.Fabric.Query.DeployedServiceReplica.#ctor
  isExternal: false
  name: DeployedServiceReplica
  nameWithType: DeployedServiceReplica.DeployedServiceReplica
  fullName: System.Fabric.Query.DeployedServiceReplica.DeployedServiceReplica
- uid: System.Fabric.Query.ServiceKind
  commentId: T:System.Fabric.Query.ServiceKind
  parent: System.Fabric.Query
  isExternal: false
  name: ServiceKind
  nameWithType: ServiceKind
  fullName: System.Fabric.Query.ServiceKind
- uid: System.Fabric.Query.DeployedServiceReplica.ServiceKind*
  commentId: Overload:System.Fabric.Query.DeployedServiceReplica.ServiceKind
  isExternal: false
  name: ServiceKind
  nameWithType: DeployedServiceReplica.ServiceKind
  fullName: System.Fabric.Query.DeployedServiceReplica.ServiceKind
- uid: System.Fabric.Query.DeployedServiceReplica.ServiceName*
  commentId: Overload:System.Fabric.Query.DeployedServiceReplica.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: DeployedServiceReplica.ServiceName
  fullName: System.Fabric.Query.DeployedServiceReplica.ServiceName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Query.DeployedServiceReplica.ServiceTypeName*
  commentId: Overload:System.Fabric.Query.DeployedServiceReplica.ServiceTypeName
  isExternal: false
  name: ServiceTypeName
  nameWithType: DeployedServiceReplica.ServiceTypeName
  fullName: System.Fabric.Query.DeployedServiceReplica.ServiceTypeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Query.DeployedServiceReplica.ServiceManifestVersion*
  commentId: Overload:System.Fabric.Query.DeployedServiceReplica.ServiceManifestVersion
  isExternal: false
  name: ServiceManifestVersion
  nameWithType: DeployedServiceReplica.ServiceManifestVersion
  fullName: System.Fabric.Query.DeployedServiceReplica.ServiceManifestVersion
- uid: System.Fabric.Query.DeployedServiceReplica.CodePackageName*
  commentId: Overload:System.Fabric.Query.DeployedServiceReplica.CodePackageName
  isExternal: false
  name: CodePackageName
  nameWithType: DeployedServiceReplica.CodePackageName
  fullName: System.Fabric.Query.DeployedServiceReplica.CodePackageName
- uid: System.Fabric.Query.DeployedServiceReplica.Partitionid*
  commentId: Overload:System.Fabric.Query.DeployedServiceReplica.Partitionid
  isExternal: false
  name: Partitionid
  nameWithType: DeployedServiceReplica.Partitionid
  fullName: System.Fabric.Query.DeployedServiceReplica.Partitionid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.Query.DeployedServiceReplica.ServiceManifestName*
  commentId: Overload:System.Fabric.Query.DeployedServiceReplica.ServiceManifestName
  isExternal: false
  name: ServiceManifestName
  nameWithType: DeployedServiceReplica.ServiceManifestName
  fullName: System.Fabric.Query.DeployedServiceReplica.ServiceManifestName
- uid: System.Fabric.Query.DeployedServiceReplica.ReplicaStatus*
  commentId: Overload:System.Fabric.Query.DeployedServiceReplica.ReplicaStatus
  isExternal: false
  name: ReplicaStatus
  nameWithType: DeployedServiceReplica.ReplicaStatus
  fullName: System.Fabric.Query.DeployedServiceReplica.ReplicaStatus
- uid: System.Fabric.Query.ServiceReplicaStatus
  commentId: T:System.Fabric.Query.ServiceReplicaStatus
  parent: System.Fabric.Query
  isExternal: false
  name: ServiceReplicaStatus
  nameWithType: ServiceReplicaStatus
  fullName: System.Fabric.Query.ServiceReplicaStatus
- uid: System.Fabric.Query.DeployedServiceReplica.Address*
  commentId: Overload:System.Fabric.Query.DeployedServiceReplica.Address
  isExternal: false
  name: Address
  nameWithType: DeployedServiceReplica.Address
  fullName: System.Fabric.Query.DeployedServiceReplica.Address
