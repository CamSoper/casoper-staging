### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.ApplicationLoadMetricInformation
  commentId: T:System.Fabric.Query.ApplicationLoadMetricInformation
  id: ApplicationLoadMetricInformation
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.ApplicationLoadMetricInformation.#ctor
  - System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationCapacity
  - System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationLoad
  - System.Fabric.Query.ApplicationLoadMetricInformation.Name
  - System.Fabric.Query.ApplicationLoadMetricInformation.ReservationCapacity
  langs:
  - csharp
  - vb
  name: ApplicationLoadMetricInformation
  nameWithType: ApplicationLoadMetricInformation
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationLoadMetricInformation
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
    startLine: 12
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nRepresents the information about capacity and current load for one metric that services of the application are using.\n"
  example: []
  syntax:
    content: public sealed class ApplicationLoadMetricInformation
    content.vb: Public NotInheritable Class ApplicationLoadMetricInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.ApplicationLoadMetricInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.ApplicationLoadMetricInformation.#ctor
  commentId: M:System.Fabric.Query.ApplicationLoadMetricInformation.#ctor
  id: '#ctor'
  parent: System.Fabric.Query.ApplicationLoadMetricInformation
  langs:
  - csharp
  - vb
  name: ApplicationLoadMetricInformation()
  nameWithType: ApplicationLoadMetricInformation.ApplicationLoadMetricInformation()
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationLoadMetricInformation()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
    startLine: 18
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Query.ApplicationLoadMetricInformation\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ApplicationLoadMetricInformation()
    content.vb: Public Sub New
  overload: System.Fabric.Query.ApplicationLoadMetricInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Query.ApplicationLoadMetricInformation.Name
  commentId: P:System.Fabric.Query.ApplicationLoadMetricInformation.Name
  id: Name
  parent: System.Fabric.Query.ApplicationLoadMetricInformation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ApplicationLoadMetricInformation.Name
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
    startLine: 28
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the name of the metric.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\nThe name of the metric.\n"
  overload: System.Fabric.Query.ApplicationLoadMetricInformation.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ApplicationLoadMetricInformation.ReservationCapacity
  commentId: P:System.Fabric.Query.ApplicationLoadMetricInformation.ReservationCapacity
  id: ReservationCapacity
  parent: System.Fabric.Query.ApplicationLoadMetricInformation
  langs:
  - csharp
  - vb
  name: ReservationCapacity
  nameWithType: ApplicationLoadMetricInformation.ReservationCapacity
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation.ReservationCapacity
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReservationCapacity
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
    startLine: 36
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the reserved capacity for this metric.\n"
  example: []
  syntax:
    content: public long ReservationCapacity { get; }
    content.vb: Public ReadOnly Property ReservationCapacity As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe ammount of capacity that is reserved in the cluster for this application.\n"
  overload: System.Fabric.Query.ApplicationLoadMetricInformation.ReservationCapacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationCapacity
  commentId: P:System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationCapacity
  id: ApplicationCapacity
  parent: System.Fabric.Query.ApplicationLoadMetricInformation
  langs:
  - csharp
  - vb
  name: ApplicationCapacity
  nameWithType: ApplicationLoadMetricInformation.ApplicationCapacity
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationCapacity
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationCapacity
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
    startLine: 44
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the total capacity for this metric.\n"
  example: []
  syntax:
    content: public long ApplicationCapacity { get; }
    content.vb: Public ReadOnly Property ApplicationCapacity As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe total capacity that is available for this metric that the services of this application can use.\n"
  overload: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationCapacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationLoad
  commentId: P:System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationLoad
  id: ApplicationLoad
  parent: System.Fabric.Query.ApplicationLoadMetricInformation
  langs:
  - csharp
  - vb
  name: ApplicationLoad
  nameWithType: ApplicationLoadMetricInformation.ApplicationLoad
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationLoad
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationLoad
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadMetricInformation.cs
    startLine: 52
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the load for this metric.\n"
  example: []
  syntax:
    content: public long ApplicationLoad { get; }
    content.vb: Public ReadOnly Property ApplicationLoad As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nThe total load that the services of this application are using.\n"
  overload: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationLoad*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.ApplicationLoadMetricInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ApplicationLoadMetricInformation>()
  nameWithType: ByteArraySerializer.Serialize<ApplicationLoadMetricInformation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.ApplicationLoadMetricInformation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ApplicationLoadMetricInformation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.ApplicationLoadMetricInformation)()
  name.vb: Serialize(Of ApplicationLoadMetricInformation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ApplicationLoadMetricInformation>
    nameWithType: ByteArraySerializer.Serialize<ApplicationLoadMetricInformation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.ApplicationLoadMetricInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ApplicationLoadMetricInformation)
    nameWithType: ByteArraySerializer.Serialize(Of ApplicationLoadMetricInformation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.ApplicationLoadMetricInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.ApplicationLoadMetricInformation
  commentId: T:System.Fabric.Query.ApplicationLoadMetricInformation
  isExternal: false
  name: ApplicationLoadMetricInformation
  nameWithType: ApplicationLoadMetricInformation
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation
- uid: System.Fabric.Query.ApplicationLoadMetricInformation.#ctor*
  commentId: Overload:System.Fabric.Query.ApplicationLoadMetricInformation.#ctor
  isExternal: false
  name: ApplicationLoadMetricInformation
  nameWithType: ApplicationLoadMetricInformation.ApplicationLoadMetricInformation
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationLoadMetricInformation
- uid: System.Fabric.Query.ApplicationLoadMetricInformation.Name*
  commentId: Overload:System.Fabric.Query.ApplicationLoadMetricInformation.Name
  isExternal: false
  name: Name
  nameWithType: ApplicationLoadMetricInformation.Name
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Query.ApplicationLoadMetricInformation.ReservationCapacity*
  commentId: Overload:System.Fabric.Query.ApplicationLoadMetricInformation.ReservationCapacity
  isExternal: false
  name: ReservationCapacity
  nameWithType: ApplicationLoadMetricInformation.ReservationCapacity
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation.ReservationCapacity
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationCapacity*
  commentId: Overload:System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationCapacity
  isExternal: false
  name: ApplicationCapacity
  nameWithType: ApplicationLoadMetricInformation.ApplicationCapacity
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationCapacity
- uid: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationLoad*
  commentId: Overload:System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationLoad
  isExternal: false
  name: ApplicationLoad
  nameWithType: ApplicationLoadMetricInformation.ApplicationLoad
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation.ApplicationLoad
