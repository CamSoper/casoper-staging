### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.Node
  commentId: T:System.Fabric.Query.Node
  id: Node
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.Node.CodeVersion
  - System.Fabric.Query.Node.ConfigVersion
  - System.Fabric.Query.Node.FaultDomain
  - System.Fabric.Query.Node.HealthState
  - System.Fabric.Query.Node.IpAddressOrFQDN
  - System.Fabric.Query.Node.IsSeedNode
  - System.Fabric.Query.Node.IsStopped
  - System.Fabric.Query.Node.NodeDeactivationInfo
  - System.Fabric.Query.Node.NodeDownTime
  - System.Fabric.Query.Node.NodeId
  - System.Fabric.Query.Node.NodeInstanceId
  - System.Fabric.Query.Node.NodeName
  - System.Fabric.Query.Node.NodeStatus
  - System.Fabric.Query.Node.NodeType
  - System.Fabric.Query.Node.NodeUpTime
  - System.Fabric.Query.Node.UpgradeDomain
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: Node
  fullName: System.Fabric.Query.Node
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Node
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Represents a node.</p>\n"
  example: []
  syntax:
    content: public sealed class Node
    content.vb: Public NotInheritable Class Node
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.Node.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.Node.NodeName
  commentId: P:System.Fabric.Query.Node.NodeName
  id: NodeName
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: NodeName
  nameWithType: Node.NodeName
  fullName: System.Fabric.Query.Node.NodeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 97
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the name of the node.</p>\n"
  example: []
  syntax:
    content: public string NodeName { get; }
    content.vb: Public ReadOnly Property NodeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
  overload: System.Fabric.Query.Node.NodeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.IpAddressOrFQDN
  commentId: P:System.Fabric.Query.Node.IpAddressOrFQDN
  id: IpAddressOrFQDN
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: IpAddressOrFQDN
  nameWithType: Node.IpAddressOrFQDN
  fullName: System.Fabric.Query.Node.IpAddressOrFQDN
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IpAddressOrFQDN
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 106
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the IP address or the Fully Qualified Domain Name (FQDN).</p>\n"
  example: []
  syntax:
    content: public string IpAddressOrFQDN { get; }
    content.vb: Public ReadOnly Property IpAddressOrFQDN As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The IP address or the Fully Qualified Domain Name (FQDN).</p>\n"
  overload: System.Fabric.Query.Node.IpAddressOrFQDN*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.NodeType
  commentId: P:System.Fabric.Query.Node.NodeType
  id: NodeType
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: NodeType
  nameWithType: Node.NodeType
  fullName: System.Fabric.Query.Node.NodeType
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeType
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 114
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the node type.</p>\n"
  example: []
  syntax:
    content: public string NodeType { get; }
    content.vb: Public ReadOnly Property NodeType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The node type.</p>\n"
  overload: System.Fabric.Query.Node.NodeType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.CodeVersion
  commentId: P:System.Fabric.Query.Node.CodeVersion
  id: CodeVersion
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: CodeVersion
  nameWithType: Node.CodeVersion
  fullName: System.Fabric.Query.Node.CodeVersion
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CodeVersion
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 123
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the code version.</p>\n"
  example: []
  syntax:
    content: public string CodeVersion { get; }
    content.vb: Public ReadOnly Property CodeVersion As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The code version.</p>\n"
  overload: System.Fabric.Query.Node.CodeVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.ConfigVersion
  commentId: P:System.Fabric.Query.Node.ConfigVersion
  id: ConfigVersion
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: ConfigVersion
  nameWithType: Node.ConfigVersion
  fullName: System.Fabric.Query.Node.ConfigVersion
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ConfigVersion
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 131
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the configuration version.</p>\n"
  example: []
  syntax:
    content: public string ConfigVersion { get; }
    content.vb: Public ReadOnly Property ConfigVersion As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The configuration version.</p>\n"
  overload: System.Fabric.Query.Node.ConfigVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.NodeStatus
  commentId: P:System.Fabric.Query.Node.NodeStatus
  id: NodeStatus
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: NodeStatus
  nameWithType: Node.NodeStatus
  fullName: System.Fabric.Query.Node.NodeStatus
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 139
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the node status.</p>\n"
  example: []
  syntax:
    content: public NodeStatus NodeStatus { get; }
    content.vb: Public ReadOnly Property NodeStatus As NodeStatus
    parameters: []
    return:
      type: System.Fabric.Query.NodeStatus
      description: "\n<p>The node status.</p>\n"
  overload: System.Fabric.Query.Node.NodeStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.NodeUpTime
  commentId: P:System.Fabric.Query.Node.NodeUpTime
  id: NodeUpTime
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: NodeUpTime
  nameWithType: Node.NodeUpTime
  fullName: System.Fabric.Query.Node.NodeUpTime
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeUpTime
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 147
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the node up time.</p>\n"
  example: []
  syntax:
    content: public TimeSpan NodeUpTime { get; }
    content.vb: Public ReadOnly Property NodeUpTime As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The node up time.</p>\n"
  overload: System.Fabric.Query.Node.NodeUpTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.NodeDownTime
  commentId: P:System.Fabric.Query.Node.NodeDownTime
  id: NodeDownTime
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: NodeDownTime
  nameWithType: Node.NodeDownTime
  fullName: System.Fabric.Query.Node.NodeDownTime
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeDownTime
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 165
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the node down time.</p>\n"
  example: []
  syntax:
    content: public TimeSpan NodeDownTime { get; }
    content.vb: Public ReadOnly Property NodeDownTime As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The node down time.</p>\n"
  overload: System.Fabric.Query.Node.NodeDownTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.HealthState
  commentId: P:System.Fabric.Query.Node.HealthState
  id: HealthState
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: HealthState
  nameWithType: Node.HealthState
  fullName: System.Fabric.Query.Node.HealthState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthState
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 183
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the health state.</p>\n"
  example: []
  syntax:
    content: public HealthState HealthState { get; }
    content.vb: Public ReadOnly Property HealthState As HealthState
    parameters: []
    return:
      type: System.Fabric.Health.HealthState
      description: "\n<p>The health state.</p>\n"
  overload: System.Fabric.Query.Node.HealthState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.IsSeedNode
  commentId: P:System.Fabric.Query.Node.IsSeedNode
  id: IsSeedNode
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: IsSeedNode
  nameWithType: Node.IsSeedNode
  fullName: System.Fabric.Query.Node.IsSeedNode
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsSeedNode
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 192
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets a value indicating whether this is a seed node.</p>\n"
  example: []
  syntax:
    content: public bool IsSeedNode { get; }
    content.vb: Public ReadOnly Property IsSeedNode As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this instance is a seed node; otherwise, <strong>false</strong>.</p>\n"
  overload: System.Fabric.Query.Node.IsSeedNode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.UpgradeDomain
  commentId: P:System.Fabric.Query.Node.UpgradeDomain
  id: UpgradeDomain
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: UpgradeDomain
  nameWithType: Node.UpgradeDomain
  fullName: System.Fabric.Query.Node.UpgradeDomain
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeDomain
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 200
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the upgrade domain.</p>\n"
  example: []
  syntax:
    content: public string UpgradeDomain { get; }
    content.vb: Public ReadOnly Property UpgradeDomain As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The upgrade domain.</p>\n"
  overload: System.Fabric.Query.Node.UpgradeDomain*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.FaultDomain
  commentId: P:System.Fabric.Query.Node.FaultDomain
  id: FaultDomain
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: FaultDomain
  nameWithType: Node.FaultDomain
  fullName: System.Fabric.Query.Node.FaultDomain
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FaultDomain
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 208
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the fault domain.</p>\n"
  example: []
  syntax:
    content: public Uri FaultDomain { get; }
    content.vb: Public ReadOnly Property FaultDomain As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The fault domain.</p>\n"
  overload: System.Fabric.Query.Node.FaultDomain*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.NodeId
  commentId: P:System.Fabric.Query.Node.NodeId
  id: NodeId
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: NodeId
  nameWithType: Node.NodeId
  fullName: System.Fabric.Query.Node.NodeId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeId
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 216
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the internal ID used by Service Fabric to uniquely identify a node.</p>\n"
  example: []
  syntax:
    content: public NodeId NodeId { get; }
    content.vb: Public ReadOnly Property NodeId As NodeId
    parameters: []
    return:
      type: System.Fabric.NodeId
      description: "\n<p>The internal ID used by Service Fabric to uniquely identify a node.</p>\n"
  overload: System.Fabric.Query.Node.NodeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.NodeInstanceId
  commentId: P:System.Fabric.Query.Node.NodeInstanceId
  id: NodeInstanceId
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: NodeInstanceId
  nameWithType: Node.NodeInstanceId
  fullName: System.Fabric.Query.Node.NodeInstanceId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeInstanceId
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 226
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the internal ID used by Service Fabric to uniquely identify a node instance. The NodeId is deterministically mapped \nfrom NodeName and does not change across node restarts. However, the NodeInstanceId will change with every restart of the node.</p>\n"
  example: []
  syntax:
    content: public BigInteger NodeInstanceId { get; }
    content.vb: Public ReadOnly Property NodeInstanceId As BigInteger
    parameters: []
    return:
      type: System.Numerics.BigInteger
      description: "\n<p>Returns <xref href=\"System.Numerics.BigInteger\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Query.Node.NodeInstanceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.NodeDeactivationInfo
  commentId: P:System.Fabric.Query.Node.NodeDeactivationInfo
  id: NodeDeactivationInfo
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: NodeDeactivationInfo
  nameWithType: Node.NodeDeactivationInfo
  fullName: System.Fabric.Query.Node.NodeDeactivationInfo
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeDeactivationInfo
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 237
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nGets the deactivation information for the node.\n</p>\n"
  example: []
  syntax:
    content: public NodeDeactivationResult NodeDeactivationInfo { get; }
    content.vb: Public ReadOnly Property NodeDeactivationInfo As NodeDeactivationResult
    parameters: []
    return:
      type: System.Fabric.Query.NodeDeactivationResult
      description: "\n<p>The node deactivation information.</p>\n"
  overload: System.Fabric.Query.Node.NodeDeactivationInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Node.IsStopped
  commentId: P:System.Fabric.Query.Node.IsStopped
  id: IsStopped
  parent: System.Fabric.Query.Node
  langs:
  - csharp
  - vb
  name: IsStopped
  nameWithType: Node.IsStopped
  fullName: System.Fabric.Query.Node.IsStopped
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsStopped
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeResultItem.cs
    startLine: 247
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nTrue if a node is stopped.  A node is in a stopped state if it was the target of a successful call to StartNodeTransitionAsync with a NodeTransitionType of Stop.\n</p>\n"
  example: []
  syntax:
    content: public bool IsStopped { get; }
    content.vb: Public ReadOnly Property IsStopped As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Whether or not a node is stopped</p>\n"
  overload: System.Fabric.Query.Node.IsStopped*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.Node.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<Node>()
  nameWithType: ByteArraySerializer.Serialize<Node>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.Node>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of Node)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.Node)()
  name.vb: Serialize(Of Node)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<Node>
    nameWithType: ByteArraySerializer.Serialize<Node>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.Node>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of Node)
    nameWithType: ByteArraySerializer.Serialize(Of Node)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.Node)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.Node.NodeName*
  commentId: Overload:System.Fabric.Query.Node.NodeName
  isExternal: false
  name: NodeName
  nameWithType: Node.NodeName
  fullName: System.Fabric.Query.Node.NodeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Query.Node.IpAddressOrFQDN*
  commentId: Overload:System.Fabric.Query.Node.IpAddressOrFQDN
  isExternal: false
  name: IpAddressOrFQDN
  nameWithType: Node.IpAddressOrFQDN
  fullName: System.Fabric.Query.Node.IpAddressOrFQDN
- uid: System.Fabric.Query.Node.NodeType*
  commentId: Overload:System.Fabric.Query.Node.NodeType
  isExternal: false
  name: NodeType
  nameWithType: Node.NodeType
  fullName: System.Fabric.Query.Node.NodeType
- uid: System.Fabric.Query.Node.CodeVersion*
  commentId: Overload:System.Fabric.Query.Node.CodeVersion
  isExternal: false
  name: CodeVersion
  nameWithType: Node.CodeVersion
  fullName: System.Fabric.Query.Node.CodeVersion
- uid: System.Fabric.Query.Node.ConfigVersion*
  commentId: Overload:System.Fabric.Query.Node.ConfigVersion
  isExternal: false
  name: ConfigVersion
  nameWithType: Node.ConfigVersion
  fullName: System.Fabric.Query.Node.ConfigVersion
- uid: System.Fabric.Query.Node.NodeStatus*
  commentId: Overload:System.Fabric.Query.Node.NodeStatus
  isExternal: false
  name: NodeStatus
  nameWithType: Node.NodeStatus
  fullName: System.Fabric.Query.Node.NodeStatus
- uid: System.Fabric.Query.NodeStatus
  commentId: T:System.Fabric.Query.NodeStatus
  parent: System.Fabric.Query
  isExternal: false
  name: NodeStatus
  nameWithType: NodeStatus
  fullName: System.Fabric.Query.NodeStatus
- uid: System.Fabric.Query.Node.NodeUpTime*
  commentId: Overload:System.Fabric.Query.Node.NodeUpTime
  isExternal: false
  name: NodeUpTime
  nameWithType: Node.NodeUpTime
  fullName: System.Fabric.Query.Node.NodeUpTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.Query.Node.NodeDownTime*
  commentId: Overload:System.Fabric.Query.Node.NodeDownTime
  isExternal: false
  name: NodeDownTime
  nameWithType: Node.NodeDownTime
  fullName: System.Fabric.Query.Node.NodeDownTime
- uid: System.Fabric.Query.Node.HealthState*
  commentId: Overload:System.Fabric.Query.Node.HealthState
  isExternal: false
  name: HealthState
  nameWithType: Node.HealthState
  fullName: System.Fabric.Query.Node.HealthState
- uid: System.Fabric.Health.HealthState
  commentId: T:System.Fabric.Health.HealthState
  parent: System.Fabric.Health
  isExternal: false
  name: HealthState
  nameWithType: HealthState
  fullName: System.Fabric.Health.HealthState
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.Query.Node.IsSeedNode*
  commentId: Overload:System.Fabric.Query.Node.IsSeedNode
  isExternal: false
  name: IsSeedNode
  nameWithType: Node.IsSeedNode
  fullName: System.Fabric.Query.Node.IsSeedNode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Query.Node.UpgradeDomain*
  commentId: Overload:System.Fabric.Query.Node.UpgradeDomain
  isExternal: false
  name: UpgradeDomain
  nameWithType: Node.UpgradeDomain
  fullName: System.Fabric.Query.Node.UpgradeDomain
- uid: System.Fabric.Query.Node.FaultDomain*
  commentId: Overload:System.Fabric.Query.Node.FaultDomain
  isExternal: false
  name: FaultDomain
  nameWithType: Node.FaultDomain
  fullName: System.Fabric.Query.Node.FaultDomain
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Query.Node.NodeId*
  commentId: Overload:System.Fabric.Query.Node.NodeId
  isExternal: false
  name: NodeId
  nameWithType: Node.NodeId
  fullName: System.Fabric.Query.Node.NodeId
- uid: System.Fabric.NodeId
  commentId: T:System.Fabric.NodeId
  parent: System.Fabric
  isExternal: false
  name: NodeId
  nameWithType: NodeId
  fullName: System.Fabric.NodeId
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: true
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.Fabric.Query.Node.NodeInstanceId*
  commentId: Overload:System.Fabric.Query.Node.NodeInstanceId
  isExternal: false
  name: NodeInstanceId
  nameWithType: Node.NodeInstanceId
  fullName: System.Fabric.Query.Node.NodeInstanceId
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: false
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: System.Fabric.Query.Node.NodeDeactivationInfo*
  commentId: Overload:System.Fabric.Query.Node.NodeDeactivationInfo
  isExternal: false
  name: NodeDeactivationInfo
  nameWithType: Node.NodeDeactivationInfo
  fullName: System.Fabric.Query.Node.NodeDeactivationInfo
- uid: System.Fabric.Query.NodeDeactivationResult
  commentId: T:System.Fabric.Query.NodeDeactivationResult
  parent: System.Fabric.Query
  isExternal: false
  name: NodeDeactivationResult
  nameWithType: NodeDeactivationResult
  fullName: System.Fabric.Query.NodeDeactivationResult
- uid: System.Fabric.Query.Node.IsStopped*
  commentId: Overload:System.Fabric.Query.Node.IsStopped
  isExternal: false
  name: IsStopped
  nameWithType: Node.IsStopped
  fullName: System.Fabric.Query.Node.IsStopped
