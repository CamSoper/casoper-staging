### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.ActorExtensions
  commentId: T:Microsoft.ServiceFabric.Actors.ActorExtensions
  id: ActorExtensions
  parent: Microsoft.ServiceFabric.Actors
  children:
  - Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorId``1(``0)
  - Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorReference(Microsoft.ServiceFabric.Actors.IActor)
  langs:
  - csharp
  - vb
  name: ActorExtensions
  nameWithType: ActorExtensions
  fullName: Microsoft.ServiceFabric.Actors.ActorExtensions
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorExtensions
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorExtensions.cs
    startLine: 9
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors
  summary: "\nClass containing extension methods for Actors.\n"
  example: []
  syntax:
    content: public static class ActorExtensions
    content.vb: Public Module ActorExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorId``1(``0)
  commentId: M:Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorId``1(``0)
  id: GetActorId``1(``0)
  isExtensionMethod: true
  parent: Microsoft.ServiceFabric.Actors.ActorExtensions
  langs:
  - csharp
  - vb
  name: GetActorId<TIActor>(TIActor)
  nameWithType: ActorExtensions.GetActorId<TIActor>(TIActor)
  fullName: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorId<TIActor>(TIActor)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetActorId
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors
  summary: "\nGets <xref href=\"Microsoft.ServiceFabric.Actors.ActorId\" data-throw-if-not-resolved=\"false\"></xref> for the actor./&gt;\n"
  example: []
  syntax:
    content: 'public static ActorId GetActorId<TIActor>(this TIActor actor)where TIActor : IActor'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetActorId(Of TIActor As IActor)(actor As TIActor) As ActorId
    parameters:
    - id: actor
      type: '{TIActor}'
      description: Actor object to get ActorId for.
    typeParameters:
    - id: TIActor
      description: Actor interface type.
    return:
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: <xref href="Microsoft.ServiceFabric.Actors.ActorId" data-throw-if-not-resolved="false"></xref> for the actor.
  overload: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorId*
  nameWithType.vb: ActorExtensions.GetActorId(Of TIActor)(TIActor)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorId(Of TIActor)(TIActor)
  name.vb: GetActorId(Of TIActor)(TIActor)
- uid: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorReference(Microsoft.ServiceFabric.Actors.IActor)
  commentId: M:Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorReference(Microsoft.ServiceFabric.Actors.IActor)
  id: GetActorReference(Microsoft.ServiceFabric.Actors.IActor)
  isExtensionMethod: true
  parent: Microsoft.ServiceFabric.Actors.ActorExtensions
  langs:
  - csharp
  - vb
  name: GetActorReference(IActor)
  nameWithType: ActorExtensions.GetActorReference(IActor)
  fullName: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorReference(Microsoft.ServiceFabric.Actors.IActor)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetActorReference
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorExtensions.cs
    startLine: 29
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors
  summary: "\nGets <xref href=\"Microsoft.ServiceFabric.Actors.ActorReference\" data-throw-if-not-resolved=\"false\"></xref> for the actor.\n"
  example: []
  syntax:
    content: public static ActorReference GetActorReference(this IActor actor)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetActorReference(actor As IActor) As ActorReference
    parameters:
    - id: actor
      type: Microsoft.ServiceFabric.Actors.IActor
      description: Actor object to get ActorReference for.
    return:
      type: Microsoft.ServiceFabric.Actors.ActorReference
      description: <xref href="Microsoft.ServiceFabric.Actors.ActorReference" data-throw-if-not-resolved="false"></xref> for the actor.
  overload: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.ServiceFabric.Actors
  commentId: N:Microsoft.ServiceFabric.Actors
  isExternal: false
  name: Microsoft.ServiceFabric.Actors
  nameWithType: Microsoft.ServiceFabric.Actors
  fullName: Microsoft.ServiceFabric.Actors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Actors.ActorId
  commentId: T:Microsoft.ServiceFabric.Actors.ActorId
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: ActorId
  nameWithType: ActorId
  fullName: Microsoft.ServiceFabric.Actors.ActorId
- uid: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorId*
  commentId: Overload:Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorId
  isExternal: false
  name: GetActorId<TIActor>
  nameWithType: ActorExtensions.GetActorId<TIActor>
  fullName: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorId<TIActor>
  nameWithType.vb: ActorExtensions.GetActorId(Of TIActor)
  fullname.vb: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorId(Of TIActor)
  name.vb: GetActorId(Of TIActor)
- uid: '{TIActor}'
  commentId: '!:TIActor'
  definition: TIActor
  name: TIActor
  nameWithType: TIActor
  fullName: TIActor
- uid: TIActor
  commentId: '!:TIActor'
  isExternal: false
  name: TIActor
  nameWithType: TIActor
  fullName: TIActor
- uid: Microsoft.ServiceFabric.Actors.ActorReference
  commentId: T:Microsoft.ServiceFabric.Actors.ActorReference
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: ActorReference
  nameWithType: ActorReference
  fullName: Microsoft.ServiceFabric.Actors.ActorReference
- uid: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorReference*
  commentId: Overload:Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorReference
  isExternal: false
  name: GetActorReference
  nameWithType: ActorExtensions.GetActorReference
  fullName: Microsoft.ServiceFabric.Actors.ActorExtensions.GetActorReference
- uid: Microsoft.ServiceFabric.Actors.IActor
  commentId: T:Microsoft.ServiceFabric.Actors.IActor
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: IActor
  nameWithType: IActor
  fullName: Microsoft.ServiceFabric.Actors.IActor
