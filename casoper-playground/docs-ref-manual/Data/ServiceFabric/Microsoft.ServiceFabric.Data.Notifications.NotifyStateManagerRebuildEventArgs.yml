### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs
  id: NotifyStateManagerRebuildEventArgs
  parent: Microsoft.ServiceFabric.Data.Notifications
  children:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.#ctor(Microsoft.ServiceFabric.Data.IAsyncEnumerable{Microsoft.ServiceFabric.Data.IReliableState})
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.ReliableStates
  langs:
  - csharp
  - vb
  name: NotifyStateManagerRebuildEventArgs
  nameWithType: NotifyStateManagerRebuildEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerRebuildEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NotifyStateManagerRebuildEventArgs
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerRebuildEventArgs.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nProvides data for the StateManagerChanged event caused by a rebuild.\nCommonly called during recovery, restore and end of copy.\n"
  example: []
  syntax:
    content: 'public class NotifyStateManagerRebuildEventArgs : NotifyStateManagerChangedEventArgs'
    content.vb: >-
      Public Class NotifyStateManagerRebuildEventArgs
          Inherits NotifyStateManagerChangedEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  inheritedMembers:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.#ctor(Microsoft.ServiceFabric.Data.IAsyncEnumerable{Microsoft.ServiceFabric.Data.IReliableState})
  commentId: M:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.#ctor(Microsoft.ServiceFabric.Data.IAsyncEnumerable{Microsoft.ServiceFabric.Data.IReliableState})
  id: '#ctor(Microsoft.ServiceFabric.Data.IAsyncEnumerable{Microsoft.ServiceFabric.Data.IReliableState})'
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs
  langs:
  - csharp
  - vb
  name: NotifyStateManagerRebuildEventArgs(IAsyncEnumerable<IReliableState>)
  nameWithType: NotifyStateManagerRebuildEventArgs.NotifyStateManagerRebuildEventArgs(IAsyncEnumerable<IReliableState>)
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.NotifyStateManagerRebuildEventArgs(Microsoft.ServiceFabric.Data.IAsyncEnumerable<Microsoft.ServiceFabric.Data.IReliableState>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerRebuildEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerRebuildEventArgs.cs
    startLine: 27
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nInitializes a new instance of the <cref name=\"NotifyStateManagerChangedEventArgs\"></cref>\n"
  example: []
  syntax:
    content: public NotifyStateManagerRebuildEventArgs(IAsyncEnumerable<IReliableState> reliableStates)
    content.vb: Public Sub New(reliableStates As IAsyncEnumerable(Of IReliableState))
    parameters:
    - id: reliableStates
      type: Microsoft.ServiceFabric.Data.IAsyncEnumerable{Microsoft.ServiceFabric.Data.IReliableState}
      description: "\n<cref name=\"IAsyncEnumerable\"></cref> of all the ReliableState after the rebuild.\n"
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.#ctor*
  nameWithType.vb: NotifyStateManagerRebuildEventArgs.NotifyStateManagerRebuildEventArgs(IAsyncEnumerable(Of IReliableState))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.NotifyStateManagerRebuildEventArgs(Microsoft.ServiceFabric.Data.IAsyncEnumerable(Of Microsoft.ServiceFabric.Data.IReliableState))
  name.vb: NotifyStateManagerRebuildEventArgs(IAsyncEnumerable(Of IReliableState))
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.ReliableStates
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.ReliableStates
  id: ReliableStates
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs
  langs:
  - csharp
  - vb
  name: ReliableStates
  nameWithType: NotifyStateManagerRebuildEventArgs.ReliableStates
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.ReliableStates
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerRebuildEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReliableStates
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerRebuildEventArgs.cs
    startLine: 38
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nEnumerable of all the new state providers now in the State Manager.\n"
  example: []
  syntax:
    content: public IAsyncEnumerable<IReliableState> ReliableStates { get; }
    content.vb: Public ReadOnly Property ReliableStates As IAsyncEnumerable(Of IReliableState)
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.IAsyncEnumerable{Microsoft.ServiceFabric.Data.IReliableState}
      description: "\nAsynchronous enumerable that contains the new set of <cref name=\"IReliableState\"></cref>s.\n"
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.ReliableStates*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Data.Notifications
  commentId: N:Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: Microsoft.ServiceFabric.Data.Notifications
  nameWithType: Microsoft.ServiceFabric.Data.Notifications
  fullName: Microsoft.ServiceFabric.Data.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  parent: Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: NotifyStateManagerChangedEventArgs
  nameWithType: NotifyStateManagerChangedEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  isExternal: false
  name: Action
  nameWithType: NotifyStateManagerChangedEventArgs.Action
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NotifyStateManagerRebuildEventArgs>()
  nameWithType: ByteArraySerializer.Serialize<NotifyStateManagerRebuildEventArgs>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NotifyStateManagerRebuildEventArgs)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs)()
  name.vb: Serialize(Of NotifyStateManagerRebuildEventArgs)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NotifyStateManagerRebuildEventArgs>
    nameWithType: ByteArraySerializer.Serialize<NotifyStateManagerRebuildEventArgs>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NotifyStateManagerRebuildEventArgs)
    nameWithType: ByteArraySerializer.Serialize(Of NotifyStateManagerRebuildEventArgs)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.#ctor
  isExternal: false
  name: NotifyStateManagerRebuildEventArgs
  nameWithType: NotifyStateManagerRebuildEventArgs.NotifyStateManagerRebuildEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.NotifyStateManagerRebuildEventArgs
- uid: Microsoft.ServiceFabric.Data.IAsyncEnumerable{Microsoft.ServiceFabric.Data.IReliableState}
  commentId: T:Microsoft.ServiceFabric.Data.IAsyncEnumerable{Microsoft.ServiceFabric.Data.IReliableState}
  parent: Microsoft.ServiceFabric.Data
  definition: Microsoft.ServiceFabric.Data.IAsyncEnumerable`1
  name: IAsyncEnumerable<IReliableState>
  nameWithType: IAsyncEnumerable<IReliableState>
  fullName: Microsoft.ServiceFabric.Data.IAsyncEnumerable<Microsoft.ServiceFabric.Data.IReliableState>
  nameWithType.vb: IAsyncEnumerable(Of IReliableState)
  fullname.vb: Microsoft.ServiceFabric.Data.IAsyncEnumerable(Of Microsoft.ServiceFabric.Data.IReliableState)
  name.vb: IAsyncEnumerable(Of IReliableState)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: Microsoft.ServiceFabric.Data.IAsyncEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Data.IReliableState
    name: IReliableState
    nameWithType: IReliableState
    fullName: Microsoft.ServiceFabric.Data.IReliableState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: Microsoft.ServiceFabric.Data.IAsyncEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Data.IReliableState
    name: IReliableState
    nameWithType: IReliableState
    fullName: Microsoft.ServiceFabric.Data.IReliableState
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.IAsyncEnumerable`1
  commentId: T:Microsoft.ServiceFabric.Data.IAsyncEnumerable`1
  isExternal: false
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: Microsoft.ServiceFabric.Data.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullname.vb: Microsoft.ServiceFabric.Data.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: Microsoft.ServiceFabric.Data.IAsyncEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: Microsoft.ServiceFabric.Data.IAsyncEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.ReliableStates*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.ReliableStates
  isExternal: false
  name: ReliableStates
  nameWithType: NotifyStateManagerRebuildEventArgs.ReliableStates
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerRebuildEventArgs.ReliableStates
