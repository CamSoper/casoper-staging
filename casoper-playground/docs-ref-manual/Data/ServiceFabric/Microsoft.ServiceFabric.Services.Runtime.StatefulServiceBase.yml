### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  commentId: T:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  id: StatefulServiceBase
  parent: Microsoft.ServiceFabric.Services.Runtime
  children:
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.#ctor(System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Data.IStateProviderReplica)
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription)
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription,System.TimeSpan,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync(Microsoft.ServiceFabric.Data.RestoreContext,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync(System.Fabric.ReplicaOpenMode,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: StatefulServiceBase
  nameWithType: StatefulServiceBase
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StatefulServiceBase
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nRepresents base class for Microsoft Service Fabric based stateful reliable service.\n"
  example: []
  syntax:
    content: 'public abstract class StatefulServiceBase : IStatefulUserServiceReplica'
    content.vb: >-
      Public MustInherit Class StatefulServiceBase
          Implements IStatefulUserServiceReplica
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.#ctor(System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Data.IStateProviderReplica)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.#ctor(System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Data.IStateProviderReplica)
  id: '#ctor(System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Data.IStateProviderReplica)'
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: StatefulServiceBase(StatefulServiceContext, IStateProviderReplica)
  nameWithType: StatefulServiceBase.StatefulServiceBase(StatefulServiceContext, IStateProviderReplica)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.StatefulServiceBase(System.Fabric.StatefulServiceContext, Microsoft.ServiceFabric.Data.IStateProviderReplica)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nCreates a new StatefulService.\n"
  example: []
  syntax:
    content: protected StatefulServiceBase(StatefulServiceContext serviceContext, IStateProviderReplica stateProviderReplica)
    content.vb: Protected Sub New(serviceContext As StatefulServiceContext, stateProviderReplica As IStateProviderReplica)
    parameters:
    - id: serviceContext
      type: System.Fabric.StatefulServiceContext
      description: "\nA <xref href=\"System.Fabric.StatefulServiceContext\" data-throw-if-not-resolved=\"false\"></xref> that describes the service context.\n"
    - id: stateProviderReplica
      type: Microsoft.ServiceFabric.Data.IStateProviderReplica
      description: "\nA <xref href=\"Microsoft.ServiceFabric.Data.IStateProviderReplica\" data-throw-if-not-resolved=\"false\"></xref> that represents a reliable state provider replica.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context
  commentId: P:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context
  id: Context
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: StatefulServiceBase.Context
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Context
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 59
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nGets the service context that this stateful service is operating under. It provides\ninformation like ReplicaId, PartitionId, ServiceName etc.\n"
  example: []
  syntax:
    content: public StatefulServiceContext Context { get; }
    content.vb: Public ReadOnly Property Context As StatefulServiceContext
    parameters: []
    return:
      type: System.Fabric.StatefulServiceContext
      description: "\nA <xref href=\"System.Fabric.StatefulServiceContext\" data-throw-if-not-resolved=\"false\"></xref> that describes the service context.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
  id: GetAddresses
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: GetAddresses()
  nameWithType: StatefulServiceBase.GetAddresses()
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetAddresses
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 72
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nGets list of all the addresses for this service replica\nas (ListenerName, Endpoint) key-value pair.\n"
  example: []
  syntax:
    content: protected IReadOnlyDictionary<string, string> GetAddresses()
    content.vb: Protected Function GetAddresses As IReadOnlyDictionary(Of String, String)
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
      description: "\nAn <xref href=\"System.Collections.Generic.IReadOnlyDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> containing list of addresses as\n(ListenerName, Endpoint) key-value pair.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition
  commentId: P:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition
  id: Partition
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: Partition
  nameWithType: StatefulServiceBase.Partition
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Partition
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 84
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nService partition to which current service replica belongs. \n"
  example: []
  syntax:
    content: protected IStatefulServicePartition Partition { get; }
    content.vb: Protected ReadOnly Property Partition As IStatefulServicePartition
    parameters: []
    return:
      type: System.Fabric.IStatefulServicePartition
      description: "\nAn <xref href=\"System.Fabric.IStatefulServicePartition\" data-throw-if-not-resolved=\"false\"></xref> that represents the \npartition to which this service replica belongs.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
  id: CreateServiceReplicaListeners
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: CreateServiceReplicaListeners()
  nameWithType: StatefulServiceBase.CreateServiceReplicaListeners()
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateServiceReplicaListeners
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 92
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nOverride this method to supply the communication listeners for the service replica. The endpoints returned by the communication listener's\nare stored as a JSON string of ListenerName, Endpoint string pairs like \n{\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<ServiceReplicaListener> CreateServiceReplicaListeners()
    content.vb: Protected Overridable Function CreateServiceReplicaListeners As IEnumerable(Of ServiceReplicaListener)
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener}
      description: List of ServiceReplicaListeners
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync(System.Fabric.ReplicaOpenMode,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync(System.Fabric.ReplicaOpenMode,System.Threading.CancellationToken)
  id: OnOpenAsync(System.Fabric.ReplicaOpenMode,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: OnOpenAsync(ReplicaOpenMode, CancellationToken)
  nameWithType: StatefulServiceBase.OnOpenAsync(ReplicaOpenMode, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync(System.Fabric.ReplicaOpenMode, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnOpenAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 106
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nThis method is called as the final step of opening the service.\nOverride this method to be notified that Open has completed for this replica's internal components.\n"
  example: []
  syntax:
    content: protected virtual Task OnOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
    content.vb: Protected Overridable Function OnOpenAsync(openMode As ReplicaOpenMode, cancellationToken As CancellationToken) As Task
    parameters:
    - id: openMode
      type: System.Fabric.ReplicaOpenMode
      description: <xref href="System.Fabric.ReplicaOpenMode" data-throw-if-not-resolved="false"></xref> for this service replica.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  id: OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: OnChangeRoleAsync(ReplicaRole, CancellationToken)
  nameWithType: StatefulServiceBase.OnChangeRoleAsync(ReplicaRole, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnChangeRoleAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 120
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nThis method is called as the final step before completing <xref href=\"System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\nOverride this method to be notified that ChangeRole has completed for this replica's internal components.\n"
  example: []
  syntax:
    content: protected virtual Task OnChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    content.vb: Protected Overridable Function OnChangeRoleAsync(newRole As ReplicaRole, cancellationToken As CancellationToken) As Task
    parameters:
    - id: newRole
      type: System.Fabric.ReplicaRole
      description: New <xref href="System.Fabric.ReplicaRole" data-throw-if-not-resolved="false"></xref> for this service replica.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)
  id: RunAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: RunAsync(CancellationToken)
  nameWithType: StatefulServiceBase.RunAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RunAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 133
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nServices that want to implement a processing loop which runs when it is primary and has write status,\njust override this method with their logic.\n"
  example: []
  syntax:
    content: protected virtual Task RunAsync(CancellationToken cancellationToken)
    content.vb: Protected Overridable Function RunAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)
  id: OnCloseAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: OnCloseAsync(CancellationToken)
  nameWithType: StatefulServiceBase.OnCloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnCloseAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 146
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nThis method is called as the final step of closing the service.\nOverride this method to be notified that Close has completed for this replica's internal components.\n"
  example: []
  syntax:
    content: protected virtual Task OnCloseAsync(CancellationToken cancellationToken)
    content.vb: Protected Overridable Function OnCloseAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
  id: OnAbort
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: OnAbort()
  nameWithType: StatefulServiceBase.OnAbort()
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnAbort
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 155
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nNotification that the service is being aborted.  RunAsync MAY be running concurrently\nwith the execution of this method, as cancellation is not awaited on the abort path.\n"
  example: []
  syntax:
    content: protected virtual void OnAbort()
    content.vb: Protected Overridable Sub OnAbort
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync(Microsoft.ServiceFabric.Data.RestoreContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync(Microsoft.ServiceFabric.Data.RestoreContext,System.Threading.CancellationToken)
  id: OnDataLossAsync(Microsoft.ServiceFabric.Data.RestoreContext,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: OnDataLossAsync(RestoreContext, CancellationToken)
  nameWithType: StatefulServiceBase.OnDataLossAsync(RestoreContext, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync(Microsoft.ServiceFabric.Data.RestoreContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnDataLossAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 219
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nThis method is called during suspected data loss. \nYou can override this method to restore the service in case of data loss.\n"
  example: []
  syntax:
    content: protected virtual Task<bool> OnDataLossAsync(RestoreContext restoreCtx, CancellationToken cancellationToken)
    content.vb: Protected Overridable Function OnDataLossAsync(restoreCtx As RestoreContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: restoreCtx
      type: Microsoft.ServiceFabric.Data.RestoreContext
      description: "\nA <xref href=\"Microsoft.ServiceFabric.Data.RestoreContext\" data-throw-if-not-resolved=\"false\"></xref> to be used to restore the service.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> to monitor for cancellation requests.\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\nA Task that represents the asynchronous restore operation.\nTrue indicates that the state has been restored.\nFalse indicates that the replica's state has not been modified.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription)
  id: BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: BackupAsync(BackupDescription)
  nameWithType: StatefulServiceBase.BackupAsync(BackupDescription)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BackupAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 233
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nPerforms a backup of all reliable state managed by this <xref href=\"Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task BackupAsync(BackupDescription backupDescription)
    content.vb: Public Function BackupAsync(backupDescription As BackupDescription) As Task
    parameters:
    - id: backupDescription
      type: Microsoft.ServiceFabric.Data.BackupDescription
      description: "\nA <xref href=\"Microsoft.ServiceFabric.Data.BackupDescription\" data-throw-if-not-resolved=\"false\"></xref> describing the backup request.\n"
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous backup operation.
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription,System.TimeSpan,System.Threading.CancellationToken)
  id: BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription,System.TimeSpan,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  langs:
  - csharp
  - vb
  name: BackupAsync(BackupDescription, TimeSpan, CancellationToken)
  nameWithType: StatefulServiceBase.BackupAsync(BackupDescription, TimeSpan, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BackupAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatefulServiceBase.cs
    startLine: 254
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nPerforms a backup of all reliable state managed by this <xref href=\"Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nBoolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location.\nIf false is returned, BackupAsync throws InvalidOperationException with the relevant message indicating backupCallback returned false.\nAlso, backup will be marked as unsuccessful.\n"
  example: []
  syntax:
    content: public Task BackupAsync(BackupDescription backupDescription, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function BackupAsync(backupDescription As BackupDescription, timeout As TimeSpan, cancellationToken As CancellationToken) As Task
    parameters:
    - id: backupDescription
      type: Microsoft.ServiceFabric.Data.BackupDescription
      description: A <xref href="Microsoft.ServiceFabric.Data.BackupDescription" data-throw-if-not-resolved="false"></xref> describing the backup request.
    - id: timeout
      type: System.TimeSpan
      description: The timeout for this operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous backup operation.
  overload: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceFabric.Services.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Runtime
  fullName: Microsoft.ServiceFabric.Services.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<StatefulServiceBase>()
  nameWithType: ByteArraySerializer.Serialize<StatefulServiceBase>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of StatefulServiceBase)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase)()
  name.vb: Serialize(Of StatefulServiceBase)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<StatefulServiceBase>
    nameWithType: ByteArraySerializer.Serialize<StatefulServiceBase>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of StatefulServiceBase)
    nameWithType: ByteArraySerializer.Serialize(Of StatefulServiceBase)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.StatefulServiceContext
  commentId: T:System.Fabric.StatefulServiceContext
  parent: System.Fabric
  isExternal: false
  name: StatefulServiceContext
  nameWithType: StatefulServiceContext
  fullName: System.Fabric.StatefulServiceContext
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica
  commentId: T:Microsoft.ServiceFabric.Data.IStateProviderReplica
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: IStateProviderReplica
  nameWithType: IStateProviderReplica
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.#ctor
  isExternal: false
  name: StatefulServiceBase
  nameWithType: StatefulServiceBase.StatefulServiceBase
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.StatefulServiceBase
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context
  isExternal: false
  name: Context
  nameWithType: StatefulServiceBase.Context
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
  isExternal: false
  name: GetAddresses
  nameWithType: StatefulServiceBase.GetAddresses
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, String>
  nameWithType: IReadOnlyDictionary<String, String>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.IStatefulServicePartition
  commentId: T:System.Fabric.IStatefulServicePartition
  parent: System.Fabric
  isExternal: false
  name: IStatefulServicePartition
  nameWithType: IStatefulServicePartition
  fullName: System.Fabric.IStatefulServicePartition
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition
  isExternal: false
  name: Partition
  nameWithType: StatefulServiceBase.Partition
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
  isExternal: false
  name: CreateServiceReplicaListeners
  nameWithType: StatefulServiceBase.CreateServiceReplicaListeners
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ServiceReplicaListener>
  nameWithType: IEnumerable<ServiceReplicaListener>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener>
  nameWithType.vb: IEnumerable(Of ServiceReplicaListener)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener)
  name.vb: IEnumerable(Of ServiceReplicaListener)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
    name: ServiceReplicaListener
    nameWithType: ServiceReplicaListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
    name: ServiceReplicaListener
    nameWithType: ServiceReplicaListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReplicaOpenMode
  commentId: T:System.Fabric.ReplicaOpenMode
  parent: System.Fabric
  isExternal: false
  name: ReplicaOpenMode
  nameWithType: ReplicaOpenMode
  fullName: System.Fabric.ReplicaOpenMode
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync
  isExternal: false
  name: OnOpenAsync
  nameWithType: StatefulServiceBase.OnOpenAsync
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  commentId: M:System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  parent: System.Fabric.IStatefulServiceReplica
  isExternal: true
  name: ChangeRoleAsync(ReplicaRole, CancellationToken)
  nameWithType: IStatefulServiceReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
  fullName: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
    name: ChangeRoleAsync
    nameWithType: IStatefulServiceReplica.ChangeRoleAsync
    fullName: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
    name: ChangeRoleAsync
    nameWithType: IStatefulServiceReplica.ChangeRoleAsync
    fullName: System.Fabric.IStatefulServiceReplica.ChangeRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReplicaRole
  commentId: T:System.Fabric.ReplicaRole
  parent: System.Fabric
  isExternal: false
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: System.Fabric.ReplicaRole
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync
  isExternal: false
  name: OnChangeRoleAsync
  nameWithType: StatefulServiceBase.OnChangeRoleAsync
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync
- uid: System.Fabric.IStatefulServiceReplica
  commentId: T:System.Fabric.IStatefulServiceReplica
  parent: System.Fabric
  isExternal: false
  name: IStatefulServiceReplica
  nameWithType: IStatefulServiceReplica
  fullName: System.Fabric.IStatefulServiceReplica
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync
  isExternal: false
  name: RunAsync
  nameWithType: StatefulServiceBase.RunAsync
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync
  isExternal: false
  name: OnCloseAsync
  nameWithType: StatefulServiceBase.OnCloseAsync
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
  isExternal: false
  name: OnAbort
  nameWithType: StatefulServiceBase.OnAbort
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
- uid: Microsoft.ServiceFabric.Data.RestoreContext
  commentId: T:Microsoft.ServiceFabric.Data.RestoreContext
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: RestoreContext
  nameWithType: RestoreContext
  fullName: Microsoft.ServiceFabric.Data.RestoreContext
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync
  isExternal: false
  name: OnDataLossAsync
  nameWithType: StatefulServiceBase.OnDataLossAsync
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  commentId: T:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  parent: Microsoft.ServiceFabric.Services.Runtime
  isExternal: false
  name: StatefulServiceBase
  nameWithType: StatefulServiceBase
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
- uid: Microsoft.ServiceFabric.Data.BackupDescription
  commentId: T:Microsoft.ServiceFabric.Data.BackupDescription
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: BackupDescription
  nameWithType: BackupDescription
  fullName: Microsoft.ServiceFabric.Data.BackupDescription
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync
  isExternal: false
  name: BackupAsync
  nameWithType: StatefulServiceBase.BackupAsync
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
