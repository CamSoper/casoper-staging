### YamlMime:ManagedReference
items:
- uid: System.Fabric.SelectedReplica
  commentId: T:System.Fabric.SelectedReplica
  id: SelectedReplica
  parent: System.Fabric
  children:
  - System.Fabric.SelectedReplica.Equals(System.Fabric.SelectedReplica)
  - System.Fabric.SelectedReplica.None
  - System.Fabric.SelectedReplica.ReplicaOrInstanceId
  - System.Fabric.SelectedReplica.SelectedPartition
  - System.Fabric.SelectedReplica.ToString
  langs:
  - csharp
  - vb
  name: SelectedReplica
  nameWithType: SelectedReplica
  fullName: System.Fabric.SelectedReplica
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SelectedReplica
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
    startLine: 18
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nReturns selected replica object using ReplicaSelector testability API.\n"
  remarks: "\nThis class returns information about the selected replica selected using replica selector testability API. \nIf the ReplicaSelector was generated using the RandomOf overload this class will be populated with \nReplicaOrInstance ID and PartitionSelector for the selected replica\n"
  example: []
  syntax:
    content: 'public class SelectedReplica : IEquatable<SelectedReplica>'
    content.vb: >-
      Public Class SelectedReplica
          Implements IEquatable(Of SelectedReplica)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{System.Fabric.SelectedReplica}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.SelectedReplica.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.SelectedReplica.None
  commentId: F:System.Fabric.SelectedReplica.None
  id: None
  parent: System.Fabric.SelectedReplica
  langs:
  - csharp
  - vb
  name: None
  nameWithType: SelectedReplica.None
  fullName: System.Fabric.SelectedReplica.None
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: None
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
    startLine: 28
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nReturns None replica selector. \n"
  remarks: "\nA SelectedReplica will be none for any testability API with overloads which does not take a replica instance id and partition\nselector as an input. For example if RestartNodeAsync is called with the NodeName overload\ninstead of ReplicaSelector. Returned ReplicaSelector will be None in that case.\n"
  example: []
  syntax:
    content: public static readonly SelectedReplica None
    content.vb: Public Shared ReadOnly None As SelectedReplica
    return:
      type: System.Fabric.SelectedReplica
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Fabric.SelectedReplica.ReplicaOrInstanceId
  commentId: P:System.Fabric.SelectedReplica.ReplicaOrInstanceId
  id: ReplicaOrInstanceId
  parent: System.Fabric.SelectedReplica
  langs:
  - csharp
  - vb
  name: ReplicaOrInstanceId
  nameWithType: SelectedReplica.ReplicaOrInstanceId
  fullName: System.Fabric.SelectedReplica.ReplicaOrInstanceId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaOrInstanceId
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
    startLine: 52
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets replica or instance ID\n"
  example: []
  syntax:
    content: public long ReplicaOrInstanceId { get; }
    content.vb: Public ReadOnly Property ReplicaOrInstanceId As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>Returns the replica or instance ID for this SelectedReplica</p>\n"
  overload: System.Fabric.SelectedReplica.ReplicaOrInstanceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.SelectedReplica.SelectedPartition
  commentId: P:System.Fabric.SelectedReplica.SelectedPartition
  id: SelectedPartition
  parent: System.Fabric.SelectedReplica
  langs:
  - csharp
  - vb
  name: SelectedPartition
  nameWithType: SelectedReplica.SelectedPartition
  fullName: System.Fabric.SelectedReplica.SelectedPartition
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SelectedPartition
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
    startLine: 60
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets selected partition \n"
  example: []
  syntax:
    content: public SelectedPartition SelectedPartition { get; }
    content.vb: Public ReadOnly Property SelectedPartition As SelectedPartition
    parameters: []
    return:
      type: System.Fabric.SelectedPartition
      description: "\n<p>Returns <xref href=\"System.Fabric.SelectedReplica\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.SelectedReplica.SelectedPartition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.SelectedReplica.Equals(System.Fabric.SelectedReplica)
  commentId: M:System.Fabric.SelectedReplica.Equals(System.Fabric.SelectedReplica)
  id: Equals(System.Fabric.SelectedReplica)
  parent: System.Fabric.SelectedReplica
  langs:
  - csharp
  - vb
  name: Equals(SelectedReplica)
  nameWithType: SelectedReplica.Equals(SelectedReplica)
  fullName: System.Fabric.SelectedReplica.Equals(System.Fabric.SelectedReplica)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Equals
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
    startLine: 67
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nCompares this SelectedReplica with other SelectedReplica.\n"
  example: []
  syntax:
    content: public bool Equals(SelectedReplica other)
    content.vb: Public Function Equals(other As SelectedReplica) As Boolean
    parameters:
    - id: other
      type: System.Fabric.SelectedReplica
      description: A selected replica with which the current SelectedReplica is to be compared.
    return:
      type: System.Boolean
      description: True, if both replicaOrInstanceId and SelectedPartition, of the two SelectedReplica objects match; else returns false.
  overload: System.Fabric.SelectedReplica.Equals*
  implements:
  - System.IEquatable{System.Fabric.SelectedReplica}.Equals(System.Fabric.SelectedReplica)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.SelectedReplica.ToString
  commentId: M:System.Fabric.SelectedReplica.ToString
  id: ToString
  parent: System.Fabric.SelectedReplica
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SelectedReplica.ToString()
  fullName: System.Fabric.SelectedReplica.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedReplica.cs
    startLine: 76
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nReturns a string representation of SelectedReplica object\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: 'A string with the format: ReplicaOrInstanceId = &lt;replicaOrInstanceId&gt;, SelectedPartition = &lt;selectedPartition&gt;'
  overridden: System.Object.ToString
  overload: System.Fabric.SelectedReplica.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{System.Fabric.SelectedReplica}
  commentId: T:System.IEquatable{System.Fabric.SelectedReplica}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<SelectedReplica>
  nameWithType: IEquatable<SelectedReplica>
  fullName: System.IEquatable<System.Fabric.SelectedReplica>
  nameWithType.vb: IEquatable(Of SelectedReplica)
  fullname.vb: System.IEquatable(Of System.Fabric.SelectedReplica)
  name.vb: IEquatable(Of SelectedReplica)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.SelectedReplica
    name: SelectedReplica
    nameWithType: SelectedReplica
    fullName: System.Fabric.SelectedReplica
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.SelectedReplica
    name: SelectedReplica
    nameWithType: SelectedReplica
    fullName: System.Fabric.SelectedReplica
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.SelectedReplica.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<SelectedReplica>()
  nameWithType: ByteArraySerializer.Serialize<SelectedReplica>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.SelectedReplica>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of SelectedReplica)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.SelectedReplica)()
  name.vb: Serialize(Of SelectedReplica)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<SelectedReplica>
    nameWithType: ByteArraySerializer.Serialize<SelectedReplica>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.SelectedReplica>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of SelectedReplica)
    nameWithType: ByteArraySerializer.Serialize(Of SelectedReplica)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.SelectedReplica)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.SelectedReplica
  commentId: T:System.Fabric.SelectedReplica
  parent: System.Fabric
  isExternal: false
  name: SelectedReplica
  nameWithType: SelectedReplica
  fullName: System.Fabric.SelectedReplica
- uid: System.Fabric.SelectedReplica.ReplicaOrInstanceId*
  commentId: Overload:System.Fabric.SelectedReplica.ReplicaOrInstanceId
  isExternal: false
  name: ReplicaOrInstanceId
  nameWithType: SelectedReplica.ReplicaOrInstanceId
  fullName: System.Fabric.SelectedReplica.ReplicaOrInstanceId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.SelectedReplica.SelectedPartition*
  commentId: Overload:System.Fabric.SelectedReplica.SelectedPartition
  isExternal: false
  name: SelectedPartition
  nameWithType: SelectedReplica.SelectedPartition
  fullName: System.Fabric.SelectedReplica.SelectedPartition
- uid: System.Fabric.SelectedPartition
  commentId: T:System.Fabric.SelectedPartition
  parent: System.Fabric
  isExternal: false
  name: SelectedPartition
  nameWithType: SelectedPartition
  fullName: System.Fabric.SelectedPartition
- uid: System.Fabric.SelectedReplica.Equals*
  commentId: Overload:System.Fabric.SelectedReplica.Equals
  isExternal: false
  name: Equals
  nameWithType: SelectedReplica.Equals
  fullName: System.Fabric.SelectedReplica.Equals
- uid: System.IEquatable{System.Fabric.SelectedReplica}.Equals(System.Fabric.SelectedReplica)
  commentId: M:System.IEquatable{System.Fabric.SelectedReplica}.Equals(System.Fabric.SelectedReplica)
  parent: System.IEquatable{System.Fabric.SelectedReplica}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(SelectedReplica)
  nameWithType: IEquatable<SelectedReplica>.Equals(SelectedReplica)
  fullName: System.IEquatable<System.Fabric.SelectedReplica>.Equals(System.Fabric.SelectedReplica)
  nameWithType.vb: IEquatable(Of SelectedReplica).Equals(SelectedReplica)
  fullname.vb: System.IEquatable(Of System.Fabric.SelectedReplica).Equals(System.Fabric.SelectedReplica)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<SelectedReplica>.Equals
    fullName: System.IEquatable<System.Fabric.SelectedReplica>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.SelectedReplica
    name: SelectedReplica
    nameWithType: SelectedReplica
    fullName: System.Fabric.SelectedReplica
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of SelectedReplica).Equals
    fullName: System.IEquatable(Of System.Fabric.SelectedReplica).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.SelectedReplica
    name: SelectedReplica
    nameWithType: SelectedReplica
    fullName: System.Fabric.SelectedReplica
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.SelectedReplica.ToString*
  commentId: Overload:System.Fabric.SelectedReplica.ToString
  isExternal: false
  name: ToString
  nameWithType: SelectedReplica.ToString
  fullName: System.Fabric.SelectedReplica.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
