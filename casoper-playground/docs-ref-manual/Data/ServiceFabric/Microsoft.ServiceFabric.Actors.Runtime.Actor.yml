### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.Actor
  id: Actor
  parent: Microsoft.ServiceFabric.Actors.Runtime
  children:
  - Microsoft.ServiceFabric.Actors.Runtime.Actor.#ctor(Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId)
  - Microsoft.ServiceFabric.Actors.Runtime.Actor.SaveStateAsync
  - Microsoft.ServiceFabric.Actors.Runtime.Actor.StateManager
  langs:
  - csharp
  - vb
  name: Actor
  nameWithType: Actor
  fullName: Microsoft.ServiceFabric.Actors.Runtime.Actor
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/Actor.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Actor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/Actor.cs
    startLine: 16
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nRepresents a actor that can have multiple reliable 'named' states associated with it.\n"
  remarks: "\nThe state is preserved across actor garbage collections and fail-overs. The storage and retrieval of the state is\nprovided by the actor state provider <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public abstract class Actor : ActorBase'
    content.vb: >-
      Public MustInherit Class Actor
          Inherits ActorBase
  seealso:
  - linkId: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
    commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  inheritance:
  - System.Object
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  inheritedMembers:
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.Id
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ApplicationName
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ServiceUri
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ActorService
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnActivateAsync
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnDeactivateAsync
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPreActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPostActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterTimer(Microsoft.ServiceFabric.Actors.Runtime.IActorTimer)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetEvent``1
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetReminder(System.String)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterReminderAsync(Microsoft.ServiceFabric.Actors.Runtime.IActorReminder)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterTimer(System.Func{System.Object,System.Threading.Tasks.Task},System.Object,System.TimeSpan,System.TimeSpan)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterReminderAsync(System.String,System.Byte[],System.TimeSpan,System.TimeSpan)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Runtime.Actor.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor.#ctor(Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.Actor.#ctor(Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId)
  id: '#ctor(Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId)'
  parent: Microsoft.ServiceFabric.Actors.Runtime.Actor
  langs:
  - csharp
  - vb
  name: Actor(ActorService, ActorId)
  nameWithType: Actor.Actor(ActorService, ActorId)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.Actor.Actor(Microsoft.ServiceFabric.Actors.Runtime.ActorService, Microsoft.ServiceFabric.Actors.ActorId)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/Actor.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/Actor.cs
    startLine: 29
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.Actor\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected Actor(ActorService actorService, ActorId actorId)
    content.vb: Protected Sub New(actorService As ActorService, actorId As ActorId)
    parameters:
    - id: actorService
      type: Microsoft.ServiceFabric.Actors.Runtime.ActorService
      description: "\nThe <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.ActorService\" data-throw-if-not-resolved=\"false\"></xref> that will host this actor instance.\n"
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: "\nThe <xref href=\"Microsoft.ServiceFabric.Actors.ActorId\" data-throw-if-not-resolved=\"false\"></xref> for this actor instance.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.Actor.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor.StateManager
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.Actor.StateManager
  id: StateManager
  parent: Microsoft.ServiceFabric.Actors.Runtime.Actor
  langs:
  - csharp
  - vb
  name: StateManager
  nameWithType: Actor.StateManager
  fullName: Microsoft.ServiceFabric.Actors.Runtime.Actor.StateManager
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/Actor.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StateManager
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/Actor.cs
    startLine: 42
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets the state manager for <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.Actor\" data-throw-if-not-resolved=\"false\"></xref>\nwhich can be used to get/add/update/remove named states.\n"
  example: []
  syntax:
    content: public IActorStateManager StateManager { get; }
    content.vb: Public ReadOnly Property StateManager As IActorStateManager
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager
      description: "\nAn <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager\" data-throw-if-not-resolved=\"false\"></xref> which can be used to manage actor state.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.Actor.StateManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor.SaveStateAsync
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.Actor.SaveStateAsync
  id: SaveStateAsync
  parent: Microsoft.ServiceFabric.Actors.Runtime.Actor
  langs:
  - csharp
  - vb
  name: SaveStateAsync()
  nameWithType: Actor.SaveStateAsync()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.Actor.SaveStateAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/Actor.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SaveStateAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/Actor.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nSaves all the state changes (add/update/remove) that were made since last call to\n<xref href=\"Microsoft.ServiceFabric.Actors.Runtime.Actor.SaveStateAsync\" data-throw-if-not-resolved=\"false\"></xref>,\nto the actor state provider associated with the actor.\n"
  example: []
  syntax:
    content: protected Task SaveStateAsync()
    content.vb: Protected Function SaveStateAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous save operation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.Actor.SaveStateAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: IActorStateProvider
  nameWithType: IActorStateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: ActorBase
  nameWithType: ActorBase
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
- uid: Microsoft.ServiceFabric.Actors.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.Id
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.Id
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: false
  name: Id
  nameWithType: ActorBase.Id
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.Id
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ApplicationName
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ApplicationName
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: false
  name: ApplicationName
  nameWithType: ActorBase.ApplicationName
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ApplicationName
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ServiceUri
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ServiceUri
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: false
  name: ServiceUri
  nameWithType: ActorBase.ServiceUri
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ServiceUri
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ActorService
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ActorService
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: false
  name: ActorService
  nameWithType: ActorBase.ActorService
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.ActorService
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnActivateAsync
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnActivateAsync
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: false
  name: OnActivateAsync()
  nameWithType: ActorBase.OnActivateAsync()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnActivateAsync()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnActivateAsync
    name: OnActivateAsync
    nameWithType: ActorBase.OnActivateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnActivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnActivateAsync
    name: OnActivateAsync
    nameWithType: ActorBase.OnActivateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnActivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnDeactivateAsync
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnDeactivateAsync
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: false
  name: OnDeactivateAsync()
  nameWithType: ActorBase.OnDeactivateAsync()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnDeactivateAsync()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnDeactivateAsync
    name: OnDeactivateAsync
    nameWithType: ActorBase.OnDeactivateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnDeactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnDeactivateAsync
    name: OnDeactivateAsync
    nameWithType: ActorBase.OnDeactivateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnDeactivateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPreActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPreActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: false
  name: OnPreActorMethodAsync(ActorMethodContext)
  nameWithType: ActorBase.OnPreActorMethodAsync(ActorMethodContext)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPreActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPreActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
    name: OnPreActorMethodAsync
    nameWithType: ActorBase.OnPreActorMethodAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPreActorMethodAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext
    name: ActorMethodContext
    nameWithType: ActorMethodContext
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPreActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
    name: OnPreActorMethodAsync
    nameWithType: ActorBase.OnPreActorMethodAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPreActorMethodAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext
    name: ActorMethodContext
    nameWithType: ActorMethodContext
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPostActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPostActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: false
  name: OnPostActorMethodAsync(ActorMethodContext)
  nameWithType: ActorBase.OnPostActorMethodAsync(ActorMethodContext)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPostActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPostActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
    name: OnPostActorMethodAsync
    nameWithType: ActorBase.OnPostActorMethodAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPostActorMethodAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext
    name: ActorMethodContext
    nameWithType: ActorMethodContext
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPostActorMethodAsync(Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext)
    name: OnPostActorMethodAsync
    nameWithType: ActorBase.OnPostActorMethodAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.OnPostActorMethodAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext
    name: ActorMethodContext
    nameWithType: ActorMethodContext
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorMethodContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterTimer(Microsoft.ServiceFabric.Actors.Runtime.IActorTimer)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterTimer(Microsoft.ServiceFabric.Actors.Runtime.IActorTimer)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: false
  name: UnregisterTimer(IActorTimer)
  nameWithType: ActorBase.UnregisterTimer(IActorTimer)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterTimer(Microsoft.ServiceFabric.Actors.Runtime.IActorTimer)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterTimer(Microsoft.ServiceFabric.Actors.Runtime.IActorTimer)
    name: UnregisterTimer
    nameWithType: ActorBase.UnregisterTimer
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterTimer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorTimer
    name: IActorTimer
    nameWithType: IActorTimer
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorTimer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterTimer(Microsoft.ServiceFabric.Actors.Runtime.IActorTimer)
    name: UnregisterTimer
    nameWithType: ActorBase.UnregisterTimer
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterTimer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorTimer
    name: IActorTimer
    nameWithType: IActorTimer
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorTimer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetEvent``1
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetEvent``1
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: false
  name: GetEvent<TEvent>()
  nameWithType: ActorBase.GetEvent<TEvent>()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetEvent<TEvent>()
  nameWithType.vb: ActorBase.GetEvent(Of TEvent)()
  fullname.vb: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetEvent(Of TEvent)()
  name.vb: GetEvent(Of TEvent)()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetEvent``1
    name: GetEvent<TEvent>
    nameWithType: ActorBase.GetEvent<TEvent>
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetEvent<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetEvent``1
    name: GetEvent(Of TEvent)
    nameWithType: ActorBase.GetEvent(Of TEvent)
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetEvent(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetReminder(System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetReminder(System.String)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: true
  name: GetReminder(String)
  nameWithType: ActorBase.GetReminder(String)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetReminder(System.String)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetReminder(System.String)
    name: GetReminder
    nameWithType: ActorBase.GetReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetReminder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetReminder(System.String)
    name: GetReminder
    nameWithType: ActorBase.GetReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.GetReminder
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterReminderAsync(Microsoft.ServiceFabric.Actors.Runtime.IActorReminder)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterReminderAsync(Microsoft.ServiceFabric.Actors.Runtime.IActorReminder)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: false
  name: UnregisterReminderAsync(IActorReminder)
  nameWithType: ActorBase.UnregisterReminderAsync(IActorReminder)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterReminderAsync(Microsoft.ServiceFabric.Actors.Runtime.IActorReminder)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterReminderAsync(Microsoft.ServiceFabric.Actors.Runtime.IActorReminder)
    name: UnregisterReminderAsync
    nameWithType: ActorBase.UnregisterReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    name: IActorReminder
    nameWithType: IActorReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterReminderAsync(Microsoft.ServiceFabric.Actors.Runtime.IActorReminder)
    name: UnregisterReminderAsync
    nameWithType: ActorBase.UnregisterReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.UnregisterReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    name: IActorReminder
    nameWithType: IActorReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterTimer(System.Func{System.Object,System.Threading.Tasks.Task},System.Object,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterTimer(System.Func{System.Object,System.Threading.Tasks.Task},System.Object,System.TimeSpan,System.TimeSpan)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: true
  name: RegisterTimer(Func<Object, Task>, Object, TimeSpan, TimeSpan)
  nameWithType: ActorBase.RegisterTimer(Func<Object, Task>, Object, TimeSpan, TimeSpan)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterTimer(System.Func<System.Object, System.Threading.Tasks.Task>, System.Object, System.TimeSpan, System.TimeSpan)
  nameWithType.vb: ActorBase.RegisterTimer(Func(Of Object, Task), Object, TimeSpan, TimeSpan)
  fullname.vb: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterTimer(System.Func(Of System.Object, System.Threading.Tasks.Task), System.Object, System.TimeSpan, System.TimeSpan)
  name.vb: RegisterTimer(Func(Of Object, Task), Object, TimeSpan, TimeSpan)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterTimer(System.Func{System.Object,System.Threading.Tasks.Task},System.Object,System.TimeSpan,System.TimeSpan)
    name: RegisterTimer
    nameWithType: ActorBase.RegisterTimer
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterTimer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterTimer(System.Func{System.Object,System.Threading.Tasks.Task},System.Object,System.TimeSpan,System.TimeSpan)
    name: RegisterTimer
    nameWithType: ActorBase.RegisterTimer
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterTimer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterReminderAsync(System.String,System.Byte[],System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterReminderAsync(System.String,System.Byte[],System.TimeSpan,System.TimeSpan)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  isExternal: true
  name: RegisterReminderAsync(String, Byte[], TimeSpan, TimeSpan)
  nameWithType: ActorBase.RegisterReminderAsync(String, Byte[], TimeSpan, TimeSpan)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterReminderAsync(System.String, System.Byte[], System.TimeSpan, System.TimeSpan)
  nameWithType.vb: ActorBase.RegisterReminderAsync(String, Byte(), TimeSpan, TimeSpan)
  fullname.vb: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterReminderAsync(System.String, System.Byte(), System.TimeSpan, System.TimeSpan)
  name.vb: RegisterReminderAsync(String, Byte(), TimeSpan, TimeSpan)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterReminderAsync(System.String,System.Byte[],System.TimeSpan,System.TimeSpan)
    name: RegisterReminderAsync
    nameWithType: ActorBase.RegisterReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterReminderAsync(System.String,System.Byte[],System.TimeSpan,System.TimeSpan)
    name: RegisterReminderAsync
    nameWithType: ActorBase.RegisterReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase.RegisterReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<Actor>()
  nameWithType: ByteArraySerializer.Serialize<Actor>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.Actor>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of Actor)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.Actor)()
  name.vb: Serialize(Of Actor)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<Actor>
    nameWithType: ByteArraySerializer.Serialize<Actor>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.Actor>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of Actor)
    nameWithType: ByteArraySerializer.Serialize(Of Actor)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.Actor)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.Actor
  isExternal: false
  name: Actor
  nameWithType: Actor
  fullName: Microsoft.ServiceFabric.Actors.Runtime.Actor
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorService
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: ActorService
  nameWithType: ActorService
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService
- uid: Microsoft.ServiceFabric.Actors.ActorId
  commentId: T:Microsoft.ServiceFabric.Actors.ActorId
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: ActorId
  nameWithType: ActorId
  fullName: Microsoft.ServiceFabric.Actors.ActorId
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.Actor.#ctor
  isExternal: false
  name: Actor
  nameWithType: Actor.Actor
  fullName: Microsoft.ServiceFabric.Actors.Runtime.Actor.Actor
- uid: Microsoft.ServiceFabric.Actors
  commentId: N:Microsoft.ServiceFabric.Actors
  isExternal: false
  name: Microsoft.ServiceFabric.Actors
  nameWithType: Microsoft.ServiceFabric.Actors
  fullName: Microsoft.ServiceFabric.Actors
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: IActorStateManager
  nameWithType: IActorStateManager
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor.StateManager*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.Actor.StateManager
  isExternal: false
  name: StateManager
  nameWithType: Actor.StateManager
  fullName: Microsoft.ServiceFabric.Actors.Runtime.Actor.StateManager
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor.SaveStateAsync
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.Actor.SaveStateAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor.SaveStateAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.Actor.SaveStateAsync
  isExternal: false
  name: SaveStateAsync
  nameWithType: Actor.SaveStateAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.Actor.SaveStateAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
