### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.ReplicaHealth
  commentId: T:System.Fabric.Health.ReplicaHealth
  id: ReplicaHealth
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.ReplicaHealth.Id
  - System.Fabric.Health.ReplicaHealth.Kind
  - System.Fabric.Health.ReplicaHealth.PartitionId
  langs:
  - csharp
  - vb
  name: ReplicaHealth
  nameWithType: ReplicaHealth
  fullName: System.Fabric.Health.ReplicaHealth
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealth.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaHealth
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealth.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Describes the health of a stateful service replica or a stateless service instance as returned by <xref href=\"System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Fabric.Description.ReplicaHealthQueryDescription)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: >-
      [KnownType(typeof (StatefulServiceReplicaHealth))]

      [KnownType(typeof (StatelessServiceInstanceHealth))]

      public abstract class ReplicaHealth : EntityHealth
    content.vb: >-
      <KnownType(GetType(StatefulServiceReplicaHealth))>

      <KnownType(GetType(StatelessServiceInstanceHealth))>

      Public MustInherit Class ReplicaHealth
          Inherits EntityHealth
  inheritance:
  - System.Object
  - System.Fabric.Health.EntityHealth
  inheritedMembers:
  - System.Fabric.Health.EntityHealth.AggregatedHealthState
  - System.Fabric.Health.EntityHealth.HealthEvents
  - System.Fabric.Health.EntityHealth.UnhealthyEvaluations
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.ReplicaHealth.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Health.StatefulServiceReplicaHealth
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Health.StatelessServiceInstanceHealth
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Health.ReplicaHealth.Kind
  commentId: P:System.Fabric.Health.ReplicaHealth.Kind
  id: Kind
  parent: System.Fabric.Health.ReplicaHealth
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: ReplicaHealth.Kind
  fullName: System.Fabric.Health.ReplicaHealth.Kind
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealth.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Kind
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealth.cs
    startLine: 33
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the kind of the replica, either stateless or stateful. Based on this, the replica health can be converted to either \n<xref href=\"System.Fabric.Health.StatefulServiceReplicaHealth\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Fabric.Health.StatelessServiceInstanceHealth\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public ServiceKind Kind { get; }
    content.vb: Public ReadOnly Property Kind As ServiceKind
    parameters: []
    return:
      type: System.Fabric.Query.ServiceKind
      description: "\n<p>The service kind, which indicates whether the replica is stateful or stateless.</p>\n"
  overload: System.Fabric.Health.ReplicaHealth.Kind*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ReplicaHealth.PartitionId
  commentId: P:System.Fabric.Health.ReplicaHealth.PartitionId
  id: PartitionId
  parent: System.Fabric.Health.ReplicaHealth
  langs:
  - csharp
  - vb
  name: PartitionId
  nameWithType: ReplicaHealth.PartitionId
  fullName: System.Fabric.Health.ReplicaHealth.PartitionId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealth.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionId
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealth.cs
    startLine: 46
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the partition identifier.</p>\n"
  example: []
  syntax:
    content: public Guid PartitionId { get; }
    content.vb: Public ReadOnly Property PartitionId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>The partition ID.</p>\n"
  overload: System.Fabric.Health.ReplicaHealth.PartitionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ReplicaHealth.Id
  commentId: P:System.Fabric.Health.ReplicaHealth.Id
  id: Id
  parent: System.Fabric.Health.ReplicaHealth
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ReplicaHealth.Id
  fullName: System.Fabric.Health.ReplicaHealth.Id
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealth.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Id
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealth.cs
    startLine: 58
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the stateful replica ID or the stateless service instance ID.</p>\n"
  example: []
  syntax:
    content: public long Id { get; }
    content.vb: Public ReadOnly Property Id As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The stateful replica ID or stateless instance ID.</p>\n"
  overload: System.Fabric.Health.ReplicaHealth.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Fabric.Description.ReplicaHealthQueryDescription)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Fabric.Description.ReplicaHealthQueryDescription)
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Health.EntityHealth
  commentId: T:System.Fabric.Health.EntityHealth
  parent: System.Fabric.Health
  isExternal: false
  name: EntityHealth
  nameWithType: EntityHealth
  fullName: System.Fabric.Health.EntityHealth
- uid: System.Fabric.Health.EntityHealth.AggregatedHealthState
  commentId: P:System.Fabric.Health.EntityHealth.AggregatedHealthState
  parent: System.Fabric.Health.EntityHealth
  isExternal: false
  name: AggregatedHealthState
  nameWithType: EntityHealth.AggregatedHealthState
  fullName: System.Fabric.Health.EntityHealth.AggregatedHealthState
- uid: System.Fabric.Health.EntityHealth.HealthEvents
  commentId: P:System.Fabric.Health.EntityHealth.HealthEvents
  parent: System.Fabric.Health.EntityHealth
  isExternal: false
  name: HealthEvents
  nameWithType: EntityHealth.HealthEvents
  fullName: System.Fabric.Health.EntityHealth.HealthEvents
- uid: System.Fabric.Health.EntityHealth.UnhealthyEvaluations
  commentId: P:System.Fabric.Health.EntityHealth.UnhealthyEvaluations
  parent: System.Fabric.Health.EntityHealth
  isExternal: false
  name: UnhealthyEvaluations
  nameWithType: EntityHealth.UnhealthyEvaluations
  fullName: System.Fabric.Health.EntityHealth.UnhealthyEvaluations
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ReplicaHealth.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ReplicaHealth>()
  nameWithType: ByteArraySerializer.Serialize<ReplicaHealth>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ReplicaHealth>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ReplicaHealth)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ReplicaHealth)()
  name.vb: Serialize(Of ReplicaHealth)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ReplicaHealth>
    nameWithType: ByteArraySerializer.Serialize<ReplicaHealth>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ReplicaHealth>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ReplicaHealth)
    nameWithType: ByteArraySerializer.Serialize(Of ReplicaHealth)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ReplicaHealth)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.StatefulServiceReplicaHealth
  commentId: T:System.Fabric.Health.StatefulServiceReplicaHealth
  parent: System.Fabric.Health
  isExternal: false
  name: StatefulServiceReplicaHealth
  nameWithType: StatefulServiceReplicaHealth
  fullName: System.Fabric.Health.StatefulServiceReplicaHealth
- uid: System.Fabric.Health.StatelessServiceInstanceHealth
  commentId: T:System.Fabric.Health.StatelessServiceInstanceHealth
  parent: System.Fabric.Health
  isExternal: false
  name: StatelessServiceInstanceHealth
  nameWithType: StatelessServiceInstanceHealth
  fullName: System.Fabric.Health.StatelessServiceInstanceHealth
- uid: System.Fabric.Health.ReplicaHealth.Kind*
  commentId: Overload:System.Fabric.Health.ReplicaHealth.Kind
  isExternal: false
  name: Kind
  nameWithType: ReplicaHealth.Kind
  fullName: System.Fabric.Health.ReplicaHealth.Kind
- uid: System.Fabric.Query.ServiceKind
  commentId: T:System.Fabric.Query.ServiceKind
  parent: System.Fabric.Query
  isExternal: false
  name: ServiceKind
  nameWithType: ServiceKind
  fullName: System.Fabric.Query.ServiceKind
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Fabric.Health.ReplicaHealth.PartitionId*
  commentId: Overload:System.Fabric.Health.ReplicaHealth.PartitionId
  isExternal: false
  name: PartitionId
  nameWithType: ReplicaHealth.PartitionId
  fullName: System.Fabric.Health.ReplicaHealth.PartitionId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.Health.ReplicaHealth.Id*
  commentId: Overload:System.Fabric.Health.ReplicaHealth.Id
  isExternal: false
  name: Id
  nameWithType: ReplicaHealth.Id
  fullName: System.Fabric.Health.ReplicaHealth.Id
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
