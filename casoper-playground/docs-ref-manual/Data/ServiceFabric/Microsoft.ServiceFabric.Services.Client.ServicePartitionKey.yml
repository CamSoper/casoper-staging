### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  commentId: T:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  id: ServicePartitionKey
  parent: Microsoft.ServiceFabric.Services.Client
  children:
  - Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor
  - Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor(System.Int64)
  - Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor(System.String)
  - Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Kind
  - Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Singleton
  - Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Value
  langs:
  - csharp
  - vb
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServicePartitionKey
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
    startLine: 11
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Client
  summary: "\nDefines a key to address a service partition.\n"
  example: []
  syntax:
    content: public sealed class ServicePartitionKey
    content.vb: Public NotInheritable Class ServicePartitionKey
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Singleton
  commentId: F:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Singleton
  id: Singleton
  parent: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  langs:
  - csharp
  - vb
  name: Singleton
  nameWithType: ServicePartitionKey.Singleton
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Singleton
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Singleton
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Client
  summary: "\nReturns a ServicePartitionKey that indicates a singleton partition.\n"
  example: []
  syntax:
    content: public static readonly ServicePartitionKey Singleton
    content.vb: Public Shared ReadOnly Singleton As ServicePartitionKey
    return:
      type: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor
  commentId: M:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  langs:
  - csharp
  - vb
  name: ServicePartitionKey()
  nameWithType: ServicePartitionKey.ServicePartitionKey()
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.ServicePartitionKey()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
    startLine: 24
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Client
  summary: "\nCreate a ServicePartitionKey for singleton partitioned service.\n"
  example: []
  syntax:
    content: public ServicePartitionKey()
    content.vb: Public Sub New
  overload: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor(System.Int64)
  commentId: M:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  langs:
  - csharp
  - vb
  name: ServicePartitionKey(Int64)
  nameWithType: ServicePartitionKey.ServicePartitionKey(Int64)
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.ServicePartitionKey(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
    startLine: 34
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Client
  summary: "\nCreate a ServicePartitionKey for uniform int64 partitioned service.\n"
  example: []
  syntax:
    content: public ServicePartitionKey(long partitionKey)
    content.vb: Public Sub New(partitionKey As Long)
    parameters:
    - id: partitionKey
      type: System.Int64
      description: Value of the int64 partition key
  overload: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor(System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  langs:
  - csharp
  - vb
  name: ServicePartitionKey(String)
  nameWithType: ServicePartitionKey.ServicePartitionKey(String)
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.ServicePartitionKey(System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
    startLine: 44
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Client
  summary: "\nCreate a ServicePartitionKey for named partitioned services.\n"
  example: []
  syntax:
    content: public ServicePartitionKey(string partitionKey)
    content.vb: Public Sub New(partitionKey As String)
    parameters:
    - id: partitionKey
      type: System.String
      description: Value of the named partition key
  overload: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Kind
  commentId: P:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Kind
  id: Kind
  parent: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: ServicePartitionKey.Kind
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Kind
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Kind
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
    startLine: 54
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Client
  summary: "\nKind of the partition this key applies to.\n"
  example: []
  syntax:
    content: public ServicePartitionKind Kind { get; }
    content.vb: Public ReadOnly Property Kind As ServicePartitionKind
    parameters: []
    return:
      type: System.Fabric.ServicePartitionKind
      description: Partition kind
  overload: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Kind*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Value
  commentId: P:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Value
  id: Value
  parent: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ServicePartitionKey.Value
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Value
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Value
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Client/ServicePartitionKey.cs
    startLine: 63
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Client
  summary: "\nThe value of the partition key. This value can be casted to the right type based on the value of the Kind property.\n"
  example: []
  syntax:
    content: public object Value { get; }
    content.vb: Public ReadOnly Property Value As Object
    parameters: []
    return:
      type: System.Object
      description: Partition key
  overload: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Services.Client
  commentId: N:Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Client
  nameWithType: Microsoft.ServiceFabric.Services.Client
  fullName: Microsoft.ServiceFabric.Services.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServicePartitionKey>()
  nameWithType: ByteArraySerializer.Serialize<ServicePartitionKey>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Client.ServicePartitionKey>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServicePartitionKey)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Client.ServicePartitionKey)()
  name.vb: Serialize(Of ServicePartitionKey)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServicePartitionKey>
    nameWithType: ByteArraySerializer.Serialize<ServicePartitionKey>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Client.ServicePartitionKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServicePartitionKey)
    nameWithType: ByteArraySerializer.Serialize(Of ServicePartitionKey)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Client.ServicePartitionKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  commentId: T:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  parent: Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.#ctor
  isExternal: false
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey.ServicePartitionKey
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.ServicePartitionKey
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Kind*
  commentId: Overload:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Kind
  isExternal: false
  name: Kind
  nameWithType: ServicePartitionKey.Kind
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Kind
- uid: System.Fabric.ServicePartitionKind
  commentId: T:System.Fabric.ServicePartitionKind
  parent: System.Fabric
  isExternal: false
  name: ServicePartitionKind
  nameWithType: ServicePartitionKind
  fullName: System.Fabric.ServicePartitionKind
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Value*
  commentId: Overload:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Value
  isExternal: false
  name: Value
  nameWithType: ServicePartitionKey.Value
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey.Value
