### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.ReplicaHealthStatesFilter
  commentId: T:System.Fabric.Health.ReplicaHealthStatesFilter
  id: ReplicaHealthStatesFilter
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.ReplicaHealthStatesFilter.#ctor
  - System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter
  - System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue
  - System.Fabric.Health.ReplicaHealthStatesFilter.ToString
  langs:
  - csharp
  - vb
  name: ReplicaHealthStatesFilter
  nameWithType: ReplicaHealthStatesFilter
  fullName: System.Fabric.Health.ReplicaHealthStatesFilter
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealthStatesFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaHealthStatesFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealthStatesFilter.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Represents the filter for <xref href=\"System.Fabric.Health.ReplicaHealthState\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  remarks: >-
    The filter can be used in <xref href="System.Fabric.Description.PartitionHealthQueryDescription" data-throw-if-not-resolved="false"></xref>

    to specify which replica children should be returned as part of <xref href="System.Fabric.Health.PartitionHealth" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public sealed class ReplicaHealthStatesFilter
    content.vb: Public NotInheritable Class ReplicaHealthStatesFilter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.ReplicaHealthStatesFilter.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.ReplicaHealthStatesFilter.#ctor
  commentId: M:System.Fabric.Health.ReplicaHealthStatesFilter.#ctor
  id: '#ctor'
  parent: System.Fabric.Health.ReplicaHealthStatesFilter
  langs:
  - csharp
  - vb
  name: ReplicaHealthStatesFilter()
  nameWithType: ReplicaHealthStatesFilter.ReplicaHealthStatesFilter()
  fullName: System.Fabric.Health.ReplicaHealthStatesFilter.ReplicaHealthStatesFilter()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealthStatesFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealthStatesFilter.cs
    startLine: 20
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Health.ReplicaHealthStatesFilter\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ReplicaHealthStatesFilter()
    content.vb: Public Sub New
  overload: System.Fabric.Health.ReplicaHealthStatesFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue
  commentId: P:System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue
  id: HealthStateFilterValue
  parent: System.Fabric.Health.ReplicaHealthStatesFilter
  langs:
  - csharp
  - vb
  name: HealthStateFilterValue
  nameWithType: ReplicaHealthStatesFilter.HealthStateFilterValue
  fullName: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealthStatesFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthStateFilterValue
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealthStatesFilter.cs
    startLine: 30
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets or sets the filter for the aggregated health state of the <xref href=\"System.Fabric.Health.ReplicaHealthState\" data-throw-if-not-resolved=\"false\"></xref> entries in the collection. \n"
  remarks: "The input collection is filtered to return only entries that respect the desired health state. \nThe filter represents a value obtained from members or bitwise combinations of members of <xref href=\"System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter\" data-throw-if-not-resolved=\"false\"></xref>."
  example: []
  syntax:
    content: public HealthStateFilter HealthStateFilterValue { get; set; }
    content.vb: Public Property HealthStateFilterValue As HealthStateFilter
    parameters: []
    return:
      type: System.Fabric.Health.HealthStateFilter
      description: The filter for the aggregated health state of the <xref href="System.Fabric.Health.ReplicaHealthState" data-throw-if-not-resolved="false"></xref> entries.
  overload: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter
  commentId: P:System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter
  id: HealthStateFilter
  parent: System.Fabric.Health.ReplicaHealthStatesFilter
  langs:
  - csharp
  - vb
  name: HealthStateFilter
  nameWithType: ReplicaHealthStatesFilter.HealthStateFilter
  fullName: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealthStatesFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthStateFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealthStatesFilter.cs
    startLine: 45
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>DEPRECATED. Gets or sets the filter for the aggregated health state of the <xref href=\"System.Fabric.Health.ReplicaHealthState\" data-throw-if-not-resolved=\"false\"></xref> entries in \nthe collection. Represents a value obtained from members or bitwise combinations of members of <xref href=\"System.Fabric.Health.HealthStateFilter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: This property is obsolete. Use <xref href="System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue" data-throw-if-not-resolved="false"></xref> instead.
  example: []
  syntax:
    content: >-
      [Obsolete("This property is obsolete. Use HealthStateFilterValue instead.")]

      public long HealthStateFilter { get; set; }
    content.vb: >-
      <Obsolete("This property is obsolete. Use HealthStateFilterValue instead.")>

      Public Property HealthStateFilter As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p> The filter for the aggregated health state of the <xref href=\"System.Fabric.Health.ReplicaHealthState\" data-throw-if-not-resolved=\"false\"></xref> entries in the \ncollection. The value comes from members or bitwise combination of members of <xref href=\"System.Fabric.Health.HealthStateFilter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This property is obsolete. Use HealthStateFilterValue instead.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.ReplicaHealthStatesFilter.ToString
  commentId: M:System.Fabric.Health.ReplicaHealthStatesFilter.ToString
  id: ToString
  parent: System.Fabric.Health.ReplicaHealthStatesFilter
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ReplicaHealthStatesFilter.ToString()
  fullName: System.Fabric.Health.ReplicaHealthStatesFilter.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealthStatesFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ReplicaHealthStatesFilter.cs
    startLine: 56
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nReturns a string representation of the filter.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the filter.
  overridden: System.Object.ToString
  overload: System.Fabric.Health.ReplicaHealthStatesFilter.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health.ReplicaHealthState
  commentId: T:System.Fabric.Health.ReplicaHealthState
  parent: System.Fabric.Health
  isExternal: false
  name: ReplicaHealthState
  nameWithType: ReplicaHealthState
  fullName: System.Fabric.Health.ReplicaHealthState
- uid: System.Fabric.Description.PartitionHealthQueryDescription
  commentId: T:System.Fabric.Description.PartitionHealthQueryDescription
  parent: System.Fabric.Description
  isExternal: false
  name: PartitionHealthQueryDescription
  nameWithType: PartitionHealthQueryDescription
  fullName: System.Fabric.Description.PartitionHealthQueryDescription
- uid: System.Fabric.Health.PartitionHealth
  commentId: T:System.Fabric.Health.PartitionHealth
  isExternal: false
  name: PartitionHealth
  nameWithType: PartitionHealth
  fullName: System.Fabric.Health.PartitionHealth
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ReplicaHealthStatesFilter.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ReplicaHealthStatesFilter>()
  nameWithType: ByteArraySerializer.Serialize<ReplicaHealthStatesFilter>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ReplicaHealthStatesFilter>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ReplicaHealthStatesFilter)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ReplicaHealthStatesFilter)()
  name.vb: Serialize(Of ReplicaHealthStatesFilter)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ReplicaHealthStatesFilter>
    nameWithType: ByteArraySerializer.Serialize<ReplicaHealthStatesFilter>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ReplicaHealthStatesFilter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ReplicaHealthStatesFilter)
    nameWithType: ByteArraySerializer.Serialize(Of ReplicaHealthStatesFilter)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ReplicaHealthStatesFilter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.ReplicaHealthStatesFilter
  commentId: T:System.Fabric.Health.ReplicaHealthStatesFilter
  parent: System.Fabric.Health
  isExternal: false
  name: ReplicaHealthStatesFilter
  nameWithType: ReplicaHealthStatesFilter
  fullName: System.Fabric.Health.ReplicaHealthStatesFilter
- uid: System.Fabric.Health.ReplicaHealthStatesFilter.#ctor*
  commentId: Overload:System.Fabric.Health.ReplicaHealthStatesFilter.#ctor
  isExternal: false
  name: ReplicaHealthStatesFilter
  nameWithType: ReplicaHealthStatesFilter.ReplicaHealthStatesFilter
  fullName: System.Fabric.Health.ReplicaHealthStatesFilter.ReplicaHealthStatesFilter
- uid: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter
  commentId: P:System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter
- uid: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue*
  commentId: Overload:System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue
  isExternal: false
  name: HealthStateFilterValue
  nameWithType: ReplicaHealthStatesFilter.HealthStateFilterValue
  fullName: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue
- uid: System.Fabric.Health.HealthStateFilter
  commentId: T:System.Fabric.Health.HealthStateFilter
  parent: System.Fabric.Health
  isExternal: false
  name: HealthStateFilter
  nameWithType: HealthStateFilter
  fullName: System.Fabric.Health.HealthStateFilter
- uid: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue
  commentId: P:System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilterValue
- uid: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter*
  commentId: Overload:System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter
  isExternal: false
  name: HealthStateFilter
  nameWithType: ReplicaHealthStatesFilter.HealthStateFilter
  fullName: System.Fabric.Health.ReplicaHealthStatesFilter.HealthStateFilter
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ReplicaHealthStatesFilter.ToString*
  commentId: Overload:System.Fabric.Health.ReplicaHealthStatesFilter.ToString
  isExternal: false
  name: ToString
  nameWithType: ReplicaHealthStatesFilter.ToString
  fullName: System.Fabric.Health.ReplicaHealthStatesFilter.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
