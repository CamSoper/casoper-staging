### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  id: ServiceRemotingMessageHeaders
  parent: Microsoft.ServiceFabric.Services.Remoting
  children:
  - Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.#ctor
  - Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.AddHeader(System.String,System.Byte[])
  - Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Deserialize(System.Runtime.Serialization.DataContractSerializer,System.Byte[])
  - Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InterfaceId
  - Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InvocationId
  - Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.MethodId
  - Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Serialize(System.Runtime.Serialization.DataContractSerializer,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders)
  - Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.TryGetHeaderValue(System.String,System.Byte[]@)
  langs:
  - csharp
  - vb
  name: ServiceRemotingMessageHeaders
  nameWithType: ServiceRemotingMessageHeaders
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceRemotingMessageHeaders
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
    startLine: 16
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting
  summary: "\nSpecifies the headers that are sent along with a ServiceRemoting message.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Name = "ServiceMessageHeaders", Namespace = "urn:ServiceFabric.Communication")]

      public class ServiceRemotingMessageHeaders
    content.vb: >-
      <DataContract(Name:="ServiceMessageHeaders", Namespace:="urn:ServiceFabric.Communication")>

      Public Class ServiceRemotingMessageHeaders
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ServiceMessageHeaders
    - name: Namespace
      type: System.String
      value: urn:ServiceFabric.Communication
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.MethodId
  commentId: P:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.MethodId
  id: MethodId
  parent: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  langs:
  - csharp
  - vb
  name: MethodId
  nameWithType: ServiceRemotingMessageHeaders.MethodId
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.MethodId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MethodId
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
    startLine: 27
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting
  summary: "\nThe methodId of the remote method\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "MethodId", IsRequired = true, Order = 0)]

      public int MethodId { get; set; }
    content.vb: >-
      <DataMember(Name:="MethodId", IsRequired:=True, Order:=0)>

      Public Property MethodId As Integer
    parameters: []
    return:
      type: System.Int32
      description: Method id
  overload: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.MethodId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: MethodId
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Order
      type: System.Int32
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InterfaceId
  commentId: P:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InterfaceId
  id: InterfaceId
  parent: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  langs:
  - csharp
  - vb
  name: InterfaceId
  nameWithType: ServiceRemotingMessageHeaders.InterfaceId
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InterfaceId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InterfaceId
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
    startLine: 34
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting
  summary: "\nThe interface id of the remote interface.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "InterfaceId", IsRequired = true, Order = 1)]

      public int InterfaceId { get; set; }
    content.vb: >-
      <DataMember(Name:="InterfaceId", IsRequired:=True, Order:=1)>

      Public Property InterfaceId As Integer
    parameters: []
    return:
      type: System.Int32
      description: Interface id
  overload: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InterfaceId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: InterfaceId
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Order
      type: System.Int32
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InvocationId
  commentId: P:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InvocationId
  id: InvocationId
  parent: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  langs:
  - csharp
  - vb
  name: InvocationId
  nameWithType: ServiceRemotingMessageHeaders.InvocationId
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InvocationId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InvocationId
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
    startLine: 40
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting
  summary: "\nIdentifier for the remote method invocation\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "InvocationId", IsRequired = false, Order = 3, EmitDefaultValue = false)]

      public string InvocationId { get; set; }
    content.vb: >-
      <DataMember(Name:="InvocationId", IsRequired:=False, Order:=3, EmitDefaultValue:=False)>

      Public Property InvocationId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InvocationId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: InvocationId
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 3
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.#ctor
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  langs:
  - csharp
  - vb
  name: ServiceRemotingMessageHeaders()
  nameWithType: ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders()
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
    startLine: 46
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting
  summary: "\nInstantiates a new instance of the ServiceRemotingMessageHeaders\n"
  example: []
  syntax:
    content: public ServiceRemotingMessageHeaders()
    content.vb: Public Sub New
  overload: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.AddHeader(System.String,System.Byte[])
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.AddHeader(System.String,System.Byte[])
  id: AddHeader(System.String,System.Byte[])
  parent: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  langs:
  - csharp
  - vb
  name: AddHeader(String, Byte[])
  nameWithType: ServiceRemotingMessageHeaders.AddHeader(String, Byte[])
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.AddHeader(System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AddHeader
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
    startLine: 58
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting
  summary: "\nAdds a new header with the specified name and value.\nThrows FabricElementAlreadyExistsException if a header with the same name already exists.\n"
  example: []
  syntax:
    content: public void AddHeader(string headerName, byte[] headerValue)
    content.vb: Public Sub AddHeader(headerName As String, headerValue As Byte())
    parameters:
    - id: headerName
      type: System.String
      description: Header Name
    - id: headerValue
      type: System.Byte[]
      description: header value
  overload: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.AddHeader*
  nameWithType.vb: ServiceRemotingMessageHeaders.AddHeader(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.AddHeader(System.String, System.Byte())
  name.vb: AddHeader(String, Byte())
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.TryGetHeaderValue(System.String,System.Byte[]@)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.TryGetHeaderValue(System.String,System.Byte[]@)
  id: TryGetHeaderValue(System.String,System.Byte[]@)
  parent: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  langs:
  - csharp
  - vb
  name: TryGetHeaderValue(String, out Byte[])
  nameWithType: ServiceRemotingMessageHeaders.TryGetHeaderValue(String, out Byte[])
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.TryGetHeaderValue(System.String, out System.Byte[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TryGetHeaderValue
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
    startLine: 78
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting
  summary: "\nGets the header with the specified name\n"
  example: []
  syntax:
    content: public bool TryGetHeaderValue(string headerName, out byte[] headerValue)
    content.vb: Public Function TryGetHeaderValue(headerName As String, ByRef headerValue As Byte()) As Boolean
    parameters:
    - id: headerName
      type: System.String
      description: Header Name
    - id: headerValue
      type: System.Byte[]
      description: Header value
    return:
      type: System.Boolean
      description: true if a header with that name exists, false otherwise
  overload: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.TryGetHeaderValue*
  nameWithType.vb: ServiceRemotingMessageHeaders.TryGetHeaderValue(String, ByRef Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.TryGetHeaderValue(System.String, ByRef System.Byte())
  name.vb: TryGetHeaderValue(String, ByRef Byte())
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Serialize(System.Runtime.Serialization.DataContractSerializer,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Serialize(System.Runtime.Serialization.DataContractSerializer,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders)
  id: Serialize(System.Runtime.Serialization.DataContractSerializer,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders)
  parent: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  langs:
  - csharp
  - vb
  name: Serialize(DataContractSerializer, ServiceRemotingMessageHeaders)
  nameWithType: ServiceRemotingMessageHeaders.Serialize(DataContractSerializer, ServiceRemotingMessageHeaders)
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Serialize(System.Runtime.Serialization.DataContractSerializer, Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Serialize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
    startLine: 96
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting
  summary: "\nSerializes the headers to a byte array\n"
  example: []
  syntax:
    content: public static byte[] Serialize(DataContractSerializer serializer, ServiceRemotingMessageHeaders msg)
    content.vb: Public Shared Function Serialize(serializer As DataContractSerializer, msg As ServiceRemotingMessageHeaders) As Byte()
    parameters:
    - id: serializer
      type: System.Runtime.Serialization.DataContractSerializer
      description: Serializer
    - id: msg
      type: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
      description: Headers
    return:
      type: System.Byte[]
      description: The serialized byte array
  overload: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Serialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Deserialize(System.Runtime.Serialization.DataContractSerializer,System.Byte[])
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Deserialize(System.Runtime.Serialization.DataContractSerializer,System.Byte[])
  id: Deserialize(System.Runtime.Serialization.DataContractSerializer,System.Byte[])
  parent: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  langs:
  - csharp
  - vb
  name: Deserialize(DataContractSerializer, Byte[])
  nameWithType: ServiceRemotingMessageHeaders.Deserialize(DataContractSerializer, Byte[])
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Deserialize(System.Runtime.Serialization.DataContractSerializer, System.Byte[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Deserialize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/ServiceRemotingMessageHeaders.cs
    startLine: 120
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting
  summary: "\nDe-serializes the byte array to a ServiceRemotingMessageHeaders object\n"
  example: []
  syntax:
    content: public static ServiceRemotingMessageHeaders Deserialize(DataContractSerializer serializer, byte[] buffer)
    content.vb: Public Shared Function Deserialize(serializer As DataContractSerializer, buffer As Byte()) As ServiceRemotingMessageHeaders
    parameters:
    - id: serializer
      type: System.Runtime.Serialization.DataContractSerializer
      description: Deserializer
    - id: buffer
      type: System.Byte[]
      description: buffer
    return:
      type: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
      description: De-serialized headers
  overload: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Deserialize*
  nameWithType.vb: ServiceRemotingMessageHeaders.Deserialize(DataContractSerializer, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Deserialize(System.Runtime.Serialization.DataContractSerializer, System.Byte())
  name.vb: Deserialize(DataContractSerializer, Byte())
references:
- uid: Microsoft.ServiceFabric.Services.Remoting
  commentId: N:Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting
  nameWithType: Microsoft.ServiceFabric.Services.Remoting
  fullName: Microsoft.ServiceFabric.Services.Remoting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceRemotingMessageHeaders>()
  nameWithType: ByteArraySerializer.Serialize<ServiceRemotingMessageHeaders>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceRemotingMessageHeaders)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders)()
  name.vb: Serialize(Of ServiceRemotingMessageHeaders)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceRemotingMessageHeaders>
    nameWithType: ByteArraySerializer.Serialize<ServiceRemotingMessageHeaders>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceRemotingMessageHeaders)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceRemotingMessageHeaders)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.MethodId*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.MethodId
  isExternal: false
  name: MethodId
  nameWithType: ServiceRemotingMessageHeaders.MethodId
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.MethodId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InterfaceId*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InterfaceId
  isExternal: false
  name: InterfaceId
  nameWithType: ServiceRemotingMessageHeaders.InterfaceId
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InterfaceId
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InvocationId*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InvocationId
  isExternal: false
  name: InvocationId
  nameWithType: ServiceRemotingMessageHeaders.InvocationId
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.InvocationId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.#ctor
  isExternal: false
  name: ServiceRemotingMessageHeaders
  nameWithType: ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.ServiceRemotingMessageHeaders
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.AddHeader*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.AddHeader
  isExternal: false
  name: AddHeader
  nameWithType: ServiceRemotingMessageHeaders.AddHeader
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.AddHeader
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.TryGetHeaderValue*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.TryGetHeaderValue
  isExternal: false
  name: TryGetHeaderValue
  nameWithType: ServiceRemotingMessageHeaders.TryGetHeaderValue
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.TryGetHeaderValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Serialize*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Serialize
  isExternal: false
  name: Serialize
  nameWithType: ServiceRemotingMessageHeaders.Serialize
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Serialize
- uid: System.Runtime.Serialization.DataContractSerializer
  commentId: T:System.Runtime.Serialization.DataContractSerializer
  parent: System.Runtime.Serialization
  isExternal: true
  name: DataContractSerializer
  nameWithType: DataContractSerializer
  fullName: System.Runtime.Serialization.DataContractSerializer
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  parent: Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: ServiceRemotingMessageHeaders
  nameWithType: ServiceRemotingMessageHeaders
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Deserialize*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Deserialize
  isExternal: false
  name: Deserialize
  nameWithType: ServiceRemotingMessageHeaders.Deserialize
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders.Deserialize
