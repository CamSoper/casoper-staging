### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.Application
  commentId: T:System.Fabric.Query.Application
  id: Application
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.Application.ApplicationName
  - System.Fabric.Query.Application.ApplicationParameters
  - System.Fabric.Query.Application.ApplicationStatus
  - System.Fabric.Query.Application.ApplicationTypeName
  - System.Fabric.Query.Application.ApplicationTypeVersion
  - System.Fabric.Query.Application.HealthState
  - System.Fabric.Query.Application.UpgradeParameters
  - System.Fabric.Query.Application.UpgradeTypeVersion
  langs:
  - csharp
  - vb
  name: Application
  nameWithType: Application
  fullName: System.Fabric.Query.Application
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Application
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Describes an application instance.</p>\n"
  example: []
  syntax:
    content: public sealed class Application
    content.vb: Public NotInheritable Class Application
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.Application.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.Application.ApplicationName
  commentId: P:System.Fabric.Query.Application.ApplicationName
  id: ApplicationName
  parent: System.Fabric.Query.Application
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: Application.ApplicationName
  fullName: System.Fabric.Query.Application.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
    startLine: 26
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the name of the application.</p>\n"
  example: []
  syntax:
    content: public Uri ApplicationName { get; }
    content.vb: Public ReadOnly Property ApplicationName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
  overload: System.Fabric.Query.Application.ApplicationName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Application.ApplicationTypeName
  commentId: P:System.Fabric.Query.Application.ApplicationTypeName
  id: ApplicationTypeName
  parent: System.Fabric.Query.Application
  langs:
  - csharp
  - vb
  name: ApplicationTypeName
  nameWithType: Application.ApplicationTypeName
  fullName: System.Fabric.Query.Application.ApplicationTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
    startLine: 35
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the application type name as specified in the Application Manifest.</p>\n"
  example: []
  syntax:
    content: public string ApplicationTypeName { get; }
    content.vb: Public ReadOnly Property ApplicationTypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The application type name.</p>\n"
  overload: System.Fabric.Query.Application.ApplicationTypeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Application.ApplicationTypeVersion
  commentId: P:System.Fabric.Query.Application.ApplicationTypeVersion
  id: ApplicationTypeVersion
  parent: System.Fabric.Query.Application
  langs:
  - csharp
  - vb
  name: ApplicationTypeVersion
  nameWithType: Application.ApplicationTypeVersion
  fullName: System.Fabric.Query.Application.ApplicationTypeVersion
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationTypeVersion
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
    startLine: 44
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the application type version as specified in the Application Manifest.</p>\n"
  example: []
  syntax:
    content: public string ApplicationTypeVersion { get; }
    content.vb: Public ReadOnly Property ApplicationTypeVersion As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The application type version.</p>\n"
  overload: System.Fabric.Query.Application.ApplicationTypeVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Application.ApplicationStatus
  commentId: P:System.Fabric.Query.Application.ApplicationStatus
  id: ApplicationStatus
  parent: System.Fabric.Query.Application
  langs:
  - csharp
  - vb
  name: ApplicationStatus
  nameWithType: Application.ApplicationStatus
  fullName: System.Fabric.Query.Application.ApplicationStatus
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
    startLine: 53
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the status of the application.</p>\n"
  example: []
  syntax:
    content: public ApplicationStatus ApplicationStatus { get; }
    content.vb: Public ReadOnly Property ApplicationStatus As ApplicationStatus
    parameters: []
    return:
      type: System.Fabric.Query.ApplicationStatus
      description: "\n<p>The status of the application.</p>\n"
  overload: System.Fabric.Query.Application.ApplicationStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Application.HealthState
  commentId: P:System.Fabric.Query.Application.HealthState
  id: HealthState
  parent: System.Fabric.Query.Application
  langs:
  - csharp
  - vb
  name: HealthState
  nameWithType: Application.HealthState
  fullName: System.Fabric.Query.Application.HealthState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthState
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
    startLine: 62
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the aggregated health state of the application.</p>\n"
  example: []
  syntax:
    content: public HealthState HealthState { get; }
    content.vb: Public ReadOnly Property HealthState As HealthState
    parameters: []
    return:
      type: System.Fabric.Health.HealthState
      description: "\n<p>The aggregated health of the application.</p>\n"
  overload: System.Fabric.Query.Application.HealthState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Application.ApplicationParameters
  commentId: P:System.Fabric.Query.Application.ApplicationParameters
  id: ApplicationParameters
  parent: System.Fabric.Query.Application
  langs:
  - csharp
  - vb
  name: ApplicationParameters
  nameWithType: Application.ApplicationParameters
  fullName: System.Fabric.Query.Application.ApplicationParameters
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationParameters
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
    startLine: 70
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the parameters of the application.</p>\n"
  example: []
  syntax:
    content: public ApplicationParameterList ApplicationParameters { get; }
    content.vb: Public ReadOnly Property ApplicationParameters As ApplicationParameterList
    parameters: []
    return:
      type: System.Fabric.Description.ApplicationParameterList
      description: "\n<p>The parameters of the application.</p>\n"
  overload: System.Fabric.Query.Application.ApplicationParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Application.UpgradeTypeVersion
  commentId: P:System.Fabric.Query.Application.UpgradeTypeVersion
  id: UpgradeTypeVersion
  parent: System.Fabric.Query.Application
  langs:
  - csharp
  - vb
  name: UpgradeTypeVersion
  nameWithType: Application.UpgradeTypeVersion
  fullName: System.Fabric.Query.Application.UpgradeTypeVersion
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeTypeVersion
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
    startLine: 79
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Deprecated: Do not use. See <xref href=\"System.Fabric.ApplicationUpgradeProgress\" data-throw-if-not-resolved=\"false\"></xref> instead.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use ApplicationUpgradeProgress.")]

      public string UpgradeTypeVersion { get; }
    content.vb: >-
      <Obsolete("Use ApplicationUpgradeProgress.")>

      Public ReadOnly Property UpgradeTypeVersion As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Query.Application.UpgradeTypeVersion*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ApplicationUpgradeProgress.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Application.UpgradeParameters
  commentId: P:System.Fabric.Query.Application.UpgradeParameters
  id: UpgradeParameters
  parent: System.Fabric.Query.Application
  langs:
  - csharp
  - vb
  name: UpgradeParameters
  nameWithType: Application.UpgradeParameters
  fullName: System.Fabric.Query.Application.UpgradeParameters
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeParameters
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationResultItem.cs
    startLine: 89
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Deprecated: Do not use. See <xref href=\"System.Fabric.ApplicationUpgradeProgress\" data-throw-if-not-resolved=\"false\"></xref> instead.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use ApplicationUpgradeProgress.")]

      public ApplicationParameterList UpgradeParameters { get; }
    content.vb: >-
      <Obsolete("Use ApplicationUpgradeProgress.")>

      Public ReadOnly Property UpgradeParameters As ApplicationParameterList
    parameters: []
    return:
      type: System.Fabric.Description.ApplicationParameterList
      description: "\n<p>Returns <xref href=\"System.Fabric.Description.ApplicationParameterList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Query.Application.UpgradeParameters*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ApplicationUpgradeProgress.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.Application.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<Application>()
  nameWithType: ByteArraySerializer.Serialize<Application>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.Application>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of Application)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.Application)()
  name.vb: Serialize(Of Application)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<Application>
    nameWithType: ByteArraySerializer.Serialize<Application>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.Application>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of Application)
    nameWithType: ByteArraySerializer.Serialize(Of Application)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.Application)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.Application.ApplicationName*
  commentId: Overload:System.Fabric.Query.Application.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: Application.ApplicationName
  fullName: System.Fabric.Query.Application.ApplicationName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Query.Application.ApplicationTypeName*
  commentId: Overload:System.Fabric.Query.Application.ApplicationTypeName
  isExternal: false
  name: ApplicationTypeName
  nameWithType: Application.ApplicationTypeName
  fullName: System.Fabric.Query.Application.ApplicationTypeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Query.Application.ApplicationTypeVersion*
  commentId: Overload:System.Fabric.Query.Application.ApplicationTypeVersion
  isExternal: false
  name: ApplicationTypeVersion
  nameWithType: Application.ApplicationTypeVersion
  fullName: System.Fabric.Query.Application.ApplicationTypeVersion
- uid: System.Fabric.Query.Application.ApplicationStatus*
  commentId: Overload:System.Fabric.Query.Application.ApplicationStatus
  isExternal: false
  name: ApplicationStatus
  nameWithType: Application.ApplicationStatus
  fullName: System.Fabric.Query.Application.ApplicationStatus
- uid: System.Fabric.Query.ApplicationStatus
  commentId: T:System.Fabric.Query.ApplicationStatus
  parent: System.Fabric.Query
  isExternal: false
  name: ApplicationStatus
  nameWithType: ApplicationStatus
  fullName: System.Fabric.Query.ApplicationStatus
- uid: System.Fabric.Query.Application.HealthState*
  commentId: Overload:System.Fabric.Query.Application.HealthState
  isExternal: false
  name: HealthState
  nameWithType: Application.HealthState
  fullName: System.Fabric.Query.Application.HealthState
- uid: System.Fabric.Health.HealthState
  commentId: T:System.Fabric.Health.HealthState
  parent: System.Fabric.Health
  isExternal: false
  name: HealthState
  nameWithType: HealthState
  fullName: System.Fabric.Health.HealthState
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.Query.Application.ApplicationParameters*
  commentId: Overload:System.Fabric.Query.Application.ApplicationParameters
  isExternal: false
  name: ApplicationParameters
  nameWithType: Application.ApplicationParameters
  fullName: System.Fabric.Query.Application.ApplicationParameters
- uid: System.Fabric.Description.ApplicationParameterList
  commentId: T:System.Fabric.Description.ApplicationParameterList
  parent: System.Fabric.Description
  isExternal: false
  name: ApplicationParameterList
  nameWithType: ApplicationParameterList
  fullName: System.Fabric.Description.ApplicationParameterList
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Fabric.ApplicationUpgradeProgress
  commentId: T:System.Fabric.ApplicationUpgradeProgress
  parent: System.Fabric
  isExternal: false
  name: ApplicationUpgradeProgress
  nameWithType: ApplicationUpgradeProgress
  fullName: System.Fabric.ApplicationUpgradeProgress
- uid: System.Fabric.Query.Application.UpgradeTypeVersion*
  commentId: Overload:System.Fabric.Query.Application.UpgradeTypeVersion
  isExternal: false
  name: UpgradeTypeVersion
  nameWithType: Application.UpgradeTypeVersion
  fullName: System.Fabric.Query.Application.UpgradeTypeVersion
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.Query.Application.UpgradeParameters*
  commentId: Overload:System.Fabric.Query.Application.UpgradeParameters
  isExternal: false
  name: UpgradeParameters
  nameWithType: Application.UpgradeParameters
  fullName: System.Fabric.Query.Application.UpgradeParameters
