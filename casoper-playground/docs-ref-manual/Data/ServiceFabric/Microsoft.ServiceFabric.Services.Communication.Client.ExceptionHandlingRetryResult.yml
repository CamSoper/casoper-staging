### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult
  id: ExceptionHandlingRetryResult
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  children:
  - Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor(System.Exception,System.Boolean,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Int32)
  - Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor(System.Exception,System.Boolean,System.TimeSpan,System.Int32)
  - Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor(System.String,System.Boolean,System.TimeSpan,System.Int32)
  - Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionId
  - Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.IsTransient
  - Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.MaxRetryCount
  - Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.RetryDelay
  langs:
  - csharp
  - vb
  name: ExceptionHandlingRetryResult
  nameWithType: ExceptionHandlingRetryResult
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ExceptionHandlingRetryResult
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
    startLine: 11
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nSpecifies the exception handling result when the request from client to service can be retried\n"
  example: []
  syntax:
    content: 'public sealed class ExceptionHandlingRetryResult : ExceptionHandlingResult'
    content.vb: >-
      Public NotInheritable Class ExceptionHandlingRetryResult
          Inherits ExceptionHandlingResult
  inheritance:
  - System.Object
  - Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.IsTransient
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.IsTransient
  id: IsTransient
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult
  langs:
  - csharp
  - vb
  name: IsTransient
  nameWithType: ExceptionHandlingRetryResult.IsTransient
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.IsTransient
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsTransient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
    startLine: 30
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nTransient retriable exceptions are those where the communication channel from client\nto service still exists.\nNon transient retriable exceptions are those where we need to re-resolve the service endpoint\nbefore we retry.\n"
  example: []
  syntax:
    content: public bool IsTransient { get; }
    content.vb: Public ReadOnly Property IsTransient As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue indicates that this is a transient retriable exception.\nfalse indicates that this is a non transient retriable exception.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.IsTransient*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionId
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionId
  id: ExceptionId
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult
  langs:
  - csharp
  - vb
  name: ExceptionId
  nameWithType: ExceptionHandlingRetryResult.ExceptionId
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ExceptionId
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
    startLine: 42
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nString that uniquely identifies the exception type.\n"
  example: []
  syntax:
    content: public string ExceptionId { get; }
    content.vb: Public ReadOnly Property ExceptionId As String
    parameters: []
    return:
      type: System.String
      description: "\nUnique id for this exception. \nThis id is used to keep track of the number of times this exception is retried\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.MaxRetryCount
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.MaxRetryCount
  id: MaxRetryCount
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult
  langs:
  - csharp
  - vb
  name: MaxRetryCount
  nameWithType: ExceptionHandlingRetryResult.MaxRetryCount
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.MaxRetryCount
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxRetryCount
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
    startLine: 52
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nMaximum number of times this exception type needs to be retried before giving up.\nThe default value is int.MaxValue\n"
  example: []
  syntax:
    content: public int MaxRetryCount { get; }
    content.vb: Public ReadOnly Property MaxRetryCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: Max retry count
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.MaxRetryCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.RetryDelay
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.RetryDelay
  id: RetryDelay
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult
  langs:
  - csharp
  - vb
  name: RetryDelay
  nameWithType: ExceptionHandlingRetryResult.RetryDelay
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.RetryDelay
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RetryDelay
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
    startLine: 61
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nThe operation should be retried after this delay.\n"
  example: []
  syntax:
    content: public TimeSpan RetryDelay { get; }
    content.vb: Public ReadOnly Property RetryDelay As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: Time delay after which the operation should be retried
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.RetryDelay*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor(System.Exception,System.Boolean,System.TimeSpan,System.Int32)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor(System.Exception,System.Boolean,System.TimeSpan,System.Int32)
  id: '#ctor(System.Exception,System.Boolean,System.TimeSpan,System.Int32)'
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult
  langs:
  - csharp
  - vb
  name: ExceptionHandlingRetryResult(Exception, Boolean, TimeSpan, Int32)
  nameWithType: ExceptionHandlingRetryResult.ExceptionHandlingRetryResult(Exception, Boolean, TimeSpan, Int32)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionHandlingRetryResult(System.Exception, System.Boolean, System.TimeSpan, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
    startLine: 79
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nInstantiates the ExceptionHandlingRetryResult using the given arguments.\n"
  example: []
  syntax:
    content: public ExceptionHandlingRetryResult(Exception exception, bool isTransient, TimeSpan retryDelay, int maxRetryCount)
    content.vb: Public Sub New(exception As Exception, isTransient As Boolean, retryDelay As TimeSpan, maxRetryCount As Integer)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception that needs to be retried.
    - id: isTransient
      type: System.Boolean
      description: "\nIndicates if this is a transient retriable exception.\nTransient retriable exceptions are those where the communication channel from client\nto service still exists.\nNon transient retriable exceptions are those where we need to re-resolve the service endpoint\nbefore we retry.\n"
    - id: retryDelay
      type: System.TimeSpan
      description: The interval to wait before retrying
    - id: maxRetryCount
      type: System.Int32
      description: The maximum number of times the exception given in the exception parameter needs to be retried for.
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor(System.String,System.Boolean,System.TimeSpan,System.Int32)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor(System.String,System.Boolean,System.TimeSpan,System.Int32)
  id: '#ctor(System.String,System.Boolean,System.TimeSpan,System.Int32)'
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult
  langs:
  - csharp
  - vb
  name: ExceptionHandlingRetryResult(String, Boolean, TimeSpan, Int32)
  nameWithType: ExceptionHandlingRetryResult.ExceptionHandlingRetryResult(String, Boolean, TimeSpan, Int32)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionHandlingRetryResult(System.String, System.Boolean, System.TimeSpan, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
    startLine: 104
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nInstantiates the ExceptionHandlingRetryResult using the given arguments.\n"
  example: []
  syntax:
    content: public ExceptionHandlingRetryResult(string exceptionId, bool isTransient, TimeSpan retryDelay, int maxRetryCount)
    content.vb: Public Sub New(exceptionId As String, isTransient As Boolean, retryDelay As TimeSpan, maxRetryCount As Integer)
    parameters:
    - id: exceptionId
      type: System.String
      description: An identifier for the exception that needs to be retried.
    - id: isTransient
      type: System.Boolean
      description: "\nIndicates if this is a transient retriable exception.\nTransient retriable exceptions are those where the communication channel from client\nto service still exists.\nNon transient retriable exceptions are those where we need to re-resolve the service endpoint\nbefore we retry.\n"
    - id: retryDelay
      type: System.TimeSpan
      description: The interval to wait before retrying
    - id: maxRetryCount
      type: System.Int32
      description: The maximum number of times the exception identified by the exceptionId parameter needs to be retried for.
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor(System.Exception,System.Boolean,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Int32)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor(System.Exception,System.Boolean,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Int32)
  id: '#ctor(System.Exception,System.Boolean,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Int32)'
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult
  langs:
  - csharp
  - vb
  name: ExceptionHandlingRetryResult(Exception, Boolean, OperationRetrySettings, Int32)
  nameWithType: ExceptionHandlingRetryResult.ExceptionHandlingRetryResult(Exception, Boolean, OperationRetrySettings, Int32)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionHandlingRetryResult(System.Exception, System.Boolean, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ExceptionHandlingRetryResult.cs
    startLine: 129
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nInstantiates the ExceptionHandlingRetryResult using the given arguments.\n"
  example: []
  syntax:
    content: public ExceptionHandlingRetryResult(Exception exception, bool isTransient, OperationRetrySettings retrySettings, int maxRetryCount)
    content.vb: Public Sub New(exception As Exception, isTransient As Boolean, retrySettings As OperationRetrySettings, maxRetryCount As Integer)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception that needs to be retried.
    - id: isTransient
      type: System.Boolean
      description: "\nIndicates if this is a transient retriable exception.\nTransient retriable exceptions are those where the communication channel from client\nto service still exists.\nNon transient retriable exceptions are those where we need to re-resolve the service endpoint\nbefore we retry.\n"
    - id: retrySettings
      type: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
      description: The retrySettings from which the interval to wait before retrying is figured out.
    - id: maxRetryCount
      type: System.Int32
      description: The maximum number of times the exception identified by the exceptionId parameter needs to be retried for.
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: ExceptionHandlingResult
  nameWithType: ExceptionHandlingResult
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ExceptionHandlingRetryResult>()
  nameWithType: ByteArraySerializer.Serialize<ExceptionHandlingRetryResult>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ExceptionHandlingRetryResult)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult)()
  name.vb: Serialize(Of ExceptionHandlingRetryResult)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ExceptionHandlingRetryResult>
    nameWithType: ByteArraySerializer.Serialize<ExceptionHandlingRetryResult>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ExceptionHandlingRetryResult)
    nameWithType: ByteArraySerializer.Serialize(Of ExceptionHandlingRetryResult)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.IsTransient*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.IsTransient
  isExternal: false
  name: IsTransient
  nameWithType: ExceptionHandlingRetryResult.IsTransient
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.IsTransient
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionId*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionId
  isExternal: false
  name: ExceptionId
  nameWithType: ExceptionHandlingRetryResult.ExceptionId
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.MaxRetryCount*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.MaxRetryCount
  isExternal: false
  name: MaxRetryCount
  nameWithType: ExceptionHandlingRetryResult.MaxRetryCount
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.MaxRetryCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.RetryDelay*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.RetryDelay
  isExternal: false
  name: RetryDelay
  nameWithType: ExceptionHandlingRetryResult.RetryDelay
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.RetryDelay
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.#ctor
  isExternal: false
  name: ExceptionHandlingRetryResult
  nameWithType: ExceptionHandlingRetryResult.ExceptionHandlingRetryResult
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingRetryResult.ExceptionHandlingRetryResult
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: OperationRetrySettings
  nameWithType: OperationRetrySettings
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
