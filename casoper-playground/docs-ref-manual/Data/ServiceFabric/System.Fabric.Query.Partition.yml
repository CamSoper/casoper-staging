### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.Partition
  commentId: T:System.Fabric.Query.Partition
  id: Partition
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.Partition.#ctor(System.Fabric.Query.ServiceKind,System.Fabric.ServicePartitionInformation,System.Fabric.Health.HealthState,System.Fabric.Query.ServicePartitionStatus)
  - System.Fabric.Query.Partition.HealthState
  - System.Fabric.Query.Partition.PartitionInformation
  - System.Fabric.Query.Partition.PartitionStatus
  - System.Fabric.Query.Partition.ServiceKind
  langs:
  - csharp
  - vb
  name: Partition
  nameWithType: Partition
  fullName: System.Fabric.Query.Partition
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Partition
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Represents a partition.</p>\n"
  example: []
  syntax:
    content: >-
      [KnownType(typeof (StatelessServicePartition))]

      [KnownType(typeof (StatefulServicePartition))]

      public abstract class Partition
    content.vb: >-
      <KnownType(GetType(StatelessServicePartition))>

      <KnownType(GetType(StatefulServicePartition))>

      Public MustInherit Class Partition
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.Partition.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Query.StatelessServicePartition
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Query.StatefulServicePartition
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Query.Partition.#ctor(System.Fabric.Query.ServiceKind,System.Fabric.ServicePartitionInformation,System.Fabric.Health.HealthState,System.Fabric.Query.ServicePartitionStatus)
  commentId: M:System.Fabric.Query.Partition.#ctor(System.Fabric.Query.ServiceKind,System.Fabric.ServicePartitionInformation,System.Fabric.Health.HealthState,System.Fabric.Query.ServicePartitionStatus)
  id: '#ctor(System.Fabric.Query.ServiceKind,System.Fabric.ServicePartitionInformation,System.Fabric.Health.HealthState,System.Fabric.Query.ServicePartitionStatus)'
  parent: System.Fabric.Query.Partition
  langs:
  - csharp
  - vb
  name: Partition(ServiceKind, ServicePartitionInformation, HealthState, ServicePartitionStatus)
  nameWithType: Partition.Partition(ServiceKind, ServicePartitionInformation, HealthState, ServicePartitionStatus)
  fullName: System.Fabric.Query.Partition.Partition(System.Fabric.Query.ServiceKind, System.Fabric.ServicePartitionInformation, System.Fabric.Health.HealthState, System.Fabric.Query.ServicePartitionStatus)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
    startLine: 34
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Initializes a new instance of the partition</p>\n"
  example: []
  syntax:
    content: protected Partition(ServiceKind serviceKind, ServicePartitionInformation partitionInformation, HealthState healthState, ServicePartitionStatus partitionStatus)
    content.vb: Protected Sub New(serviceKind As ServiceKind, partitionInformation As ServicePartitionInformation, healthState As HealthState, partitionStatus As ServicePartitionStatus)
    parameters:
    - id: serviceKind
      type: System.Fabric.Query.ServiceKind
      description: "\n<p>The type of the partition</p>\n"
    - id: partitionInformation
      type: System.Fabric.ServicePartitionInformation
      description: "\n<p>The Partition Information</p>\n"
    - id: healthState
      type: System.Fabric.Health.HealthState
      description: "\n<p>Health State of the partition</p>\n"
    - id: partitionStatus
      type: System.Fabric.Query.ServicePartitionStatus
      description: "\n<p>Status of the partition</p>\n"
  overload: System.Fabric.Query.Partition.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Query.Partition.ServiceKind
  commentId: P:System.Fabric.Query.Partition.ServiceKind
  id: ServiceKind
  parent: System.Fabric.Query.Partition
  langs:
  - csharp
  - vb
  name: ServiceKind
  nameWithType: Partition.ServiceKind
  fullName: System.Fabric.Query.Partition.ServiceKind
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceKind
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
    startLine: 48
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>The type of the partition (Stateful/Stateless)</p>\n"
  example: []
  syntax:
    content: public ServiceKind ServiceKind { get; }
    content.vb: Public ReadOnly Property ServiceKind As ServiceKind
    parameters: []
    return:
      type: System.Fabric.Query.ServiceKind
      description: "\n<p>Returns <xref href=\"System.Fabric.Query.ServiceKind\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Query.Partition.ServiceKind*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Partition.HealthState
  commentId: P:System.Fabric.Query.Partition.HealthState
  id: HealthState
  parent: System.Fabric.Query.Partition
  langs:
  - csharp
  - vb
  name: HealthState
  nameWithType: Partition.HealthState
  fullName: System.Fabric.Query.Partition.HealthState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthState
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
    startLine: 57
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the health state of the partition.</p>\n"
  example: []
  syntax:
    content: public HealthState HealthState { get; }
    content.vb: Public ReadOnly Property HealthState As HealthState
    parameters: []
    return:
      type: System.Fabric.Health.HealthState
      description: "\n<p>The health state of the partition.</p>\n"
  overload: System.Fabric.Query.Partition.HealthState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Partition.PartitionInformation
  commentId: P:System.Fabric.Query.Partition.PartitionInformation
  id: PartitionInformation
  parent: System.Fabric.Query.Partition
  langs:
  - csharp
  - vb
  name: PartitionInformation
  nameWithType: Partition.PartitionInformation
  fullName: System.Fabric.Query.Partition.PartitionInformation
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionInformation
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
    startLine: 65
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the partition information.</p>\n"
  example: []
  syntax:
    content: public ServicePartitionInformation PartitionInformation { get; }
    content.vb: Public ReadOnly Property PartitionInformation As ServicePartitionInformation
    parameters: []
    return:
      type: System.Fabric.ServicePartitionInformation
      description: "\n<p>The information of the partition.</p>\n"
  overload: System.Fabric.Query.Partition.PartitionInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Partition.PartitionStatus
  commentId: P:System.Fabric.Query.Partition.PartitionStatus
  id: PartitionStatus
  parent: System.Fabric.Query.Partition
  langs:
  - csharp
  - vb
  name: PartitionStatus
  nameWithType: Partition.PartitionStatus
  fullName: System.Fabric.Query.Partition.PartitionStatus
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServicePartitionResultItem.cs
    startLine: 73
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the status of the partition.</p>\n"
  example: []
  syntax:
    content: public ServicePartitionStatus PartitionStatus { get; }
    content.vb: Public ReadOnly Property PartitionStatus As ServicePartitionStatus
    parameters: []
    return:
      type: System.Fabric.Query.ServicePartitionStatus
      description: "\n<p>The status of the partition.</p>\n"
  overload: System.Fabric.Query.Partition.PartitionStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.Partition.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<Partition>()
  nameWithType: ByteArraySerializer.Serialize<Partition>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.Partition>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of Partition)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.Partition)()
  name.vb: Serialize(Of Partition)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<Partition>
    nameWithType: ByteArraySerializer.Serialize<Partition>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.Partition>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of Partition)
    nameWithType: ByteArraySerializer.Serialize(Of Partition)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.Partition)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.Partition.#ctor*
  commentId: Overload:System.Fabric.Query.Partition.#ctor
  isExternal: false
  name: Partition
  nameWithType: Partition.Partition
  fullName: System.Fabric.Query.Partition.Partition
- uid: System.Fabric.Query.ServiceKind
  commentId: T:System.Fabric.Query.ServiceKind
  parent: System.Fabric.Query
  isExternal: false
  name: ServiceKind
  nameWithType: ServiceKind
  fullName: System.Fabric.Query.ServiceKind
- uid: System.Fabric.ServicePartitionInformation
  commentId: T:System.Fabric.ServicePartitionInformation
  parent: System.Fabric
  isExternal: false
  name: ServicePartitionInformation
  nameWithType: ServicePartitionInformation
  fullName: System.Fabric.ServicePartitionInformation
- uid: System.Fabric.Health.HealthState
  commentId: T:System.Fabric.Health.HealthState
  parent: System.Fabric.Health
  isExternal: false
  name: HealthState
  nameWithType: HealthState
  fullName: System.Fabric.Health.HealthState
- uid: System.Fabric.Query.ServicePartitionStatus
  commentId: T:System.Fabric.Query.ServicePartitionStatus
  parent: System.Fabric.Query
  isExternal: false
  name: ServicePartitionStatus
  nameWithType: ServicePartitionStatus
  fullName: System.Fabric.Query.ServicePartitionStatus
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.Query.Partition.ServiceKind*
  commentId: Overload:System.Fabric.Query.Partition.ServiceKind
  isExternal: false
  name: ServiceKind
  nameWithType: Partition.ServiceKind
  fullName: System.Fabric.Query.Partition.ServiceKind
- uid: System.Fabric.Query.Partition.HealthState*
  commentId: Overload:System.Fabric.Query.Partition.HealthState
  isExternal: false
  name: HealthState
  nameWithType: Partition.HealthState
  fullName: System.Fabric.Query.Partition.HealthState
- uid: System.Fabric.Query.Partition.PartitionInformation*
  commentId: Overload:System.Fabric.Query.Partition.PartitionInformation
  isExternal: false
  name: PartitionInformation
  nameWithType: Partition.PartitionInformation
  fullName: System.Fabric.Query.Partition.PartitionInformation
- uid: System.Fabric.Query.Partition.PartitionStatus*
  commentId: Overload:System.Fabric.Query.Partition.PartitionStatus
  isExternal: false
  name: PartitionStatus
  nameWithType: Partition.PartitionStatus
  fullName: System.Fabric.Query.Partition.PartitionStatus
