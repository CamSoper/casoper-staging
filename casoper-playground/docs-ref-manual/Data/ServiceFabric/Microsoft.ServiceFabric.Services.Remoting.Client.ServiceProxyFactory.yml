### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory
  id: ServiceProxyFactory
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  children:
  - Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.#ctor(System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory},Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  - Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
  - Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceRemotingClientFactory(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  langs:
  - csharp
  - vb
  name: ServiceProxyFactory
  nameWithType: ServiceProxyFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/ServiceProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceProxyFactory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/ServiceProxyFactory.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Client
  summary: "\nSpecifies the factory that creates proxies for remote communication to the specified service.\n"
  example: []
  syntax:
    content: 'public class ServiceProxyFactory : IServiceProxyFactory'
    content.vb: >-
      Public Class ServiceProxyFactory
          Implements IServiceProxyFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.#ctor(System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory},Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.#ctor(System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory},Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  id: '#ctor(System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory},Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)'
  parent: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory
  langs:
  - csharp
  - vb
  name: ServiceProxyFactory(Func<IServiceRemotingCallbackClient, IServiceRemotingClientFactory>, OperationRetrySettings)
  nameWithType: ServiceProxyFactory.ServiceProxyFactory(Func<IServiceRemotingCallbackClient, IServiceRemotingClientFactory>, OperationRetrySettings)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.ServiceProxyFactory(System.Func<Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory>, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/ServiceProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/ServiceProxyFactory.cs
    startLine: 30
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Client
  summary: "\nInstantiates the ServiceProxyFactory with the specified remoting factory and retrysettings.\n"
  example: []
  syntax:
    content: public ServiceProxyFactory(Func<IServiceRemotingCallbackClient, IServiceRemotingClientFactory> createServiceRemotingClientFactory = null, OperationRetrySettings retrySettings = null)
    content.vb: Public Sub New(createServiceRemotingClientFactory As Func(Of IServiceRemotingCallbackClient, IServiceRemotingClientFactory) = Nothing, retrySettings As OperationRetrySettings = Nothing)
    parameters:
    - id: createServiceRemotingClientFactory
      type: System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory}
      description: "\nSpecifies the factory method that creates the remoting client factory. The remoting client factory got from this method\nis cached in the ServiceProxyFactory.\n"
    - id: retrySettings
      type: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
      description: Specifies the retry policy to use on exceptions seen when using the proxies created by this factory
  overload: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.#ctor*
  nameWithType.vb: ServiceProxyFactory.ServiceProxyFactory(Func(Of IServiceRemotingCallbackClient, IServiceRemotingClientFactory), OperationRetrySettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.ServiceProxyFactory(System.Func(Of Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory), Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  name.vb: ServiceProxyFactory(Func(Of IServiceRemotingCallbackClient, IServiceRemotingClientFactory), OperationRetrySettings)
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
  id: CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
  parent: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory
  langs:
  - csharp
  - vb
  name: CreateServiceProxy<TServiceInterface>(Uri, ServicePartitionKey, TargetReplicaSelector, String)
  nameWithType: ServiceProxyFactory.CreateServiceProxy<TServiceInterface>(Uri, ServicePartitionKey, TargetReplicaSelector, String)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceProxy<TServiceInterface>(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/ServiceProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateServiceProxy
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/ServiceProxyFactory.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Client
  summary: "\nCreates a proxy to communicate to the specified service using the remoted interface TServiceInterface that \nthe service implements.\n<typeparam name=\"TServiceInterface\">Interface that is being remoted</typeparam>\n<param name=\"serviceUri\">Uri of the Service.</param>\n<param name=\"partitionKey\">The Partition key that determines which service partition is responsible for handling requests from this service proxy</param>\n<param name=\"targetReplicaSelector\">Determines which replica or instance of the service partition the client should connect to.</param>\n<param name=\"listenerName\">This parameter is Optional if the service has a single communication listener. The endpoints from the service\nare of the form {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}. When the service exposes multiple endpoints, this parameter\nidentifies which of those endpoints to use for the remoting communication.\n</param>\n<returns>The proxy that implement the interface that is being remoted. The returned object also implement <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy\" data-throw-if-not-resolved=\"false\"></xref> interface.</returns>\n"
  example: []
  syntax:
    content: 'public TServiceInterface CreateServiceProxy<TServiceInterface>(Uri serviceUri, ServicePartitionKey partitionKey = null, TargetReplicaSelector targetReplicaSelector = TargetReplicaSelector.Default, string listenerName = null)where TServiceInterface : IService'
    content.vb: Public Function CreateServiceProxy(Of TServiceInterface As IService)(serviceUri As Uri, partitionKey As ServicePartitionKey = Nothing, targetReplicaSelector As TargetReplicaSelector = TargetReplicaSelector.Default, listenerName As String = Nothing) As TServiceInterface
    parameters:
    - id: serviceUri
      type: System.Uri
    - id: partitionKey
      type: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    - id: targetReplicaSelector
      type: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    - id: listenerName
      type: System.String
    typeParameters:
    - id: TServiceInterface
    return:
      type: '{TServiceInterface}'
  overload: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceProxy*
  implements:
  - Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
  nameWithType.vb: ServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)(Uri, ServicePartitionKey, TargetReplicaSelector, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String)
  name.vb: CreateServiceProxy(Of TServiceInterface)(Uri, ServicePartitionKey, TargetReplicaSelector, String)
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceRemotingClientFactory(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceRemotingClientFactory(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  id: CreateServiceRemotingClientFactory(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  parent: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory
  langs:
  - csharp
  - vb
  name: CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient)
  nameWithType: ServiceProxyFactory.CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceRemotingClientFactory(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/ServiceProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateServiceRemotingClientFactory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/ServiceProxyFactory.cs
    startLine: 91
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Client
  summary: "\nCreates service remoting client factory. TODO: Figure out if having this method as protected is really needed.\n"
  example: []
  syntax:
    content: protected virtual IServiceRemotingClientFactory CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient callbackClient)
    content.vb: Protected Overridable Function CreateServiceRemotingClientFactory(callbackClient As IServiceRemotingCallbackClient) As IServiceRemotingClientFactory
    parameters:
    - id: callbackClient
      type: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
      description: Callback from the remoting listener to the client.
    return:
      type: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
      description: Created service remoting client factory as <xref href="Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceRemotingClientFactory*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Client
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Client
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Client
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: IServiceProxyFactory
  nameWithType: IServiceProxyFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceProxyFactory>()
  nameWithType: ByteArraySerializer.Serialize<ServiceProxyFactory>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceProxyFactory)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory)()
  name.vb: Serialize(Of ServiceProxyFactory)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceProxyFactory>
    nameWithType: ByteArraySerializer.Serialize<ServiceProxyFactory>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceProxyFactory)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceProxyFactory)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.#ctor
  isExternal: false
  name: ServiceProxyFactory
  nameWithType: ServiceProxyFactory.ServiceProxyFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.ServiceProxyFactory
- uid: System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory}
  commentId: T:System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory}
  parent: System
  definition: System.Func`2
  name: Func<IServiceRemotingCallbackClient, IServiceRemotingClientFactory>
  nameWithType: Func<IServiceRemotingCallbackClient, IServiceRemotingClientFactory>
  fullName: System.Func<Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory>
  nameWithType.vb: Func(Of IServiceRemotingCallbackClient, IServiceRemotingClientFactory)
  fullname.vb: System.Func(Of Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory)
  name.vb: Func(Of IServiceRemotingCallbackClient, IServiceRemotingClientFactory)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
    name: IServiceRemotingCallbackClient
    nameWithType: IServiceRemotingCallbackClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
    name: IServiceRemotingClientFactory
    nameWithType: IServiceRemotingClientFactory
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
    name: IServiceRemotingCallbackClient
    nameWithType: IServiceRemotingCallbackClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
    name: IServiceRemotingClientFactory
    nameWithType: IServiceRemotingClientFactory
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: OperationRetrySettings
  nameWithType: OperationRetrySettings
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: IServiceProxy
  nameWithType: IServiceProxy
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceProxy*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceProxy
  isExternal: false
  name: CreateServiceProxy<TServiceInterface>
  nameWithType: ServiceProxyFactory.CreateServiceProxy<TServiceInterface>
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceProxy<TServiceInterface>
  nameWithType.vb: ServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)
  fullname.vb: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)
  name.vb: CreateServiceProxy(Of TServiceInterface)
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
  parent: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory
  isExternal: true
  name: CreateServiceProxy<TServiceInterface>(Uri, ServicePartitionKey, TargetReplicaSelector, String)
  nameWithType: IServiceProxyFactory.CreateServiceProxy<TServiceInterface>(Uri, ServicePartitionKey, TargetReplicaSelector, String)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy<TServiceInterface>(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String)
  nameWithType.vb: IServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)(Uri, ServicePartitionKey, TargetReplicaSelector, String)
  fullname.vb: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String)
  name.vb: CreateServiceProxy(Of TServiceInterface)(Uri, ServicePartitionKey, TargetReplicaSelector, String)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
    name: CreateServiceProxy<TServiceInterface>
    nameWithType: IServiceProxyFactory.CreateServiceProxy<TServiceInterface>
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy<TServiceInterface>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
    name: CreateServiceProxy(Of TServiceInterface)
    nameWithType: IServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  commentId: T:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  parent: Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
- uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: TargetReplicaSelector
  nameWithType: TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{TServiceInterface}'
  commentId: '!:TServiceInterface'
  definition: TServiceInterface
  name: TServiceInterface
  nameWithType: TServiceInterface
  fullName: TServiceInterface
- uid: Microsoft.ServiceFabric.Services.Client
  commentId: N:Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Client
  nameWithType: Microsoft.ServiceFabric.Services.Client
  fullName: Microsoft.ServiceFabric.Services.Client
- uid: TServiceInterface
  isExternal: false
  name: TServiceInterface
  nameWithType: TServiceInterface
  fullName: TServiceInterface
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: IServiceRemotingClientFactory
  nameWithType: IServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceRemotingClientFactory*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceRemotingClientFactory
  isExternal: false
  name: CreateServiceRemotingClientFactory
  nameWithType: ServiceProxyFactory.CreateServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceProxyFactory.CreateServiceRemotingClientFactory
- uid: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  parent: Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: IServiceRemotingCallbackClient
  nameWithType: IServiceRemotingCallbackClient
  fullName: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
- uid: Microsoft.ServiceFabric.Services.Remoting
  commentId: N:Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting
  nameWithType: Microsoft.ServiceFabric.Services.Remoting
  fullName: Microsoft.ServiceFabric.Services.Remoting
