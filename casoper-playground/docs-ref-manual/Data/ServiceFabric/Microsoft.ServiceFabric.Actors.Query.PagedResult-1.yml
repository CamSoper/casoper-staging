### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
  commentId: T:Microsoft.ServiceFabric.Actors.Query.PagedResult`1
  id: PagedResult`1
  parent: Microsoft.ServiceFabric.Actors.Query
  children:
  - Microsoft.ServiceFabric.Actors.Query.PagedResult`1.#ctor
  - Microsoft.ServiceFabric.Actors.Query.PagedResult`1.ContinuationToken
  - Microsoft.ServiceFabric.Actors.Query.PagedResult`1.Items
  langs:
  - csharp
  - vb
  name: PagedResult<T>
  nameWithType: PagedResult<T>
  fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult<T>
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/PagedResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PagedResult
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/PagedResult.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Query
  summary: "\nRepresents the result of actor query calls.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Name = "PagedResult", Namespace = "urn:actors")]

      [KnownType(typeof (List<ActorInformation>))]

      public sealed class PagedResult<T>
          where T : class
    content.vb: >-
      <DataContract(Name:="PagedResult", Namespace:="urn:actors")>

      <KnownType(GetType(List(Of ActorInformation)))>

      Public NotInheritable Class PagedResult(Of T As Class)
    typeParameters:
    - id: T
      description: <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the items this query result contains.
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Query.PagedResult`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: PagedResult
    - name: Namespace
      type: System.String
      value: urn:actors
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Collections.Generic.List{Microsoft.ServiceFabric.Actors.Query.ActorInformation}
  nameWithType.vb: PagedResult(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Microsoft.ServiceFabric.Actors.Query.PagedResult(Of T)
  name.vb: PagedResult(Of T)
- uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1.#ctor
  commentId: M:Microsoft.ServiceFabric.Actors.Query.PagedResult`1.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
  langs:
  - csharp
  - vb
  name: PagedResult()
  nameWithType: PagedResult<T>.PagedResult()
  fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult<T>.PagedResult()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/PagedResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/PagedResult.cs
    startLine: 21
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Query
  summary: "\nCreates a new instance of <xref href=\"Microsoft.ServiceFabric.Actors.Query.PagedResult%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PagedResult()
    content.vb: Public Sub New
  overload: Microsoft.ServiceFabric.Actors.Query.PagedResult`1.#ctor*
  nameWithType.vb: PagedResult(Of T).PagedResult()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Actors.Query.PagedResult(Of T).PagedResult()
- uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1.Items
  commentId: P:Microsoft.ServiceFabric.Actors.Query.PagedResult`1.Items
  id: Items
  parent: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: PagedResult<T>.Items
  fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult<T>.Items
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/PagedResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Items
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/PagedResult.cs
    startLine: 32
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Query
  summary: "\nGets or sets Enumerator to iterate over the results.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Items", IsRequired = true, Order = 0)]

      public IEnumerable<T> Items { get; set; }
    content.vb: >-
      <DataMember(Name:="Items", IsRequired:=True, Order:=0)>

      Public Property Items As IEnumerable(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: "Enumerator, which supports a simple iteration over \nthe collection."
  overload: Microsoft.ServiceFabric.Actors.Query.PagedResult`1.Items*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Items
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Order
      type: System.Int32
      value: 0
  nameWithType.vb: PagedResult(Of T).Items
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Actors.Query.PagedResult(Of T).Items
- uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1.ContinuationToken
  commentId: P:Microsoft.ServiceFabric.Actors.Query.PagedResult`1.ContinuationToken
  id: ContinuationToken
  parent: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
  langs:
  - csharp
  - vb
  name: ContinuationToken
  nameWithType: PagedResult<T>.ContinuationToken
  fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult<T>.ContinuationToken
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/PagedResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ContinuationToken
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/PagedResult.cs
    startLine: 43
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Query
  summary: "\nGets or sets a continuation token indicating if more items need to be fetched by calling the method again.\n"
  remarks: >-
    A null value of continuation token means that the result contains all the items

    and no calls to method needs to be made to fetch more items.
  example: []
  syntax:
    content: >-
      [DataMember(Name = "ContinuationToken", IsRequired = false, Order = 1)]

      public ContinuationToken ContinuationToken { get; set; }
    content.vb: >-
      <DataMember(Name:="ContinuationToken", IsRequired:=False, Order:=1)>

      Public Property ContinuationToken As ContinuationToken
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
      description: "ConinutationToken signifying if the method which returned\nthe <xref href=\"Microsoft.ServiceFabric.Actors.Query.PagedResult%601\" data-throw-if-not-resolved=\"false\"></xref> \nneeds to called again to get more results "
  overload: Microsoft.ServiceFabric.Actors.Query.PagedResult`1.ContinuationToken*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ContinuationToken
    - name: IsRequired
      type: System.Boolean
      value: false
    - name: Order
      type: System.Int32
      value: 1
  nameWithType.vb: PagedResult(Of T).ContinuationToken
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Actors.Query.PagedResult(Of T).ContinuationToken
references:
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.ServiceFabric.Actors.Query
  commentId: N:Microsoft.ServiceFabric.Actors.Query
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Query
  nameWithType: Microsoft.ServiceFabric.Actors.Query
  fullName: Microsoft.ServiceFabric.Actors.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<PagedResult<T>>()
  nameWithType: ByteArraySerializer.Serialize<PagedResult<T>>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Query.PagedResult<T>>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of PagedResult(Of T))()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Query.PagedResult(Of T))()
  name.vb: Serialize(Of PagedResult(Of T))()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<PagedResult<T>>
    nameWithType: ByteArraySerializer.Serialize<PagedResult<T>>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Query.PagedResult<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of PagedResult(Of T))
    nameWithType: ByteArraySerializer.Serialize(Of PagedResult(Of T))
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Query.PagedResult(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
  commentId: T:Microsoft.ServiceFabric.Actors.Query.PagedResult`1
  isExternal: false
  name: PagedResult<T>
  nameWithType: PagedResult<T>
  fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult<T>
  nameWithType.vb: PagedResult(Of T)
  fullname.vb: Microsoft.ServiceFabric.Actors.Query.PagedResult(Of T)
  name.vb: PagedResult(Of T)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
    name: PagedResult
    nameWithType: PagedResult
    fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
    name: PagedResult
    nameWithType: PagedResult
    fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Query.PagedResult`1.#ctor
  isExternal: false
  name: PagedResult
  nameWithType: PagedResult<T>.PagedResult
  fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult<T>.PagedResult
  nameWithType.vb: PagedResult(Of T).PagedResult
  fullname.vb: Microsoft.ServiceFabric.Actors.Query.PagedResult(Of T).PagedResult
- uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1.Items*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Query.PagedResult`1.Items
  isExternal: false
  name: Items
  nameWithType: PagedResult<T>.Items
  fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult<T>.Items
  nameWithType.vb: PagedResult(Of T).Items
  fullname.vb: Microsoft.ServiceFabric.Actors.Query.PagedResult(Of T).Items
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1.ContinuationToken*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Query.PagedResult`1.ContinuationToken
  isExternal: false
  name: ContinuationToken
  nameWithType: PagedResult<T>.ContinuationToken
  fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult<T>.ContinuationToken
  nameWithType.vb: PagedResult(Of T).ContinuationToken
  fullname.vb: Microsoft.ServiceFabric.Actors.Query.PagedResult(Of T).ContinuationToken
- uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  commentId: T:Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  parent: Microsoft.ServiceFabric.Actors.Query
  isExternal: false
  name: ContinuationToken
  nameWithType: ContinuationToken
  fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
