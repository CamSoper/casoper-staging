### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail
  commentId: T:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail
  id: RemoteReplicatorAcknowledgementDetail
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.#ctor
  - System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageApplyDuration
  - System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageReceiveDuration
  - System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.NotReceivedCount
  - System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.ReceivedAndNotAppliedCount
  langs:
  - csharp
  - vb
  name: RemoteReplicatorAcknowledgementDetail
  nameWithType: RemoteReplicatorAcknowledgementDetail
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RemoteReplicatorAcknowledgementDetail
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
    startLine: 12
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nProvides additional details about the remote replicators for the primary replicator. Member of <xref href=\"System.Fabric.Query.RemoteReplicatorStatus\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public sealed class RemoteReplicatorAcknowledgementDetail
    content.vb: Public NotInheritable Class RemoteReplicatorAcknowledgementDetail
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.#ctor
  commentId: M:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.#ctor
  id: '#ctor'
  parent: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail
  langs:
  - csharp
  - vb
  name: RemoteReplicatorAcknowledgementDetail()
  nameWithType: RemoteReplicatorAcknowledgementDetail.RemoteReplicatorAcknowledgementDetail()
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.RemoteReplicatorAcknowledgementDetail()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Query.RemoteReplicatorAcknowledgementDetail\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public RemoteReplicatorAcknowledgementDetail()
    content.vb: Public Sub New
  overload: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageReceiveDuration
  commentId: P:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageReceiveDuration
  id: AverageReceiveDuration
  parent: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail
  langs:
  - csharp
  - vb
  name: AverageReceiveDuration
  nameWithType: RemoteReplicatorAcknowledgementDetail.AverageReceiveDuration
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageReceiveDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AverageReceiveDuration
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
    startLine: 27
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the average duration for receiving acks for operations\n"
  example: []
  syntax:
    content: public TimeSpan AverageReceiveDuration { get; }
    content.vb: Public ReadOnly Property AverageReceiveDuration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>Represents the average receive duration for a remote replicator instance.</p>\n"
  overload: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageReceiveDuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageApplyDuration
  commentId: P:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageApplyDuration
  id: AverageApplyDuration
  parent: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail
  langs:
  - csharp
  - vb
  name: AverageApplyDuration
  nameWithType: RemoteReplicatorAcknowledgementDetail.AverageApplyDuration
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageApplyDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AverageApplyDuration
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
    startLine: 36
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the average duration for applying operations\n"
  example: []
  syntax:
    content: public TimeSpan AverageApplyDuration { get; }
    content.vb: Public ReadOnly Property AverageApplyDuration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>Represents the average apply duration for a remote replicator instance.</p>\n"
  overload: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageApplyDuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.NotReceivedCount
  commentId: P:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.NotReceivedCount
  id: NotReceivedCount
  parent: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail
  langs:
  - csharp
  - vb
  name: NotReceivedCount
  nameWithType: RemoteReplicatorAcknowledgementDetail.NotReceivedCount
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.NotReceivedCount
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NotReceivedCount
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
    startLine: 45
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the number of operations not yet received\n"
  example: []
  syntax:
    content: public long NotReceivedCount { get; }
    content.vb: Public ReadOnly Property NotReceivedCount As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>Represents the number of operations not yet received by a remote replicator.</p>\n"
  overload: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.NotReceivedCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.ReceivedAndNotAppliedCount
  commentId: P:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.ReceivedAndNotAppliedCount
  id: ReceivedAndNotAppliedCount
  parent: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail
  langs:
  - csharp
  - vb
  name: ReceivedAndNotAppliedCount
  nameWithType: RemoteReplicatorAcknowledgementDetail.ReceivedAndNotAppliedCount
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.ReceivedAndNotAppliedCount
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReceivedAndNotAppliedCount
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorAcknowledgementDetail.cs
    startLine: 53
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the number of operations received and not applied\n"
  example: []
  syntax:
    content: public long ReceivedAndNotAppliedCount { get; }
    content.vb: Public ReadOnly Property ReceivedAndNotAppliedCount As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>Represents the number of operations received and not yet applied by a remote replicator.</p>\n"
  overload: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.ReceivedAndNotAppliedCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query.RemoteReplicatorStatus
  commentId: T:System.Fabric.Query.RemoteReplicatorStatus
  isExternal: false
  name: RemoteReplicatorStatus
  nameWithType: RemoteReplicatorStatus
  fullName: System.Fabric.Query.RemoteReplicatorStatus
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<RemoteReplicatorAcknowledgementDetail>()
  nameWithType: ByteArraySerializer.Serialize<RemoteReplicatorAcknowledgementDetail>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.RemoteReplicatorAcknowledgementDetail>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of RemoteReplicatorAcknowledgementDetail)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.RemoteReplicatorAcknowledgementDetail)()
  name.vb: Serialize(Of RemoteReplicatorAcknowledgementDetail)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<RemoteReplicatorAcknowledgementDetail>
    nameWithType: ByteArraySerializer.Serialize<RemoteReplicatorAcknowledgementDetail>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.RemoteReplicatorAcknowledgementDetail>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of RemoteReplicatorAcknowledgementDetail)
    nameWithType: ByteArraySerializer.Serialize(Of RemoteReplicatorAcknowledgementDetail)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.RemoteReplicatorAcknowledgementDetail)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail
  commentId: T:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail
  parent: System.Fabric.Query
  isExternal: false
  name: RemoteReplicatorAcknowledgementDetail
  nameWithType: RemoteReplicatorAcknowledgementDetail
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.#ctor*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.#ctor
  isExternal: false
  name: RemoteReplicatorAcknowledgementDetail
  nameWithType: RemoteReplicatorAcknowledgementDetail.RemoteReplicatorAcknowledgementDetail
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.RemoteReplicatorAcknowledgementDetail
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageReceiveDuration*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageReceiveDuration
  isExternal: false
  name: AverageReceiveDuration
  nameWithType: RemoteReplicatorAcknowledgementDetail.AverageReceiveDuration
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageReceiveDuration
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageApplyDuration*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageApplyDuration
  isExternal: false
  name: AverageApplyDuration
  nameWithType: RemoteReplicatorAcknowledgementDetail.AverageApplyDuration
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.AverageApplyDuration
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.NotReceivedCount*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.NotReceivedCount
  isExternal: false
  name: NotReceivedCount
  nameWithType: RemoteReplicatorAcknowledgementDetail.NotReceivedCount
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.NotReceivedCount
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.ReceivedAndNotAppliedCount*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.ReceivedAndNotAppliedCount
  isExternal: false
  name: ReceivedAndNotAppliedCount
  nameWithType: RemoteReplicatorAcknowledgementDetail.ReceivedAndNotAppliedCount
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementDetail.ReceivedAndNotAppliedCount
