### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher
  commentId: T:Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher
  id: ActorServiceRemotingDispatcher
  parent: Microsoft.ServiceFabric.Actors.Remoting.Runtime
  children:
  - Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.#ctor(Microsoft.ServiceFabric.Actors.Runtime.ActorService)
  - Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
  langs:
  - csharp
  - vb
  name: ActorServiceRemotingDispatcher
  nameWithType: ActorServiceRemotingDispatcher
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Remoting/Runtime/ActorServiceRemotingDispatcher.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorServiceRemotingDispatcher
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Remoting/Runtime/ActorServiceRemotingDispatcher.cs
    startLine: 22
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Remoting.Runtime
  summary: "\nProvides an implementation of <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler\" data-throw-if-not-resolved=\"false\"></xref> that can dispatch\nmessages to an actor service and to the actors hosted in the service.\n"
  example: []
  syntax:
    content: 'public class ActorServiceRemotingDispatcher : ServiceRemotingDispatcher, IServiceRemotingMessageHandler'
    content.vb: >-
      Public Class ActorServiceRemotingDispatcher
          Inherits ServiceRemotingDispatcher
          Implements IServiceRemotingMessageHandler
  inheritance:
  - System.Object
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher
  implements:
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
  inheritedMembers:
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.HandleOneWay(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.#ctor(Microsoft.ServiceFabric.Actors.Runtime.ActorService)
  commentId: M:Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.#ctor(Microsoft.ServiceFabric.Actors.Runtime.ActorService)
  id: '#ctor(Microsoft.ServiceFabric.Actors.Runtime.ActorService)'
  parent: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher
  langs:
  - csharp
  - vb
  name: ActorServiceRemotingDispatcher(ActorService)
  nameWithType: ActorServiceRemotingDispatcher.ActorServiceRemotingDispatcher(ActorService)
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.ActorServiceRemotingDispatcher(Microsoft.ServiceFabric.Actors.Runtime.ActorService)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Remoting/Runtime/ActorServiceRemotingDispatcher.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Remoting/Runtime/ActorServiceRemotingDispatcher.cs
    startLine: 32
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Remoting.Runtime
  summary: "\nInstantiates the ActorServiceRemotingDispatcher that can dispatch messages to an actor service and \nto the actors hosted in the service..\n"
  example: []
  syntax:
    content: public ActorServiceRemotingDispatcher(ActorService actorService)
    content.vb: Public Sub New(actorService As ActorService)
    parameters:
    - id: actorService
      type: Microsoft.ServiceFabric.Actors.Runtime.ActorService
      description: An actor service instance.
  overload: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
  commentId: M:Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
  id: RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
  parent: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher
  langs:
  - csharp
  - vb
  name: RequestResponseAsync(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte[])
  nameWithType: ActorServiceRemotingDispatcher.RequestResponseAsync(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte[])
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext, Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders, System.Byte[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Remoting/Runtime/ActorServiceRemotingDispatcher.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RequestResponseAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Remoting/Runtime/ActorServiceRemotingDispatcher.cs
    startLine: 55
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Remoting.Runtime
  summary: "\nDispatches the messages received from the client to the actor service methods or the actor methods.\n"
  example: []
  syntax:
    content: public override Task<byte[]> RequestResponseAsync(IServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBodyBytes)
    content.vb: Public Overrides Function RequestResponseAsync(requestContext As IServiceRemotingRequestContext, messageHeaders As ServiceRemotingMessageHeaders, requestBodyBytes As Byte()) As Task(Of Byte())
    parameters:
    - id: requestContext
      type: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
      description: Request context that allows getting the callback channel if required.
    - id: messageHeaders
      type: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
      description: Service remoting message headers
    - id: requestBodyBytes
      type: System.Byte[]
      description: serialized request body of the remoting message.
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. \nThe result of the Task is the serialized response body.\n"
  overridden: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
  overload: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.RequestResponseAsync*
  nameWithType.vb: ActorServiceRemotingDispatcher.RequestResponseAsync(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext, Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders, System.Byte())
  name.vb: RequestResponseAsync(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte())
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: IServiceRemotingMessageHandler
  nameWithType: IServiceRemotingMessageHandler
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
- uid: Microsoft.ServiceFabric.Actors.Remoting.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Remoting.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Remoting.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Remoting.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: ServiceRemotingDispatcher
  nameWithType: ServiceRemotingDispatcher
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.HandleOneWay(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.HandleOneWay(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher
  isExternal: true
  name: HandleOneWay(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte[])
  nameWithType: ServiceRemotingDispatcher.HandleOneWay(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte[])
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.HandleOneWay(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext, Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders, System.Byte[])
  nameWithType.vb: ServiceRemotingDispatcher.HandleOneWay(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte())
  fullname.vb: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.HandleOneWay(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext, Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders, System.Byte())
  name.vb: HandleOneWay(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte())
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.HandleOneWay(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
    name: HandleOneWay
    nameWithType: ServiceRemotingDispatcher.HandleOneWay
    fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.HandleOneWay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
    name: IServiceRemotingRequestContext
    nameWithType: IServiceRemotingRequestContext
    fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
    name: ServiceRemotingMessageHeaders
    nameWithType: ServiceRemotingMessageHeaders
    fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.HandleOneWay(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
    name: HandleOneWay
    nameWithType: ServiceRemotingDispatcher.HandleOneWay
    fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.HandleOneWay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
    name: IServiceRemotingRequestContext
    nameWithType: IServiceRemotingRequestContext
    fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
    name: ServiceRemotingMessageHeaders
    nameWithType: ServiceRemotingMessageHeaders
    fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ActorServiceRemotingDispatcher>()
  nameWithType: ByteArraySerializer.Serialize<ActorServiceRemotingDispatcher>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ActorServiceRemotingDispatcher)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher)()
  name.vb: Serialize(Of ActorServiceRemotingDispatcher)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ActorServiceRemotingDispatcher>
    nameWithType: ByteArraySerializer.Serialize<ActorServiceRemotingDispatcher>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ActorServiceRemotingDispatcher)
    nameWithType: ByteArraySerializer.Serialize(Of ActorServiceRemotingDispatcher)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Runtime
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.#ctor
  isExternal: false
  name: ActorServiceRemotingDispatcher
  nameWithType: ActorServiceRemotingDispatcher.ActorServiceRemotingDispatcher
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.ActorServiceRemotingDispatcher
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorService
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: ActorService
  nameWithType: ActorService
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService
- uid: Microsoft.ServiceFabric.Actors.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Runtime
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher
  isExternal: true
  name: RequestResponseAsync(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte[])
  nameWithType: ServiceRemotingDispatcher.RequestResponseAsync(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte[])
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext, Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders, System.Byte[])
  nameWithType.vb: ServiceRemotingDispatcher.RequestResponseAsync(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte())
  fullname.vb: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext, Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders, System.Byte())
  name.vb: RequestResponseAsync(IServiceRemotingRequestContext, ServiceRemotingMessageHeaders, Byte())
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
    name: RequestResponseAsync
    nameWithType: ServiceRemotingDispatcher.RequestResponseAsync
    fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.RequestResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
    name: IServiceRemotingRequestContext
    nameWithType: IServiceRemotingRequestContext
    fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
    name: ServiceRemotingMessageHeaders
    nameWithType: ServiceRemotingMessageHeaders
    fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.RequestResponseAsync(Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext,Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders,System.Byte[])
    name: RequestResponseAsync
    nameWithType: ServiceRemotingDispatcher.RequestResponseAsync
    fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceRemotingDispatcher.RequestResponseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
    name: IServiceRemotingRequestContext
    nameWithType: IServiceRemotingRequestContext
    fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
    name: ServiceRemotingMessageHeaders
    nameWithType: ServiceRemotingMessageHeaders
    fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.RequestResponseAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.RequestResponseAsync
  isExternal: false
  name: RequestResponseAsync
  nameWithType: ActorServiceRemotingDispatcher.RequestResponseAsync
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Runtime.ActorServiceRemotingDispatcher.RequestResponseAsync
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: IServiceRemotingRequestContext
  nameWithType: IServiceRemotingRequestContext
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingRequestContext
- uid: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
  parent: Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: ServiceRemotingMessageHeaders
  nameWithType: ServiceRemotingMessageHeaders
  fullName: Microsoft.ServiceFabric.Services.Remoting.ServiceRemotingMessageHeaders
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: T:System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullname.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceFabric.Services.Remoting
  commentId: N:Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting
  nameWithType: Microsoft.ServiceFabric.Services.Remoting
  fullName: Microsoft.ServiceFabric.Services.Remoting
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
