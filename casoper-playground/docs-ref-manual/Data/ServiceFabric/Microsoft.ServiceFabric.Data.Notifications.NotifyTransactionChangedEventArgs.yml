### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs
  id: NotifyTransactionChangedEventArgs
  parent: Microsoft.ServiceFabric.Data.Notifications
  children:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.#ctor(Microsoft.ServiceFabric.Data.ITransaction,Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedAction)
  - Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Action
  - Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Transaction
  langs:
  - csharp
  - vb
  name: NotifyTransactionChangedEventArgs
  nameWithType: NotifyTransactionChangedEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyTransactionChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NotifyTransactionChangedEventArgs
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyTransactionChangedEventArgs.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nEvent arguments for transactions.\n"
  example: []
  syntax:
    content: 'public class NotifyTransactionChangedEventArgs : EventArgs'
    content.vb: >-
      Public Class NotifyTransactionChangedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.#ctor(Microsoft.ServiceFabric.Data.ITransaction,Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedAction)
  commentId: M:Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.#ctor(Microsoft.ServiceFabric.Data.ITransaction,Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedAction)
  id: '#ctor(Microsoft.ServiceFabric.Data.ITransaction,Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedAction)'
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyTransactionChangedEventArgs(ITransaction, NotifyTransactionChangedAction)
  nameWithType: NotifyTransactionChangedEventArgs.NotifyTransactionChangedEventArgs(ITransaction, NotifyTransactionChangedAction)
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.NotifyTransactionChangedEventArgs(Microsoft.ServiceFabric.Data.ITransaction, Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedAction)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyTransactionChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyTransactionChangedEventArgs.cs
    startLine: 24
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nInitializes a new instance of the <cref name=\"NotifyStateManagerSingleEntityChangedEventArgs\"></cref>\n"
  example: []
  syntax:
    content: public NotifyTransactionChangedEventArgs(ITransaction transaction, NotifyTransactionChangedAction action)
    content.vb: Public Sub New(transaction As ITransaction, action As NotifyTransactionChangedAction)
    parameters:
    - id: transaction
      type: Microsoft.ServiceFabric.Data.ITransaction
      description: Transaction that the change is related to.
    - id: action
      type: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedAction
      description: The type of notification.
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Action
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Action
  id: Action
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: NotifyTransactionChangedEventArgs.Action
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Action
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyTransactionChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Action
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyTransactionChangedEventArgs.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nType of action for which the event was created.\n"
  example: []
  syntax:
    content: public NotifyTransactionChangedAction Action { get; }
    content.vb: Public ReadOnly Property Action As NotifyTransactionChangedAction
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedAction
      description: "\nThe type of notification.\n"
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Action*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Transaction
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Transaction
  id: Transaction
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: NotifyTransactionChangedEventArgs.Transaction
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Transaction
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyTransactionChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Transaction
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyTransactionChangedEventArgs.cs
    startLine: 50
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nGets the transaction.\n"
  example: []
  syntax:
    content: public ITransaction Transaction { get; }
    content.vb: Public ReadOnly Property Transaction As ITransaction
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.ITransaction
      description: "\nThe transaction associated with the operation.\n"
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Transaction*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Data.Notifications
  commentId: N:Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: Microsoft.ServiceFabric.Data.Notifications
  nameWithType: Microsoft.ServiceFabric.Data.Notifications
  fullName: Microsoft.ServiceFabric.Data.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NotifyTransactionChangedEventArgs>()
  nameWithType: ByteArraySerializer.Serialize<NotifyTransactionChangedEventArgs>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NotifyTransactionChangedEventArgs)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs)()
  name.vb: Serialize(Of NotifyTransactionChangedEventArgs)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NotifyTransactionChangedEventArgs>
    nameWithType: ByteArraySerializer.Serialize<NotifyTransactionChangedEventArgs>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NotifyTransactionChangedEventArgs)
    nameWithType: ByteArraySerializer.Serialize(Of NotifyTransactionChangedEventArgs)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.#ctor
  isExternal: false
  name: NotifyTransactionChangedEventArgs
  nameWithType: NotifyTransactionChangedEventArgs.NotifyTransactionChangedEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.NotifyTransactionChangedEventArgs
- uid: Microsoft.ServiceFabric.Data.ITransaction
  commentId: T:Microsoft.ServiceFabric.Data.ITransaction
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: Microsoft.ServiceFabric.Data.ITransaction
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedAction
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedAction
  parent: Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: NotifyTransactionChangedAction
  nameWithType: NotifyTransactionChangedAction
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedAction
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Action*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Action
  isExternal: false
  name: Action
  nameWithType: NotifyTransactionChangedEventArgs.Action
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Action
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Transaction*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Transaction
  isExternal: false
  name: Transaction
  nameWithType: NotifyTransactionChangedEventArgs.Transaction
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyTransactionChangedEventArgs.Transaction
