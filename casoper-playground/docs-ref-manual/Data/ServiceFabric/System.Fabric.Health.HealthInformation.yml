### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.HealthInformation
  commentId: T:System.Fabric.Health.HealthInformation
  id: HealthInformation
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.HealthInformation.#ctor(System.String,System.String,System.Fabric.Health.HealthState)
  - System.Fabric.Health.HealthInformation.AutoSequenceNumber
  - System.Fabric.Health.HealthInformation.Description
  - System.Fabric.Health.HealthInformation.HealthState
  - System.Fabric.Health.HealthInformation.Property
  - System.Fabric.Health.HealthInformation.RemoveWhenExpired
  - System.Fabric.Health.HealthInformation.SequenceNumber
  - System.Fabric.Health.HealthInformation.SourceId
  - System.Fabric.Health.HealthInformation.TimeToLive
  - System.Fabric.Health.HealthInformation.ToString
  - System.Fabric.Health.HealthInformation.UnknownSequenceNumber
  langs:
  - csharp
  - vb
  name: HealthInformation
  nameWithType: HealthInformation
  fullName: System.Fabric.Health.HealthInformation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthInformation
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Represents common health report information. \nIt is included in all health reports sent to health store and in all health events returned by health queries.</p>\n"
  example: []
  syntax:
    content: public sealed class HealthInformation
    content.vb: Public NotInheritable Class HealthInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.HealthInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.HealthInformation.UnknownSequenceNumber
  commentId: F:System.Fabric.Health.HealthInformation.UnknownSequenceNumber
  id: UnknownSequenceNumber
  parent: System.Fabric.Health.HealthInformation
  langs:
  - csharp
  - vb
  name: UnknownSequenceNumber
  nameWithType: HealthInformation.UnknownSequenceNumber
  fullName: System.Fabric.Health.HealthInformation.UnknownSequenceNumber
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UnknownSequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 22
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nUnknown sequence number, which is an invalid sequence number that is not accepted by the health store.\n"
  example: []
  syntax:
    content: public const long UnknownSequenceNumber = -1L
    content.vb: Public Const UnknownSequenceNumber As Long = -1L
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.Health.HealthInformation.AutoSequenceNumber
  commentId: F:System.Fabric.Health.HealthInformation.AutoSequenceNumber
  id: AutoSequenceNumber
  parent: System.Fabric.Health.HealthInformation
  langs:
  - csharp
  - vb
  name: AutoSequenceNumber
  nameWithType: HealthInformation.AutoSequenceNumber
  fullName: System.Fabric.Health.HealthInformation.AutoSequenceNumber
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AutoSequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 31
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nAuto sequence number, replaced with a valid sequence number by the health client.\n"
  remarks: >-
    When a health client receives a report with Auto sequence number,

    it replaces the auto sequence number with a valid sequence number.

    The sequence number is guaranteed to increase in the same process,

    even if the client machine time goes backwards.
  example: []
  syntax:
    content: public const long AutoSequenceNumber = 0L
    content.vb: Public Const AutoSequenceNumber As Long = 0L
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.Health.HealthInformation.#ctor(System.String,System.String,System.Fabric.Health.HealthState)
  commentId: M:System.Fabric.Health.HealthInformation.#ctor(System.String,System.String,System.Fabric.Health.HealthState)
  id: '#ctor(System.String,System.String,System.Fabric.Health.HealthState)'
  parent: System.Fabric.Health.HealthInformation
  langs:
  - csharp
  - vb
  name: HealthInformation(String, String, HealthState)
  nameWithType: HealthInformation.HealthInformation(String, String, HealthState)
  fullName: System.Fabric.Health.HealthInformation.HealthInformation(System.String, System.String, System.Fabric.Health.HealthState)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 70
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Health.HealthInformation\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public HealthInformation(string sourceId, string property, HealthState healthState)
    content.vb: Public Sub New(sourceId As String, property As String, healthState As HealthState)
    parameters:
    - id: sourceId
      type: System.String
      description: "\n<p>The source of the report. Cannot be <strong>null</strong> or empty.\nIt can't start with \"System.\", which is reserved keyword for system components reporting.</p>\n"
    - id: property
      type: System.String
      description: "\n<p>The property of the report. Cannot be <strong>null</strong> or empty.</p>\n"
    - id: healthState
      type: System.Fabric.Health.HealthState
      description: "\n<p>The health state of the report. Must be specified. Must be one of the <xref href=\"System.Fabric.Health.HealthState.Error\" data-throw-if-not-resolved=\"false\"></xref>, \n<xref href=\"System.Fabric.Health.HealthState.Warning\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Fabric.Health.HealthState.Ok\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  overload: System.Fabric.Health.HealthInformation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sourceId</em> cannot be <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>property</em> cannot be <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>sourceId</em> cannot be empty.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>property</em> cannot be empty.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Specified <em>healthState</em> is not supported.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.HealthInformation.SourceId
  commentId: P:System.Fabric.Health.HealthInformation.SourceId
  id: SourceId
  parent: System.Fabric.Health.HealthInformation
  langs:
  - csharp
  - vb
  name: SourceId
  nameWithType: HealthInformation.SourceId
  fullName: System.Fabric.Health.HealthInformation.SourceId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SourceId
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 99
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the source Identifier which identifies the watchdog/system component \nwhich generated the health information.</p>\n"
  example: []
  syntax:
    content: public string SourceId { get; }
    content.vb: Public ReadOnly Property SourceId As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representing the source of the health report.</p>\n"
  overload: System.Fabric.Health.HealthInformation.SourceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.HealthInformation.Property
  commentId: P:System.Fabric.Health.HealthInformation.Property
  id: Property
  parent: System.Fabric.Health.HealthInformation
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: HealthInformation.Property
  fullName: System.Fabric.Health.HealthInformation.Property
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Property
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 120
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the property of the health report.</p>\n"
  remarks: "\n<p>\nThe property is a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> and not a fixed enumeration to allow the reporter to categorize the health event for a specific property of the entity.\nFor example, reporter A can report the health of the Node01 \"storage\" property and reporter B can report the health of the Node01 \"connectivity\" property. \nIn the health store, these reports are treated as separate health events for the Node01 entity.\n</p>\n"
  example: []
  syntax:
    content: public string Property { get; }
    content.vb: Public ReadOnly Property Property As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representing the property of the health report. \nTogether with the <xref href=\"System.Fabric.Health.HealthInformation.SourceId\" data-throw-if-not-resolved=\"false\"></xref>, it uniquely \nidentifies the health information.</p>\n"
  overload: System.Fabric.Health.HealthInformation.Property*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.HealthInformation.HealthState
  commentId: P:System.Fabric.Health.HealthInformation.HealthState
  id: HealthState
  parent: System.Fabric.Health.HealthInformation
  langs:
  - csharp
  - vb
  name: HealthState
  nameWithType: HealthInformation.HealthState
  fullName: System.Fabric.Health.HealthInformation.HealthState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthState
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 137
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the health state of the health information.</p>\n"
  remarks: "\n<p>\nThe accepted health states are <xref href=\"System.Fabric.Health.HealthState.Ok\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Fabric.Health.HealthState.Warning\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.Health.HealthState.Error\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example: []
  syntax:
    content: public HealthState HealthState { get; }
    content.vb: Public ReadOnly Property HealthState As HealthState
    parameters: []
    return:
      type: System.Fabric.Health.HealthState
      description: "\n<p>A <xref href=\"System.Fabric.Health.HealthState\" data-throw-if-not-resolved=\"false\"></xref> representing the reported health state.</p>\n"
  overload: System.Fabric.Health.HealthInformation.HealthState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.HealthInformation.Description
  commentId: P:System.Fabric.Health.HealthInformation.Description
  id: Description
  parent: System.Fabric.Health.HealthInformation
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: HealthInformation.Description
  fullName: System.Fabric.Health.HealthInformation.Description
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Description
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 153
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets or sets the description of the health information. \nIt represents free text used to add human readable information about the report.</p>\n"
  remarks: "\n<p>The maximum string length for the description is 4096 characters.</p>\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> which describes the health information in human readable form.</p>\n"
  overload: System.Fabric.Health.HealthInformation.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.HealthInformation.TimeToLive
  commentId: P:System.Fabric.Health.HealthInformation.TimeToLive
  id: TimeToLive
  parent: System.Fabric.Health.HealthInformation
  langs:
  - csharp
  - vb
  name: TimeToLive
  nameWithType: HealthInformation.TimeToLive
  fullName: System.Fabric.Health.HealthInformation.TimeToLive
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TimeToLive
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 175
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets or sets how long the health report is valid. Must be larger than TimeSpan.Zero.</p>\n"
  remarks: "<p>When clients report periodically, they should send reports \n    with higher frequency than time to live.\n    If clients report on transition, they can set the time to live to infinite.</p>\n<p>When time to live expires, the health event that contains the health information\nis either removed from health store, if <xref href=\"System.Fabric.Health.HealthInformation.RemoveWhenExpired\" data-throw-if-not-resolved=\"false\"></xref> is \n<strong>true</strong> or evaluated at error, if <xref href=\"System.Fabric.Health.HealthInformation.RemoveWhenExpired\" data-throw-if-not-resolved=\"false\"></xref> is <strong>false</strong>.\n</p>"
  example: []
  syntax:
    content: public TimeSpan TimeToLive { get; set; }
    content.vb: Public Property TimeToLive As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> representing the time to live of the health report.</p>\n"
  overload: System.Fabric.Health.HealthInformation.TimeToLive*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The specified value was invalid. Please provide a duration that is larger than 0.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.HealthInformation.RemoveWhenExpired
  commentId: P:System.Fabric.Health.HealthInformation.RemoveWhenExpired
  id: RemoveWhenExpired
  parent: System.Fabric.Health.HealthInformation
  langs:
  - csharp
  - vb
  name: RemoveWhenExpired
  nameWithType: HealthInformation.RemoveWhenExpired
  fullName: System.Fabric.Health.HealthInformation.RemoveWhenExpired
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RemoveWhenExpired
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 211
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets or sets a value that indicates whether the report is removed from health store when it expires. \nIf set to <strong>false</strong>, the \nreport is treated as an error when expired. <strong>false</strong> by default.</p>\n"
  remarks: "<p>When clients report periodically, they should set <xref href=\"System.Fabric.Health.HealthInformation.RemoveWhenExpired\" data-throw-if-not-resolved=\"false\"></xref> <strong>false</strong> (default).\n    This way, is the reporter has issues (eg. deadlock) and can't report, \n    the entity is evaluated at error when the health report\n    expires, and this will flag the entity as <xref href=\"System.Fabric.Health.HealthState.Error\" data-throw-if-not-resolved=\"false\"></xref>.\n    Periodic health clients should send reports \n    with higher frequency than time to live to account for delays due to health client batching, \n    message transport over the wire and health store processing.</p>"
  example: []
  syntax:
    content: public bool RemoveWhenExpired { get; set; }
    content.vb: Public Property RemoveWhenExpired As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the report should be removed from health store when expired; otherwise, \n<strong>false</strong>.</p>\n"
  overload: System.Fabric.Health.HealthInformation.RemoveWhenExpired*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.HealthInformation.SequenceNumber
  commentId: P:System.Fabric.Health.HealthInformation.SequenceNumber
  id: SequenceNumber
  parent: System.Fabric.Health.HealthInformation
  langs:
  - csharp
  - vb
  name: SequenceNumber
  nameWithType: HealthInformation.SequenceNumber
  fullName: System.Fabric.Health.HealthInformation.SequenceNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 233
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets or sets the sequence number associated with the report. \nMust be greater than <xref href=\"System.Fabric.Health.HealthInformation.UnknownSequenceNumber\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The report sequence number is used by health store to detect stale reports.\n</p>\n<p>Most of the times, the reporter doesn't need to specify the sequence number. The default value\n<xref href=\"System.Fabric.Health.HealthInformation.AutoSequenceNumber\" data-throw-if-not-resolved=\"false\"></xref> can be used instead. When a health client receives a report with Auto sequence number,\nit replaces the auto sequence number with a valid sequence number.\nThe sequence number is guaranteed to increase in the same process,\neven if the client machine time goes backwards.</p>\n"
  example: []
  syntax:
    content: public long SequenceNumber { get; set; }
    content.vb: Public Property SequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> representing the report sequence number.</p>\n"
  overload: System.Fabric.Health.HealthInformation.SequenceNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.HealthInformation.ToString
  commentId: M:System.Fabric.Health.HealthInformation.ToString
  id: ToString
  parent: System.Fabric.Health.HealthInformation
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HealthInformation.ToString()
  fullName: System.Fabric.Health.HealthInformation.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthInformation.cs
    startLine: 255
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nCreates a string description of the health information.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: String description of the health information.
  overridden: System.Object.ToString
  overload: System.Fabric.Health.HealthInformation.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<HealthInformation>()
  nameWithType: ByteArraySerializer.Serialize<HealthInformation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.HealthInformation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of HealthInformation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.HealthInformation)()
  name.vb: Serialize(Of HealthInformation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<HealthInformation>
    nameWithType: ByteArraySerializer.Serialize<HealthInformation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.HealthInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of HealthInformation)
    nameWithType: ByteArraySerializer.Serialize(Of HealthInformation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.HealthInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Health.HealthInformation
  commentId: T:System.Fabric.Health.HealthInformation
  parent: System.Fabric.Health
  isExternal: false
  name: HealthInformation
  nameWithType: HealthInformation
  fullName: System.Fabric.Health.HealthInformation
- uid: System.Fabric.Health.HealthState.Error
  commentId: F:System.Fabric.Health.HealthState.Error
- uid: System.Fabric.Health.HealthState.Warning
  commentId: F:System.Fabric.Health.HealthState.Warning
- uid: System.Fabric.Health.HealthState.Ok
  commentId: F:System.Fabric.Health.HealthState.Ok
- uid: System.Fabric.Health.HealthInformation.#ctor*
  commentId: Overload:System.Fabric.Health.HealthInformation.#ctor
  isExternal: false
  name: HealthInformation
  nameWithType: HealthInformation.HealthInformation
  fullName: System.Fabric.Health.HealthInformation.HealthInformation
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Health.HealthState
  commentId: T:System.Fabric.Health.HealthState
  parent: System.Fabric.Health
  isExternal: false
  name: HealthState
  nameWithType: HealthState
  fullName: System.Fabric.Health.HealthState
- uid: System.Fabric.Health.HealthInformation.SourceId*
  commentId: Overload:System.Fabric.Health.HealthInformation.SourceId
  isExternal: false
  name: SourceId
  nameWithType: HealthInformation.SourceId
  fullName: System.Fabric.Health.HealthInformation.SourceId
- uid: System.Fabric.Health.HealthInformation.SourceId
  commentId: P:System.Fabric.Health.HealthInformation.SourceId
- uid: System.Fabric.Health.HealthInformation.Property*
  commentId: Overload:System.Fabric.Health.HealthInformation.Property
  isExternal: false
  name: Property
  nameWithType: HealthInformation.Property
  fullName: System.Fabric.Health.HealthInformation.Property
- uid: System.Fabric.Health.HealthInformation.HealthState*
  commentId: Overload:System.Fabric.Health.HealthInformation.HealthState
  isExternal: false
  name: HealthState
  nameWithType: HealthInformation.HealthState
  fullName: System.Fabric.Health.HealthInformation.HealthState
- uid: System.Fabric.Health.HealthInformation.Description*
  commentId: Overload:System.Fabric.Health.HealthInformation.Description
  isExternal: false
  name: Description
  nameWithType: HealthInformation.Description
  fullName: System.Fabric.Health.HealthInformation.Description
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.Health.HealthInformation.RemoveWhenExpired
  commentId: P:System.Fabric.Health.HealthInformation.RemoveWhenExpired
- uid: System.Fabric.Health.HealthInformation.TimeToLive*
  commentId: Overload:System.Fabric.Health.HealthInformation.TimeToLive
  isExternal: false
  name: TimeToLive
  nameWithType: HealthInformation.TimeToLive
  fullName: System.Fabric.Health.HealthInformation.TimeToLive
- uid: System.Fabric.Health.HealthInformation.RemoveWhenExpired*
  commentId: Overload:System.Fabric.Health.HealthInformation.RemoveWhenExpired
  isExternal: false
  name: RemoveWhenExpired
  nameWithType: HealthInformation.RemoveWhenExpired
  fullName: System.Fabric.Health.HealthInformation.RemoveWhenExpired
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Health.HealthInformation.UnknownSequenceNumber
  commentId: F:System.Fabric.Health.HealthInformation.UnknownSequenceNumber
- uid: System.Fabric.Health.HealthInformation.AutoSequenceNumber
  commentId: F:System.Fabric.Health.HealthInformation.AutoSequenceNumber
- uid: System.Fabric.Health.HealthInformation.SequenceNumber*
  commentId: Overload:System.Fabric.Health.HealthInformation.SequenceNumber
  isExternal: false
  name: SequenceNumber
  nameWithType: HealthInformation.SequenceNumber
  fullName: System.Fabric.Health.HealthInformation.SequenceNumber
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthInformation.ToString*
  commentId: Overload:System.Fabric.Health.HealthInformation.ToString
  isExternal: false
  name: ToString
  nameWithType: HealthInformation.ToString
  fullName: System.Fabric.Health.HealthInformation.ToString
