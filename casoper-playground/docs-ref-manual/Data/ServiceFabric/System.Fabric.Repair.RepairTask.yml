### YamlMime:ManagedReference
items:
- uid: System.Fabric.Repair.RepairTask
  commentId: T:System.Fabric.Repair.RepairTask
  id: RepairTask
  parent: System.Fabric.Repair
  children:
  - System.Fabric.Repair.RepairTask.Action
  - System.Fabric.Repair.RepairTask.ApprovedTimestamp
  - System.Fabric.Repair.RepairTask.ClaimedTimestamp
  - System.Fabric.Repair.RepairTask.CompletedTimestamp
  - System.Fabric.Repair.RepairTask.CreatedTimestamp
  - System.Fabric.Repair.RepairTask.Description
  - System.Fabric.Repair.RepairTask.ExecutingTimestamp
  - System.Fabric.Repair.RepairTask.Executor
  - System.Fabric.Repair.RepairTask.ExecutorData
  - System.Fabric.Repair.RepairTask.Flags
  - System.Fabric.Repair.RepairTask.Impact
  - System.Fabric.Repair.RepairTask.PerformPreparingHealthCheck
  - System.Fabric.Repair.RepairTask.PerformRestoringHealthCheck
  - System.Fabric.Repair.RepairTask.PreparingHealthCheckEndTimestamp
  - System.Fabric.Repair.RepairTask.PreparingHealthCheckStartTimestamp
  - System.Fabric.Repair.RepairTask.PreparingHealthCheckState
  - System.Fabric.Repair.RepairTask.PreparingTimestamp
  - System.Fabric.Repair.RepairTask.RestoringHealthCheckEndTimestamp
  - System.Fabric.Repair.RepairTask.RestoringHealthCheckStartTimestamp
  - System.Fabric.Repair.RepairTask.RestoringHealthCheckState
  - System.Fabric.Repair.RepairTask.RestoringTimestamp
  - System.Fabric.Repair.RepairTask.ResultCode
  - System.Fabric.Repair.RepairTask.ResultDetails
  - System.Fabric.Repair.RepairTask.ResultStatus
  - System.Fabric.Repair.RepairTask.Scope
  - System.Fabric.Repair.RepairTask.State
  - System.Fabric.Repair.RepairTask.Target
  - System.Fabric.Repair.RepairTask.TaskId
  - System.Fabric.Repair.RepairTask.Version
  langs:
  - csharp
  - vb
  name: RepairTask
  nameWithType: RepairTask
  fullName: System.Fabric.Repair.RepairTask
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RepairTask
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Represents a repair task, which includes information about what kind of repair was requested, what its progress \nis, and what its final result was.</p>\n<p>This class supports the Service Fabric platform; it is not meant to be called directly from your code.</p>\n"
  example: []
  syntax:
    content: public class RepairTask
    content.vb: Public Class RepairTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Repair.RepairTask.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Repair.RepairTask.Scope
  commentId: P:System.Fabric.Repair.RepairTask.Scope
  id: Scope
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: RepairTask.Scope
  fullName: System.Fabric.Repair.RepairTask.Scope
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Scope
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 46
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets an object describing the scope of the repair task.</p>\n"
  remarks: "\n<p>The repair task scope determines the resource against which access checks are performed when the repair task \nis created, modified, deleted, or retrieved.  Entities impacted by a repair must be contained within the scope of \nthe repair task.  For example, repairs which impact nodes require that the repair task be created under the Cluster scope.</p>\n"
  example: []
  syntax:
    content: public RepairScopeIdentifier Scope { get; }
    content.vb: Public ReadOnly Property Scope As RepairScopeIdentifier
    parameters: []
    return:
      type: System.Fabric.Repair.RepairScopeIdentifier
      description: "\n<p>A <xref href=\"System.Fabric.Repair.RepairScopeIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object describing the scope of the repair task.</p>\n"
  overload: System.Fabric.Repair.RepairTask.Scope*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.TaskId
  commentId: P:System.Fabric.Repair.RepairTask.TaskId
  id: TaskId
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: TaskId
  nameWithType: RepairTask.TaskId
  fullName: System.Fabric.Repair.RepairTask.TaskId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TaskId
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 54
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the identifier of the repair task.</p>\n"
  example: []
  syntax:
    content: public string TaskId { get; }
    content.vb: Public ReadOnly Property TaskId As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The identifier of the repair task.</p>\n"
  overload: System.Fabric.Repair.RepairTask.TaskId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.Version
  commentId: P:System.Fabric.Repair.RepairTask.Version
  id: Version
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: RepairTask.Version
  fullName: System.Fabric.Repair.RepairTask.Version
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Version
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 68
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets the version of the repair task.</p>\n"
  remarks: "\n<p>When creating a new repair task, the version must be set to zero.  When updating a repair task via the \nUpdateRepairExecutionStateAsync method, the version is used for optimistic concurrency checks.  If the version is \nset to zero, the update will not check for write conflicts.  If the version is set to a non-zero value, then the \nupdate will only succeed if the actual current version of the repair task matches this value.</p>\n"
  example: []
  syntax:
    content: public long Version { get; set; }
    content.vb: Public Property Version As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The version of the repair task.</p>\n"
  overload: System.Fabric.Repair.RepairTask.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.RepairTask.Description
  commentId: P:System.Fabric.Repair.RepairTask.Description
  id: Description
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: RepairTask.Description
  fullName: System.Fabric.Repair.RepairTask.Description
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Description
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 76
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets a description of the purpose or other informational details of the repair task.</p>\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A description of the purpose or other informational details of the repair task.</p>\n"
  overload: System.Fabric.Repair.RepairTask.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.RepairTask.State
  commentId: P:System.Fabric.Repair.RepairTask.State
  id: State
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: State
  nameWithType: RepairTask.State
  fullName: System.Fabric.Repair.RepairTask.State
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: State
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 84
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets the workflow state of the repair task.</p>\n"
  example: []
  syntax:
    content: public RepairTaskState State { get; set; }
    content.vb: Public Property State As RepairTaskState
    parameters: []
    return:
      type: System.Fabric.Repair.RepairTaskState
      description: "\n<p>The workflow state of the repair task.</p>\n"
  overload: System.Fabric.Repair.RepairTask.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.RepairTask.Flags
  commentId: P:System.Fabric.Repair.RepairTask.Flags
  id: Flags
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: RepairTask.Flags
  fullName: System.Fabric.Repair.RepairTask.Flags
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Flags
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 92
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the flags that give additional details about the status of the repair task.</p>\n"
  example: []
  syntax:
    content: public RepairTaskFlags Flags { get; }
    content.vb: Public ReadOnly Property Flags As RepairTaskFlags
    parameters: []
    return:
      type: System.Fabric.Repair.RepairTaskFlags
      description: "\n<p>The flags that give additional details about the status of the repair task.</p>\n"
  overload: System.Fabric.Repair.RepairTask.Flags*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.Action
  commentId: P:System.Fabric.Repair.RepairTask.Action
  id: Action
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: RepairTask.Action
  fullName: System.Fabric.Repair.RepairTask.Action
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Action
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 100
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the requested repair action.</p>\n"
  example: []
  syntax:
    content: public string Action { get; }
    content.vb: Public ReadOnly Property Action As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The requested repair action.</p>\n"
  overload: System.Fabric.Repair.RepairTask.Action*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.Target
  commentId: P:System.Fabric.Repair.RepairTask.Target
  id: Target
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: RepairTask.Target
  fullName: System.Fabric.Repair.RepairTask.Target
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Target
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 111
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets an object describing which entities the requested repair action is targeting.</p>\n"
  remarks: "\n<p>Target may be null if the repair action does not require information about specific targets.</p>\n"
  example: []
  syntax:
    content: public RepairTargetDescription Target { get; set; }
    content.vb: Public Property Target As RepairTargetDescription
    parameters: []
    return:
      type: System.Fabric.Repair.RepairTargetDescription
      description: "\n<p>An object describing which entities the requested repair action is targeting.</p>\n"
  overload: System.Fabric.Repair.RepairTask.Target*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.RepairTask.Executor
  commentId: P:System.Fabric.Repair.RepairTask.Executor
  id: Executor
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: Executor
  nameWithType: RepairTask.Executor
  fullName: System.Fabric.Repair.RepairTask.Executor
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Executor
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 119
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets the name of the repair executor.</p>\n"
  example: []
  syntax:
    content: public string Executor { get; set; }
    content.vb: Public Property Executor As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the repair executor.</p>\n"
  overload: System.Fabric.Repair.RepairTask.Executor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.RepairTask.ExecutorData
  commentId: P:System.Fabric.Repair.RepairTask.ExecutorData
  id: ExecutorData
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: ExecutorData
  nameWithType: RepairTask.ExecutorData
  fullName: System.Fabric.Repair.RepairTask.ExecutorData
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ExecutorData
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 127
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets a data string that the repair executor can use to store its internal state.</p>\n"
  example: []
  syntax:
    content: public string ExecutorData { get; set; }
    content.vb: Public Property ExecutorData As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A data string that the repair executor can use to store its internal state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.ExecutorData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.RepairTask.Impact
  commentId: P:System.Fabric.Repair.RepairTask.Impact
  id: Impact
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: Impact
  nameWithType: RepairTask.Impact
  fullName: System.Fabric.Repair.RepairTask.Impact
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Impact
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 140
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets an object that describes the impact of the repair.</p>\n"
  remarks: "\n<p>Impact must be specified by the repair executor upon transitioning to the Preparing state. The impact object \ndetermines what actions the system will take to prepare for the impact of the repair, prior to approving execution \nof the repair.</p>\n"
  example: []
  syntax:
    content: public RepairImpactDescription Impact { get; set; }
    content.vb: Public Property Impact As RepairImpactDescription
    parameters: []
    return:
      type: System.Fabric.Repair.RepairImpactDescription
      description: "\n<p>A <xref href=\"System.Fabric.Repair.RepairImpactDescription\" data-throw-if-not-resolved=\"false\"></xref> object that describes the impact of the repair.</p>\n"
  overload: System.Fabric.Repair.RepairTask.Impact*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.RepairTask.ResultStatus
  commentId: P:System.Fabric.Repair.RepairTask.ResultStatus
  id: ResultStatus
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: ResultStatus
  nameWithType: RepairTask.ResultStatus
  fullName: System.Fabric.Repair.RepairTask.ResultStatus
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ResultStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 149
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets a value describing the overall result of the repair task execution.</p>\n"
  example: []
  syntax:
    content: public RepairTaskResult ResultStatus { get; set; }
    content.vb: Public Property ResultStatus As RepairTaskResult
    parameters: []
    return:
      type: System.Fabric.Repair.RepairTaskResult
      description: "\n<p>A <xref href=\"System.Fabric.Repair.RepairTaskResult\" data-throw-if-not-resolved=\"false\"></xref> value describing the overall result of the repair \ntask execution.</p>\n"
  overload: System.Fabric.Repair.RepairTask.ResultStatus*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.RepairTask.ResultCode
  commentId: P:System.Fabric.Repair.RepairTask.ResultCode
  id: ResultCode
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: ResultCode
  nameWithType: RepairTask.ResultCode
  fullName: System.Fabric.Repair.RepairTask.ResultCode
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ResultCode
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 160
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets a value providing additional details about the result of the repair task execution.</p>\n"
  remarks: "\n<p>This value should be an HRESULT.</p>\n"
  example: []
  syntax:
    content: public int ResultCode { get; set; }
    content.vb: Public Property ResultCode As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>A value providing additional details about the result of the repair task execution.</p>\n"
  overload: System.Fabric.Repair.RepairTask.ResultCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.RepairTask.ResultDetails
  commentId: P:System.Fabric.Repair.RepairTask.ResultDetails
  id: ResultDetails
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: ResultDetails
  nameWithType: RepairTask.ResultDetails
  fullName: System.Fabric.Repair.RepairTask.ResultDetails
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ResultDetails
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 168
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets a string providing additional details about the result of the repair task execution.</p>\n"
  example: []
  syntax:
    content: public string ResultDetails { get; set; }
    content.vb: Public Property ResultDetails As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string providing additional details about the result of the repair task execution.</p>\n"
  overload: System.Fabric.Repair.RepairTask.ResultDetails*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.RepairTask.CreatedTimestamp
  commentId: P:System.Fabric.Repair.RepairTask.CreatedTimestamp
  id: CreatedTimestamp
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: CreatedTimestamp
  nameWithType: RepairTask.CreatedTimestamp
  fullName: System.Fabric.Repair.RepairTask.CreatedTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreatedTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 176
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the time when the repair task entered the Created state.</p>\n"
  example: []
  syntax:
    content: public DateTime? CreatedTimestamp { get; }
    content.vb: Public ReadOnly Property CreatedTimestamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time when the repair task entered the Created state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.CreatedTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.ClaimedTimestamp
  commentId: P:System.Fabric.Repair.RepairTask.ClaimedTimestamp
  id: ClaimedTimestamp
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: ClaimedTimestamp
  nameWithType: RepairTask.ClaimedTimestamp
  fullName: System.Fabric.Repair.RepairTask.ClaimedTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClaimedTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 184
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the time when the repair task entered the Claimed state.</p>\n"
  example: []
  syntax:
    content: public DateTime? ClaimedTimestamp { get; }
    content.vb: Public ReadOnly Property ClaimedTimestamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time when the repair task entered the Claimed state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.ClaimedTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.PreparingTimestamp
  commentId: P:System.Fabric.Repair.RepairTask.PreparingTimestamp
  id: PreparingTimestamp
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: PreparingTimestamp
  nameWithType: RepairTask.PreparingTimestamp
  fullName: System.Fabric.Repair.RepairTask.PreparingTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PreparingTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 192
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the time when the repair task entered the Preparing state.</p>\n"
  example: []
  syntax:
    content: public DateTime? PreparingTimestamp { get; }
    content.vb: Public ReadOnly Property PreparingTimestamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time when the repair task entered the Preparing state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.PreparingTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.ApprovedTimestamp
  commentId: P:System.Fabric.Repair.RepairTask.ApprovedTimestamp
  id: ApprovedTimestamp
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: ApprovedTimestamp
  nameWithType: RepairTask.ApprovedTimestamp
  fullName: System.Fabric.Repair.RepairTask.ApprovedTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApprovedTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 200
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the time when the repair task entered the Approved state.</p>\n"
  example: []
  syntax:
    content: public DateTime? ApprovedTimestamp { get; }
    content.vb: Public ReadOnly Property ApprovedTimestamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time when the repair task entered the Approved state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.ApprovedTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.ExecutingTimestamp
  commentId: P:System.Fabric.Repair.RepairTask.ExecutingTimestamp
  id: ExecutingTimestamp
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: ExecutingTimestamp
  nameWithType: RepairTask.ExecutingTimestamp
  fullName: System.Fabric.Repair.RepairTask.ExecutingTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ExecutingTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 208
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the time when the repair task entered the Executing state.</p>\n"
  example: []
  syntax:
    content: public DateTime? ExecutingTimestamp { get; }
    content.vb: Public ReadOnly Property ExecutingTimestamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time when the repair task entered the Executing state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.ExecutingTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.RestoringTimestamp
  commentId: P:System.Fabric.Repair.RepairTask.RestoringTimestamp
  id: RestoringTimestamp
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: RestoringTimestamp
  nameWithType: RepairTask.RestoringTimestamp
  fullName: System.Fabric.Repair.RepairTask.RestoringTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RestoringTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 216
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the time when the repair task entered the Restoring state.</p>\n"
  example: []
  syntax:
    content: public DateTime? RestoringTimestamp { get; }
    content.vb: Public ReadOnly Property RestoringTimestamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time when the repair task entered the Restoring state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.RestoringTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.CompletedTimestamp
  commentId: P:System.Fabric.Repair.RepairTask.CompletedTimestamp
  id: CompletedTimestamp
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: CompletedTimestamp
  nameWithType: RepairTask.CompletedTimestamp
  fullName: System.Fabric.Repair.RepairTask.CompletedTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CompletedTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 224
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the time when the repair task entered the Completed state.</p>\n"
  example: []
  syntax:
    content: public DateTime? CompletedTimestamp { get; }
    content.vb: Public ReadOnly Property CompletedTimestamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time when the repair task entered the Completed state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.CompletedTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.PreparingHealthCheckStartTimestamp
  commentId: P:System.Fabric.Repair.RepairTask.PreparingHealthCheckStartTimestamp
  id: PreparingHealthCheckStartTimestamp
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: PreparingHealthCheckStartTimestamp
  nameWithType: RepairTask.PreparingHealthCheckStartTimestamp
  fullName: System.Fabric.Repair.RepairTask.PreparingHealthCheckStartTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PreparingHealthCheckStartTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 232
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the time when the repair task started the health check in the Preparing state.</p>\n"
  example: []
  syntax:
    content: public DateTime? PreparingHealthCheckStartTimestamp { get; }
    content.vb: Public ReadOnly Property PreparingHealthCheckStartTimestamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time when the repair task started the health check in the Preparing state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.PreparingHealthCheckStartTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.PreparingHealthCheckEndTimestamp
  commentId: P:System.Fabric.Repair.RepairTask.PreparingHealthCheckEndTimestamp
  id: PreparingHealthCheckEndTimestamp
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: PreparingHealthCheckEndTimestamp
  nameWithType: RepairTask.PreparingHealthCheckEndTimestamp
  fullName: System.Fabric.Repair.RepairTask.PreparingHealthCheckEndTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PreparingHealthCheckEndTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 240
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the time when the repair task completed the health check in the Preparing state.</p>\n"
  example: []
  syntax:
    content: public DateTime? PreparingHealthCheckEndTimestamp { get; }
    content.vb: Public ReadOnly Property PreparingHealthCheckEndTimestamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time when the repair task completed the health check in the Preparing state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.PreparingHealthCheckEndTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.RestoringHealthCheckStartTimestamp
  commentId: P:System.Fabric.Repair.RepairTask.RestoringHealthCheckStartTimestamp
  id: RestoringHealthCheckStartTimestamp
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: RestoringHealthCheckStartTimestamp
  nameWithType: RepairTask.RestoringHealthCheckStartTimestamp
  fullName: System.Fabric.Repair.RepairTask.RestoringHealthCheckStartTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RestoringHealthCheckStartTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 248
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the time when the repair task started the health check in the Restoring state.</p>\n"
  example: []
  syntax:
    content: public DateTime? RestoringHealthCheckStartTimestamp { get; }
    content.vb: Public ReadOnly Property RestoringHealthCheckStartTimestamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time when the repair task started the health check in the Restoring state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.RestoringHealthCheckStartTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.RestoringHealthCheckEndTimestamp
  commentId: P:System.Fabric.Repair.RepairTask.RestoringHealthCheckEndTimestamp
  id: RestoringHealthCheckEndTimestamp
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: RestoringHealthCheckEndTimestamp
  nameWithType: RepairTask.RestoringHealthCheckEndTimestamp
  fullName: System.Fabric.Repair.RepairTask.RestoringHealthCheckEndTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RestoringHealthCheckEndTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 256
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the time when the repair task completed the health check in the Restoring state.</p>\n"
  example: []
  syntax:
    content: public DateTime? RestoringHealthCheckEndTimestamp { get; }
    content.vb: Public ReadOnly Property RestoringHealthCheckEndTimestamp As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time when the repair task completed the health check in the Restoring state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.RestoringHealthCheckEndTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.PreparingHealthCheckState
  commentId: P:System.Fabric.Repair.RepairTask.PreparingHealthCheckState
  id: PreparingHealthCheckState
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: PreparingHealthCheckState
  nameWithType: RepairTask.PreparingHealthCheckState
  fullName: System.Fabric.Repair.RepairTask.PreparingHealthCheckState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PreparingHealthCheckState
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 264
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the workflow state of the health check when the repair task is in the Preparing state.</p>\n"
  example: []
  syntax:
    content: public RepairTaskHealthCheckState PreparingHealthCheckState { get; }
    content.vb: Public ReadOnly Property PreparingHealthCheckState As RepairTaskHealthCheckState
    parameters: []
    return:
      type: System.Fabric.Repair.RepairTaskHealthCheckState
      description: "\n<p>The workflow state of the health check when the repair task is in the Preparing state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.PreparingHealthCheckState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.RestoringHealthCheckState
  commentId: P:System.Fabric.Repair.RepairTask.RestoringHealthCheckState
  id: RestoringHealthCheckState
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: RestoringHealthCheckState
  nameWithType: RepairTask.RestoringHealthCheckState
  fullName: System.Fabric.Repair.RepairTask.RestoringHealthCheckState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RestoringHealthCheckState
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 272
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets the workflow state of the health check when the repair task is in the Restoring state.</p>\n"
  example: []
  syntax:
    content: public RepairTaskHealthCheckState RestoringHealthCheckState { get; }
    content.vb: Public ReadOnly Property RestoringHealthCheckState As RepairTaskHealthCheckState
    parameters: []
    return:
      type: System.Fabric.Repair.RepairTaskHealthCheckState
      description: "\n<p>The workflow state of the health check when the repair task is in the Restoring state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.RestoringHealthCheckState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Repair.RepairTask.PerformPreparingHealthCheck
  commentId: P:System.Fabric.Repair.RepairTask.PerformPreparingHealthCheck
  id: PerformPreparingHealthCheck
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: PerformPreparingHealthCheck
  nameWithType: RepairTask.PerformPreparingHealthCheck
  fullName: System.Fabric.Repair.RepairTask.PerformPreparingHealthCheck
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PerformPreparingHealthCheck
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 280
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets a value to determine if health checks have to be performed when the repair task enters the Preparing state.</p>\n"
  example: []
  syntax:
    content: public bool PerformPreparingHealthCheck { get; set; }
    content.vb: Public Property PerformPreparingHealthCheck As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>A value to determine if health checks have to be performed when the repair task enters the Preparing state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.PerformPreparingHealthCheck*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Repair.RepairTask.PerformRestoringHealthCheck
  commentId: P:System.Fabric.Repair.RepairTask.PerformRestoringHealthCheck
  id: PerformRestoringHealthCheck
  parent: System.Fabric.Repair.RepairTask
  langs:
  - csharp
  - vb
  name: PerformRestoringHealthCheck
  nameWithType: RepairTask.PerformRestoringHealthCheck
  fullName: System.Fabric.Repair.RepairTask.PerformRestoringHealthCheck
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PerformRestoringHealthCheck
    path: src/prod/src/managed/Api/src/System/Fabric/Repair/RepairTask.cs
    startLine: 288
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Repair
  summary: "\n<p>Gets or sets a value to determine if health checks have to be performed when the repair task enters the Restoring state.</p>\n"
  example: []
  syntax:
    content: public bool PerformRestoringHealthCheck { get; set; }
    content.vb: Public Property PerformRestoringHealthCheck As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>A value to determine if health checks have to be performed when the repair task enters the Restoring state.</p>\n"
  overload: System.Fabric.Repair.RepairTask.PerformRestoringHealthCheck*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.Repair
  commentId: N:System.Fabric.Repair
  isExternal: false
  name: System.Fabric.Repair
  nameWithType: System.Fabric.Repair
  fullName: System.Fabric.Repair
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Repair.RepairTask.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<RepairTask>()
  nameWithType: ByteArraySerializer.Serialize<RepairTask>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Repair.RepairTask>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of RepairTask)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Repair.RepairTask)()
  name.vb: Serialize(Of RepairTask)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<RepairTask>
    nameWithType: ByteArraySerializer.Serialize<RepairTask>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Repair.RepairTask>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of RepairTask)
    nameWithType: ByteArraySerializer.Serialize(Of RepairTask)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Repair.RepairTask)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Repair.RepairScopeIdentifier
  commentId: T:System.Fabric.Repair.RepairScopeIdentifier
  parent: System.Fabric.Repair
  isExternal: false
  name: RepairScopeIdentifier
  nameWithType: RepairScopeIdentifier
  fullName: System.Fabric.Repair.RepairScopeIdentifier
- uid: System.Fabric.Repair.RepairTask.Scope*
  commentId: Overload:System.Fabric.Repair.RepairTask.Scope
  isExternal: false
  name: Scope
  nameWithType: RepairTask.Scope
  fullName: System.Fabric.Repair.RepairTask.Scope
- uid: System.Fabric.Repair.RepairTask.TaskId*
  commentId: Overload:System.Fabric.Repair.RepairTask.TaskId
  isExternal: false
  name: TaskId
  nameWithType: RepairTask.TaskId
  fullName: System.Fabric.Repair.RepairTask.TaskId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Repair.RepairTask.Version*
  commentId: Overload:System.Fabric.Repair.RepairTask.Version
  isExternal: false
  name: Version
  nameWithType: RepairTask.Version
  fullName: System.Fabric.Repair.RepairTask.Version
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Repair.RepairTask.Description*
  commentId: Overload:System.Fabric.Repair.RepairTask.Description
  isExternal: false
  name: Description
  nameWithType: RepairTask.Description
  fullName: System.Fabric.Repair.RepairTask.Description
- uid: System.Fabric.Repair.RepairTask.State*
  commentId: Overload:System.Fabric.Repair.RepairTask.State
  isExternal: false
  name: State
  nameWithType: RepairTask.State
  fullName: System.Fabric.Repair.RepairTask.State
- uid: System.Fabric.Repair.RepairTaskState
  commentId: T:System.Fabric.Repair.RepairTaskState
  parent: System.Fabric.Repair
  isExternal: false
  name: RepairTaskState
  nameWithType: RepairTaskState
  fullName: System.Fabric.Repair.RepairTaskState
- uid: System.Fabric.Repair.RepairTask.Flags*
  commentId: Overload:System.Fabric.Repair.RepairTask.Flags
  isExternal: false
  name: Flags
  nameWithType: RepairTask.Flags
  fullName: System.Fabric.Repair.RepairTask.Flags
- uid: System.Fabric.Repair.RepairTaskFlags
  commentId: T:System.Fabric.Repair.RepairTaskFlags
  parent: System.Fabric.Repair
  isExternal: false
  name: RepairTaskFlags
  nameWithType: RepairTaskFlags
  fullName: System.Fabric.Repair.RepairTaskFlags
- uid: System.Fabric.Repair.RepairTask.Action*
  commentId: Overload:System.Fabric.Repair.RepairTask.Action
  isExternal: false
  name: Action
  nameWithType: RepairTask.Action
  fullName: System.Fabric.Repair.RepairTask.Action
- uid: System.Fabric.Repair.RepairTask.Target*
  commentId: Overload:System.Fabric.Repair.RepairTask.Target
  isExternal: false
  name: Target
  nameWithType: RepairTask.Target
  fullName: System.Fabric.Repair.RepairTask.Target
- uid: System.Fabric.Repair.RepairTargetDescription
  commentId: T:System.Fabric.Repair.RepairTargetDescription
  parent: System.Fabric.Repair
  isExternal: false
  name: RepairTargetDescription
  nameWithType: RepairTargetDescription
  fullName: System.Fabric.Repair.RepairTargetDescription
- uid: System.Fabric.Repair.RepairTask.Executor*
  commentId: Overload:System.Fabric.Repair.RepairTask.Executor
  isExternal: false
  name: Executor
  nameWithType: RepairTask.Executor
  fullName: System.Fabric.Repair.RepairTask.Executor
- uid: System.Fabric.Repair.RepairTask.ExecutorData*
  commentId: Overload:System.Fabric.Repair.RepairTask.ExecutorData
  isExternal: false
  name: ExecutorData
  nameWithType: RepairTask.ExecutorData
  fullName: System.Fabric.Repair.RepairTask.ExecutorData
- uid: System.Fabric.Repair.RepairImpactDescription
  commentId: T:System.Fabric.Repair.RepairImpactDescription
  parent: System.Fabric.Repair
  isExternal: false
  name: RepairImpactDescription
  nameWithType: RepairImpactDescription
  fullName: System.Fabric.Repair.RepairImpactDescription
- uid: System.Fabric.Repair.RepairTask.Impact*
  commentId: Overload:System.Fabric.Repair.RepairTask.Impact
  isExternal: false
  name: Impact
  nameWithType: RepairTask.Impact
  fullName: System.Fabric.Repair.RepairTask.Impact
- uid: System.Fabric.Repair.RepairTaskResult
  commentId: T:System.Fabric.Repair.RepairTaskResult
  parent: System.Fabric.Repair
  isExternal: false
  name: RepairTaskResult
  nameWithType: RepairTaskResult
  fullName: System.Fabric.Repair.RepairTaskResult
- uid: System.Fabric.Repair.RepairTask.ResultStatus*
  commentId: Overload:System.Fabric.Repair.RepairTask.ResultStatus
  isExternal: false
  name: ResultStatus
  nameWithType: RepairTask.ResultStatus
  fullName: System.Fabric.Repair.RepairTask.ResultStatus
- uid: System.Fabric.Repair.RepairTask.ResultCode*
  commentId: Overload:System.Fabric.Repair.RepairTask.ResultCode
  isExternal: false
  name: ResultCode
  nameWithType: RepairTask.ResultCode
  fullName: System.Fabric.Repair.RepairTask.ResultCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Fabric.Repair.RepairTask.ResultDetails*
  commentId: Overload:System.Fabric.Repair.RepairTask.ResultDetails
  isExternal: false
  name: ResultDetails
  nameWithType: RepairTask.ResultDetails
  fullName: System.Fabric.Repair.RepairTask.ResultDetails
- uid: System.Fabric.Repair.RepairTask.CreatedTimestamp*
  commentId: Overload:System.Fabric.Repair.RepairTask.CreatedTimestamp
  isExternal: false
  name: CreatedTimestamp
  nameWithType: RepairTask.CreatedTimestamp
  fullName: System.Fabric.Repair.RepairTask.CreatedTimestamp
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Repair.RepairTask.ClaimedTimestamp*
  commentId: Overload:System.Fabric.Repair.RepairTask.ClaimedTimestamp
  isExternal: false
  name: ClaimedTimestamp
  nameWithType: RepairTask.ClaimedTimestamp
  fullName: System.Fabric.Repair.RepairTask.ClaimedTimestamp
- uid: System.Fabric.Repair.RepairTask.PreparingTimestamp*
  commentId: Overload:System.Fabric.Repair.RepairTask.PreparingTimestamp
  isExternal: false
  name: PreparingTimestamp
  nameWithType: RepairTask.PreparingTimestamp
  fullName: System.Fabric.Repair.RepairTask.PreparingTimestamp
- uid: System.Fabric.Repair.RepairTask.ApprovedTimestamp*
  commentId: Overload:System.Fabric.Repair.RepairTask.ApprovedTimestamp
  isExternal: false
  name: ApprovedTimestamp
  nameWithType: RepairTask.ApprovedTimestamp
  fullName: System.Fabric.Repair.RepairTask.ApprovedTimestamp
- uid: System.Fabric.Repair.RepairTask.ExecutingTimestamp*
  commentId: Overload:System.Fabric.Repair.RepairTask.ExecutingTimestamp
  isExternal: false
  name: ExecutingTimestamp
  nameWithType: RepairTask.ExecutingTimestamp
  fullName: System.Fabric.Repair.RepairTask.ExecutingTimestamp
- uid: System.Fabric.Repair.RepairTask.RestoringTimestamp*
  commentId: Overload:System.Fabric.Repair.RepairTask.RestoringTimestamp
  isExternal: false
  name: RestoringTimestamp
  nameWithType: RepairTask.RestoringTimestamp
  fullName: System.Fabric.Repair.RepairTask.RestoringTimestamp
- uid: System.Fabric.Repair.RepairTask.CompletedTimestamp*
  commentId: Overload:System.Fabric.Repair.RepairTask.CompletedTimestamp
  isExternal: false
  name: CompletedTimestamp
  nameWithType: RepairTask.CompletedTimestamp
  fullName: System.Fabric.Repair.RepairTask.CompletedTimestamp
- uid: System.Fabric.Repair.RepairTask.PreparingHealthCheckStartTimestamp*
  commentId: Overload:System.Fabric.Repair.RepairTask.PreparingHealthCheckStartTimestamp
  isExternal: false
  name: PreparingHealthCheckStartTimestamp
  nameWithType: RepairTask.PreparingHealthCheckStartTimestamp
  fullName: System.Fabric.Repair.RepairTask.PreparingHealthCheckStartTimestamp
- uid: System.Fabric.Repair.RepairTask.PreparingHealthCheckEndTimestamp*
  commentId: Overload:System.Fabric.Repair.RepairTask.PreparingHealthCheckEndTimestamp
  isExternal: false
  name: PreparingHealthCheckEndTimestamp
  nameWithType: RepairTask.PreparingHealthCheckEndTimestamp
  fullName: System.Fabric.Repair.RepairTask.PreparingHealthCheckEndTimestamp
- uid: System.Fabric.Repair.RepairTask.RestoringHealthCheckStartTimestamp*
  commentId: Overload:System.Fabric.Repair.RepairTask.RestoringHealthCheckStartTimestamp
  isExternal: false
  name: RestoringHealthCheckStartTimestamp
  nameWithType: RepairTask.RestoringHealthCheckStartTimestamp
  fullName: System.Fabric.Repair.RepairTask.RestoringHealthCheckStartTimestamp
- uid: System.Fabric.Repair.RepairTask.RestoringHealthCheckEndTimestamp*
  commentId: Overload:System.Fabric.Repair.RepairTask.RestoringHealthCheckEndTimestamp
  isExternal: false
  name: RestoringHealthCheckEndTimestamp
  nameWithType: RepairTask.RestoringHealthCheckEndTimestamp
  fullName: System.Fabric.Repair.RepairTask.RestoringHealthCheckEndTimestamp
- uid: System.Fabric.Repair.RepairTask.PreparingHealthCheckState*
  commentId: Overload:System.Fabric.Repair.RepairTask.PreparingHealthCheckState
  isExternal: false
  name: PreparingHealthCheckState
  nameWithType: RepairTask.PreparingHealthCheckState
  fullName: System.Fabric.Repair.RepairTask.PreparingHealthCheckState
- uid: System.Fabric.Repair.RepairTaskHealthCheckState
  commentId: T:System.Fabric.Repair.RepairTaskHealthCheckState
  parent: System.Fabric.Repair
  isExternal: false
  name: RepairTaskHealthCheckState
  nameWithType: RepairTaskHealthCheckState
  fullName: System.Fabric.Repair.RepairTaskHealthCheckState
- uid: System.Fabric.Repair.RepairTask.RestoringHealthCheckState*
  commentId: Overload:System.Fabric.Repair.RepairTask.RestoringHealthCheckState
  isExternal: false
  name: RestoringHealthCheckState
  nameWithType: RepairTask.RestoringHealthCheckState
  fullName: System.Fabric.Repair.RepairTask.RestoringHealthCheckState
- uid: System.Fabric.Repair.RepairTask.PerformPreparingHealthCheck*
  commentId: Overload:System.Fabric.Repair.RepairTask.PerformPreparingHealthCheck
  isExternal: false
  name: PerformPreparingHealthCheck
  nameWithType: RepairTask.PerformPreparingHealthCheck
  fullName: System.Fabric.Repair.RepairTask.PerformPreparingHealthCheck
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Repair.RepairTask.PerformRestoringHealthCheck*
  commentId: Overload:System.Fabric.Repair.RepairTask.PerformRestoringHealthCheck
  isExternal: false
  name: PerformRestoringHealthCheck
  nameWithType: RepairTask.PerformRestoringHealthCheck
  fullName: System.Fabric.Repair.RepairTask.PerformRestoringHealthCheck
