### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator
  id: IProxyActivator
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder
  children:
  - Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance
  langs:
  - csharp
  - vb
  name: IProxyActivator
  nameWithType: IProxyActivator
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/IProxyActivator.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IProxyActivator
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/IProxyActivator.cs
    startLine: 9
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nDefines the interface implemented by generated code to create proxy objects.\n"
  example: []
  syntax:
    content: public interface IProxyActivator
    content.vb: Public Interface IProxyActivator
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance
  id: CreateInstance
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator
  langs:
  - csharp
  - vb
  name: CreateInstance()
  nameWithType: IProxyActivator.CreateInstance()
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/IProxyActivator.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateInstance
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/IProxyActivator.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nCreate the instance of the generated proxy type.\n"
  example: []
  syntax:
    content: ProxyBase CreateInstance()
    content.vb: Function CreateInstance As ProxyBase
    return:
      type: Microsoft.ServiceFabric.Services.Remoting.Builder.ProxyBase
      description: An instance of the generated proxy as <xref href="Microsoft.ServiceFabric.Services.Remoting.Builder.ProxyBase" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance*
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Builder
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Builder
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Builder
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IProxyActivator>()
  nameWithType: ByteArraySerializer.Serialize<IProxyActivator>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IProxyActivator)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator)()
  name.vb: Serialize(Of IProxyActivator)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IProxyActivator>
    nameWithType: ByteArraySerializer.Serialize<IProxyActivator>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IProxyActivator)
    nameWithType: ByteArraySerializer.Serialize(Of IProxyActivator)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.ProxyBase
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Builder.ProxyBase
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder
  isExternal: false
  name: ProxyBase
  nameWithType: ProxyBase
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.ProxyBase
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance
  isExternal: false
  name: CreateInstance
  nameWithType: IProxyActivator.CreateInstance
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.IProxyActivator.CreateInstance
