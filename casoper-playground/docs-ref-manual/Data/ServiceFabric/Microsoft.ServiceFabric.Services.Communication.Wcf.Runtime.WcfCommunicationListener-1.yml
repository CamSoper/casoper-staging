### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  id: WcfCommunicationListener`1
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  children:
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(System.Fabric.ServiceContext,`0)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(System.Fabric.ServiceContext,`0,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(System.Fabric.ServiceContext,`0,System.ServiceModel.Channels.Binding,System.String)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost
  langs:
  - csharp
  - vb
  name: WcfCommunicationListener<TServiceContract>
  nameWithType: WcfCommunicationListener<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WcfCommunicationListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 21
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nA Windows Communication Foundation based listener for Service Fabric based stateless or stateful service.\n"
  example: []
  syntax:
    content: 'public class WcfCommunicationListener<TServiceContract> : ICommunicationListener'
    content.vb: >-
      Public Class WcfCommunicationListener(Of TServiceContract)
          Implements ICommunicationListener
    typeParameters:
    - id: TServiceContract
      description: Type of the WCF service contract.
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract)
  name.vb: WcfCommunicationListener(Of TServiceContract)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(System.Fabric.ServiceContext,`0)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(System.Fabric.ServiceContext,`0)
  id: '#ctor(System.Fabric.ServiceContext,`0)'
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  langs:
  - csharp
  - vb
  name: WcfCommunicationListener(ServiceContext, TServiceContract)
  nameWithType: WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(ServiceContext, TServiceContract)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(System.Fabric.ServiceContext, TServiceContract)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 45
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nConstructs a WCF based communication listener that uses default binding and default endpoint address.\n"
  remarks: "\n<p>\n    The default listener binding is created using <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    The default endpoint address is created using the endpoint resource defined in the service manifest. The name of the endpoint resource is \n    derived from the WCF service contract type using <xref href=\"Microsoft.ServiceFabric.Services.ServiceNameFormat.GetEndpointName(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method.\n    If matching endpoint resource is not found in the service manifest, a default endpoint resource definition with port zero is used.\n</p>\n"
  example: []
  syntax:
    content: public WcfCommunicationListener(ServiceContext serviceContext, TServiceContract wcfServiceObject)
    content.vb: Public Sub New(serviceContext As ServiceContext, wcfServiceObject As TServiceContract)
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: "\nThe context of the service for which this communication listener is being constructed.\n"
    - id: wcfServiceObject
      type: '{TServiceContract}'
      description: "\nWCF service implementing the specified WCF service contract.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor*
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(ServiceContext, TServiceContract)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(System.Fabric.ServiceContext, TServiceContract)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(System.Fabric.ServiceContext,`0,System.ServiceModel.Channels.Binding,System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(System.Fabric.ServiceContext,`0,System.ServiceModel.Channels.Binding,System.String)
  id: '#ctor(System.Fabric.ServiceContext,`0,System.ServiceModel.Channels.Binding,System.String)'
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  langs:
  - csharp
  - vb
  name: WcfCommunicationListener(ServiceContext, TServiceContract, Binding, String)
  nameWithType: WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(ServiceContext, TServiceContract, Binding, String)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(System.Fabric.ServiceContext, TServiceContract, System.ServiceModel.Channels.Binding, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 72
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nConstructs a WCF based communication listener that uses specified listener binding and \nendpoint address derived from the specified endpoint resource name.\n"
  example: []
  syntax:
    content: public WcfCommunicationListener(ServiceContext serviceContext, TServiceContract wcfServiceObject, Binding listenerBinding = null, string endpointResourceName = null)
    content.vb: Public Sub New(serviceContext As ServiceContext, wcfServiceObject As TServiceContract, listenerBinding As Binding = Nothing, endpointResourceName As String = Nothing)
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: "\nThe context of the service for which this communication listener is being constructed.\n"
    - id: wcfServiceObject
      type: '{TServiceContract}'
      description: "\nWCF service implementing the specified WCF service contract.\n"
    - id: listenerBinding
      type: System.ServiceModel.Channels.Binding
      description: "\nThe binding to use for the WCF endpoint. If the listenerBinding is not specified or it is null, a default listener binding is \ncreated using <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
    - id: endpointResourceName
      type: System.String
      description: "\nThe name of the endpoint resource defined in the service manifest that should be used to create the address for the listener. \nIf the endpointResourceName is not specified or it is null, it's name is derived from the WCF service contract type using\n<xref href=\"Microsoft.ServiceFabric.Services.ServiceNameFormat.GetEndpointName(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method.\nIf matching endpoint resource is not found in the service manifest, a default endpoint resource definition with port zero is used.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor*
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(ServiceContext, TServiceContract, Binding, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(System.Fabric.ServiceContext, TServiceContract, System.ServiceModel.Channels.Binding, System.String)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(System.Fabric.ServiceContext,`0,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor(System.Fabric.ServiceContext,`0,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  id: '#ctor(System.Fabric.ServiceContext,`0,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)'
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  langs:
  - csharp
  - vb
  name: WcfCommunicationListener(ServiceContext, TServiceContract, Binding, EndpointAddress)
  nameWithType: WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(ServiceContext, TServiceContract, Binding, EndpointAddress)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.WcfCommunicationListener(System.Fabric.ServiceContext, TServiceContract, System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 101
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nConstructs a WCF based communication listener that uses specified listener binding and \nendpoint address derived from the specified endpoint address.\n"
  example: []
  syntax:
    content: public WcfCommunicationListener(ServiceContext serviceContext, TServiceContract wcfServiceObject, Binding listenerBinding = null, EndpointAddress address = null)
    content.vb: Public Sub New(serviceContext As ServiceContext, wcfServiceObject As TServiceContract, listenerBinding As Binding = Nothing, address As EndpointAddress = Nothing)
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: "\nThe context of the service for which this communication listener is being constructed.\n"
    - id: wcfServiceObject
      type: '{TServiceContract}'
      description: "\nWCF service implementing the specified WCF service contract.\n"
    - id: listenerBinding
      type: System.ServiceModel.Channels.Binding
      description: "\nThe binding to use for the WCF endpoint. If the listenerBinding is not specified or it is null, a default listener binding is \ncreated using <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\nThe listen address for the WCF endpoint. if the address is not specified or it is null, a default address is created by \nlooking up the endpoint resource from the service manifest. The endpoint resource name is derived from the WCF \nservice contract type using <xref href=\"Microsoft.ServiceFabric.Services.ServiceNameFormat.GetEndpointName(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method.\nIf matching endpoint resource is not found in the service manifest, a default endpoint resource definition with port zero is used.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor*
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(ServiceContext, TServiceContract, Binding, EndpointAddress)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener(System.Fabric.ServiceContext, TServiceContract, System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost
  id: ServiceHost
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  langs:
  - csharp
  - vb
  name: ServiceHost
  nameWithType: WcfCommunicationListener<TServiceContract>.ServiceHost
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.ServiceHost
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceHost
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 147
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nGets the <xref href=\"System.ServiceModel.ServiceHost\" data-throw-if-not-resolved=\"false\"></xref> used by this listener to host the \nWCF service implementation.\n"
  remarks: "\nThe service host is created by the listener in it's constructor. Before this communication\nlistener is opened by the runtime via <xref href=\"Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> method,\nthe service host can be customized by accessing it via this property.\n"
  example: []
  syntax:
    content: public ServiceHost ServiceHost { get; }
    content.vb: Public ReadOnly Property ServiceHost As ServiceHost
    parameters: []
    return:
      type: System.ServiceModel.ServiceHost
      description: "\nA <xref href=\"System.ServiceModel.ServiceHost\" data-throw-if-not-resolved=\"false\"></xref> used by this listener to host the \nWCF service implementation.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost*
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).ServiceHost
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).ServiceHost
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  langs:
  - csharp
  - vb
  name: ICommunicationListener.OpenAsync(CancellationToken)
  nameWithType: WcfCommunicationListener<TServiceContract>.ICommunicationListener.OpenAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 161
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nThis method causes the communication listener to be opened. Once the Open\ncompletes, the communication listener becomes usable - accepts and sends messages.\n"
  example: []
  syntax:
    content: Task<string> ICommunicationListener.OpenAsync(CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(cancellationToken As CancellationToken) As Task(Of String) Implements ICommunicationListener.OpenAsync
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. The result of the Task is\nthe endpoint string.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(CancellationToken)
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  langs:
  - csharp
  - vb
  name: ICommunicationListener.CloseAsync(CancellationToken)
  nameWithType: WcfCommunicationListener<TServiceContract>.ICommunicationListener.CloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 182
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nThis method causes the communication listener to close. Close is a terminal state and \nthis method allows the communication listener to transition to this state in a\ngraceful manner.\n"
  example: []
  syntax:
    content: Task ICommunicationListener.CloseAsync(CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(cancellationToken As CancellationToken) As Task Implements ICommunicationListener.CloseAsync
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(CancellationToken)
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  id: Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  langs:
  - csharp
  - vb
  name: ICommunicationListener.Abort()
  nameWithType: WcfCommunicationListener<TServiceContract>.ICommunicationListener.Abort()
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Runtime/WcfCommunicationListener.cs
    startLine: 201
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  summary: "\nThis method causes the communication listener to close. Close is a terminal state and\nthis method causes the transition to close ungracefully. Any outstanding operations\n(including close) should be canceled when this method is called.\n"
  example: []
  syntax:
    content: void ICommunicationListener.Abort()
    content.vb: Sub Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort Implements ICommunicationListener.Abort
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime
  isExternal: false
  name: ICommunicationListener
  nameWithType: ICommunicationListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<WcfCommunicationListener<TServiceContract>>()
  nameWithType: ByteArraySerializer.Serialize<WcfCommunicationListener<TServiceContract>>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of WcfCommunicationListener(Of TServiceContract))()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract))()
  name.vb: Serialize(Of WcfCommunicationListener(Of TServiceContract))()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<WcfCommunicationListener<TServiceContract>>
    nameWithType: ByteArraySerializer.Serialize<WcfCommunicationListener<TServiceContract>>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of WcfCommunicationListener(Of TServiceContract))
    nameWithType: ByteArraySerializer.Serialize(Of WcfCommunicationListener(Of TServiceContract))
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Runtime
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64,System.TimeSpan,System.TimeSpan)
- uid: Microsoft.ServiceFabric.Services.ServiceNameFormat.GetEndpointName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Services.ServiceNameFormat.GetEndpointName(System.Type)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.#ctor
  isExternal: false
  name: WcfCommunicationListener
  nameWithType: WcfCommunicationListener<TServiceContract>.WcfCommunicationListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.WcfCommunicationListener
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).WcfCommunicationListener
- uid: System.Fabric.ServiceContext
  commentId: T:System.Fabric.ServiceContext
  parent: System.Fabric
  isExternal: false
  name: ServiceContext
  nameWithType: ServiceContext
  fullName: System.Fabric.ServiceContext
- uid: '{TServiceContract}'
  commentId: '!:TServiceContract'
  definition: TServiceContract
  name: TServiceContract
  nameWithType: TServiceContract
  fullName: TServiceContract
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: TServiceContract
  isExternal: false
  name: TServiceContract
  nameWithType: TServiceContract
  fullName: TServiceContract
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.ServiceModel.ServiceHost
  commentId: T:System.ServiceModel.ServiceHost
  parent: System.ServiceModel
  isExternal: true
  name: ServiceHost
  nameWithType: ServiceHost
  fullName: System.ServiceModel.ServiceHost
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: true
  name: OpenAsync(CancellationToken)
  nameWithType: ICommunicationListener.OpenAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationListener.OpenAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationListener.OpenAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.ServiceHost
  isExternal: false
  name: ServiceHost
  nameWithType: WcfCommunicationListener<TServiceContract>.ServiceHost
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.ServiceHost
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).ServiceHost
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).ServiceHost
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync
  isExternal: false
  name: ICommunicationListener.OpenAsync
  nameWithType: WcfCommunicationListener<TServiceContract>.ICommunicationListener.OpenAsync
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync
  isExternal: false
  name: ICommunicationListener.CloseAsync
  nameWithType: WcfCommunicationListener<TServiceContract>.ICommunicationListener.CloseAsync
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: true
  name: CloseAsync(CancellationToken)
  nameWithType: ICommunicationListener.CloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationListener.CloseAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationListener.CloseAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  isExternal: false
  name: ICommunicationListener.Abort
  nameWithType: WcfCommunicationListener<TServiceContract>.ICommunicationListener.Abort
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract).Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: false
  name: Abort()
  nameWithType: ICommunicationListener.Abort()
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
    name: Abort
    nameWithType: ICommunicationListener.Abort
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
    name: Abort
    nameWithType: ICommunicationListener.Abort
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
