### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  id: OperationRetryControl
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  children:
  - Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.Exception
  - Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ExceptionId
  - Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.IsTransient
  - Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.MaxRetryCount
  - Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.RetryDelay
  - Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ShouldRetry
  langs:
  - csharp
  - vb
  name: OperationRetryControl
  nameWithType: OperationRetryControl
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OperationRetryControl
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
    startLine: 11
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nSpecifies the retry policy for the exceptions got on the communication from client to service.\n"
  example: []
  syntax:
    content: public class OperationRetryControl
    content.vb: Public Class OperationRetryControl
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ShouldRetry
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ShouldRetry
  id: ShouldRetry
  parent: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  langs:
  - csharp
  - vb
  name: ShouldRetry
  nameWithType: OperationRetryControl.ShouldRetry
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ShouldRetry
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ShouldRetry
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nIndicates whether the operation should be retried or not.\n"
  example: []
  syntax:
    content: public bool ShouldRetry { get; set; }
    content.vb: Public Property ShouldRetry As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the operation should be retried, false if the exception should be thrown to the user
  overload: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ShouldRetry*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.IsTransient
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.IsTransient
  id: IsTransient
  parent: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  langs:
  - csharp
  - vb
  name: IsTransient
  nameWithType: OperationRetryControl.IsTransient
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.IsTransient
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsTransient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
    startLine: 31
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nIf the ShouldRetry property is true, this property indicates if the communication channel between\nthe client and service is still valid.\nTransient retriable exceptions are those where the communication channel from client\nto service still exists.\nNon transient retriable exceptions are those where we need to re-resolve the service endpoint\nbefore we retry.\n"
  example: []
  syntax:
    content: public bool IsTransient { get; set; }
    content.vb: Public Property IsTransient As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue indicates that this is a transient retriable exception.\nfalse indicates that this is a non transient retriable exception.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.IsTransient*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.RetryDelay
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.RetryDelay
  id: RetryDelay
  parent: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  langs:
  - csharp
  - vb
  name: RetryDelay
  nameWithType: OperationRetryControl.RetryDelay
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.RetryDelay
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RetryDelay
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
    startLine: 37
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nThe operation should be retried after this delay if the ShouldRetry is true.\n"
  example: []
  syntax:
    content: public TimeSpan RetryDelay { get; set; }
    content.vb: Public Property RetryDelay As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: Time delay after which the operation should be retried
  overload: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.RetryDelay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ExceptionId
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ExceptionId
  id: ExceptionId
  parent: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  langs:
  - csharp
  - vb
  name: ExceptionId
  nameWithType: OperationRetryControl.ExceptionId
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ExceptionId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ExceptionId
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
    startLine: 44
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nString that uniquely identifies the exception type.\n"
  example: []
  syntax:
    content: public string ExceptionId { get; set; }
    content.vb: Public Property ExceptionId As String
    parameters: []
    return:
      type: System.String
      description: "Unique id for this exception. \nThis id is used to keep track of the number of times this exception is retried"
  overload: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ExceptionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.MaxRetryCount
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.MaxRetryCount
  id: MaxRetryCount
  parent: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  langs:
  - csharp
  - vb
  name: MaxRetryCount
  nameWithType: OperationRetryControl.MaxRetryCount
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.MaxRetryCount
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxRetryCount
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
    startLine: 50
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nMax number of times this operation should be retried if the ShouldRetry is true\n"
  example: []
  syntax:
    content: public int MaxRetryCount { get; set; }
    content.vb: Public Property MaxRetryCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: Max retry count
  overload: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.MaxRetryCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.Exception
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.Exception
  id: Exception
  parent: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: OperationRetryControl.Exception
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.Exception
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Exception
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/OperationRetryControl.cs
    startLine: 57
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nException to report for the operation, if ShouldRetry is false. \nBy default this is the same exception as the reported exception, however in some cases the Factory may choose to trasform the reported exception to a more meaningful exception.\n"
  example: []
  syntax:
    content: public Exception Exception { get; set; }
    content.vb: Public Property Exception As Exception
    parameters: []
    return:
      type: System.Exception
      description: Exception
  overload: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.Exception*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<OperationRetryControl>()
  nameWithType: ByteArraySerializer.Serialize<OperationRetryControl>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of OperationRetryControl)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl)()
  name.vb: Serialize(Of OperationRetryControl)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<OperationRetryControl>
    nameWithType: ByteArraySerializer.Serialize<OperationRetryControl>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of OperationRetryControl)
    nameWithType: ByteArraySerializer.Serialize(Of OperationRetryControl)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ShouldRetry*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ShouldRetry
  isExternal: false
  name: ShouldRetry
  nameWithType: OperationRetryControl.ShouldRetry
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ShouldRetry
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.IsTransient*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.IsTransient
  isExternal: false
  name: IsTransient
  nameWithType: OperationRetryControl.IsTransient
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.IsTransient
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.RetryDelay*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.RetryDelay
  isExternal: false
  name: RetryDelay
  nameWithType: OperationRetryControl.RetryDelay
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.RetryDelay
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ExceptionId*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ExceptionId
  isExternal: false
  name: ExceptionId
  nameWithType: OperationRetryControl.ExceptionId
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.ExceptionId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.MaxRetryCount*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.MaxRetryCount
  isExternal: false
  name: MaxRetryCount
  nameWithType: OperationRetryControl.MaxRetryCount
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.MaxRetryCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.Exception*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.Exception
  isExternal: false
  name: Exception
  nameWithType: OperationRetryControl.Exception
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetryControl.Exception
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
