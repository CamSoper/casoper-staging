### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  commentId: T:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  id: ReliableStateManagerConfiguration
  parent: Microsoft.ServiceFabric.Data
  children:
  - Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings,System.Func{System.Threading.Tasks.Task})
  - Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.#ctor(System.String,System.String,System.String,System.Func{System.Threading.Tasks.Task})
  - Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName
  - Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent
  - Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSecuritySectionName
  - Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettings
  - Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettingsSectionName
  langs:
  - csharp
  - vb
  name: ReliableStateManagerConfiguration
  nameWithType: ReliableStateManagerConfiguration
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReliableStateManagerConfiguration
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
    startLine: 12
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nConfiguration object used to create ReliableStateManager/&gt;\n"
  example: []
  syntax:
    content: public class ReliableStateManagerConfiguration
    content.vb: Public Class ReliableStateManagerConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.#ctor(System.String,System.String,System.String,System.Func{System.Threading.Tasks.Task})
  commentId: M:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.#ctor(System.String,System.String,System.String,System.Func{System.Threading.Tasks.Task})
  id: '#ctor(System.String,System.String,System.String,System.Func{System.Threading.Tasks.Task})'
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  langs:
  - csharp
  - vb
  name: ReliableStateManagerConfiguration(String, String, String, Func<Task>)
  nameWithType: ReliableStateManagerConfiguration.ReliableStateManagerConfiguration(String, String, String, Func<Task>)
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReliableStateManagerConfiguration(System.String, System.String, System.String, System.Func<System.Threading.Tasks.Task>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nCreate a new ReliableStateManagerConfiguration.\n"
  example: []
  syntax:
    content: public ReliableStateManagerConfiguration(string configPackageName = "Config", string replicatorSecuritySectionName = "ReplicatorSecurityConfig", string replicatorSettingsSectionName = "ReplicatorConfig", Func<Task> onInitializeStateSerializersEvent = null)
    content.vb: Public Sub New(configPackageName As String = "Config", replicatorSecuritySectionName As String = "ReplicatorSecurityConfig", replicatorSettingsSectionName As String = "ReplicatorConfig", onInitializeStateSerializersEvent As Func(Of Task) = Nothing)
    parameters:
    - id: configPackageName
      type: System.String
      description: Optional config package name from which to load replicator security/settings.
    - id: replicatorSecuritySectionName
      type: System.String
      description: Optional config section name from which to load replicator security settings.
    - id: replicatorSettingsSectionName
      type: System.String
      description: Optional config section name from which to load replicator settings.
    - id: onInitializeStateSerializersEvent
      type: System.Func{System.Threading.Tasks.Task}
      description: "\nOptional callback which will fire when custom serializers should be added.\nUsed to set the <xref href=\"Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.#ctor*
  nameWithType.vb: ReliableStateManagerConfiguration.ReliableStateManagerConfiguration(String, String, String, Func(Of Task))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReliableStateManagerConfiguration(System.String, System.String, System.String, System.Func(Of System.Threading.Tasks.Task))
  name.vb: ReliableStateManagerConfiguration(String, String, String, Func(Of Task))
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings,System.Func{System.Threading.Tasks.Task})
  commentId: M:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings,System.Func{System.Threading.Tasks.Task})
  id: '#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings,System.Func{System.Threading.Tasks.Task})'
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  langs:
  - csharp
  - vb
  name: ReliableStateManagerConfiguration(ReliableStateManagerReplicatorSettings, Func<Task>)
  nameWithType: ReliableStateManagerConfiguration.ReliableStateManagerConfiguration(ReliableStateManagerReplicatorSettings, Func<Task>)
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReliableStateManagerConfiguration(Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings, System.Func<System.Threading.Tasks.Task>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
    startLine: 45
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nCreate a new ReliableStateManagerConfiguration.\n"
  example: []
  syntax:
    content: public ReliableStateManagerConfiguration(ReliableStateManagerReplicatorSettings replicatorSettings, Func<Task> onInitializeStateSerializersEvent = null)
    content.vb: Public Sub New(replicatorSettings As ReliableStateManagerReplicatorSettings, onInitializeStateSerializersEvent As Func(Of Task) = Nothing)
    parameters:
    - id: replicatorSettings
      type: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
      description: Replicator settings with which to initialize the ReliableStateManager/&gt;
    - id: onInitializeStateSerializersEvent
      type: System.Func{System.Threading.Tasks.Task}
      description: "\nOptional callback which will fire when custom serializers should be added.\nUsed to set the <xref href=\"Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.#ctor*
  nameWithType.vb: ReliableStateManagerConfiguration.ReliableStateManagerConfiguration(ReliableStateManagerReplicatorSettings, Func(Of Task))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReliableStateManagerConfiguration(Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings, System.Func(Of System.Threading.Tasks.Task))
  name.vb: ReliableStateManagerConfiguration(ReliableStateManagerReplicatorSettings, Func(Of Task))
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettings
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettings
  id: ReplicatorSettings
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  langs:
  - csharp
  - vb
  name: ReplicatorSettings
  nameWithType: ReliableStateManagerConfiguration.ReplicatorSettings
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettings
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicatorSettings
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
    startLine: 70
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the replicator settings.\n"
  example: []
  syntax:
    content: public ReliableStateManagerReplicatorSettings ReplicatorSettings { get; }
    content.vb: Public ReadOnly Property ReplicatorSettings As ReliableStateManagerReplicatorSettings
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
      description: The replicator settings.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName
  id: ConfigPackageName
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  langs:
  - csharp
  - vb
  name: ConfigPackageName
  nameWithType: ReliableStateManagerConfiguration.ConfigPackageName
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ConfigPackageName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
    startLine: 77
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets the name of the config package in Settings.xml from which to load replicator settings and replicator\nsecurity settings.\n"
  example: []
  syntax:
    content: public string ConfigPackageName { get; }
    content.vb: Public ReadOnly Property ConfigPackageName As String
    parameters: []
    return:
      type: System.String
      description: The config package name.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSecuritySectionName
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSecuritySectionName
  id: ReplicatorSecuritySectionName
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  langs:
  - csharp
  - vb
  name: ReplicatorSecuritySectionName
  nameWithType: ReliableStateManagerConfiguration.ReplicatorSecuritySectionName
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSecuritySectionName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicatorSecuritySectionName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
    startLine: 85
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets the replicator security settings section name.\n"
  remarks: >-
    If present in the config package specified by <xref href="Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName" data-throw-if-not-resolved="false"></xref> in Settings.xml,

    this section will be used to configure replicator security settings.
  example: []
  syntax:
    content: public string ReplicatorSecuritySectionName { get; }
    content.vb: Public ReadOnly Property ReplicatorSecuritySectionName As String
    parameters: []
    return:
      type: System.String
      description: The section name.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSecuritySectionName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettingsSectionName
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettingsSectionName
  id: ReplicatorSettingsSectionName
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  langs:
  - csharp
  - vb
  name: ReplicatorSettingsSectionName
  nameWithType: ReliableStateManagerConfiguration.ReplicatorSettingsSectionName
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettingsSectionName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicatorSettingsSectionName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
    startLine: 93
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets the replicator settings section name.\n"
  remarks: >-
    If present in the config package specified by <xref href="Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName" data-throw-if-not-resolved="false"></xref> in Settings.xml,

    this section will be used to configure replicator settings.
  example: []
  syntax:
    content: public string ReplicatorSettingsSectionName { get; }
    content.vb: Public ReadOnly Property ReplicatorSettingsSectionName As String
    parameters: []
    return:
      type: System.String
      description: The section name.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettingsSectionName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent
  id: OnInitializeStateSerializersEvent
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  langs:
  - csharp
  - vb
  name: OnInitializeStateSerializersEvent
  nameWithType: ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnInitializeStateSerializersEvent
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerConfiguration.cs
    startLine: 100
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets the delegate which will be called when custom serializers can be added.  \nWhen called, specify custom serializers via <xref href=\"Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer%60%601(Microsoft.ServiceFabric.Data.IStateSerializer%7b%60%600%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Func<Task> OnInitializeStateSerializersEvent { get; }
    content.vb: Public ReadOnly Property OnInitializeStateSerializersEvent As Func(Of Task)
    parameters: []
    return:
      type: System.Func{System.Threading.Tasks.Task}
      description: Task that represents the asynchronous operation.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ReliableStateManagerConfiguration>()
  nameWithType: ByteArraySerializer.Serialize<ReliableStateManagerConfiguration>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ReliableStateManagerConfiguration)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration)()
  name.vb: Serialize(Of ReliableStateManagerConfiguration)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ReliableStateManagerConfiguration>
    nameWithType: ByteArraySerializer.Serialize<ReliableStateManagerConfiguration>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ReliableStateManagerConfiguration)
    nameWithType: ByteArraySerializer.Serialize(Of ReliableStateManagerConfiguration)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.#ctor
  isExternal: false
  name: ReliableStateManagerConfiguration
  nameWithType: ReliableStateManagerConfiguration.ReliableStateManagerConfiguration
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReliableStateManagerConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`1
  name: Func<Task>
  nameWithType: Func<Task>
  fullName: System.Func<System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Task)
  fullname.vb: System.Func(Of System.Threading.Tasks.Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  commentId: T:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: ReliableStateManagerReplicatorSettings
  nameWithType: ReliableStateManagerReplicatorSettings
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettings*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettings
  isExternal: false
  name: ReplicatorSettings
  nameWithType: ReliableStateManagerConfiguration.ReplicatorSettings
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettings
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName
  isExternal: false
  name: ConfigPackageName
  nameWithType: ReliableStateManagerConfiguration.ConfigPackageName
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ConfigPackageName
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSecuritySectionName*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSecuritySectionName
  isExternal: false
  name: ReplicatorSecuritySectionName
  nameWithType: ReliableStateManagerConfiguration.ReplicatorSecuritySectionName
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSecuritySectionName
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettingsSectionName*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettingsSectionName
  isExternal: false
  name: ReplicatorSettingsSectionName
  nameWithType: ReliableStateManagerConfiguration.ReplicatorSettingsSectionName
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.ReplicatorSettingsSectionName
- uid: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer``1(Microsoft.ServiceFabric.Data.IStateSerializer{``0})
  commentId: M:Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer``1(Microsoft.ServiceFabric.Data.IStateSerializer{``0})
  isExternal: false
  name: TryAddStateSerializer<T>(IStateSerializer<T>)
  nameWithType: IReliableStateManager.TryAddStateSerializer<T>(IStateSerializer<T>)
  fullName: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer<T>(Microsoft.ServiceFabric.Data.IStateSerializer<T>)
  nameWithType.vb: IReliableStateManager.TryAddStateSerializer(Of T)(IStateSerializer(Of T))
  fullname.vb: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer(Of T)(Microsoft.ServiceFabric.Data.IStateSerializer(Of T))
  name.vb: TryAddStateSerializer(Of T)(IStateSerializer(Of T))
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer``1(Microsoft.ServiceFabric.Data.IStateSerializer{``0})
    name: TryAddStateSerializer<T>
    nameWithType: IReliableStateManager.TryAddStateSerializer<T>
    fullName: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.IStateSerializer`1
    name: IStateSerializer
    nameWithType: IStateSerializer
    fullName: Microsoft.ServiceFabric.Data.IStateSerializer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer``1(Microsoft.ServiceFabric.Data.IStateSerializer{``0})
    name: TryAddStateSerializer(Of T)
    nameWithType: IReliableStateManager.TryAddStateSerializer(Of T)
    fullName: Microsoft.ServiceFabric.Data.IReliableStateManager.TryAddStateSerializer(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.IStateSerializer`1
    name: IStateSerializer
    nameWithType: IStateSerializer
    fullName: Microsoft.ServiceFabric.Data.IStateSerializer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent
  isExternal: false
  name: OnInitializeStateSerializersEvent
  nameWithType: ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration.OnInitializeStateSerializersEvent
