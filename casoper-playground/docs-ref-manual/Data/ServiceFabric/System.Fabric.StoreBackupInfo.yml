### YamlMime:ManagedReference
items:
- uid: System.Fabric.StoreBackupInfo
  commentId: T:System.Fabric.StoreBackupInfo
  id: StoreBackupInfo
  parent: System.Fabric
  children:
  - System.Fabric.StoreBackupInfo.BackupChainId
  - System.Fabric.StoreBackupInfo.BackupFolder
  - System.Fabric.StoreBackupInfo.BackupIndex
  - System.Fabric.StoreBackupInfo.BackupOption
  - System.Fabric.StoreBackupInfo.ToString
  langs:
  - csharp
  - vb
  name: StoreBackupInfo
  nameWithType: StoreBackupInfo
  fullName: System.Fabric.StoreBackupInfo
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StoreBackupInfo
    path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Provides information about the backup created by calling <xref href=\"System.Fabric.KeyValueStoreReplica.BackupAsync(System.String%2cSystem.Fabric.StoreBackupOption%2cSystem.Func%7bSystem.Fabric.StoreBackupInfo%2cSystem.Threading.Tasks.Task%7bSystem.Boolean%7d%7d)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public sealed class StoreBackupInfo
    content.vb: Public NotInheritable Class StoreBackupInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.StoreBackupInfo.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.StoreBackupInfo.BackupFolder
  commentId: P:System.Fabric.StoreBackupInfo.BackupFolder
  id: BackupFolder
  parent: System.Fabric.StoreBackupInfo
  langs:
  - csharp
  - vb
  name: BackupFolder
  nameWithType: StoreBackupInfo.BackupFolder
  fullName: System.Fabric.StoreBackupInfo.BackupFolder
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BackupFolder
    path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
    startLine: 22
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the folder where the backup was created.</p>\n"
  example: []
  syntax:
    content: public string BackupFolder { get; }
    content.vb: Public ReadOnly Property BackupFolder As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The backup folder</p>\n"
  overload: System.Fabric.StoreBackupInfo.BackupFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.StoreBackupInfo.BackupOption
  commentId: P:System.Fabric.StoreBackupInfo.BackupOption
  id: BackupOption
  parent: System.Fabric.StoreBackupInfo
  langs:
  - csharp
  - vb
  name: BackupOption
  nameWithType: StoreBackupInfo.BackupOption
  fullName: System.Fabric.StoreBackupInfo.BackupOption
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BackupOption
    path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
    startLine: 30
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the backup option used</p>\n"
  example: []
  syntax:
    content: public StoreBackupOption BackupOption { get; }
    content.vb: Public ReadOnly Property BackupOption As StoreBackupOption
    parameters: []
    return:
      type: System.Fabric.StoreBackupOption
      description: "\n<p>The backup option used</p>\n"
  overload: System.Fabric.StoreBackupInfo.BackupOption*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.StoreBackupInfo.BackupChainId
  commentId: P:System.Fabric.StoreBackupInfo.BackupChainId
  id: BackupChainId
  parent: System.Fabric.StoreBackupInfo
  langs:
  - csharp
  - vb
  name: BackupChainId
  nameWithType: StoreBackupInfo.BackupChainId
  fullName: System.Fabric.StoreBackupInfo.BackupChainId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BackupChainId
    path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
    startLine: 41
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the ID of backup-chain to which this backup belongs. A backup chain contains\none full backup and zero or more continuous incremental backup(s) and starts at full backup. \n</p>\n"
  example: []
  syntax:
    content: public Guid BackupChainId { get; }
    content.vb: Public ReadOnly Property BackupChainId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>The ID of backup chain.</p>\n"
  overload: System.Fabric.StoreBackupInfo.BackupChainId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.StoreBackupInfo.BackupIndex
  commentId: P:System.Fabric.StoreBackupInfo.BackupIndex
  id: BackupIndex
  parent: System.Fabric.StoreBackupInfo
  langs:
  - csharp
  - vb
  name: BackupIndex
  nameWithType: StoreBackupInfo.BackupIndex
  fullName: System.Fabric.StoreBackupInfo.BackupIndex
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BackupIndex
    path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
    startLine: 53
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the index of this backup in the backup-chain to which this backup belongs.\nA backup chain contains one full backup and zero or more continuous incremental backup(s).\nand starts at full backup. Since full backup starts the chain, its backup index is always zero.\n</p>\n"
  example: []
  syntax:
    content: public long BackupIndex { get; }
    content.vb: Public ReadOnly Property BackupIndex As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The backup index of current backup.</p>\n"
  overload: System.Fabric.StoreBackupInfo.BackupIndex*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.StoreBackupInfo.ToString
  commentId: M:System.Fabric.StoreBackupInfo.ToString
  id: ToString
  parent: System.Fabric.StoreBackupInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StoreBackupInfo.ToString()
  fullName: System.Fabric.StoreBackupInfo.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/StoreBackupInfo.cs
    startLine: 79
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Returns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance</p>\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance</p>\n"
  overridden: System.Object.ToString
  overload: System.Fabric.StoreBackupInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.KeyValueStoreReplica.BackupAsync(System.String,System.Fabric.StoreBackupOption,System.Func{System.Fabric.StoreBackupInfo,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:System.Fabric.KeyValueStoreReplica.BackupAsync(System.String,System.Fabric.StoreBackupOption,System.Func{System.Fabric.StoreBackupInfo,System.Threading.Tasks.Task{System.Boolean}})
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.StoreBackupInfo.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<StoreBackupInfo>()
  nameWithType: ByteArraySerializer.Serialize<StoreBackupInfo>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.StoreBackupInfo>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of StoreBackupInfo)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.StoreBackupInfo)()
  name.vb: Serialize(Of StoreBackupInfo)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<StoreBackupInfo>
    nameWithType: ByteArraySerializer.Serialize<StoreBackupInfo>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.StoreBackupInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of StoreBackupInfo)
    nameWithType: ByteArraySerializer.Serialize(Of StoreBackupInfo)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.StoreBackupInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.StoreBackupInfo.BackupFolder*
  commentId: Overload:System.Fabric.StoreBackupInfo.BackupFolder
  isExternal: false
  name: BackupFolder
  nameWithType: StoreBackupInfo.BackupFolder
  fullName: System.Fabric.StoreBackupInfo.BackupFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.StoreBackupInfo.BackupOption*
  commentId: Overload:System.Fabric.StoreBackupInfo.BackupOption
  isExternal: false
  name: BackupOption
  nameWithType: StoreBackupInfo.BackupOption
  fullName: System.Fabric.StoreBackupInfo.BackupOption
- uid: System.Fabric.StoreBackupOption
  commentId: T:System.Fabric.StoreBackupOption
  parent: System.Fabric
  isExternal: false
  name: StoreBackupOption
  nameWithType: StoreBackupOption
  fullName: System.Fabric.StoreBackupOption
- uid: System.Fabric.StoreBackupInfo.BackupChainId*
  commentId: Overload:System.Fabric.StoreBackupInfo.BackupChainId
  isExternal: false
  name: BackupChainId
  nameWithType: StoreBackupInfo.BackupChainId
  fullName: System.Fabric.StoreBackupInfo.BackupChainId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.StoreBackupInfo.BackupIndex*
  commentId: Overload:System.Fabric.StoreBackupInfo.BackupIndex
  isExternal: false
  name: BackupIndex
  nameWithType: StoreBackupInfo.BackupIndex
  fullName: System.Fabric.StoreBackupInfo.BackupIndex
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.StoreBackupInfo.ToString*
  commentId: Overload:System.Fabric.StoreBackupInfo.ToString
  isExternal: false
  name: ToString
  nameWithType: StoreBackupInfo.ToString
  fullName: System.Fabric.StoreBackupInfo.ToString
