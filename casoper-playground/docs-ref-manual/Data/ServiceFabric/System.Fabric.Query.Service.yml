### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.Service
  commentId: T:System.Fabric.Query.Service
  id: Service
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.Service.HealthState
  - System.Fabric.Query.Service.IsServiceGroup
  - System.Fabric.Query.Service.ServiceKind
  - System.Fabric.Query.Service.ServiceManifestVersion
  - System.Fabric.Query.Service.ServiceName
  - System.Fabric.Query.Service.ServiceStatus
  - System.Fabric.Query.Service.ServiceTypeName
  langs:
  - csharp
  - vb
  name: Service
  nameWithType: Service
  fullName: System.Fabric.Query.Service
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Service
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
    startLine: 36
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Represents a service.</p>\n"
  example: []
  syntax:
    content: >-
      [KnownType(typeof (StatelessService))]

      [KnownType(typeof (StatefulService))]

      public abstract class Service
    content.vb: >-
      <KnownType(GetType(StatelessService))>

      <KnownType(GetType(StatefulService))>

      Public MustInherit Class Service
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.Service.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Query.StatelessService
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Query.StatefulService
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Query.Service.ServiceKind
  commentId: P:System.Fabric.Query.Service.ServiceKind
  id: ServiceKind
  parent: System.Fabric.Query.Service
  langs:
  - csharp
  - vb
  name: ServiceKind
  nameWithType: Service.ServiceKind
  fullName: System.Fabric.Query.Service.ServiceKind
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceKind
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
    startLine: 65
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the service kind.</p>\n"
  example: []
  syntax:
    content: public ServiceKind ServiceKind { get; }
    content.vb: Public ReadOnly Property ServiceKind As ServiceKind
    parameters: []
    return:
      type: System.Fabric.Query.ServiceKind
      description: "\n<p>The service kind.</p>\n"
  overload: System.Fabric.Query.Service.ServiceKind*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Service.ServiceName
  commentId: P:System.Fabric.Query.Service.ServiceName
  id: ServiceName
  parent: System.Fabric.Query.Service
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: Service.ServiceName
  fullName: System.Fabric.Query.Service.ServiceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
    startLine: 77
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the service name.</p>\n"
  example: []
  syntax:
    content: public Uri ServiceName { get; }
    content.vb: Public ReadOnly Property ServiceName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The service name.</p>\n"
  overload: System.Fabric.Query.Service.ServiceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Service.ServiceTypeName
  commentId: P:System.Fabric.Query.Service.ServiceTypeName
  id: ServiceTypeName
  parent: System.Fabric.Query.Service
  langs:
  - csharp
  - vb
  name: ServiceTypeName
  nameWithType: Service.ServiceTypeName
  fullName: System.Fabric.Query.Service.ServiceTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
    startLine: 86
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the service type name.</p>\n"
  example: []
  syntax:
    content: public string ServiceTypeName { get; }
    content.vb: Public ReadOnly Property ServiceTypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The service type name.</p>\n"
  overload: System.Fabric.Query.Service.ServiceTypeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Service.ServiceManifestVersion
  commentId: P:System.Fabric.Query.Service.ServiceManifestVersion
  id: ServiceManifestVersion
  parent: System.Fabric.Query.Service
  langs:
  - csharp
  - vb
  name: ServiceManifestVersion
  nameWithType: Service.ServiceManifestVersion
  fullName: System.Fabric.Query.Service.ServiceManifestVersion
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceManifestVersion
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
    startLine: 95
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the service manifest version.</p>\n"
  example: []
  syntax:
    content: public string ServiceManifestVersion { get; }
    content.vb: Public ReadOnly Property ServiceManifestVersion As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The service manifest version.</p>\n"
  overload: System.Fabric.Query.Service.ServiceManifestVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Service.HealthState
  commentId: P:System.Fabric.Query.Service.HealthState
  id: HealthState
  parent: System.Fabric.Query.Service
  langs:
  - csharp
  - vb
  name: HealthState
  nameWithType: Service.HealthState
  fullName: System.Fabric.Query.Service.HealthState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthState
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
    startLine: 104
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the health state.</p>\n"
  example: []
  syntax:
    content: public HealthState HealthState { get; }
    content.vb: Public ReadOnly Property HealthState As HealthState
    parameters: []
    return:
      type: System.Fabric.Health.HealthState
      description: "\n<p>The health state.</p>\n"
  overload: System.Fabric.Query.Service.HealthState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Service.ServiceStatus
  commentId: P:System.Fabric.Query.Service.ServiceStatus
  id: ServiceStatus
  parent: System.Fabric.Query.Service
  langs:
  - csharp
  - vb
  name: ServiceStatus
  nameWithType: Service.ServiceStatus
  fullName: System.Fabric.Query.Service.ServiceStatus
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
    startLine: 112
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the status of the service.</p>\n"
  example: []
  syntax:
    content: public ServiceStatus ServiceStatus { get; }
    content.vb: Public ReadOnly Property ServiceStatus As ServiceStatus
    parameters: []
    return:
      type: System.Fabric.Query.ServiceStatus
      description: "\n<p>Returns <xref href=\"System.Fabric.Query.ServiceStatus\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Query.Service.ServiceStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Service.IsServiceGroup
  commentId: P:System.Fabric.Query.Service.IsServiceGroup
  id: IsServiceGroup
  parent: System.Fabric.Query.Service
  langs:
  - csharp
  - vb
  name: IsServiceGroup
  nameWithType: Service.IsServiceGroup
  fullName: System.Fabric.Query.Service.IsServiceGroup
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsServiceGroup
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceResultItem.cs
    startLine: 120
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Flag indicates if this service is a regular service or a service group.</p>\n"
  example: []
  syntax:
    content: public bool IsServiceGroup { get; }
    content.vb: Public ReadOnly Property IsServiceGroup As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Query.Service.IsServiceGroup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.Service.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<Service>()
  nameWithType: ByteArraySerializer.Serialize<Service>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.Service>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of Service)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.Service)()
  name.vb: Serialize(Of Service)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<Service>
    nameWithType: ByteArraySerializer.Serialize<Service>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.Service>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of Service)
    nameWithType: ByteArraySerializer.Serialize(Of Service)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.Service)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.Service.ServiceKind*
  commentId: Overload:System.Fabric.Query.Service.ServiceKind
  isExternal: false
  name: ServiceKind
  nameWithType: Service.ServiceKind
  fullName: System.Fabric.Query.Service.ServiceKind
- uid: System.Fabric.Query.ServiceKind
  commentId: T:System.Fabric.Query.ServiceKind
  parent: System.Fabric.Query
  isExternal: false
  name: ServiceKind
  nameWithType: ServiceKind
  fullName: System.Fabric.Query.ServiceKind
- uid: System.Fabric.Query.Service.ServiceName*
  commentId: Overload:System.Fabric.Query.Service.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: Service.ServiceName
  fullName: System.Fabric.Query.Service.ServiceName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Query.Service.ServiceTypeName*
  commentId: Overload:System.Fabric.Query.Service.ServiceTypeName
  isExternal: false
  name: ServiceTypeName
  nameWithType: Service.ServiceTypeName
  fullName: System.Fabric.Query.Service.ServiceTypeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Query.Service.ServiceManifestVersion*
  commentId: Overload:System.Fabric.Query.Service.ServiceManifestVersion
  isExternal: false
  name: ServiceManifestVersion
  nameWithType: Service.ServiceManifestVersion
  fullName: System.Fabric.Query.Service.ServiceManifestVersion
- uid: System.Fabric.Query.Service.HealthState*
  commentId: Overload:System.Fabric.Query.Service.HealthState
  isExternal: false
  name: HealthState
  nameWithType: Service.HealthState
  fullName: System.Fabric.Query.Service.HealthState
- uid: System.Fabric.Health.HealthState
  commentId: T:System.Fabric.Health.HealthState
  parent: System.Fabric.Health
  isExternal: false
  name: HealthState
  nameWithType: HealthState
  fullName: System.Fabric.Health.HealthState
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.Query.ServiceStatus
  commentId: T:System.Fabric.Query.ServiceStatus
  parent: System.Fabric.Query
  isExternal: false
  name: ServiceStatus
  nameWithType: ServiceStatus
  fullName: System.Fabric.Query.ServiceStatus
- uid: System.Fabric.Query.Service.ServiceStatus*
  commentId: Overload:System.Fabric.Query.Service.ServiceStatus
  isExternal: false
  name: ServiceStatus
  nameWithType: Service.ServiceStatus
  fullName: System.Fabric.Query.Service.ServiceStatus
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Query.Service.IsServiceGroup*
  commentId: Overload:System.Fabric.Query.Service.IsServiceGroup
  isExternal: false
  name: IsServiceGroup
  nameWithType: Service.IsServiceGroup
  fullName: System.Fabric.Query.Service.IsServiceGroup
