### YamlMime:ManagedReference
items:
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager
  commentId: T:System.Fabric.Messaging.Stream.IMessageStreamManager
  id: IMessageStreamManager
  parent: System.Fabric.Messaging.Stream
  children:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Guid)
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Guid)
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  - System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
  langs:
  - csharp
  - vb
  name: IMessageStreamManager
  nameWithType: IMessageStreamManager
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IMessageStreamManager
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 134
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nStream manager, used to create  and accept  messaging streams\n"
  example: []
  syntax:
    content: public interface IMessageStreamManager
    content.vb: Public Interface IMessageStreamManager
  extensionMethods:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
  id: CreateOutboundStreamsEnumerableAsync
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: CreateOutboundStreamsEnumerableAsync()
  nameWithType: IMessageStreamManager.CreateOutboundStreamsEnumerableAsync()
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateOutboundStreamsEnumerableAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 140
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreates an enumerable of currently active outbound streams\n"
  example: []
  syntax:
    content: Task<IEnumerable<IMessageStream>> CreateOutboundStreamsEnumerableAsync()
    content.vb: Function CreateOutboundStreamsEnumerableAsync As Task(Of IEnumerable(Of IMessageStream))
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.Fabric.Messaging.Stream.IMessageStream}}
      description: an enumerable collection of stream objects
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
  id: CreateInboundStreamsEnumerableAsync
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: CreateInboundStreamsEnumerableAsync()
  nameWithType: IMessageStreamManager.CreateInboundStreamsEnumerableAsync()
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateInboundStreamsEnumerableAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 146
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreates an enumerable of currently active inbound streams\n"
  example: []
  syntax:
    content: Task<IEnumerable<IMessageStream>> CreateInboundStreamsEnumerableAsync()
    content.vb: Function CreateInboundStreamsEnumerableAsync As Task(Of IEnumerable(Of IMessageStream))
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.Fabric.Messaging.Stream.IMessageStream}}
      description: an enumerable collection of stream objects
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Guid)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Guid)
  id: GetInboundStreamAsync(System.Guid)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: GetInboundStreamAsync(Guid)
  nameWithType: IMessageStreamManager.GetInboundStreamAsync(Guid)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetInboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 152
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific inbound stream given its StreamId\n"
  example: []
  syntax:
    content: Task<Tuple<bool, IMessageStream>> GetInboundStreamAsync(Guid streamId)
    content.vb: Function GetInboundStreamAsync(streamId As Guid) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: streamId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  id: GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: GetInboundStreamAsync(Uri, PartitionKey)
  nameWithType: IMessageStreamManager.GetInboundStreamAsync(Uri, PartitionKey)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Uri, System.Fabric.Messaging.Stream.PartitionKey)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetInboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 158
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific inbound stream given its Stream Name and Partition Key\n"
  example: []
  syntax:
    content: Task<Tuple<bool, IMessageStream>> GetInboundStreamAsync(Uri streamName, PartitionKey partitionKey)
    content.vb: Function GetInboundStreamAsync(streamName As Uri, partitionKey As PartitionKey) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: streamName
      type: System.Uri
    - id: partitionKey
      type: System.Fabric.Messaging.Stream.PartitionKey
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
  id: GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: GetInboundStreamAsync(Transaction, Guid)
  nameWithType: IMessageStreamManager.GetInboundStreamAsync(Transaction, Guid)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Guid)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetInboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 164
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific Inbound stream given its StreamId\n"
  example: []
  syntax:
    content: Task<Tuple<bool, IMessageStream>> GetInboundStreamAsync(Transaction streamTransaction, Guid streamId)
    content.vb: Function GetInboundStreamAsync(streamTransaction As Transaction, streamId As Guid) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: streamTransaction
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: streamId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Guid)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Guid)
  id: GetOutboundStreamAsync(System.Guid)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: GetOutboundStreamAsync(Guid)
  nameWithType: IMessageStreamManager.GetOutboundStreamAsync(Guid)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetOutboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 170
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific outbound stream given its StreamId\n"
  example: []
  syntax:
    content: Task<Tuple<bool, IMessageStream>> GetOutboundStreamAsync(Guid streamId)
    content.vb: Function GetOutboundStreamAsync(streamId As Guid) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: streamId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  id: GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: GetOutboundStreamAsync(Uri, PartitionKey)
  nameWithType: IMessageStreamManager.GetOutboundStreamAsync(Uri, PartitionKey)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Uri, System.Fabric.Messaging.Stream.PartitionKey)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetOutboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 176
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific outbound stream given its Stream Name and Partition Key\n"
  example: []
  syntax:
    content: Task<Tuple<bool, IMessageStream>> GetOutboundStreamAsync(Uri streamName, PartitionKey partitionKey)
    content.vb: Function GetOutboundStreamAsync(streamName As Uri, partitionKey As PartitionKey) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: streamName
      type: System.Uri
    - id: partitionKey
      type: System.Fabric.Messaging.Stream.PartitionKey
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  id: GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: GetOutboundStreamAsync(Transaction, Uri, PartitionKey)
  nameWithType: IMessageStreamManager.GetOutboundStreamAsync(Transaction, Uri, PartitionKey)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.Fabric.Messaging.Stream.PartitionKey)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetOutboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 182
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific outbound stream given its Stream Name and Partition Key\n"
  example: []
  syntax:
    content: Task<Tuple<bool, IMessageStream>> GetOutboundStreamAsync(Transaction streamTransaction, Uri streamName, PartitionKey partitionKey)
    content.vb: Function GetOutboundStreamAsync(streamTransaction As Transaction, streamName As Uri, partitionKey As PartitionKey) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: streamTransaction
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: streamName
      type: System.Uri
    - id: partitionKey
      type: System.Fabric.Messaging.Stream.PartitionKey
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
  id: CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: CreateStreamAsync(Transaction, Uri, Uri, Int32)
  nameWithType: IMessageStreamManager.CreateStreamAsync(Transaction, Uri, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.Uri, System.Int32)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 188
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreate the stream: singleton target partition; will be collapsed to a single method instead of three, using IPartitionKey\n"
  example: []
  syntax:
    content: Task<IMessageStream> CreateStreamAsync(Transaction streamTransaction, Uri serviceInstanceName, Uri streamName, int sendQuota)
    content.vb: Function CreateStreamAsync(streamTransaction As Transaction, serviceInstanceName As Uri, streamName As Uri, sendQuota As Integer) As Task(Of IMessageStream)
    parameters:
    - id: streamTransaction
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: serviceInstanceName
      type: System.Uri
    - id: streamName
      type: System.Uri
    - id: sendQuota
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
      description: The created stream
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
  id: CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: CreateStreamAsync(Transaction, Uri, String, Uri, Int32)
  nameWithType: IMessageStreamManager.CreateStreamAsync(Transaction, Uri, String, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.String, System.Uri, System.Int32)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 194
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreate the stream: named target partition\n"
  example: []
  syntax:
    content: Task<IMessageStream> CreateStreamAsync(Transaction streamTransaction, Uri serviceInstanceName, string partitionName, Uri streamName, int sendQuota)
    content.vb: Function CreateStreamAsync(streamTransaction As Transaction, serviceInstanceName As Uri, partitionName As String, streamName As Uri, sendQuota As Integer) As Task(Of IMessageStream)
    parameters:
    - id: streamTransaction
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: serviceInstanceName
      type: System.Uri
    - id: partitionName
      type: System.String
    - id: streamName
      type: System.Uri
    - id: sendQuota
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
      description: The created stream
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
  id: CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: CreateStreamAsync(Transaction, Uri, Int64, Uri, Int32)
  nameWithType: IMessageStreamManager.CreateStreamAsync(Transaction, Uri, Int64, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.Int64, System.Uri, System.Int32)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 200
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreate the stream: numbered target partition\n"
  example: []
  syntax:
    content: Task<IMessageStream> CreateStreamAsync(Transaction streamTransaction, Uri serviceInstanceName, long partitionNumber, Uri streamName, int sendQuota)
    content.vb: Function CreateStreamAsync(streamTransaction As Transaction, serviceInstanceName As Uri, partitionNumber As Long, streamName As Uri, sendQuota As Integer) As Task(Of IMessageStream)
    parameters:
    - id: streamTransaction
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: serviceInstanceName
      type: System.Uri
    - id: partitionNumber
      type: System.Int64
    - id: streamName
      type: System.Uri
    - id: sendQuota
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
      description: The created stream
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
  id: CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: CreateStreamAsync(Transaction, PartitionKey, Uri, Int32)
  nameWithType: IMessageStreamManager.CreateStreamAsync(Transaction, PartitionKey, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Fabric.Messaging.Stream.PartitionKey, System.Uri, System.Int32)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 206
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreate the stream: target partition encapsulated as PartitionKey object\n"
  example: []
  syntax:
    content: Task<IMessageStream> CreateStreamAsync(Transaction streamTransaction, PartitionKey targetPartition, Uri streamName, int sendQuota)
    content.vb: Function CreateStreamAsync(streamTransaction As Transaction, targetPartition As PartitionKey, streamName As Uri, sendQuota As Integer) As Task(Of IMessageStream)
    parameters:
    - id: streamTransaction
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: targetPartition
      type: System.Fabric.Messaging.Stream.PartitionKey
    - id: streamName
      type: System.Uri
    - id: sendQuota
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
      description: The created stream
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
  id: RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  langs:
  - csharp
  - vb
  name: RegisterCallbackByPrefixAsync(Uri, IInboundStreamCallback)
  nameWithType: IMessageStreamManager.RegisterCallbackByPrefixAsync(Uri, IInboundStreamCallback)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync(System.Uri, System.Fabric.Messaging.Stream.IInboundStreamCallback)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RegisterCallbackByPrefixAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 218
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nRegister the call back for a stream name prefix. \nInbound stream callbacks are routed to this callback when streams matches the prefix.\nIn case of conflicts, the longest prefix match is selected first. \n"
  example: []
  syntax:
    content: Task RegisterCallbackByPrefixAsync(Uri streamNamePrefix, IInboundStreamCallback inboundStreamCallback)
    content.vb: Function RegisterCallbackByPrefixAsync(streamNamePrefix As Uri, inboundStreamCallback As IInboundStreamCallback) As Task
    parameters:
    - id: streamNamePrefix
      type: System.Uri
      description: Stream Name Prefix - Absolute Uri
    - id: inboundStreamCallback
      type: System.Fabric.Messaging.Stream.IInboundStreamCallback
      description: Callback when stream matches the prefix
    return:
      type: System.Threading.Tasks.Task
      description: void
  overload: System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      When stream name prefix is not a valid Absolute Uri, or

      when trying to register a duplicate prefix.
references:
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IMessageStreamManager>()
  nameWithType: ByteArraySerializer.Serialize<IMessageStreamManager>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Messaging.Stream.IMessageStreamManager>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IMessageStreamManager)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Messaging.Stream.IMessageStreamManager)()
  name.vb: Serialize(Of IMessageStreamManager)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IMessageStreamManager>
    nameWithType: ByteArraySerializer.Serialize<IMessageStreamManager>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Messaging.Stream.IMessageStreamManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IMessageStreamManager)
    nameWithType: ByteArraySerializer.Serialize(Of IMessageStreamManager)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Messaging.Stream.IMessageStreamManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
  isExternal: false
  name: CreateOutboundStreamsEnumerableAsync
  nameWithType: IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.Fabric.Messaging.Stream.IMessageStream}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.Fabric.Messaging.Stream.IMessageStream}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<IMessageStream>>
  nameWithType: Task<IEnumerable<IMessageStream>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<System.Fabric.Messaging.Stream.IMessageStream>>
  nameWithType.vb: Task(Of IEnumerable(Of IMessageStream))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of System.Fabric.Messaging.Stream.IMessageStream))
  name.vb: Task(Of IEnumerable(Of IMessageStream))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
  isExternal: false
  name: CreateInboundStreamsEnumerableAsync
  nameWithType: IMessageStreamManager.CreateInboundStreamsEnumerableAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync
  isExternal: false
  name: GetInboundStreamAsync
  nameWithType: IMessageStreamManager.GetInboundStreamAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
  commentId: T:System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Tuple<Boolean, IMessageStream>>
  nameWithType: Task<Tuple<Boolean, IMessageStream>>
  fullName: System.Threading.Tasks.Task<System.Tuple<System.Boolean, System.Fabric.Messaging.Stream.IMessageStream>>
  nameWithType.vb: Task(Of Tuple(Of Boolean, IMessageStream))
  fullname.vb: System.Threading.Tasks.Task(Of System.Tuple(Of System.Boolean, System.Fabric.Messaging.Stream.IMessageStream))
  name.vb: Task(Of Tuple(Of Boolean, IMessageStream))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Messaging.Stream.PartitionKey
  commentId: T:System.Fabric.Messaging.Stream.PartitionKey
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: PartitionKey
  nameWithType: PartitionKey
  fullName: System.Fabric.Messaging.Stream.PartitionKey
- uid: Microsoft.ServiceFabric.Replicator.Transaction
  commentId: T:Microsoft.ServiceFabric.Replicator.Transaction
  parent: Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: Microsoft.ServiceFabric.Replicator.Transaction
- uid: Microsoft.ServiceFabric.Replicator
  commentId: N:Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: Microsoft.ServiceFabric.Replicator
  nameWithType: Microsoft.ServiceFabric.Replicator
  fullName: Microsoft.ServiceFabric.Replicator
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync
  isExternal: false
  name: GetOutboundStreamAsync
  nameWithType: IMessageStreamManager.GetOutboundStreamAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync
  isExternal: false
  name: CreateStreamAsync
  nameWithType: IMessageStreamManager.CreateStreamAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IMessageStream>
  nameWithType: Task<IMessageStream>
  fullName: System.Threading.Tasks.Task<System.Fabric.Messaging.Stream.IMessageStream>
  nameWithType.vb: Task(Of IMessageStream)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Messaging.Stream.IMessageStream)
  name.vb: Task(Of IMessageStream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync
  isExternal: false
  name: RegisterCallbackByPrefixAsync
  nameWithType: IMessageStreamManager.RegisterCallbackByPrefixAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Fabric.Messaging.Stream.IInboundStreamCallback
  commentId: T:System.Fabric.Messaging.Stream.IInboundStreamCallback
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: IInboundStreamCallback
  nameWithType: IInboundStreamCallback
  fullName: System.Fabric.Messaging.Stream.IInboundStreamCallback
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
