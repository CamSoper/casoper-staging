### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  id: NotifyStateManagerChangedEventArgs
  parent: Microsoft.ServiceFabric.Data.Notifications
  children:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.#ctor(Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction)
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
  langs:
  - csharp
  - vb
  name: NotifyStateManagerChangedEventArgs
  nameWithType: NotifyStateManagerChangedEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NotifyStateManagerChangedEventArgs
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerChangedEventArgs.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nProvides data for the StateManagerChanged event.\n"
  example: []
  syntax:
    content: 'public abstract class NotifyStateManagerChangedEventArgs : EventArgs'
    content.vb: >-
      Public MustInherit Class NotifyStateManagerChangedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.#ctor(Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction)
  commentId: M:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.#ctor(Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction)
  id: '#ctor(Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction)'
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyStateManagerChangedEventArgs(NotifyStateManagerChangedAction)
  nameWithType: NotifyStateManagerChangedEventArgs.NotifyStateManagerChangedEventArgs(NotifyStateManagerChangedAction)
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.NotifyStateManagerChangedEventArgs(Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerChangedEventArgs.cs
    startLine: 24
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nInitializes a new instance of the <cref name=\"NotifyStateManagerChangedEventArgs\"></cref>\n"
  example: []
  syntax:
    content: public NotifyStateManagerChangedEventArgs(NotifyStateManagerChangedAction action)
    content.vb: Public Sub New(action As NotifyStateManagerChangedAction)
    parameters:
    - id: action
      type: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction
      description: Type of the event.
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
  id: Action
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: NotifyStateManagerChangedEventArgs.Action
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Action
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerChangedEventArgs.cs
    startLine: 35
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nGets the action that caused the event.\n"
  example: []
  syntax:
    content: public NotifyStateManagerChangedAction Action { get; }
    content.vb: Public ReadOnly Property Action As NotifyStateManagerChangedAction
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction
      description: "\nThe type of notification.\n"
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Data.Notifications
  commentId: N:Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: Microsoft.ServiceFabric.Data.Notifications
  nameWithType: Microsoft.ServiceFabric.Data.Notifications
  fullName: Microsoft.ServiceFabric.Data.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NotifyStateManagerChangedEventArgs>()
  nameWithType: ByteArraySerializer.Serialize<NotifyStateManagerChangedEventArgs>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NotifyStateManagerChangedEventArgs)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs)()
  name.vb: Serialize(Of NotifyStateManagerChangedEventArgs)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NotifyStateManagerChangedEventArgs>
    nameWithType: ByteArraySerializer.Serialize<NotifyStateManagerChangedEventArgs>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NotifyStateManagerChangedEventArgs)
    nameWithType: ByteArraySerializer.Serialize(Of NotifyStateManagerChangedEventArgs)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.#ctor
  isExternal: false
  name: NotifyStateManagerChangedEventArgs
  nameWithType: NotifyStateManagerChangedEventArgs.NotifyStateManagerChangedEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.NotifyStateManagerChangedEventArgs
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction
  parent: Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: NotifyStateManagerChangedAction
  nameWithType: NotifyStateManagerChangedAction
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
  isExternal: false
  name: Action
  nameWithType: NotifyStateManagerChangedEventArgs.Action
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
