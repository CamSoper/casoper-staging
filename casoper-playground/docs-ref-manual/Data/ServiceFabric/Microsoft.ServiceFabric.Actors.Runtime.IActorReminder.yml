### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  id: IActorReminder
  parent: Microsoft.ServiceFabric.Actors.Runtime
  children:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.DueTime
  - Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Name
  - Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Period
  - Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.State
  langs:
  - csharp
  - vb
  name: IActorReminder
  nameWithType: IActorReminder
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IActorReminder.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IActorReminder
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IActorReminder.cs
    startLine: 11
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nEncapsulates Reminder set on an Actor\n"
  example: []
  syntax:
    content: public interface IActorReminder
    content.vb: Public Interface IActorReminder
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Name
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Name
  id: Name
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IActorReminder.Name
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IActorReminder.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IActorReminder.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nName of Reminder set on Actor. The name is unique per actor.\n"
  example: []
  syntax:
    content: string Name { get; }
    content.vb: ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: Name of Reminder set on Actor.
  overload: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.DueTime
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.DueTime
  id: DueTime
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  langs:
  - csharp
  - vb
  name: DueTime
  nameWithType: IActorReminder.DueTime
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.DueTime
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IActorReminder.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DueTime
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IActorReminder.cs
    startLine: 23
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nTime when Reminder is first due.\n"
  example: []
  syntax:
    content: TimeSpan DueTime { get; }
    content.vb: ReadOnly Property DueTime As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: Due time as <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> when the reminder is first due.
  overload: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.DueTime*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Period
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Period
  id: Period
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  langs:
  - csharp
  - vb
  name: Period
  nameWithType: IActorReminder.Period
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Period
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IActorReminder.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Period
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IActorReminder.cs
    startLine: 29
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nPeriodic time when Reminder will be invoked.\n"
  example: []
  syntax:
    content: TimeSpan Period { get; }
    content.vb: ReadOnly Property Period As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: Time period as <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> when Reminder will be invoked.
  overload: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Period*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.State
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.State
  id: State
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  langs:
  - csharp
  - vb
  name: State
  nameWithType: IActorReminder.State
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.State
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IActorReminder.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: State
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/IActorReminder.cs
    startLine: 35
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nState to be passed into reminder invocation.\n"
  example: []
  syntax:
    content: byte[] State { get; }
    content.vb: ReadOnly Property State As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: State to be passed into reminder invocation.
  overload: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.State*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Actors.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Runtime
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IActorReminder>()
  nameWithType: ByteArraySerializer.Serialize<IActorReminder>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.IActorReminder>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IActorReminder)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.IActorReminder)()
  name.vb: Serialize(Of IActorReminder)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IActorReminder>
    nameWithType: ByteArraySerializer.Serialize<IActorReminder>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.IActorReminder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IActorReminder)
    nameWithType: ByteArraySerializer.Serialize(Of IActorReminder)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.IActorReminder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Name*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Name
  isExternal: false
  name: Name
  nameWithType: IActorReminder.Name
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.DueTime*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.DueTime
  isExternal: false
  name: DueTime
  nameWithType: IActorReminder.DueTime
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.DueTime
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Period*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Period
  isExternal: false
  name: Period
  nameWithType: IActorReminder.Period
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.Period
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.State*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.State
  isExternal: false
  name: State
  nameWithType: IActorReminder.State
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder.State
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
