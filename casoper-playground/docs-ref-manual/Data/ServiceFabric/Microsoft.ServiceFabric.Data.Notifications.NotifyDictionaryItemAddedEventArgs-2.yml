### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2
  id: NotifyDictionaryItemAddedEventArgs`2
  parent: Microsoft.ServiceFabric.Data.Notifications
  children:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.#ctor(Microsoft.ServiceFabric.Data.ITransaction,`0,`1)
  - Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Key
  - Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Value
  langs:
  - csharp
  - vb
  name: NotifyDictionaryItemAddedEventArgs<TKey, TValue>
  nameWithType: NotifyDictionaryItemAddedEventArgs<TKey, TValue>
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs<TKey, TValue>
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NotifyDictionaryItemAddedEventArgs
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
    startLine: 186
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nProvides data for the DictionaryChanged event caused by item addition.\n"
  example: []
  syntax:
    content: 'public class NotifyDictionaryItemAddedEventArgs<TKey, TValue> : NotifyDictionaryTransactionalEventArgs<TKey, TValue>'
    content.vb: >-
      Public Class NotifyDictionaryItemAddedEventArgs(Of TKey, TValue)
          Inherits NotifyDictionaryTransactionalEventArgs(Of TKey, TValue)
    typeParameters:
    - id: TKey
      description: The type of the keys in the <cref name="IReliableDictionary"></cref>.
    - id: TValue
      description: The type of the values in the <cref name="IReliableDictionary"></cref>.
  inheritance:
  - System.Object
  - System.EventArgs
  - Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs{{TKey},{TValue}}
  - Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs{{TKey},{TValue}}
  inheritedMembers:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs{{TKey},{TValue}}.Transaction
  - Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs{{TKey},{TValue}}.Action
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  nameWithType.vb: NotifyDictionaryItemAddedEventArgs(Of TKey, TValue)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs(Of TKey, TValue)
  name.vb: NotifyDictionaryItemAddedEventArgs(Of TKey, TValue)
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.#ctor(Microsoft.ServiceFabric.Data.ITransaction,`0,`1)
  commentId: M:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.#ctor(Microsoft.ServiceFabric.Data.ITransaction,`0,`1)
  id: '#ctor(Microsoft.ServiceFabric.Data.ITransaction,`0,`1)'
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2
  langs:
  - csharp
  - vb
  name: NotifyDictionaryItemAddedEventArgs(ITransaction, TKey, TValue)
  nameWithType: NotifyDictionaryItemAddedEventArgs<TKey, TValue>.NotifyDictionaryItemAddedEventArgs(ITransaction, TKey, TValue)
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs<TKey, TValue>.NotifyDictionaryItemAddedEventArgs(Microsoft.ServiceFabric.Data.ITransaction, TKey, TValue)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
    startLine: 197
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nInitializes a new instance of the <cref name=\"NotifyDictionaryItemAddedEventArgs\"></cref>\n"
  example: []
  syntax:
    content: public NotifyDictionaryItemAddedEventArgs(ITransaction transaction, TKey key, TValue value)
    content.vb: Public Sub New(transaction As ITransaction, key As TKey, value As TValue)
    parameters:
    - id: transaction
      type: Microsoft.ServiceFabric.Data.ITransaction
      description: Transaction that the operation is related to.
    - id: key
      type: '{TKey}'
      description: Key that was added.
    - id: value
      type: '{TValue}'
      description: Value that was added.
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.#ctor*
  nameWithType.vb: NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).NotifyDictionaryItemAddedEventArgs(ITransaction, TKey, TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).NotifyDictionaryItemAddedEventArgs(Microsoft.ServiceFabric.Data.ITransaction, TKey, TValue)
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Key
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Key
  id: Key
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: NotifyDictionaryItemAddedEventArgs<TKey, TValue>.Key
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs<TKey, TValue>.Key
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Key
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
    startLine: 209
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nGets the key.\n"
  example: []
  syntax:
    content: public TKey Key { get; }
    content.vb: Public ReadOnly Property Key As TKey
    parameters: []
    return:
      type: '{TKey}'
      description: "\nThe key.\n"
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Key*
  nameWithType.vb: NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).Key
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).Key
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Value
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Value
  id: Value
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: NotifyDictionaryItemAddedEventArgs<TKey, TValue>.Value
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs<TKey, TValue>.Value
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Value
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
    startLine: 223
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nGets the value.\n"
  example: []
  syntax:
    content: public TValue Value { get; }
    content.vb: Public ReadOnly Property Value As TValue
    parameters: []
    return:
      type: '{TValue}'
      description: "\nThe value.\n"
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Value*
  nameWithType.vb: NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).Value
references:
- uid: Microsoft.ServiceFabric.Data.Notifications
  commentId: N:Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: Microsoft.ServiceFabric.Data.Notifications
  nameWithType: Microsoft.ServiceFabric.Data.Notifications
  fullName: Microsoft.ServiceFabric.Data.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs{{TKey},{TValue}}
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs{`0,`1}
  parent: Microsoft.ServiceFabric.Data.Notifications
  definition: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2
  name: NotifyDictionaryChangedEventArgs<TKey, TValue>
  nameWithType: NotifyDictionaryChangedEventArgs<TKey, TValue>
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs<TKey, TValue>
  nameWithType.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue)
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs(Of TKey, TValue)
  name.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2
    name: NotifyDictionaryChangedEventArgs
    nameWithType: NotifyDictionaryChangedEventArgs
    fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2
    name: NotifyDictionaryChangedEventArgs
    nameWithType: NotifyDictionaryChangedEventArgs
    fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs{{TKey},{TValue}}
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs{`0,`1}
  parent: Microsoft.ServiceFabric.Data.Notifications
  definition: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs`2
  name: NotifyDictionaryTransactionalEventArgs<TKey, TValue>
  nameWithType: NotifyDictionaryTransactionalEventArgs<TKey, TValue>
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs<TKey, TValue>
  nameWithType.vb: NotifyDictionaryTransactionalEventArgs(Of TKey, TValue)
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs(Of TKey, TValue)
  name.vb: NotifyDictionaryTransactionalEventArgs(Of TKey, TValue)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs`2
    name: NotifyDictionaryTransactionalEventArgs
    nameWithType: NotifyDictionaryTransactionalEventArgs
    fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs`2
    name: NotifyDictionaryTransactionalEventArgs
    nameWithType: NotifyDictionaryTransactionalEventArgs
    fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs{{TKey},{TValue}}.Transaction
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs{`0,`1}.Transaction
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs{{TKey},{TValue}}
  definition: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs`2.Transaction
  name: Transaction
  nameWithType: NotifyDictionaryTransactionalEventArgs<TKey, TValue>.Transaction
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs<TKey, TValue>.Transaction
  nameWithType.vb: NotifyDictionaryTransactionalEventArgs(Of TKey, TValue).Transaction
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs(Of TKey, TValue).Transaction
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs{{TKey},{TValue}}.Action
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs{`0,`1}.Action
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs{{TKey},{TValue}}
  definition: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.Action
  name: Action
  nameWithType: NotifyDictionaryChangedEventArgs<TKey, TValue>.Action
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs<TKey, TValue>.Action
  nameWithType.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue).Action
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs(Of TKey, TValue).Action
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NotifyDictionaryItemAddedEventArgs<TKey, TValue>>()
  nameWithType: ByteArraySerializer.Serialize<NotifyDictionaryItemAddedEventArgs<TKey, TValue>>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs<TKey, TValue>>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NotifyDictionaryItemAddedEventArgs(Of TKey, TValue))()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs(Of TKey, TValue))()
  name.vb: Serialize(Of NotifyDictionaryItemAddedEventArgs(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NotifyDictionaryItemAddedEventArgs<TKey, TValue>>
    nameWithType: ByteArraySerializer.Serialize<NotifyDictionaryItemAddedEventArgs<TKey, TValue>>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs<TKey, TValue>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NotifyDictionaryItemAddedEventArgs(Of TKey, TValue))
    nameWithType: ByteArraySerializer.Serialize(Of NotifyDictionaryItemAddedEventArgs(Of TKey, TValue))
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs(Of TKey, TValue))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2
  isExternal: false
  name: NotifyDictionaryChangedEventArgs<TKey, TValue>
  nameWithType: NotifyDictionaryChangedEventArgs<TKey, TValue>
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs<TKey, TValue>
  nameWithType.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue)
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs(Of TKey, TValue)
  name.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2
    name: NotifyDictionaryChangedEventArgs
    nameWithType: NotifyDictionaryChangedEventArgs
    fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2
    name: NotifyDictionaryChangedEventArgs
    nameWithType: NotifyDictionaryChangedEventArgs
    fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs`2
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs`2
  isExternal: false
  name: NotifyDictionaryTransactionalEventArgs<TKey, TValue>
  nameWithType: NotifyDictionaryTransactionalEventArgs<TKey, TValue>
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs<TKey, TValue>
  nameWithType.vb: NotifyDictionaryTransactionalEventArgs(Of TKey, TValue)
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs(Of TKey, TValue)
  name.vb: NotifyDictionaryTransactionalEventArgs(Of TKey, TValue)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs`2
    name: NotifyDictionaryTransactionalEventArgs
    nameWithType: NotifyDictionaryTransactionalEventArgs
    fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs`2
    name: NotifyDictionaryTransactionalEventArgs
    nameWithType: NotifyDictionaryTransactionalEventArgs
    fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs`2.Transaction
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs`2.Transaction
  isExternal: false
  name: Transaction
  nameWithType: NotifyDictionaryTransactionalEventArgs<TKey, TValue>.Transaction
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs<TKey, TValue>.Transaction
  nameWithType.vb: NotifyDictionaryTransactionalEventArgs(Of TKey, TValue).Transaction
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryTransactionalEventArgs(Of TKey, TValue).Transaction
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.Action
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.Action
  isExternal: false
  name: Action
  nameWithType: NotifyDictionaryChangedEventArgs<TKey, TValue>.Action
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs<TKey, TValue>.Action
  nameWithType.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue).Action
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs(Of TKey, TValue).Action
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.#ctor
  isExternal: false
  name: NotifyDictionaryItemAddedEventArgs
  nameWithType: NotifyDictionaryItemAddedEventArgs<TKey, TValue>.NotifyDictionaryItemAddedEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs<TKey, TValue>.NotifyDictionaryItemAddedEventArgs
  nameWithType.vb: NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).NotifyDictionaryItemAddedEventArgs
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).NotifyDictionaryItemAddedEventArgs
- uid: Microsoft.ServiceFabric.Data.ITransaction
  commentId: T:Microsoft.ServiceFabric.Data.ITransaction
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: Microsoft.ServiceFabric.Data.ITransaction
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: TKey
  isExternal: false
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  isExternal: false
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Key*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Key
  isExternal: false
  name: Key
  nameWithType: NotifyDictionaryItemAddedEventArgs<TKey, TValue>.Key
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs<TKey, TValue>.Key
  nameWithType.vb: NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).Key
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).Key
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Value*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs`2.Value
  isExternal: false
  name: Value
  nameWithType: NotifyDictionaryItemAddedEventArgs<TKey, TValue>.Value
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs<TKey, TValue>.Value
  nameWithType.vb: NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).Value
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryItemAddedEventArgs(Of TKey, TValue).Value
