### YamlMime:ManagedReference
items:
- uid: System.Fabric.LocalEseStoreSettings
  commentId: T:System.Fabric.LocalEseStoreSettings
  id: LocalEseStoreSettings
  parent: System.Fabric
  children:
  - System.Fabric.LocalEseStoreSettings.#ctor
  - System.Fabric.LocalEseStoreSettings.CompactionThresholdInMB
  - System.Fabric.LocalEseStoreSettings.DatabasePageSizeInKB
  - System.Fabric.LocalEseStoreSettings.DbFolderPath
  - System.Fabric.LocalEseStoreSettings.DefragThresholdInMB
  - System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup
  - System.Fabric.LocalEseStoreSettings.IntrinsicValueThresholdInBytes
  - System.Fabric.LocalEseStoreSettings.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
  - System.Fabric.LocalEseStoreSettings.LogBufferSizeInKB
  - System.Fabric.LocalEseStoreSettings.LogFileSizeInKB
  - System.Fabric.LocalEseStoreSettings.MaxAsyncCommitDelay
  - System.Fabric.LocalEseStoreSettings.MaxCacheSizeInMB
  - System.Fabric.LocalEseStoreSettings.MaxCursors
  - System.Fabric.LocalEseStoreSettings.MaxDefragFrequencyInMinutes
  - System.Fabric.LocalEseStoreSettings.MaxVerPages
  langs:
  - csharp
  - vb
  name: LocalEseStoreSettings
  nameWithType: LocalEseStoreSettings
  fullName: System.Fabric.LocalEseStoreSettings
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LocalEseStoreSettings
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Represents the optional settings for a local ESE store.</p>\n"
  remarks: "\n<p>Please see  HYPERLINK \"http://msdn.microsoft.com/library/gg294139(v=exchg.10).aspx\" http://msdn.microsoft.com/library/gg294139(v=exchg.10).aspx for documentation on ESE parameters.</p>\n"
  example: []
  syntax:
    content: 'public sealed class LocalEseStoreSettings : LocalStoreSettings'
    content.vb: >-
      Public NotInheritable Class LocalEseStoreSettings
          Inherits LocalStoreSettings
  inheritance:
  - System.Object
  - System.Fabric.LocalStoreSettings
  inheritedMembers:
  - System.Fabric.LocalStoreSettings.StoreKind
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.LocalEseStoreSettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.LocalEseStoreSettings.#ctor
  commentId: M:System.Fabric.LocalEseStoreSettings.#ctor
  id: '#ctor'
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: LocalEseStoreSettings()
  nameWithType: LocalEseStoreSettings.LocalEseStoreSettings()
  fullName: System.Fabric.LocalEseStoreSettings.LocalEseStoreSettings()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 20
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Creates and initializes a new instance of the <xref href=\"System.Fabric.LocalEseStoreSettings\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public LocalEseStoreSettings()
    content.vb: Public Sub New
  overload: System.Fabric.LocalEseStoreSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.DbFolderPath
  commentId: P:System.Fabric.LocalEseStoreSettings.DbFolderPath
  id: DbFolderPath
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: DbFolderPath
  nameWithType: LocalEseStoreSettings.DbFolderPath
  fullName: System.Fabric.LocalEseStoreSettings.DbFolderPath
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DbFolderPath
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the file path that contains the local store files.</p>\n"
  example: []
  syntax:
    content: public string DbFolderPath { get; set; }
    content.vb: Public Property DbFolderPath As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The file path that contains the local store files.</p>\n"
  overload: System.Fabric.LocalEseStoreSettings.DbFolderPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.LogFileSizeInKB
  commentId: P:System.Fabric.LocalEseStoreSettings.LogFileSizeInKB
  id: LogFileSizeInKB
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: LogFileSizeInKB
  nameWithType: LocalEseStoreSettings.LogFileSizeInKB
  fullName: System.Fabric.LocalEseStoreSettings.LogFileSizeInKB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LogFileSizeInKB
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 61
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Maps directly to JET_paramLogFileSize on the local ESE store.\n</p>\n"
  remarks: "\nThe specified log file size is only applied to newly created databases. Existing databases will continue to use the log file sizes they were created with if different from this setting.\n"
  example: []
  syntax:
    content: public int LogFileSizeInKB { get; set; }
    content.vb: Public Property LogFileSizeInKB As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The log file size in KB.</p>\n"
  overload: System.Fabric.LocalEseStoreSettings.LogFileSizeInKB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.LogBufferSizeInKB
  commentId: P:System.Fabric.LocalEseStoreSettings.LogBufferSizeInKB
  id: LogBufferSizeInKB
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: LogBufferSizeInKB
  nameWithType: LocalEseStoreSettings.LogBufferSizeInKB
  fullName: System.Fabric.LocalEseStoreSettings.LogBufferSizeInKB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LogBufferSizeInKB
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 69
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Maps to JET_paramLogBuffers on the local ESE store. There is a conversion from KB to 512 bytes (volume sector size) in the mapping.</p>\n"
  example: []
  syntax:
    content: public int LogBufferSizeInKB { get; set; }
    content.vb: Public Property LogBufferSizeInKB As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The log buffer size in KB.</p>\n"
  overload: System.Fabric.LocalEseStoreSettings.LogBufferSizeInKB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.MaxCursors
  commentId: P:System.Fabric.LocalEseStoreSettings.MaxCursors
  id: MaxCursors
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: MaxCursors
  nameWithType: LocalEseStoreSettings.MaxCursors
  fullName: System.Fabric.LocalEseStoreSettings.MaxCursors
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxCursors
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 78
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Maps directly to JET_paramMaxCursors on the local ESE store.\n</p>\n"
  example: []
  syntax:
    content: public int MaxCursors { get; set; }
    content.vb: Public Property MaxCursors As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum number of allowed database cursors.</p>\n"
  overload: System.Fabric.LocalEseStoreSettings.MaxCursors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.MaxVerPages
  commentId: P:System.Fabric.LocalEseStoreSettings.MaxVerPages
  id: MaxVerPages
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: MaxVerPages
  nameWithType: LocalEseStoreSettings.MaxVerPages
  fullName: System.Fabric.LocalEseStoreSettings.MaxVerPages
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxVerPages
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 87
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Maps directly to JET_paramMaxVerPages on the local ESE store.\n</p>\n"
  example: []
  syntax:
    content: public int MaxVerPages { get; set; }
    content.vb: Public Property MaxVerPages As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum number of allowed version pages.</p>\n"
  overload: System.Fabric.LocalEseStoreSettings.MaxVerPages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.MaxCacheSizeInMB
  commentId: P:System.Fabric.LocalEseStoreSettings.MaxCacheSizeInMB
  id: MaxCacheSizeInMB
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: MaxCacheSizeInMB
  nameWithType: LocalEseStoreSettings.MaxCacheSizeInMB
  fullName: System.Fabric.LocalEseStoreSettings.MaxCacheSizeInMB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxCacheSizeInMB
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 95
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nMaps directly to JET_paramCacheSizeMax on the local ESE store.\n"
  example: []
  syntax:
    content: public int MaxCacheSizeInMB { get; set; }
    content.vb: Public Property MaxCacheSizeInMB As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nReturns the maximum database cache size in MB.\n"
  overload: System.Fabric.LocalEseStoreSettings.MaxCacheSizeInMB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.MaxDefragFrequencyInMinutes
  commentId: P:System.Fabric.LocalEseStoreSettings.MaxDefragFrequencyInMinutes
  id: MaxDefragFrequencyInMinutes
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: MaxDefragFrequencyInMinutes
  nameWithType: LocalEseStoreSettings.MaxDefragFrequencyInMinutes
  fullName: System.Fabric.LocalEseStoreSettings.MaxDefragFrequencyInMinutes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxDefragFrequencyInMinutes
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 103
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets or sets a value indicating the frequency of periodic online defragmentation.\n"
  example: []
  syntax:
    content: public int MaxDefragFrequencyInMinutes { get; set; }
    content.vb: Public Property MaxDefragFrequencyInMinutes As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nReturns the frequency in minutes.\n"
  overload: System.Fabric.LocalEseStoreSettings.MaxDefragFrequencyInMinutes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.DefragThresholdInMB
  commentId: P:System.Fabric.LocalEseStoreSettings.DefragThresholdInMB
  id: DefragThresholdInMB
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: DefragThresholdInMB
  nameWithType: LocalEseStoreSettings.DefragThresholdInMB
  fullName: System.Fabric.LocalEseStoreSettings.DefragThresholdInMB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DefragThresholdInMB
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 111
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets or sets a value indicating the minimum logical size of a database for online defragmentation to occur the background.\n"
  example: []
  syntax:
    content: public int DefragThresholdInMB { get; set; }
    content.vb: Public Property DefragThresholdInMB As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nReturns the threshold in MB.\n"
  overload: System.Fabric.LocalEseStoreSettings.DefragThresholdInMB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.CompactionThresholdInMB
  commentId: P:System.Fabric.LocalEseStoreSettings.CompactionThresholdInMB
  id: CompactionThresholdInMB
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: CompactionThresholdInMB
  nameWithType: LocalEseStoreSettings.CompactionThresholdInMB
  fullName: System.Fabric.LocalEseStoreSettings.CompactionThresholdInMB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CompactionThresholdInMB
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 119
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets or sets a value indicating the minimum file size of a database for offline compaction to occur during open.\n"
  example: []
  syntax:
    content: public int CompactionThresholdInMB { get; set; }
    content.vb: Public Property CompactionThresholdInMB As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nReturns the threshold in MB.\n"
  overload: System.Fabric.LocalEseStoreSettings.CompactionThresholdInMB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.IntrinsicValueThresholdInBytes
  commentId: P:System.Fabric.LocalEseStoreSettings.IntrinsicValueThresholdInBytes
  id: IntrinsicValueThresholdInBytes
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: IntrinsicValueThresholdInBytes
  nameWithType: LocalEseStoreSettings.IntrinsicValueThresholdInBytes
  fullName: System.Fabric.LocalEseStoreSettings.IntrinsicValueThresholdInBytes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IntrinsicValueThresholdInBytes
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 127
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets or sets a value indicating the maximum value size at which updates will occur with the JET_bitSetIntrinsicLV flag. Setting this to a non-positive value will use the ESE default of 1024 bytes.\n"
  example: []
  syntax:
    content: public int IntrinsicValueThresholdInBytes { get; set; }
    content.vb: Public Property IntrinsicValueThresholdInBytes As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nReturns the threshold in bytes.\n"
  overload: System.Fabric.LocalEseStoreSettings.IntrinsicValueThresholdInBytes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.DatabasePageSizeInKB
  commentId: P:System.Fabric.LocalEseStoreSettings.DatabasePageSizeInKB
  id: DatabasePageSizeInKB
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: DatabasePageSizeInKB
  nameWithType: LocalEseStoreSettings.DatabasePageSizeInKB
  fullName: System.Fabric.LocalEseStoreSettings.DatabasePageSizeInKB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DatabasePageSizeInKB
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 138
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nMaps directly to JET_paramDatabasePageSize on the local ESE store.\n"
  remarks: "\nThe specified database page size is only applied to newly created databases. Existing databases will continue to use the database page sizes they were created with if different from this setting.\n"
  example: []
  syntax:
    content: public int DatabasePageSizeInKB { get; set; }
    content.vb: Public Property DatabasePageSizeInKB As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nReturns the database page size in KB.\n"
  overload: System.Fabric.LocalEseStoreSettings.DatabasePageSizeInKB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.MaxAsyncCommitDelay
  commentId: P:System.Fabric.LocalEseStoreSettings.MaxAsyncCommitDelay
  id: MaxAsyncCommitDelay
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: MaxAsyncCommitDelay
  nameWithType: LocalEseStoreSettings.MaxAsyncCommitDelay
  fullName: System.Fabric.LocalEseStoreSettings.MaxAsyncCommitDelay
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxAsyncCommitDelay
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 147
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Maps directly to the cmsecDurableCommit parameter on the JetCommitTransaction2() ESE API calls when local commits are performed.\n</p>\n"
  example: []
  syntax:
    content: public TimeSpan MaxAsyncCommitDelay { get; set; }
    content.vb: Public Property MaxAsyncCommitDelay As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The durable lazy commit duration.</p>\n"
  overload: System.Fabric.LocalEseStoreSettings.MaxAsyncCommitDelay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup
  commentId: P:System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup
  id: EnableIncrementalBackup
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: EnableIncrementalBackup
  nameWithType: LocalEseStoreSettings.EnableIncrementalBackup
  fullName: System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EnableIncrementalBackup
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 155
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets a value indicating whether the incremental backup feature is enabled for use.</p>\n"
  example: []
  syntax:
    content: public bool EnableIncrementalBackup { get; set; }
    content.vb: Public Property EnableIncrementalBackup As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\nReturns <strong>true</strong> if incremental backup is enabled; otherwise, <languageKeywork>false</languageKeywork>.\n"
  overload: System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.LocalEseStoreSettings.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
  commentId: M:System.Fabric.LocalEseStoreSettings.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
  id: LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
  parent: System.Fabric.LocalEseStoreSettings
  langs:
  - csharp
  - vb
  name: LoadFrom(CodePackageActivationContext, String, String)
  nameWithType: LocalEseStoreSettings.LoadFrom(CodePackageActivationContext, String, String)
  fullName: System.Fabric.LocalEseStoreSettings.LoadFrom(System.Fabric.CodePackageActivationContext, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LoadFrom
    path: src/prod/src/managed/Api/src/System/Fabric/LocalEseStoreSettings.cs
    startLine: 164
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nConvenience method to create an instance of this class initialized with property values loaded from the application configuration package.\n"
  example: []
  syntax:
    content: public static LocalEseStoreSettings LoadFrom(CodePackageActivationContext codePackageActivationContext, string configPackageName, string sectionName)
    content.vb: Public Shared Function LoadFrom(codePackageActivationContext As CodePackageActivationContext, configPackageName As String, sectionName As String) As LocalEseStoreSettings
    parameters:
    - id: codePackageActivationContext
      type: System.Fabric.CodePackageActivationContext
      description: The activation context under which this code is running. Retrieved from <xref href="System.Fabric.FabricRuntime" data-throw-if-not-resolved="false"></xref>.
    - id: configPackageName
      type: System.String
      description: The name of the configuration package (specified in the Service Manifest) containing the settings to load.
    - id: sectionName
      type: System.String
      description: The name of the section in Settings.xml within the specified configuration package containing the settings to load.
    return:
      type: System.Fabric.LocalEseStoreSettings
      description: The initialized settings object.
  overload: System.Fabric.LocalEseStoreSettings.LoadFrom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.LocalStoreSettings
  commentId: T:System.Fabric.LocalStoreSettings
  parent: System.Fabric
  isExternal: false
  name: LocalStoreSettings
  nameWithType: LocalStoreSettings
  fullName: System.Fabric.LocalStoreSettings
- uid: System.Fabric.LocalStoreSettings.StoreKind
  commentId: P:System.Fabric.LocalStoreSettings.StoreKind
  parent: System.Fabric.LocalStoreSettings
  isExternal: false
  name: StoreKind
  nameWithType: LocalStoreSettings.StoreKind
  fullName: System.Fabric.LocalStoreSettings.StoreKind
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.LocalEseStoreSettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<LocalEseStoreSettings>()
  nameWithType: ByteArraySerializer.Serialize<LocalEseStoreSettings>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.LocalEseStoreSettings>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of LocalEseStoreSettings)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.LocalEseStoreSettings)()
  name.vb: Serialize(Of LocalEseStoreSettings)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<LocalEseStoreSettings>
    nameWithType: ByteArraySerializer.Serialize<LocalEseStoreSettings>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.LocalEseStoreSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of LocalEseStoreSettings)
    nameWithType: ByteArraySerializer.Serialize(Of LocalEseStoreSettings)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.LocalEseStoreSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.LocalEseStoreSettings
  commentId: T:System.Fabric.LocalEseStoreSettings
  parent: System.Fabric
  isExternal: false
  name: LocalEseStoreSettings
  nameWithType: LocalEseStoreSettings
  fullName: System.Fabric.LocalEseStoreSettings
- uid: System.Fabric.LocalEseStoreSettings.#ctor*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.#ctor
  isExternal: false
  name: LocalEseStoreSettings
  nameWithType: LocalEseStoreSettings.LocalEseStoreSettings
  fullName: System.Fabric.LocalEseStoreSettings.LocalEseStoreSettings
- uid: System.Fabric.LocalEseStoreSettings.DbFolderPath*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.DbFolderPath
  isExternal: false
  name: DbFolderPath
  nameWithType: LocalEseStoreSettings.DbFolderPath
  fullName: System.Fabric.LocalEseStoreSettings.DbFolderPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.LocalEseStoreSettings.LogFileSizeInKB*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.LogFileSizeInKB
  isExternal: false
  name: LogFileSizeInKB
  nameWithType: LocalEseStoreSettings.LogFileSizeInKB
  fullName: System.Fabric.LocalEseStoreSettings.LogFileSizeInKB
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Fabric.LocalEseStoreSettings.LogBufferSizeInKB*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.LogBufferSizeInKB
  isExternal: false
  name: LogBufferSizeInKB
  nameWithType: LocalEseStoreSettings.LogBufferSizeInKB
  fullName: System.Fabric.LocalEseStoreSettings.LogBufferSizeInKB
- uid: System.Fabric.LocalEseStoreSettings.MaxCursors*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.MaxCursors
  isExternal: false
  name: MaxCursors
  nameWithType: LocalEseStoreSettings.MaxCursors
  fullName: System.Fabric.LocalEseStoreSettings.MaxCursors
- uid: System.Fabric.LocalEseStoreSettings.MaxVerPages*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.MaxVerPages
  isExternal: false
  name: MaxVerPages
  nameWithType: LocalEseStoreSettings.MaxVerPages
  fullName: System.Fabric.LocalEseStoreSettings.MaxVerPages
- uid: System.Fabric.LocalEseStoreSettings.MaxCacheSizeInMB*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.MaxCacheSizeInMB
  isExternal: false
  name: MaxCacheSizeInMB
  nameWithType: LocalEseStoreSettings.MaxCacheSizeInMB
  fullName: System.Fabric.LocalEseStoreSettings.MaxCacheSizeInMB
- uid: System.Fabric.LocalEseStoreSettings.MaxDefragFrequencyInMinutes*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.MaxDefragFrequencyInMinutes
  isExternal: false
  name: MaxDefragFrequencyInMinutes
  nameWithType: LocalEseStoreSettings.MaxDefragFrequencyInMinutes
  fullName: System.Fabric.LocalEseStoreSettings.MaxDefragFrequencyInMinutes
- uid: System.Fabric.LocalEseStoreSettings.DefragThresholdInMB*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.DefragThresholdInMB
  isExternal: false
  name: DefragThresholdInMB
  nameWithType: LocalEseStoreSettings.DefragThresholdInMB
  fullName: System.Fabric.LocalEseStoreSettings.DefragThresholdInMB
- uid: System.Fabric.LocalEseStoreSettings.CompactionThresholdInMB*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.CompactionThresholdInMB
  isExternal: false
  name: CompactionThresholdInMB
  nameWithType: LocalEseStoreSettings.CompactionThresholdInMB
  fullName: System.Fabric.LocalEseStoreSettings.CompactionThresholdInMB
- uid: System.Fabric.LocalEseStoreSettings.IntrinsicValueThresholdInBytes*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.IntrinsicValueThresholdInBytes
  isExternal: false
  name: IntrinsicValueThresholdInBytes
  nameWithType: LocalEseStoreSettings.IntrinsicValueThresholdInBytes
  fullName: System.Fabric.LocalEseStoreSettings.IntrinsicValueThresholdInBytes
- uid: System.Fabric.LocalEseStoreSettings.DatabasePageSizeInKB*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.DatabasePageSizeInKB
  isExternal: false
  name: DatabasePageSizeInKB
  nameWithType: LocalEseStoreSettings.DatabasePageSizeInKB
  fullName: System.Fabric.LocalEseStoreSettings.DatabasePageSizeInKB
- uid: System.Fabric.LocalEseStoreSettings.MaxAsyncCommitDelay*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.MaxAsyncCommitDelay
  isExternal: false
  name: MaxAsyncCommitDelay
  nameWithType: LocalEseStoreSettings.MaxAsyncCommitDelay
  fullName: System.Fabric.LocalEseStoreSettings.MaxAsyncCommitDelay
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup
  isExternal: false
  name: EnableIncrementalBackup
  nameWithType: LocalEseStoreSettings.EnableIncrementalBackup
  fullName: System.Fabric.LocalEseStoreSettings.EnableIncrementalBackup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.FabricRuntime
  commentId: T:System.Fabric.FabricRuntime
  parent: System.Fabric
  isExternal: false
  name: FabricRuntime
  nameWithType: FabricRuntime
  fullName: System.Fabric.FabricRuntime
- uid: System.Fabric.LocalEseStoreSettings.LoadFrom*
  commentId: Overload:System.Fabric.LocalEseStoreSettings.LoadFrom
  isExternal: false
  name: LoadFrom
  nameWithType: LocalEseStoreSettings.LoadFrom
  fullName: System.Fabric.LocalEseStoreSettings.LoadFrom
- uid: System.Fabric.CodePackageActivationContext
  commentId: T:System.Fabric.CodePackageActivationContext
  parent: System.Fabric
  isExternal: false
  name: CodePackageActivationContext
  nameWithType: CodePackageActivationContext
  fullName: System.Fabric.CodePackageActivationContext
