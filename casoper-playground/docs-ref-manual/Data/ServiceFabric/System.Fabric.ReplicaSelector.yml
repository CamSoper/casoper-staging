### YamlMime:ManagedReference
items:
- uid: System.Fabric.ReplicaSelector
  commentId: T:System.Fabric.ReplicaSelector
  id: ReplicaSelector
  parent: System.Fabric
  children:
  - System.Fabric.ReplicaSelector.Equals(System.Object)
  - System.Fabric.ReplicaSelector.GetHashCode
  - System.Fabric.ReplicaSelector.PartitionSelector
  - System.Fabric.ReplicaSelector.PrimaryOf(System.Fabric.PartitionSelector)
  - System.Fabric.ReplicaSelector.RandomOf(System.Fabric.PartitionSelector)
  - System.Fabric.ReplicaSelector.RandomSecondaryOf(System.Fabric.PartitionSelector)
  - System.Fabric.ReplicaSelector.ReplicaIdOf(System.Fabric.PartitionSelector,System.Int64)
  - System.Fabric.ReplicaSelector.ToString
  langs:
  - csharp
  - vb
  name: ReplicaSelector
  nameWithType: ReplicaSelector
  fullName: System.Fabric.ReplicaSelector
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaSelector
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
    startLine: 18
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nThis is a helper class for selecting replicas. \n"
  remarks: "\nIt allows the user to select replicas to be targeted by the testability APIs. \nThe selection can be a particular replica of a partition based on the ReplicaId or Role or a random replica of the partition.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class ReplicaSelector
    content.vb: >-
      <Serializable>

      Public Class ReplicaSelector
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.ReplicaSelector.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.ReplicaSelector.PartitionSelector
  commentId: P:System.Fabric.ReplicaSelector.PartitionSelector
  id: PartitionSelector
  parent: System.Fabric.ReplicaSelector
  langs:
  - csharp
  - vb
  name: PartitionSelector
  nameWithType: ReplicaSelector.PartitionSelector
  fullName: System.Fabric.ReplicaSelector.PartitionSelector
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionSelector
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
    startLine: 79
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nThe PartitionSelector specifying the partition for which the replica is being selected by the ReplicaSelector.\n"
  example: []
  syntax:
    content: public PartitionSelector PartitionSelector { get; }
    content.vb: Public ReadOnly Property PartitionSelector As PartitionSelector
    parameters: []
    return:
      type: System.Fabric.PartitionSelector
      description: The PartitionSelector object.
  overload: System.Fabric.ReplicaSelector.PartitionSelector*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ReplicaSelector.RandomOf(System.Fabric.PartitionSelector)
  commentId: M:System.Fabric.ReplicaSelector.RandomOf(System.Fabric.PartitionSelector)
  id: RandomOf(System.Fabric.PartitionSelector)
  parent: System.Fabric.ReplicaSelector
  langs:
  - csharp
  - vb
  name: RandomOf(PartitionSelector)
  nameWithType: ReplicaSelector.RandomOf(PartitionSelector)
  fullName: System.Fabric.ReplicaSelector.RandomOf(System.Fabric.PartitionSelector)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RandomOf
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
    startLine: 92
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nSelects a random replica for the given partition specified by the PartitionSelector.\n"
  example: []
  syntax:
    content: public static ReplicaSelector RandomOf(PartitionSelector partitionSelector)
    content.vb: Public Shared Function RandomOf(partitionSelector As PartitionSelector) As ReplicaSelector
    parameters:
    - id: partitionSelector
      type: System.Fabric.PartitionSelector
      description: PartitionSelector which indicates the partition whose replica needs to be selected.
    return:
      type: System.Fabric.ReplicaSelector
      description: Constructed ReplicaSelector.
  overload: System.Fabric.ReplicaSelector.RandomOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.ReplicaSelector.PrimaryOf(System.Fabric.PartitionSelector)
  commentId: M:System.Fabric.ReplicaSelector.PrimaryOf(System.Fabric.PartitionSelector)
  id: PrimaryOf(System.Fabric.PartitionSelector)
  parent: System.Fabric.ReplicaSelector
  langs:
  - csharp
  - vb
  name: PrimaryOf(PartitionSelector)
  nameWithType: ReplicaSelector.PrimaryOf(PartitionSelector)
  fullName: System.Fabric.ReplicaSelector.PrimaryOf(System.Fabric.PartitionSelector)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PrimaryOf
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
    startLine: 102
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nSelects the primary replica for the given partition specified by the PartitionSelector.\n"
  example: []
  syntax:
    content: public static ReplicaSelector PrimaryOf(PartitionSelector partitionSelector)
    content.vb: Public Shared Function PrimaryOf(partitionSelector As PartitionSelector) As ReplicaSelector
    parameters:
    - id: partitionSelector
      type: System.Fabric.PartitionSelector
      description: PartitionSelector which indicates the partition whose replica needs to be selected.
    return:
      type: System.Fabric.ReplicaSelector
      description: Constructed ReplicaSelector.
  overload: System.Fabric.ReplicaSelector.PrimaryOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.ReplicaSelector.RandomSecondaryOf(System.Fabric.PartitionSelector)
  commentId: M:System.Fabric.ReplicaSelector.RandomSecondaryOf(System.Fabric.PartitionSelector)
  id: RandomSecondaryOf(System.Fabric.PartitionSelector)
  parent: System.Fabric.ReplicaSelector
  langs:
  - csharp
  - vb
  name: RandomSecondaryOf(PartitionSelector)
  nameWithType: ReplicaSelector.RandomSecondaryOf(PartitionSelector)
  fullName: System.Fabric.ReplicaSelector.RandomSecondaryOf(System.Fabric.PartitionSelector)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RandomSecondaryOf
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
    startLine: 112
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nSelects a random secondary replica for the given partition specified by the PartitionSelector.\n"
  example: []
  syntax:
    content: public static ReplicaSelector RandomSecondaryOf(PartitionSelector partitionSelector)
    content.vb: Public Shared Function RandomSecondaryOf(partitionSelector As PartitionSelector) As ReplicaSelector
    parameters:
    - id: partitionSelector
      type: System.Fabric.PartitionSelector
      description: PartitionSelector which indicates the partition whose replica needs to be selected.
    return:
      type: System.Fabric.ReplicaSelector
      description: Constructed ReplicaSelector.
  overload: System.Fabric.ReplicaSelector.RandomSecondaryOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.ReplicaSelector.ReplicaIdOf(System.Fabric.PartitionSelector,System.Int64)
  commentId: M:System.Fabric.ReplicaSelector.ReplicaIdOf(System.Fabric.PartitionSelector,System.Int64)
  id: ReplicaIdOf(System.Fabric.PartitionSelector,System.Int64)
  parent: System.Fabric.ReplicaSelector
  langs:
  - csharp
  - vb
  name: ReplicaIdOf(PartitionSelector, Int64)
  nameWithType: ReplicaSelector.ReplicaIdOf(PartitionSelector, Int64)
  fullName: System.Fabric.ReplicaSelector.ReplicaIdOf(System.Fabric.PartitionSelector, System.Int64)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaIdOf
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
    startLine: 123
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nSelects a replica based on the ReplicaId for the given partition specified by the PartitionSelector.\n"
  example: []
  syntax:
    content: public static ReplicaSelector ReplicaIdOf(PartitionSelector partitionSelector, long replicaOrInstanceId)
    content.vb: Public Shared Function ReplicaIdOf(partitionSelector As PartitionSelector, replicaOrInstanceId As Long) As ReplicaSelector
    parameters:
    - id: partitionSelector
      type: System.Fabric.PartitionSelector
      description: PartitionSelector which indicates the partition whose replica needs to be selected.
    - id: replicaOrInstanceId
      type: System.Int64
      description: ReplicaOrInstanceId for the replica or instance to be selected.
    return:
      type: System.Fabric.ReplicaSelector
      description: 'A <xref href="System.Fabric.ReplicaSelector" data-throw-if-not-resolved="false"></xref> based on the input passed in. '
  overload: System.Fabric.ReplicaSelector.ReplicaIdOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.ReplicaSelector.Equals(System.Object)
  commentId: M:System.Fabric.ReplicaSelector.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Fabric.ReplicaSelector
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ReplicaSelector.Equals(Object)
  fullName: System.Fabric.ReplicaSelector.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Equals
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
    startLine: 134
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nCompares whether two ReplicaSelectors are the same.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: ReplicaSelector to compare to.
    return:
      type: System.Boolean
      description: true if same false if not.
  overridden: System.Object.Equals(System.Object)
  overload: System.Fabric.ReplicaSelector.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Fabric.ReplicaSelector.GetHashCode
  commentId: M:System.Fabric.ReplicaSelector.GetHashCode
  id: GetHashCode
  parent: System.Fabric.ReplicaSelector
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ReplicaSelector.GetHashCode()
  fullName: System.Fabric.ReplicaSelector.GetHashCode()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetHashCode
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
    startLine: 157
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nCalls the base GetHashCode()\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: ''
  overridden: System.Object.GetHashCode
  overload: System.Fabric.ReplicaSelector.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Fabric.ReplicaSelector.ToString
  commentId: M:System.Fabric.ReplicaSelector.ToString
  id: ToString
  parent: System.Fabric.ReplicaSelector
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ReplicaSelector.ToString()
  fullName: System.Fabric.ReplicaSelector.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaSelector.cs
    startLine: 166
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nString representation of the replica selector.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the selector.
  overridden: System.Object.ToString
  overload: System.Fabric.ReplicaSelector.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReplicaSelector.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ReplicaSelector>()
  nameWithType: ByteArraySerializer.Serialize<ReplicaSelector>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ReplicaSelector>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ReplicaSelector)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ReplicaSelector)()
  name.vb: Serialize(Of ReplicaSelector)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ReplicaSelector>
    nameWithType: ByteArraySerializer.Serialize<ReplicaSelector>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ReplicaSelector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ReplicaSelector)
    nameWithType: ByteArraySerializer.Serialize(Of ReplicaSelector)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ReplicaSelector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.ReplicaSelector.PartitionSelector*
  commentId: Overload:System.Fabric.ReplicaSelector.PartitionSelector
  isExternal: false
  name: PartitionSelector
  nameWithType: ReplicaSelector.PartitionSelector
  fullName: System.Fabric.ReplicaSelector.PartitionSelector
- uid: System.Fabric.PartitionSelector
  commentId: T:System.Fabric.PartitionSelector
  parent: System.Fabric
  isExternal: false
  name: PartitionSelector
  nameWithType: PartitionSelector
  fullName: System.Fabric.PartitionSelector
- uid: System.Fabric.ReplicaSelector.RandomOf*
  commentId: Overload:System.Fabric.ReplicaSelector.RandomOf
  isExternal: false
  name: RandomOf
  nameWithType: ReplicaSelector.RandomOf
  fullName: System.Fabric.ReplicaSelector.RandomOf
- uid: System.Fabric.ReplicaSelector
  commentId: T:System.Fabric.ReplicaSelector
  parent: System.Fabric
  isExternal: false
  name: ReplicaSelector
  nameWithType: ReplicaSelector
  fullName: System.Fabric.ReplicaSelector
- uid: System.Fabric.ReplicaSelector.PrimaryOf*
  commentId: Overload:System.Fabric.ReplicaSelector.PrimaryOf
  isExternal: false
  name: PrimaryOf
  nameWithType: ReplicaSelector.PrimaryOf
  fullName: System.Fabric.ReplicaSelector.PrimaryOf
- uid: System.Fabric.ReplicaSelector.RandomSecondaryOf*
  commentId: Overload:System.Fabric.ReplicaSelector.RandomSecondaryOf
  isExternal: false
  name: RandomSecondaryOf
  nameWithType: ReplicaSelector.RandomSecondaryOf
  fullName: System.Fabric.ReplicaSelector.RandomSecondaryOf
- uid: System.Fabric.ReplicaSelector.ReplicaIdOf*
  commentId: Overload:System.Fabric.ReplicaSelector.ReplicaIdOf
  isExternal: false
  name: ReplicaIdOf
  nameWithType: ReplicaSelector.ReplicaIdOf
  fullName: System.Fabric.ReplicaSelector.ReplicaIdOf
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReplicaSelector.Equals*
  commentId: Overload:System.Fabric.ReplicaSelector.Equals
  isExternal: false
  name: Equals
  nameWithType: ReplicaSelector.Equals
  fullName: System.Fabric.ReplicaSelector.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReplicaSelector.GetHashCode*
  commentId: Overload:System.Fabric.ReplicaSelector.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: ReplicaSelector.GetHashCode
  fullName: System.Fabric.ReplicaSelector.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReplicaSelector.ToString*
  commentId: Overload:System.Fabric.ReplicaSelector.ToString
  isExternal: false
  name: ToString
  nameWithType: ReplicaSelector.ToString
  fullName: System.Fabric.ReplicaSelector.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
