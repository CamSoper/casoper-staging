### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime
  commentId: T:Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime
  id: ServiceRuntime
  parent: Microsoft.ServiceFabric.Services.Runtime
  children:
  - Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync(System.String,System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase},System.TimeSpan,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync(System.String,System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatelessService},System.TimeSpan,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ServiceRuntime
  nameWithType: ServiceRuntime
  fullName: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/ServiceRuntime.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceRuntime
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/ServiceRuntime.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nStatic class that provides methods to resister reliable services with Service Fabric runtime.\n"
  example: []
  syntax:
    content: public static class ServiceRuntime
    content.vb: Public Module ServiceRuntime
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync(System.String,System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatelessService},System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync(System.String,System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatelessService},System.TimeSpan,System.Threading.CancellationToken)
  id: RegisterServiceAsync(System.String,System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatelessService},System.TimeSpan,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime
  langs:
  - csharp
  - vb
  name: RegisterServiceAsync(String, Func<StatelessServiceContext, StatelessService>, TimeSpan, CancellationToken)
  nameWithType: ServiceRuntime.RegisterServiceAsync(String, Func<StatelessServiceContext, StatelessService>, TimeSpan, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync(System.String, System.Func<System.Fabric.StatelessServiceContext, Microsoft.ServiceFabric.Services.Runtime.StatelessService>, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/ServiceRuntime.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RegisterServiceAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/ServiceRuntime.cs
    startLine: 27
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nRegisters a reliable stateless service with Service Fabric runtime.\n"
  example: []
  syntax:
    content: public static Task RegisterServiceAsync(string serviceTypeName, Func<StatelessServiceContext, StatelessService> serviceFactory, TimeSpan timeout = null, CancellationToken cancellationToken = null)
    content.vb: Public Shared Function RegisterServiceAsync(serviceTypeName As String, serviceFactory As Func(Of StatelessServiceContext, StatelessService), timeout As TimeSpan = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: serviceTypeName
      type: System.String
      description: ServiceTypeName as provied in service manifest.
    - id: serviceFactory
      type: System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatelessService}
      description: A factory method to create stateless service objects.
    - id: timeout
      type: System.TimeSpan
      description: Timeout for the register operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA task that represents the asynchronous register operation.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync*
  nameWithType.vb: ServiceRuntime.RegisterServiceAsync(String, Func(Of StatelessServiceContext, StatelessService), TimeSpan, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync(System.String, System.Func(Of System.Fabric.StatelessServiceContext, Microsoft.ServiceFabric.Services.Runtime.StatelessService), System.TimeSpan, System.Threading.CancellationToken)
  name.vb: RegisterServiceAsync(String, Func(Of StatelessServiceContext, StatelessService), TimeSpan, CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync(System.String,System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase},System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync(System.String,System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase},System.TimeSpan,System.Threading.CancellationToken)
  id: RegisterServiceAsync(System.String,System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase},System.TimeSpan,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime
  langs:
  - csharp
  - vb
  name: RegisterServiceAsync(String, Func<StatefulServiceContext, StatefulServiceBase>, TimeSpan, CancellationToken)
  nameWithType: ServiceRuntime.RegisterServiceAsync(String, Func<StatefulServiceContext, StatefulServiceBase>, TimeSpan, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync(System.String, System.Func<System.Fabric.StatefulServiceContext, Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase>, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/ServiceRuntime.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RegisterServiceAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/ServiceRuntime.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nRegisters a reliable stateful service with Service Fabric runtime.\n"
  example: []
  syntax:
    content: public static Task RegisterServiceAsync(string serviceTypeName, Func<StatefulServiceContext, StatefulServiceBase> serviceFactory, TimeSpan timeout = null, CancellationToken cancellationToken = null)
    content.vb: Public Shared Function RegisterServiceAsync(serviceTypeName As String, serviceFactory As Func(Of StatefulServiceContext, StatefulServiceBase), timeout As TimeSpan = Nothing, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: serviceTypeName
      type: System.String
      description: ServiceTypeName as provied in service manifest.
    - id: serviceFactory
      type: System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase}
      description: A factory method to create stateful service objects.
    - id: timeout
      type: System.TimeSpan
      description: Timeout for the register operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA task that represents the asynchronous register operation.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync*
  nameWithType.vb: ServiceRuntime.RegisterServiceAsync(String, Func(Of StatefulServiceContext, StatefulServiceBase), TimeSpan, CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync(System.String, System.Func(Of System.Fabric.StatefulServiceContext, Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase), System.TimeSpan, System.Threading.CancellationToken)
  name.vb: RegisterServiceAsync(String, Func(Of StatefulServiceContext, StatefulServiceBase), TimeSpan, CancellationToken)
references:
- uid: Microsoft.ServiceFabric.Services.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Runtime
  fullName: Microsoft.ServiceFabric.Services.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync
  isExternal: false
  name: RegisterServiceAsync
  nameWithType: ServiceRuntime.RegisterServiceAsync
  fullName: Microsoft.ServiceFabric.Services.Runtime.ServiceRuntime.RegisterServiceAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatelessService}
  commentId: T:System.Func{System.Fabric.StatelessServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatelessService}
  parent: System
  definition: System.Func`2
  name: Func<StatelessServiceContext, StatelessService>
  nameWithType: Func<StatelessServiceContext, StatelessService>
  fullName: System.Func<System.Fabric.StatelessServiceContext, Microsoft.ServiceFabric.Services.Runtime.StatelessService>
  nameWithType.vb: Func(Of StatelessServiceContext, StatelessService)
  fullname.vb: System.Func(Of System.Fabric.StatelessServiceContext, Microsoft.ServiceFabric.Services.Runtime.StatelessService)
  name.vb: Func(Of StatelessServiceContext, StatelessService)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.StatelessServiceContext
    name: StatelessServiceContext
    nameWithType: StatelessServiceContext
    fullName: System.Fabric.StatelessServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService
    name: StatelessService
    nameWithType: StatelessService
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.StatelessServiceContext
    name: StatelessServiceContext
    nameWithType: StatelessServiceContext
    fullName: System.Fabric.StatelessServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService
    name: StatelessService
    nameWithType: StatelessService
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase}
  commentId: T:System.Func{System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase}
  parent: System
  definition: System.Func`2
  name: Func<StatefulServiceContext, StatefulServiceBase>
  nameWithType: Func<StatefulServiceContext, StatefulServiceBase>
  fullName: System.Func<System.Fabric.StatefulServiceContext, Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase>
  nameWithType.vb: Func(Of StatefulServiceContext, StatefulServiceBase)
  fullname.vb: System.Func(Of System.Fabric.StatefulServiceContext, Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase)
  name.vb: Func(Of StatefulServiceContext, StatefulServiceBase)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.StatefulServiceContext
    name: StatefulServiceContext
    nameWithType: StatefulServiceContext
    fullName: System.Fabric.StatefulServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
    name: StatefulServiceBase
    nameWithType: StatefulServiceBase
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.StatefulServiceContext
    name: StatefulServiceContext
    nameWithType: StatefulServiceContext
    fullName: System.Fabric.StatefulServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
    name: StatefulServiceBase
    nameWithType: StatefulServiceBase
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  - name: )
    nameWithType: )
    fullName: )
