### YamlMime:ManagedReference
items:
- uid: System.Fabric.IOperationDataStream
  commentId: T:System.Fabric.IOperationDataStream
  id: IOperationDataStream
  parent: System.Fabric
  children:
  - System.Fabric.IOperationDataStream.GetNextAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IOperationDataStream
  nameWithType: IOperationDataStream
  fullName: System.Fabric.IOperationDataStream
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/IOperationDataStream.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IOperationDataStream
    path: src/prod/src/managed/Api/src/System/Fabric/IOperationDataStream.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p> An <xref href=\"System.Fabric.IOperationDataStream\" data-throw-if-not-resolved=\"false\"></xref> \nencapsulates a stream of <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> objects that are exchanged between Primary replica and Secondary replica.\nObjects that implement <xref href=\"System.Fabric.IOperationDataStream\" data-throw-if-not-resolved=\"false\"></xref> are used during the copy process.\nBoth the copy context <xref href=\"System.Fabric.IStateProvider.GetCopyContext\" data-throw-if-not-resolved=\"false\"></xref> method that is sent from the Secondary replica to the Primary replica \nand the copy state <xref href=\"System.Fabric.IStateProvider.GetCopyState(System.Int64%2cSystem.Fabric.IOperationDataStream)\" data-throw-if-not-resolved=\"false\"></xref> method implement the <xref href=\"System.Fabric.IOperationDataStream\" data-throw-if-not-resolved=\"false\"></xref> \ninterface.</p>\n"
  example: []
  syntax:
    content: public interface IOperationDataStream
    content.vb: Public Interface IOperationDataStream
  extensionMethods:
  - System.Fabric.IOperationDataStream.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Fabric.IOperationDataStream.GetNextAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.IOperationDataStream.GetNextAsync(System.Threading.CancellationToken)
  id: GetNextAsync(System.Threading.CancellationToken)
  parent: System.Fabric.IOperationDataStream
  langs:
  - csharp
  - vb
  name: GetNextAsync(CancellationToken)
  nameWithType: IOperationDataStream.GetNextAsync(CancellationToken)
  fullName: System.Fabric.IOperationDataStream.GetNextAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/IOperationDataStream.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetNextAsync
    path: src/prod/src/managed/Api/src/System/Fabric/IOperationDataStream.cs
    startLine: 34
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the next <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref> object from the <xref href=\"System.Fabric.IOperationDataStream\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>\n    Returning null indicates to the system that the transfer is complete.</p>\n"
  example: []
  syntax:
    content: Task<OperationData> GetNextAsync(CancellationToken cancellationToken)
    content.vb: Function GetNextAsync(cancellationToken As CancellationToken) As Task(Of OperationData)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Provides a mechanism to cancel the asynchronous operation.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.OperationData}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref> of type <xref href=\"System.Fabric.OperationData\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.IOperationDataStream.GetNextAsync*
references:
- uid: System.Fabric.IOperationDataStream
  commentId: T:System.Fabric.IOperationDataStream
  parent: System.Fabric
  isExternal: false
  name: IOperationDataStream
  nameWithType: IOperationDataStream
  fullName: System.Fabric.IOperationDataStream
- uid: System.Fabric.OperationData
  commentId: T:System.Fabric.OperationData
  parent: System.Fabric
  isExternal: false
  name: OperationData
  nameWithType: OperationData
  fullName: System.Fabric.OperationData
- uid: System.Fabric.IStateProvider.GetCopyContext
  commentId: M:System.Fabric.IStateProvider.GetCopyContext
  parent: System.Fabric.IStateProvider
  isExternal: false
  name: GetCopyContext()
  nameWithType: IStateProvider.GetCopyContext()
  fullName: System.Fabric.IStateProvider.GetCopyContext()
  spec.csharp:
  - uid: System.Fabric.IStateProvider.GetCopyContext
    name: GetCopyContext
    nameWithType: IStateProvider.GetCopyContext
    fullName: System.Fabric.IStateProvider.GetCopyContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.IStateProvider.GetCopyContext
    name: GetCopyContext
    nameWithType: IStateProvider.GetCopyContext
    fullName: System.Fabric.IStateProvider.GetCopyContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.IStateProvider.GetCopyState(System.Int64,System.Fabric.IOperationDataStream)
  commentId: M:System.Fabric.IStateProvider.GetCopyState(System.Int64,System.Fabric.IOperationDataStream)
  parent: System.Fabric.IStateProvider
  isExternal: true
  name: GetCopyState(Int64, IOperationDataStream)
  nameWithType: IStateProvider.GetCopyState(Int64, IOperationDataStream)
  fullName: System.Fabric.IStateProvider.GetCopyState(System.Int64, System.Fabric.IOperationDataStream)
  spec.csharp:
  - uid: System.Fabric.IStateProvider.GetCopyState(System.Int64,System.Fabric.IOperationDataStream)
    name: GetCopyState
    nameWithType: IStateProvider.GetCopyState
    fullName: System.Fabric.IStateProvider.GetCopyState
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.IOperationDataStream
    name: IOperationDataStream
    nameWithType: IOperationDataStream
    fullName: System.Fabric.IOperationDataStream
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.IStateProvider.GetCopyState(System.Int64,System.Fabric.IOperationDataStream)
    name: GetCopyState
    nameWithType: IStateProvider.GetCopyState
    fullName: System.Fabric.IStateProvider.GetCopyState
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.IOperationDataStream
    name: IOperationDataStream
    nameWithType: IOperationDataStream
    fullName: System.Fabric.IOperationDataStream
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.IOperationDataStream.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IOperationDataStream>()
  nameWithType: ByteArraySerializer.Serialize<IOperationDataStream>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.IOperationDataStream>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IOperationDataStream)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.IOperationDataStream)()
  name.vb: Serialize(Of IOperationDataStream)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IOperationDataStream>
    nameWithType: ByteArraySerializer.Serialize<IOperationDataStream>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.IOperationDataStream>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IOperationDataStream)
    nameWithType: ByteArraySerializer.Serialize(Of IOperationDataStream)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.IOperationDataStream)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.IStateProvider
  commentId: T:System.Fabric.IStateProvider
  parent: System.Fabric
  isExternal: false
  name: IStateProvider
  nameWithType: IStateProvider
  fullName: System.Fabric.IStateProvider
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.IOperationDataStream.GetNextAsync*
  commentId: Overload:System.Fabric.IOperationDataStream.GetNextAsync
  isExternal: false
  name: GetNextAsync
  nameWithType: IOperationDataStream.GetNextAsync
  fullName: System.Fabric.IOperationDataStream.GetNextAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Fabric.OperationData}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.OperationData}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OperationData>
  nameWithType: Task<OperationData>
  fullName: System.Threading.Tasks.Task<System.Fabric.OperationData>
  nameWithType.vb: Task(Of OperationData)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.OperationData)
  name.vb: Task(Of OperationData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.OperationData
    name: OperationData
    nameWithType: OperationData
    fullName: System.Fabric.OperationData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.OperationData
    name: OperationData
    nameWithType: OperationData
    fullName: System.Fabric.OperationData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
