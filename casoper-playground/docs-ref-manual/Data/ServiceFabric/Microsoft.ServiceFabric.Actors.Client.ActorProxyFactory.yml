### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
  commentId: T:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
  id: ActorProxyFactory
  parent: Microsoft.ServiceFabric.Actors.Client
  children:
  - Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.#ctor(System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory},Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  - Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.String,System.String)
  - Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  - Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  - Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy``1(System.Uri,System.Int64,System.String)
  - Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateServiceRemotingClientFactory(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  langs:
  - csharp
  - vb
  name: ActorProxyFactory
  nameWithType: ActorProxyFactory
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorProxyFactory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
    startLine: 19
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Client
  summary: "\nFactory class to create a proxy to the remote actor objects.\n"
  example: []
  syntax:
    content: 'public class ActorProxyFactory : IActorProxyFactory'
    content.vb: >-
      Public Class ActorProxyFactory
          Implements IActorProxyFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.#ctor(System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory},Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  commentId: M:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.#ctor(System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory},Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  id: '#ctor(System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory},Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)'
  parent: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
  langs:
  - csharp
  - vb
  name: ActorProxyFactory(Func<IServiceRemotingCallbackClient, IServiceRemotingClientFactory>, OperationRetrySettings)
  nameWithType: ActorProxyFactory.ActorProxyFactory(Func<IServiceRemotingCallbackClient, IServiceRemotingClientFactory>, OperationRetrySettings)
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.ActorProxyFactory(System.Func<Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory>, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
    startLine: 31
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Client
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ActorProxyFactory(Func<IServiceRemotingCallbackClient, IServiceRemotingClientFactory> createServiceRemotingClientFactory = null, OperationRetrySettings retrySettings = null)
    content.vb: Public Sub New(createServiceRemotingClientFactory As Func(Of IServiceRemotingCallbackClient, IServiceRemotingClientFactory) = Nothing, retrySettings As OperationRetrySettings = Nothing)
    parameters:
    - id: createServiceRemotingClientFactory
      type: System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory}
      description: Factory method to create remoting communication client factor.y
    - id: retrySettings
      type: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
      description: Retry settings for the remote object calls  made by proxy.
  overload: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.#ctor*
  nameWithType.vb: ActorProxyFactory.ActorProxyFactory(Func(Of IServiceRemotingCallbackClient, IServiceRemotingClientFactory), OperationRetrySettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.ActorProxyFactory(System.Func(Of Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory), Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  name.vb: ActorProxyFactory(Func(Of IServiceRemotingCallbackClient, IServiceRemotingClientFactory), OperationRetrySettings)
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  id: CreateActorProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  parent: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
  langs:
  - csharp
  - vb
  name: CreateActorProxy<TActorInterface>(Uri, ActorId, String)
  nameWithType: ActorProxyFactory.CreateActorProxy<TActorInterface>(Uri, ActorId, String)
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy<TActorInterface>(System.Uri, Microsoft.ServiceFabric.Actors.ActorId, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateActorProxy
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
    startLine: 57
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Client
  summary: "\nCreates a proxy to the actor object that implements an actor interface.\n"
  example: []
  syntax:
    content: 'public TActorInterface CreateActorProxy<TActorInterface>(Uri serviceUri, ActorId actorId, string listenerName = null)where TActorInterface : IActor'
    content.vb: Public Function CreateActorProxy(Of TActorInterface As IActor)(serviceUri As Uri, actorId As ActorId, listenerName As String = Nothing) As TActorInterface
    parameters:
    - id: serviceUri
      type: System.Uri
      description: Uri of the actor service.
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: "Actor Id of the proxy actor object. Methods called on this proxy will result in requests \nbeing sent to the actor with this id."
    - id: listenerName
      type: System.String
      description: "\nBy default an actor service has only one listener for clients to connect to and communicate with.\nHowever it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.\n"
    typeParameters:
    - id: TActorInterface
      description: "\nThe actor interface implemented by the remote actor object. \nThe returned proxy object will implement this interface.\n"
    return:
      type: '{TActorInterface}'
      description: An actor proxy object that implements <xref href="Microsoft.ServiceFabric.Actors.Client.IActorProxy" data-throw-if-not-resolved="false"></xref> and TActorInterface.
  overload: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy*
  implements:
  - Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  nameWithType.vb: ActorProxyFactory.CreateActorProxy(Of TActorInterface)(Uri, ActorId, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy(Of TActorInterface)(System.Uri, Microsoft.ServiceFabric.Actors.ActorId, System.String)
  name.vb: CreateActorProxy(Of TActorInterface)(Uri, ActorId, String)
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.String,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.String,System.String)
  id: CreateActorProxy``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.String,System.String)
  parent: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
  langs:
  - csharp
  - vb
  name: CreateActorProxy<TActorInterface>(ActorId, String, String, String)
  nameWithType: ActorProxyFactory.CreateActorProxy<TActorInterface>(ActorId, String, String, String)
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy<TActorInterface>(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateActorProxy
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
    startLine: 98
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Client
  summary: "\nCreates a proxy to the actor object that implements an actor interface.\n"
  example: []
  syntax:
    content: 'public TActorInterface CreateActorProxy<TActorInterface>(ActorId actorId, string applicationName = null, string serviceName = null, string listenerName = null)where TActorInterface : IActor'
    content.vb: Public Function CreateActorProxy(Of TActorInterface As IActor)(actorId As ActorId, applicationName As String = Nothing, serviceName As String = Nothing, listenerName As String = Nothing) As TActorInterface
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: "Actor Id of the proxy actor object. Methods called on this proxy will result in requests \nbeing sent to the actor with this id."
    - id: applicationName
      type: System.String
      description: "\nName of the Service Fabric application that contains the actor service hosting the actor objects.\nThis parameter can be null if the client is running as part of that same Service Fabric application. For more information, see Remarks. \n"
    - id: serviceName
      type: System.String
      description: "\nName of the Service Fabric service as configured by <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute\" data-throw-if-not-resolved=\"false\"></xref> on the actor implementation.\nBy default, the name of the service is derived from the name of the actor interface. However <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute\" data-throw-if-not-resolved=\"false\"></xref>\nis required when an actor implements more than one actor interfaces or an actor interface derives from another actor interface as the determination of the \nserviceName cannot be made automatically.\n"
    - id: listenerName
      type: System.String
      description: "\nBy default an actor service has only one listener for clients to connect to and communicate with.\nHowever it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.\n"
    typeParameters:
    - id: TActorInterface
      description: "\nThe actor interface implemented by the remote actor object. \nThe returned proxy object will implement this interface.\n"
    return:
      type: '{TActorInterface}'
      description: An actor proxy object that implements <xref href="Microsoft.ServiceFabric.Actors.Client.IActorProxy" data-throw-if-not-resolved="false"></xref> and TActorInterface.
  overload: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy*
  implements:
  - Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.String,System.String)
  nameWithType.vb: ActorProxyFactory.CreateActorProxy(Of TActorInterface)(ActorId, String, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy(Of TActorInterface)(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.String, System.String)
  name.vb: CreateActorProxy(Of TActorInterface)(ActorId, String, String, String)
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  id: CreateActorServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  parent: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
  langs:
  - csharp
  - vb
  name: CreateActorServiceProxy<TServiceInterface>(Uri, ActorId, String)
  nameWithType: ActorProxyFactory.CreateActorServiceProxy<TServiceInterface>(Uri, ActorId, String)
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy<TServiceInterface>(System.Uri, Microsoft.ServiceFabric.Actors.ActorId, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateActorServiceProxy
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
    startLine: 124
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Client
  summary: "\nCreate a proxy to the actor service that is hosting the specified actor id and implementing specified type of the service interface.\n"
  example: []
  syntax:
    content: 'public TServiceInterface CreateActorServiceProxy<TServiceInterface>(Uri serviceUri, ActorId actorId, string listenerName = null)where TServiceInterface : IService'
    content.vb: Public Function CreateActorServiceProxy(Of TServiceInterface As IService)(serviceUri As Uri, actorId As ActorId, listenerName As String = Nothing) As TServiceInterface
    parameters:
    - id: serviceUri
      type: System.Uri
      description: Uri of the actor service to connect to.
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: Id of the actor. The created proxy will be connected to the partition of the actor service hosting actor with this id.
    - id: listenerName
      type: System.String
      description: "\nBy default an actor service has only one listener for clients to connect to and communicate with.\nHowever it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.\n"
    typeParameters:
    - id: TServiceInterface
      description: The service interface implemented by the actor service.
    return:
      type: '{TServiceInterface}'
      description: A service proxy object that implements <xref href="Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy" data-throw-if-not-resolved="false"></xref> and TServiceInterface.
  overload: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy*
  implements:
  - Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  nameWithType.vb: ActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)(Uri, ActorId, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)(System.Uri, Microsoft.ServiceFabric.Actors.ActorId, System.String)
  name.vb: CreateActorServiceProxy(Of TServiceInterface)(Uri, ActorId, String)
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy``1(System.Uri,System.Int64,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy``1(System.Uri,System.Int64,System.String)
  id: CreateActorServiceProxy``1(System.Uri,System.Int64,System.String)
  parent: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
  langs:
  - csharp
  - vb
  name: CreateActorServiceProxy<TServiceInterface>(Uri, Int64, String)
  nameWithType: ActorProxyFactory.CreateActorServiceProxy<TServiceInterface>(Uri, Int64, String)
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy<TServiceInterface>(System.Uri, System.Int64, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateActorServiceProxy
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
    startLine: 147
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Client
  summary: "\nCreate a proxy to the actor service that is hosting the specified actor id and implementing specified type of the service interface.\n"
  example: []
  syntax:
    content: 'public TServiceInterface CreateActorServiceProxy<TServiceInterface>(Uri serviceUri, long partitionKey, string listenerName = null)where TServiceInterface : IService'
    content.vb: Public Function CreateActorServiceProxy(Of TServiceInterface As IService)(serviceUri As Uri, partitionKey As Long, listenerName As String = Nothing) As TServiceInterface
    parameters:
    - id: serviceUri
      type: System.Uri
      description: Uri of the actor service to connect to.
    - id: partitionKey
      type: System.Int64
      description: The key of the actor service partition to connect to.
    - id: listenerName
      type: System.String
      description: "\nBy default an actor service has only one listener for clients to connect to and communicate with.\nHowever it is possible to configure an actor service with more than one listeners, the listenerName parameter specifies the name of the listener to connect to.\n"
    typeParameters:
    - id: TServiceInterface
      description: The service interface implemented by the actor service.
    return:
      type: '{TServiceInterface}'
      description: A service proxy object that implements <xref href="Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy" data-throw-if-not-resolved="false"></xref> and TServiceInterface.
  overload: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy*
  implements:
  - Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy``1(System.Uri,System.Int64,System.String)
  nameWithType.vb: ActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)(Uri, Int64, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)(System.Uri, System.Int64, System.String)
  name.vb: CreateActorServiceProxy(Of TServiceInterface)(Uri, Int64, String)
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateServiceRemotingClientFactory(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  commentId: M:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateServiceRemotingClientFactory(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  id: CreateServiceRemotingClientFactory(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  parent: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
  langs:
  - csharp
  - vb
  name: CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient)
  nameWithType: ActorProxyFactory.CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient)
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateServiceRemotingClientFactory(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateServiceRemotingClientFactory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Client/ActorProxyFactory.cs
    startLine: 200
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Client
  summary: "\nCreates service remoting client factory.\n"
  example: []
  syntax:
    content: protected virtual IServiceRemotingClientFactory CreateServiceRemotingClientFactory(IServiceRemotingCallbackClient callbackClient)
    content.vb: Protected Overridable Function CreateServiceRemotingClientFactory(callbackClient As IServiceRemotingCallbackClient) As IServiceRemotingClientFactory
    parameters:
    - id: callbackClient
      type: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
      description: Callback from the remoting listener to the client.
    return:
      type: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
      description: Created service remoting client factory as <xref href="Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateServiceRemotingClientFactory*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.ServiceFabric.Actors.Client
  commentId: N:Microsoft.ServiceFabric.Actors.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Client
  nameWithType: Microsoft.ServiceFabric.Actors.Client
  fullName: Microsoft.ServiceFabric.Actors.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory
  commentId: T:Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory
  parent: Microsoft.ServiceFabric.Actors.Client
  isExternal: false
  name: IActorProxyFactory
  nameWithType: IActorProxyFactory
  fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ActorProxyFactory>()
  nameWithType: ByteArraySerializer.Serialize<ActorProxyFactory>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ActorProxyFactory)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory)()
  name.vb: Serialize(Of ActorProxyFactory)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ActorProxyFactory>
    nameWithType: ByteArraySerializer.Serialize<ActorProxyFactory>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ActorProxyFactory)
    nameWithType: ByteArraySerializer.Serialize(Of ActorProxyFactory)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
  commentId: T:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
  isExternal: false
  name: ActorProxyFactory
  nameWithType: ActorProxyFactory
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.#ctor
  isExternal: false
  name: ActorProxyFactory
  nameWithType: ActorProxyFactory.ActorProxyFactory
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.ActorProxyFactory
- uid: System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory}
  commentId: T:System.Func{Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory}
  parent: System
  definition: System.Func`2
  name: Func<IServiceRemotingCallbackClient, IServiceRemotingClientFactory>
  nameWithType: Func<IServiceRemotingCallbackClient, IServiceRemotingClientFactory>
  fullName: System.Func<Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory>
  nameWithType.vb: Func(Of IServiceRemotingCallbackClient, IServiceRemotingClientFactory)
  fullname.vb: System.Func(Of Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory)
  name.vb: Func(Of IServiceRemotingCallbackClient, IServiceRemotingClientFactory)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
    name: IServiceRemotingCallbackClient
    nameWithType: IServiceRemotingCallbackClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
    name: IServiceRemotingClientFactory
    nameWithType: IServiceRemotingClientFactory
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
    name: IServiceRemotingCallbackClient
    nameWithType: IServiceRemotingCallbackClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
    name: IServiceRemotingClientFactory
    nameWithType: IServiceRemotingClientFactory
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: OperationRetrySettings
  nameWithType: OperationRetrySettings
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: Microsoft.ServiceFabric.Actors.Client.IActorProxy
  commentId: T:Microsoft.ServiceFabric.Actors.Client.IActorProxy
  parent: Microsoft.ServiceFabric.Actors.Client
  isExternal: false
  name: IActorProxy
  nameWithType: IActorProxy
  fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxy
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy
  isExternal: false
  name: CreateActorProxy<TActorInterface>
  nameWithType: ActorProxyFactory.CreateActorProxy<TActorInterface>
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy<TActorInterface>
  nameWithType.vb: ActorProxyFactory.CreateActorProxy(Of TActorInterface)
  fullname.vb: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorProxy(Of TActorInterface)
  name.vb: CreateActorProxy(Of TActorInterface)
- uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  parent: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory
  isExternal: true
  name: CreateActorProxy<TActorInterface>(Uri, ActorId, String)
  nameWithType: IActorProxyFactory.CreateActorProxy<TActorInterface>(Uri, ActorId, String)
  fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy<TActorInterface>(System.Uri, Microsoft.ServiceFabric.Actors.ActorId, System.String)
  nameWithType.vb: IActorProxyFactory.CreateActorProxy(Of TActorInterface)(Uri, ActorId, String)
  fullname.vb: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy(Of TActorInterface)(System.Uri, Microsoft.ServiceFabric.Actors.ActorId, System.String)
  name.vb: CreateActorProxy(Of TActorInterface)(Uri, ActorId, String)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
    name: CreateActorProxy<TActorInterface>
    nameWithType: IActorProxyFactory.CreateActorProxy<TActorInterface>
    fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy<TActorInterface>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
    name: CreateActorProxy(Of TActorInterface)
    nameWithType: IActorProxyFactory.CreateActorProxy(Of TActorInterface)
    fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy(Of TActorInterface)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.ServiceFabric.Actors.ActorId
  commentId: T:Microsoft.ServiceFabric.Actors.ActorId
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: ActorId
  nameWithType: ActorId
  fullName: Microsoft.ServiceFabric.Actors.ActorId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{TActorInterface}'
  commentId: '!:TActorInterface'
  definition: TActorInterface
  name: TActorInterface
  nameWithType: TActorInterface
  fullName: TActorInterface
- uid: Microsoft.ServiceFabric.Actors
  commentId: N:Microsoft.ServiceFabric.Actors
  isExternal: false
  name: Microsoft.ServiceFabric.Actors
  nameWithType: Microsoft.ServiceFabric.Actors
  fullName: Microsoft.ServiceFabric.Actors
- uid: TActorInterface
  isExternal: false
  name: TActorInterface
  nameWithType: TActorInterface
  fullName: TActorInterface
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute
  isExternal: false
  name: ActorServiceAttribute
  nameWithType: ActorServiceAttribute
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute
- uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.String,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.String,System.String)
  parent: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory
  isExternal: true
  name: CreateActorProxy<TActorInterface>(ActorId, String, String, String)
  nameWithType: IActorProxyFactory.CreateActorProxy<TActorInterface>(ActorId, String, String, String)
  fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy<TActorInterface>(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.String, System.String)
  nameWithType.vb: IActorProxyFactory.CreateActorProxy(Of TActorInterface)(ActorId, String, String, String)
  fullname.vb: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy(Of TActorInterface)(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.String, System.String)
  name.vb: CreateActorProxy(Of TActorInterface)(ActorId, String, String, String)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.String,System.String)
    name: CreateActorProxy<TActorInterface>
    nameWithType: IActorProxyFactory.CreateActorProxy<TActorInterface>
    fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy<TActorInterface>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.String,System.String)
    name: CreateActorProxy(Of TActorInterface)
    nameWithType: IActorProxyFactory.CreateActorProxy(Of TActorInterface)
    fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorProxy(Of TActorInterface)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: IServiceProxy
  nameWithType: IServiceProxy
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy
  isExternal: false
  name: CreateActorServiceProxy<TServiceInterface>
  nameWithType: ActorProxyFactory.CreateActorServiceProxy<TServiceInterface>
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy<TServiceInterface>
  nameWithType.vb: ActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)
  fullname.vb: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)
  name.vb: CreateActorServiceProxy(Of TServiceInterface)
- uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
  parent: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory
  isExternal: true
  name: CreateActorServiceProxy<TServiceInterface>(Uri, ActorId, String)
  nameWithType: IActorProxyFactory.CreateActorServiceProxy<TServiceInterface>(Uri, ActorId, String)
  fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy<TServiceInterface>(System.Uri, Microsoft.ServiceFabric.Actors.ActorId, System.String)
  nameWithType.vb: IActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)(Uri, ActorId, String)
  fullname.vb: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)(System.Uri, Microsoft.ServiceFabric.Actors.ActorId, System.String)
  name.vb: CreateActorServiceProxy(Of TServiceInterface)(Uri, ActorId, String)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
    name: CreateActorServiceProxy<TServiceInterface>
    nameWithType: IActorProxyFactory.CreateActorServiceProxy<TServiceInterface>
    fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy<TServiceInterface>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)
    name: CreateActorServiceProxy(Of TServiceInterface)
    nameWithType: IActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)
    fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TServiceInterface}'
  commentId: '!:TServiceInterface'
  definition: TServiceInterface
  name: TServiceInterface
  nameWithType: TServiceInterface
  fullName: TServiceInterface
- uid: Microsoft.ServiceFabric.Services.Remoting.Client
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Client
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Client
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client
- uid: TServiceInterface
  isExternal: false
  name: TServiceInterface
  nameWithType: TServiceInterface
  fullName: TServiceInterface
- uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy``1(System.Uri,System.Int64,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy``1(System.Uri,System.Int64,System.String)
  parent: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory
  isExternal: true
  name: CreateActorServiceProxy<TServiceInterface>(Uri, Int64, String)
  nameWithType: IActorProxyFactory.CreateActorServiceProxy<TServiceInterface>(Uri, Int64, String)
  fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy<TServiceInterface>(System.Uri, System.Int64, System.String)
  nameWithType.vb: IActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)(Uri, Int64, String)
  fullname.vb: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)(System.Uri, System.Int64, System.String)
  name.vb: CreateActorServiceProxy(Of TServiceInterface)(Uri, Int64, String)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy``1(System.Uri,System.Int64,System.String)
    name: CreateActorServiceProxy<TServiceInterface>
    nameWithType: IActorProxyFactory.CreateActorServiceProxy<TServiceInterface>
    fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy<TServiceInterface>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy``1(System.Uri,System.Int64,System.String)
    name: CreateActorServiceProxy(Of TServiceInterface)
    nameWithType: IActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)
    fullName: Microsoft.ServiceFabric.Actors.Client.IActorProxyFactory.CreateActorServiceProxy(Of TServiceInterface)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: IServiceRemotingClientFactory
  nameWithType: IServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateServiceRemotingClientFactory*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateServiceRemotingClientFactory
  isExternal: false
  name: CreateServiceRemotingClientFactory
  nameWithType: ActorProxyFactory.CreateServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxyFactory.CreateServiceRemotingClientFactory
- uid: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  parent: Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: IServiceRemotingCallbackClient
  nameWithType: IServiceRemotingCallbackClient
  fullName: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
- uid: Microsoft.ServiceFabric.Services.Remoting
  commentId: N:Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting
  nameWithType: Microsoft.ServiceFabric.Services.Remoting
  fullName: Microsoft.ServiceFabric.Services.Remoting
