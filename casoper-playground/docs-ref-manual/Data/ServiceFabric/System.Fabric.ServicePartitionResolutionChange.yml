### YamlMime:ManagedReference
items:
- uid: System.Fabric.ServicePartitionResolutionChange
  commentId: T:System.Fabric.ServicePartitionResolutionChange
  id: ServicePartitionResolutionChange
  parent: System.Fabric
  children:
  - System.Fabric.ServicePartitionResolutionChange.Exception
  - System.Fabric.ServicePartitionResolutionChange.HasException
  - System.Fabric.ServicePartitionResolutionChange.Result
  langs:
  - csharp
  - vb
  name: ServicePartitionResolutionChange
  nameWithType: ServicePartitionResolutionChange
  fullName: System.Fabric.ServicePartitionResolutionChange
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServicePartitionResolutionChange.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServicePartitionResolutionChange
    path: src/prod/src/managed/Api/src/System/Fabric/ServicePartitionResolutionChange.cs
    startLine: 18
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>This wrapper contains the updated <xref href=\"System.Fabric.ResolvedServicePartition\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>If there was an exception thrown while the newer <xref href=\"System.Fabric.ResolvedServicePartition\" data-throw-if-not-resolved=\"false\"></xref> is acquired, then the \n<xref href=\"System.Fabric.ServicePartitionResolutionChange\" data-throw-if-not-resolved=\"false\"></xref> also contains the exception. Note that if the <xref href=\"System.Fabric.ServicePartitionResolutionChange.Exception\" data-throw-if-not-resolved=\"false\"></xref> property \nis not null, then the <xref href=\"System.Fabric.ServicePartitionResolutionChange.Result\" data-throw-if-not-resolved=\"false\"></xref> property is null.</p>\n"
  example: []
  syntax:
    content: public sealed class ServicePartitionResolutionChange
    content.vb: Public NotInheritable Class ServicePartitionResolutionChange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.ServicePartitionResolutionChange.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.ServicePartitionResolutionChange.Exception
  commentId: P:System.Fabric.ServicePartitionResolutionChange.Exception
  id: Exception
  parent: System.Fabric.ServicePartitionResolutionChange
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: ServicePartitionResolutionChange.Exception
  fullName: System.Fabric.ServicePartitionResolutionChange.Exception
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServicePartitionResolutionChange.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Exception
    path: src/prod/src/managed/Api/src/System/Fabric/ServicePartitionResolutionChange.cs
    startLine: 34
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the exception that was thrown while the relevant <xref href=\"System.Fabric.ResolvedServicePartition\" data-throw-if-not-resolved=\"false\"></xref> was being acquired or updated.</p>\n"
  example: []
  syntax:
    content: public Exception Exception { get; }
    content.vb: Public ReadOnly Property Exception As Exception
    parameters: []
    return:
      type: System.Exception
      description: "\n<p>Returns <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.ServicePartitionResolutionChange.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ServicePartitionResolutionChange.Result
  commentId: P:System.Fabric.ServicePartitionResolutionChange.Result
  id: Result
  parent: System.Fabric.ServicePartitionResolutionChange
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: ServicePartitionResolutionChange.Result
  fullName: System.Fabric.ServicePartitionResolutionChange.Result
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServicePartitionResolutionChange.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Result
    path: src/prod/src/managed/Api/src/System/Fabric/ServicePartitionResolutionChange.cs
    startLine: 42
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Contains the new <xref href=\"System.Fabric.ResolvedServicePartition\" data-throw-if-not-resolved=\"false\"></xref> that is relevant for the registered service partition.</p>\n"
  example: []
  syntax:
    content: public ResolvedServicePartition Result { get; }
    content.vb: Public ReadOnly Property Result As ResolvedServicePartition
    parameters: []
    return:
      type: System.Fabric.ResolvedServicePartition
      description: "\n<p>Returns <xref href=\"System.Fabric.ResolvedServicePartition\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.ServicePartitionResolutionChange.Result*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ServicePartitionResolutionChange.HasException
  commentId: P:System.Fabric.ServicePartitionResolutionChange.HasException
  id: HasException
  parent: System.Fabric.ServicePartitionResolutionChange
  langs:
  - csharp
  - vb
  name: HasException
  nameWithType: ServicePartitionResolutionChange.HasException
  fullName: System.Fabric.ServicePartitionResolutionChange.HasException
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServicePartitionResolutionChange.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HasException
    path: src/prod/src/managed/Api/src/System/Fabric/ServicePartitionResolutionChange.cs
    startLine: 65
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates whether there was an exception. </p>\n"
  remarks: "\n<p>If so, the <xref href=\"System.Fabric.ServicePartitionResolutionChange.Result\" data-throw-if-not-resolved=\"false\"></xref> parameter is null and the <xref href=\"System.Fabric.ServicePartitionResolutionChange.Exception\" data-throw-if-not-resolved=\"false\"></xref> \nparameter is set.</p>\n"
  example: []
  syntax:
    content: public bool HasException { get; }
    content.vb: Public ReadOnly Property HasException As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.ServicePartitionResolutionChange.HasException*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.ResolvedServicePartition
  commentId: T:System.Fabric.ResolvedServicePartition
  parent: System.Fabric
  isExternal: false
  name: ResolvedServicePartition
  nameWithType: ResolvedServicePartition
  fullName: System.Fabric.ResolvedServicePartition
- uid: System.Fabric.ServicePartitionResolutionChange
  commentId: T:System.Fabric.ServicePartitionResolutionChange
  parent: System.Fabric
  isExternal: false
  name: ServicePartitionResolutionChange
  nameWithType: ServicePartitionResolutionChange
  fullName: System.Fabric.ServicePartitionResolutionChange
- uid: System.Fabric.ServicePartitionResolutionChange.Exception
  commentId: P:System.Fabric.ServicePartitionResolutionChange.Exception
- uid: System.Fabric.ServicePartitionResolutionChange.Result
  commentId: P:System.Fabric.ServicePartitionResolutionChange.Result
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ServicePartitionResolutionChange.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServicePartitionResolutionChange>()
  nameWithType: ByteArraySerializer.Serialize<ServicePartitionResolutionChange>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ServicePartitionResolutionChange>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServicePartitionResolutionChange)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ServicePartitionResolutionChange)()
  name.vb: Serialize(Of ServicePartitionResolutionChange)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServicePartitionResolutionChange>
    nameWithType: ByteArraySerializer.Serialize<ServicePartitionResolutionChange>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ServicePartitionResolutionChange>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServicePartitionResolutionChange)
    nameWithType: ByteArraySerializer.Serialize(Of ServicePartitionResolutionChange)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ServicePartitionResolutionChange)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Fabric.ServicePartitionResolutionChange.Exception*
  commentId: Overload:System.Fabric.ServicePartitionResolutionChange.Exception
  isExternal: false
  name: Exception
  nameWithType: ServicePartitionResolutionChange.Exception
  fullName: System.Fabric.ServicePartitionResolutionChange.Exception
- uid: System.Fabric.ServicePartitionResolutionChange.Result*
  commentId: Overload:System.Fabric.ServicePartitionResolutionChange.Result
  isExternal: false
  name: Result
  nameWithType: ServicePartitionResolutionChange.Result
  fullName: System.Fabric.ServicePartitionResolutionChange.Result
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.ServicePartitionResolutionChange.HasException*
  commentId: Overload:System.Fabric.ServicePartitionResolutionChange.HasException
  isExternal: false
  name: HasException
  nameWithType: ServicePartitionResolutionChange.HasException
  fullName: System.Fabric.ServicePartitionResolutionChange.HasException
