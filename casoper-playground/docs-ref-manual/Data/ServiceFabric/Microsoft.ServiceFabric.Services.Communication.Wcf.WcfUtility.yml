### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility
  id: WcfUtility
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf
  children:
  - Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  langs:
  - csharp
  - vb
  name: WcfUtility
  nameWithType: WcfUtility
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/WcfUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WcfUtility
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/WcfUtility.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf
  summary: "\nUtility class for creating default bindings for WCF communication.\n"
  example: []
  syntax:
    content: public static class WcfUtility
    content.vb: Public Module WcfUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  id: CreateTcpListenerBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility
  langs:
  - csharp
  - vb
  name: CreateTcpListenerBinding(Int64, TimeSpan, TimeSpan)
  nameWithType: WcfUtility.CreateTcpListenerBinding(Int64, TimeSpan, TimeSpan)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64, System.TimeSpan, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/WcfUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateTcpListenerBinding
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/WcfUtility.cs
    startLine: 44
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf
  summary: "\nCreates a TCP listener binding with no security for WCF communication.\n"
  example: []
  syntax:
    content: public static Binding CreateTcpListenerBinding(long maxMessageSize = 4194304L, TimeSpan openTimeout = null, TimeSpan closeTimeout = null)
    content.vb: Public Shared Function CreateTcpListenerBinding(maxMessageSize As Long = 4194304L, openTimeout As TimeSpan = Nothing, closeTimeout As TimeSpan = Nothing) As Binding
    parameters:
    - id: maxMessageSize
      type: System.Int64
      description: "\nMaximum size of the message in bytes. \nIf the value is not specified or it is less than or equals to zero,\na default value of 4,194,304 bytes (4 MB) is used.\n"
    - id: openTimeout
      type: System.TimeSpan
      description: "\nTimeout for opening the connection. \nIf the value is not specified, the default value of 5 seconds is used.\n"
    - id: closeTimeout
      type: System.TimeSpan
      description: "\nTime to wait for messages to drain on the connections before aborting the connection. \nIf the value is not specified, the default value of 5 seconds is used.\n"
    return:
      type: System.ServiceModel.Channels.Binding
      description: A <xref href="System.ServiceModel.Channels.Binding" data-throw-if-not-resolved="false"></xref> to use with <xref href="Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener%601" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  id: CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility
  langs:
  - csharp
  - vb
  name: CreateTcpClientBinding(Int64, TimeSpan, TimeSpan)
  nameWithType: WcfUtility.CreateTcpClientBinding(Int64, TimeSpan, TimeSpan)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64, System.TimeSpan, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/WcfUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateTcpClientBinding
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/WcfUtility.cs
    startLine: 102
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf
  summary: "\nCreates a TCP client binding with no security for WCF communication.\n"
  example: []
  syntax:
    content: public static Binding CreateTcpClientBinding(long maxMessageSize = 4194304L, TimeSpan openTimeout = null, TimeSpan closeTimeout = null)
    content.vb: Public Shared Function CreateTcpClientBinding(maxMessageSize As Long = 4194304L, openTimeout As TimeSpan = Nothing, closeTimeout As TimeSpan = Nothing) As Binding
    parameters:
    - id: maxMessageSize
      type: System.Int64
      description: "\nMaximum size of the message in bytes. \nIf the value is not specified or it is less than or equals to zero,\na default value of 4,194,304 bytes (4 MB) is used.\n"
    - id: openTimeout
      type: System.TimeSpan
      description: "\nTimeout for opening the connection. \nIf the value is not specified, the default value of 5 seconds is used.\n"
    - id: closeTimeout
      type: System.TimeSpan
      description: "\nTime to wait for messages to drain on the connections before aborting the connection. \nIf the value is not specified, the default value of 5 seconds is used.\n"
    return:
      type: System.ServiceModel.Channels.Binding
      description: A <xref href="System.ServiceModel.Channels.Binding" data-throw-if-not-resolved="false"></xref> to use with <xref href="Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory%601" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Wcf
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Wcf
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Wcf
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  isExternal: false
  name: WcfCommunicationListener<TServiceContract>
  nameWithType: WcfCommunicationListener<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract)
  name.vb: WcfCommunicationListener(Of TServiceContract)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
    name: WcfCommunicationListener
    nameWithType: WcfCommunicationListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
    name: WcfCommunicationListener
    nameWithType: WcfCommunicationListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding
  isExternal: false
  name: CreateTcpListenerBinding
  nameWithType: WcfUtility.CreateTcpListenerBinding
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  isExternal: false
  name: WcfCommunicationClientFactory<TServiceContract>
  nameWithType: WcfCommunicationClientFactory<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract)
  name.vb: WcfCommunicationClientFactory(Of TServiceContract)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
    name: WcfCommunicationClientFactory
    nameWithType: WcfCommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding
  isExternal: false
  name: CreateTcpClientBinding
  nameWithType: WcfUtility.CreateTcpClientBinding
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding
