### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  commentId: T:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  id: ReliableStateManagerReplicatorSettings
  parent: Microsoft.ServiceFabric.Data
  children:
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.BatchAcknowledgementInterval
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.CheckpointThresholdInMB
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.Equals(System.Object)
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.GetHashCode
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialCopyQueueSize
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialPrimaryReplicationQueueSize
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialSecondaryReplicationQueueSize
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxAccumulatedBackupLogSizeInMB
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxCopyQueueSize
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxMetadataSizeInKB
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueMemorySize
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueSize
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxRecordSizeInKB
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxReplicationMessageSize
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueMemorySize
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueSize
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxStreamSizeInMB
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxWriteQueueDepthInKB
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MinLogSizeInMB
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeForLocalSSD
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeLogForLowerDiskUsage
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ReplicatorAddress
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.RetryInterval
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecondaryClearAcknowledgedOperations
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecurityCredentials
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogId
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogPath
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SlowApiMonitoringDuration
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ThrottlingThresholdFactor
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ToString
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.TruncationThresholdFactor
  langs:
  - csharp
  - vb
  name: ReliableStateManagerReplicatorSettings
  nameWithType: ReliableStateManagerReplicatorSettings
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReliableStateManagerReplicatorSettings
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nSettings that configure the replicator\n"
  example: []
  syntax:
    content: public class ReliableStateManagerReplicatorSettings
    content.vb: Public Class ReliableStateManagerReplicatorSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.RetryInterval
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.RetryInterval
  id: RetryInterval
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: RetryInterval
  nameWithType: ReliableStateManagerReplicatorSettings.RetryInterval
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.RetryInterval
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RetryInterval
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 22
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets how long the Replicator waits after it transmits a message from the primary to the secondary for the secondary to acknowledge that it has received the message.\nThe default value is 5 seconds.\n"
  example: []
  syntax:
    content: public TimeSpan? RetryInterval { get; set; }
    content.vb: Public Property RetryInterval As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: The retry interval.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.RetryInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.BatchAcknowledgementInterval
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.BatchAcknowledgementInterval
  id: BatchAcknowledgementInterval
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: BatchAcknowledgementInterval
  nameWithType: ReliableStateManagerReplicatorSettings.BatchAcknowledgementInterval
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.BatchAcknowledgementInterval
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BatchAcknowledgementInterval
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 29
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the amount of time that the replicator waits after receiving an operation before sending back an acknowledgment\nThe default value is 5 milliseconds.\n"
  example: []
  syntax:
    content: public TimeSpan? BatchAcknowledgementInterval { get; set; }
    content.vb: Public Property BatchAcknowledgementInterval As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: The batch acknowledgment interval.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.BatchAcknowledgementInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ReplicatorAddress
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ReplicatorAddress
  id: ReplicatorAddress
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: ReplicatorAddress
  nameWithType: ReliableStateManagerReplicatorSettings.ReplicatorAddress
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ReplicatorAddress
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicatorAddress
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 36
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the address that this replicator will use when communicating with other Replicators.\nThe default value is \"localhost:0\", which picks a dynamic port number in runtime \n"
  example: []
  syntax:
    content: public string ReplicatorAddress { get; set; }
    content.vb: Public Property ReplicatorAddress As String
    parameters: []
    return:
      type: System.String
      description: The replicator address.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ReplicatorAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecurityCredentials
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecurityCredentials
  id: SecurityCredentials
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: SecurityCredentials
  nameWithType: ReliableStateManagerReplicatorSettings.SecurityCredentials
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecurityCredentials
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SecurityCredentials
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 42
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the security credentials for securing the traffic between replicators\n"
  example: []
  syntax:
    content: public SecurityCredentials SecurityCredentials { get; set; }
    content.vb: Public Property SecurityCredentials As SecurityCredentials
    parameters: []
    return:
      type: System.Fabric.SecurityCredentials
      description: The security credentials.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecurityCredentials*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialCopyQueueSize
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialCopyQueueSize
  id: InitialCopyQueueSize
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: InitialCopyQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.InitialCopyQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialCopyQueueSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InitialCopyQueueSize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 50
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the initial size of the copy operation queue inside the replicator, which contains copy Operations.\nDefault value is 64.\nThe value must be a power of 2 and the unit is 'Number of operations'\n"
  example: []
  syntax:
    content: public long ? InitialCopyQueueSize { get; set; }
    content.vb: Public Property InitialCopyQueueSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: The initial copy queue size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialCopyQueueSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxCopyQueueSize
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxCopyQueueSize
  id: MaxCopyQueueSize
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MaxCopyQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxCopyQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxCopyQueueSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxCopyQueueSize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 58
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the maximum size of the copy operation queue inside Replicator, which contains copy Operations.\nDefault value is 1024.\nThe value must be a power of 2 and the unit is 'Number of operations'\n"
  example: []
  syntax:
    content: public long ? MaxCopyQueueSize { get; set; }
    content.vb: Public Property MaxCopyQueueSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: The max copy queue size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxCopyQueueSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxReplicationMessageSize
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxReplicationMessageSize
  id: MaxReplicationMessageSize
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MaxReplicationMessageSize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxReplicationMessageSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxReplicationMessageSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxReplicationMessageSize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 66
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the max replication message size.\nDefault value is 50MB.\nThe unit is Bytes.\n"
  example: []
  syntax:
    content: public long ? MaxReplicationMessageSize { get; set; }
    content.vb: Public Property MaxReplicationMessageSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: The max replication message size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxReplicationMessageSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialPrimaryReplicationQueueSize
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialPrimaryReplicationQueueSize
  id: InitialPrimaryReplicationQueueSize
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: InitialPrimaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.InitialPrimaryReplicationQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialPrimaryReplicationQueueSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InitialPrimaryReplicationQueueSize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 74
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the initial primary replication queue size.\nDefault value is 64.\nThe value must be a power of 2 and the unit is 'Number of operations'\n"
  example: []
  syntax:
    content: public long ? InitialPrimaryReplicationQueueSize { get; set; }
    content.vb: Public Property InitialPrimaryReplicationQueueSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: The initial primary replication queue size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialPrimaryReplicationQueueSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueSize
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueSize
  id: MaxPrimaryReplicationQueueSize
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MaxPrimaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxPrimaryReplicationQueueSize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 82
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the max primary replication queue size.\nDefault value is 1024.\nThe value must be a power of 2 and the unit is 'Number of operations'\n"
  example: []
  syntax:
    content: public long ? MaxPrimaryReplicationQueueSize { get; set; }
    content.vb: Public Property MaxPrimaryReplicationQueueSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: The max primary replication queue size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueMemorySize
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueMemorySize
  id: MaxPrimaryReplicationQueueMemorySize
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MaxPrimaryReplicationQueueMemorySize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueMemorySize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueMemorySize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxPrimaryReplicationQueueMemorySize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 90
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the max primary replication queue memory size.\nDefault value is 0, which implies there is no memory limitation.\nThe unit is Bytes\n"
  example: []
  syntax:
    content: public long ? MaxPrimaryReplicationQueueMemorySize { get; set; }
    content.vb: Public Property MaxPrimaryReplicationQueueMemorySize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: The max primary replication queue memory size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueMemorySize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialSecondaryReplicationQueueSize
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialSecondaryReplicationQueueSize
  id: InitialSecondaryReplicationQueueSize
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: InitialSecondaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.InitialSecondaryReplicationQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialSecondaryReplicationQueueSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InitialSecondaryReplicationQueueSize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 98
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the initial secondary replication queue size.\nDefault value is 64.\nThe value must be a power of 2 and the unit is 'Number of operations'\n"
  example: []
  syntax:
    content: public long ? InitialSecondaryReplicationQueueSize { get; set; }
    content.vb: Public Property InitialSecondaryReplicationQueueSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: The initial secondary replication queue size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialSecondaryReplicationQueueSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueSize
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueSize
  id: MaxSecondaryReplicationQueueSize
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MaxSecondaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxSecondaryReplicationQueueSize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 106
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the max secondary replication queue size.\nDefault value is 2048.\nThe value must be a power of 2 and the unit is 'Number of operations'\n"
  example: []
  syntax:
    content: public long ? MaxSecondaryReplicationQueueSize { get; set; }
    content.vb: Public Property MaxSecondaryReplicationQueueSize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: The max secondary replication queue size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueMemorySize
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueMemorySize
  id: MaxSecondaryReplicationQueueMemorySize
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MaxSecondaryReplicationQueueMemorySize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueMemorySize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueMemorySize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxSecondaryReplicationQueueMemorySize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 114
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the max secondary replication queue memory size.\nDefault value is 0, which implies there is no memory limitation.\nThe unit is Bytes\n"
  example: []
  syntax:
    content: public long ? MaxSecondaryReplicationQueueMemorySize { get; set; }
    content.vb: Public Property MaxSecondaryReplicationQueueMemorySize As Long?
    parameters: []
    return:
      type: System.Nullable{System.Int64}
      description: The max secondary replication queue size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueMemorySize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogId
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogId
  id: SharedLogId
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: SharedLogId
  nameWithType: ReliableStateManagerReplicatorSettings.SharedLogId
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SharedLogId
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 121
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the GUID Identifier for the log container that is shared by a number of replicas on the windows fabric node including this one\nDefault value is \"\" which causes the replicator to use the global shared log for the node.\n"
  example: []
  syntax:
    content: public string SharedLogId { get; set; }
    content.vb: Public Property SharedLogId As String
    parameters: []
    return:
      type: System.String
      description: The shared log id.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogPath
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogPath
  id: SharedLogPath
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: SharedLogPath
  nameWithType: ReliableStateManagerReplicatorSettings.SharedLogPath
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogPath
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SharedLogPath
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 128
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the full pathname to the log container that is shared by a number of replicas on the node including this one\nDefault value is \"\" which causes the replicator to use the global shared log for the node.\n"
  example: []
  syntax:
    content: public string SharedLogPath { get; set; }
    content.vb: Public Property SharedLogPath As String
    parameters: []
    return:
      type: System.String
      description: The shared log path.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxStreamSizeInMB
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxStreamSizeInMB
  id: MaxStreamSizeInMB
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MaxStreamSizeInMB
  nameWithType: ReliableStateManagerReplicatorSettings.MaxStreamSizeInMB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxStreamSizeInMB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxStreamSizeInMB
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 134
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nDeprecated\n"
  example: []
  syntax:
    content: public int ? MaxStreamSizeInMB { get; set; }
    content.vb: Public Property MaxStreamSizeInMB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The max stream size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxStreamSizeInMB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxMetadataSizeInKB
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxMetadataSizeInKB
  id: MaxMetadataSizeInKB
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MaxMetadataSizeInKB
  nameWithType: ReliableStateManagerReplicatorSettings.MaxMetadataSizeInKB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxMetadataSizeInKB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxMetadataSizeInKB
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 143
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the Amount of extra persistent storage space reserved for the replicator specified in kilobytes that is associated with this replica. This \nvalue must be a multiple of 4.\nThe default value is 4. \nThe unit is KB.\n"
  example: []
  syntax:
    content: public int ? MaxMetadataSizeInKB { get; set; }
    content.vb: Public Property MaxMetadataSizeInKB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The max metadata size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxMetadataSizeInKB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxRecordSizeInKB
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxRecordSizeInKB
  id: MaxRecordSizeInKB
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MaxRecordSizeInKB
  nameWithType: ReliableStateManagerReplicatorSettings.MaxRecordSizeInKB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxRecordSizeInKB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxRecordSizeInKB
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 152
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the largest record size which the replicator may write specified in kilobytes for the log that is associated with this replica. This \nvalue must be a multiple of 4 and greater than or equal to 128.\nThe default value is 1024. \nThe unit is KB.\n"
  example: []
  syntax:
    content: public int ? MaxRecordSizeInKB { get; set; }
    content.vb: Public Property MaxRecordSizeInKB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The max record size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxRecordSizeInKB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxWriteQueueDepthInKB
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxWriteQueueDepthInKB
  id: MaxWriteQueueDepthInKB
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MaxWriteQueueDepthInKB
  nameWithType: ReliableStateManagerReplicatorSettings.MaxWriteQueueDepthInKB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxWriteQueueDepthInKB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxWriteQueueDepthInKB
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 162
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the maximum write queue depth that the core logger can use as specified in kilobytes for the log that is associated with this replica. This \nvalue is the maximum number of bytes that can be outstanding during core logger updates. It may be 0 for the core logger\nto compute an appropriate value or a multiple of 4.\nThe default value is 0.\nThe unit is KB.\n"
  example: []
  syntax:
    content: public int ? MaxWriteQueueDepthInKB { get; set; }
    content.vb: Public Property MaxWriteQueueDepthInKB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The max write queue depth.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxWriteQueueDepthInKB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.CheckpointThresholdInMB
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.CheckpointThresholdInMB
  id: CheckpointThresholdInMB
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: CheckpointThresholdInMB
  nameWithType: ReliableStateManagerReplicatorSettings.CheckpointThresholdInMB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.CheckpointThresholdInMB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CheckpointThresholdInMB
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 169
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the checkpoint threshold. A checkpoint will be initiated when the log usage exceeds this value.\nDefault value is 50.\n"
  example: []
  syntax:
    content: public int ? CheckpointThresholdInMB { get; set; }
    content.vb: Public Property CheckpointThresholdInMB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The checkpoint threshold.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.CheckpointThresholdInMB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxAccumulatedBackupLogSizeInMB
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxAccumulatedBackupLogSizeInMB
  id: MaxAccumulatedBackupLogSizeInMB
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MaxAccumulatedBackupLogSizeInMB
  nameWithType: ReliableStateManagerReplicatorSettings.MaxAccumulatedBackupLogSizeInMB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxAccumulatedBackupLogSizeInMB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxAccumulatedBackupLogSizeInMB
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 178
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the max size for an accumulated backup log across backups. \nAn incremental backup requests will fail if the incremental backup would generate a backup log that would cause the accumulated backup logs since the relevant full backup to be larger than this size.\nIn such cases, user is required to take a full backup.\nDefault value is 800.\n"
  example: []
  syntax:
    content: public int ? MaxAccumulatedBackupLogSizeInMB { get; set; }
    content.vb: Public Property MaxAccumulatedBackupLogSizeInMB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The max accumulated backup log size in MB.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxAccumulatedBackupLogSizeInMB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeForLocalSSD
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeForLocalSSD
  id: OptimizeForLocalSSD
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: OptimizeForLocalSSD
  nameWithType: ReliableStateManagerReplicatorSettings.OptimizeForLocalSSD
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeForLocalSSD
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OptimizeForLocalSSD
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 184
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nDeprecated\n"
  example: []
  syntax:
    content: public bool ? OptimizeForLocalSSD { get; set; }
    content.vb: Public Property OptimizeForLocalSSD As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: If the OptimizeFOrLocalSSD option is enabled.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeForLocalSSD*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeLogForLowerDiskUsage
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeLogForLowerDiskUsage
  id: OptimizeLogForLowerDiskUsage
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: OptimizeLogForLowerDiskUsage
  nameWithType: ReliableStateManagerReplicatorSettings.OptimizeLogForLowerDiskUsage
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeLogForLowerDiskUsage
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OptimizeLogForLowerDiskUsage
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 191
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets a flag that when true indicates the log should optimize in a way where less disk space is used for the log at the cost of IO performance. If false, the log will use more disk space but have better IO performance.\nDefault value is true.\n"
  example: []
  syntax:
    content: public bool ? OptimizeLogForLowerDiskUsage { get; set; }
    content.vb: Public Property OptimizeLogForLowerDiskUsage As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: If the OptimizeLogForLowerDiskUsage option is enabled.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeLogForLowerDiskUsage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecondaryClearAcknowledgedOperations
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecondaryClearAcknowledgedOperations
  id: SecondaryClearAcknowledgedOperations
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: SecondaryClearAcknowledgedOperations
  nameWithType: ReliableStateManagerReplicatorSettings.SecondaryClearAcknowledgedOperations
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecondaryClearAcknowledgedOperations
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SecondaryClearAcknowledgedOperations
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 199
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets a flag that when true indicates the secondary replicator should clear the in-memory queue after acknowledging the operations to the primary (After the operations are flushed to disk)\nDefault value is false.\nSettings this to \"TRUE\" can result in additional disk reads on the new primary, while catching up replicas after a failover\n"
  example: []
  syntax:
    content: public bool ? SecondaryClearAcknowledgedOperations { get; set; }
    content.vb: Public Property SecondaryClearAcknowledgedOperations As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: If the SecondaryClearAcknowledgedOperations option is enabled.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecondaryClearAcknowledgedOperations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SlowApiMonitoringDuration
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SlowApiMonitoringDuration
  id: SlowApiMonitoringDuration
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: SlowApiMonitoringDuration
  nameWithType: ReliableStateManagerReplicatorSettings.SlowApiMonitoringDuration
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SlowApiMonitoringDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SlowApiMonitoringDuration
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 204
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nSets the scan interval for managed API calls \n"
  example: []
  syntax:
    content: public TimeSpan? SlowApiMonitoringDuration { get; set; }
    content.vb: Public Property SlowApiMonitoringDuration As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SlowApiMonitoringDuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MinLogSizeInMB
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MinLogSizeInMB
  id: MinLogSizeInMB
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: MinLogSizeInMB
  nameWithType: ReliableStateManagerReplicatorSettings.MinLogSizeInMB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MinLogSizeInMB
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MinLogSizeInMB
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 211
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the minimum log size. A truncation will not be initiated if it would reduce the size of the to below this value.\nDefault value is 0.\n"
  example: []
  syntax:
    content: public int ? MinLogSizeInMB { get; set; }
    content.vb: Public Property MinLogSizeInMB As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The minimum log size.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MinLogSizeInMB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.TruncationThresholdFactor
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.TruncationThresholdFactor
  id: TruncationThresholdFactor
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: TruncationThresholdFactor
  nameWithType: ReliableStateManagerReplicatorSettings.TruncationThresholdFactor
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.TruncationThresholdFactor
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TruncationThresholdFactor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 218
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the truncation threshold factor. A truncation will be initiated when the log usage exceeds this value times MinLogSizeInMB.\nDefault value is 2.\n"
  example: []
  syntax:
    content: public int ? TruncationThresholdFactor { get; set; }
    content.vb: Public Property TruncationThresholdFactor As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The truncation threshold.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.TruncationThresholdFactor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ThrottlingThresholdFactor
  commentId: P:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ThrottlingThresholdFactor
  id: ThrottlingThresholdFactor
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: ThrottlingThresholdFactor
  nameWithType: ReliableStateManagerReplicatorSettings.ThrottlingThresholdFactor
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ThrottlingThresholdFactor
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ThrottlingThresholdFactor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 225
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets or sets the throttling threshold factor. Throttling will be initiated when the log usage exceeds this value times MinLogSizeInMB.\nDefault value is 3.\n"
  example: []
  syntax:
    content: public int ? ThrottlingThresholdFactor { get; set; }
    content.vb: Public Property ThrottlingThresholdFactor As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The throttling threshold.
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ThrottlingThresholdFactor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.Equals(System.Object)
  commentId: M:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ReliableStateManagerReplicatorSettings.Equals(Object)
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Equals
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 236
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nDetermines whether the specified ReplicatorSettings is equal to the current object \n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\nobject to check against\n"
    return:
      type: System.Boolean
      description: "\nThe <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.GetHashCode
  commentId: M:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.GetHashCode
  id: GetHashCode
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ReliableStateManagerReplicatorSettings.GetHashCode()
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.GetHashCode()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetHashCode
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 253
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nServes as a hash function for this type\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\nThe <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> representing the hash code.\n"
  overridden: System.Object.GetHashCode
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ToString
  commentId: M:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ToString
  id: ToString
  parent: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ReliableStateManagerReplicatorSettings.ToString()
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/ReliableStateManagerReplicatorSettings.cs
    startLine: 265
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nThe to string.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nThe <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overridden: System.Object.ToString
  overload: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ReliableStateManagerReplicatorSettings>()
  nameWithType: ByteArraySerializer.Serialize<ReliableStateManagerReplicatorSettings>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ReliableStateManagerReplicatorSettings)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings)()
  name.vb: Serialize(Of ReliableStateManagerReplicatorSettings)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ReliableStateManagerReplicatorSettings>
    nameWithType: ByteArraySerializer.Serialize<ReliableStateManagerReplicatorSettings>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ReliableStateManagerReplicatorSettings)
    nameWithType: ByteArraySerializer.Serialize(Of ReliableStateManagerReplicatorSettings)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.RetryInterval*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.RetryInterval
  isExternal: false
  name: RetryInterval
  nameWithType: ReliableStateManagerReplicatorSettings.RetryInterval
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.RetryInterval
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.BatchAcknowledgementInterval*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.BatchAcknowledgementInterval
  isExternal: false
  name: BatchAcknowledgementInterval
  nameWithType: ReliableStateManagerReplicatorSettings.BatchAcknowledgementInterval
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.BatchAcknowledgementInterval
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ReplicatorAddress*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ReplicatorAddress
  isExternal: false
  name: ReplicatorAddress
  nameWithType: ReliableStateManagerReplicatorSettings.ReplicatorAddress
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ReplicatorAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecurityCredentials*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecurityCredentials
  isExternal: false
  name: SecurityCredentials
  nameWithType: ReliableStateManagerReplicatorSettings.SecurityCredentials
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecurityCredentials
- uid: System.Fabric.SecurityCredentials
  commentId: T:System.Fabric.SecurityCredentials
  parent: System.Fabric
  isExternal: false
  name: SecurityCredentials
  nameWithType: SecurityCredentials
  fullName: System.Fabric.SecurityCredentials
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialCopyQueueSize*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialCopyQueueSize
  isExternal: false
  name: InitialCopyQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.InitialCopyQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialCopyQueueSize
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxCopyQueueSize*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxCopyQueueSize
  isExternal: false
  name: MaxCopyQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxCopyQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxCopyQueueSize
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxReplicationMessageSize*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxReplicationMessageSize
  isExternal: false
  name: MaxReplicationMessageSize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxReplicationMessageSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxReplicationMessageSize
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialPrimaryReplicationQueueSize*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialPrimaryReplicationQueueSize
  isExternal: false
  name: InitialPrimaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.InitialPrimaryReplicationQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialPrimaryReplicationQueueSize
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueSize*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueSize
  isExternal: false
  name: MaxPrimaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueSize
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueMemorySize*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueMemorySize
  isExternal: false
  name: MaxPrimaryReplicationQueueMemorySize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueMemorySize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxPrimaryReplicationQueueMemorySize
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialSecondaryReplicationQueueSize*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialSecondaryReplicationQueueSize
  isExternal: false
  name: InitialSecondaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.InitialSecondaryReplicationQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.InitialSecondaryReplicationQueueSize
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueSize*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueSize
  isExternal: false
  name: MaxSecondaryReplicationQueueSize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueSize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueSize
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueMemorySize*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueMemorySize
  isExternal: false
  name: MaxSecondaryReplicationQueueMemorySize
  nameWithType: ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueMemorySize
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxSecondaryReplicationQueueMemorySize
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogId*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogId
  isExternal: false
  name: SharedLogId
  nameWithType: ReliableStateManagerReplicatorSettings.SharedLogId
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogId
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogPath*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogPath
  isExternal: false
  name: SharedLogPath
  nameWithType: ReliableStateManagerReplicatorSettings.SharedLogPath
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SharedLogPath
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxStreamSizeInMB*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxStreamSizeInMB
  isExternal: false
  name: MaxStreamSizeInMB
  nameWithType: ReliableStateManagerReplicatorSettings.MaxStreamSizeInMB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxStreamSizeInMB
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxMetadataSizeInKB*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxMetadataSizeInKB
  isExternal: false
  name: MaxMetadataSizeInKB
  nameWithType: ReliableStateManagerReplicatorSettings.MaxMetadataSizeInKB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxMetadataSizeInKB
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxRecordSizeInKB*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxRecordSizeInKB
  isExternal: false
  name: MaxRecordSizeInKB
  nameWithType: ReliableStateManagerReplicatorSettings.MaxRecordSizeInKB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxRecordSizeInKB
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxWriteQueueDepthInKB*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxWriteQueueDepthInKB
  isExternal: false
  name: MaxWriteQueueDepthInKB
  nameWithType: ReliableStateManagerReplicatorSettings.MaxWriteQueueDepthInKB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxWriteQueueDepthInKB
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.CheckpointThresholdInMB*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.CheckpointThresholdInMB
  isExternal: false
  name: CheckpointThresholdInMB
  nameWithType: ReliableStateManagerReplicatorSettings.CheckpointThresholdInMB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.CheckpointThresholdInMB
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxAccumulatedBackupLogSizeInMB*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxAccumulatedBackupLogSizeInMB
  isExternal: false
  name: MaxAccumulatedBackupLogSizeInMB
  nameWithType: ReliableStateManagerReplicatorSettings.MaxAccumulatedBackupLogSizeInMB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MaxAccumulatedBackupLogSizeInMB
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeForLocalSSD*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeForLocalSSD
  isExternal: false
  name: OptimizeForLocalSSD
  nameWithType: ReliableStateManagerReplicatorSettings.OptimizeForLocalSSD
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeForLocalSSD
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeLogForLowerDiskUsage*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeLogForLowerDiskUsage
  isExternal: false
  name: OptimizeLogForLowerDiskUsage
  nameWithType: ReliableStateManagerReplicatorSettings.OptimizeLogForLowerDiskUsage
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.OptimizeLogForLowerDiskUsage
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecondaryClearAcknowledgedOperations*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecondaryClearAcknowledgedOperations
  isExternal: false
  name: SecondaryClearAcknowledgedOperations
  nameWithType: ReliableStateManagerReplicatorSettings.SecondaryClearAcknowledgedOperations
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SecondaryClearAcknowledgedOperations
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SlowApiMonitoringDuration*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SlowApiMonitoringDuration
  isExternal: false
  name: SlowApiMonitoringDuration
  nameWithType: ReliableStateManagerReplicatorSettings.SlowApiMonitoringDuration
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.SlowApiMonitoringDuration
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MinLogSizeInMB*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MinLogSizeInMB
  isExternal: false
  name: MinLogSizeInMB
  nameWithType: ReliableStateManagerReplicatorSettings.MinLogSizeInMB
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.MinLogSizeInMB
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.TruncationThresholdFactor*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.TruncationThresholdFactor
  isExternal: false
  name: TruncationThresholdFactor
  nameWithType: ReliableStateManagerReplicatorSettings.TruncationThresholdFactor
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.TruncationThresholdFactor
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ThrottlingThresholdFactor*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ThrottlingThresholdFactor
  isExternal: false
  name: ThrottlingThresholdFactor
  nameWithType: ReliableStateManagerReplicatorSettings.ThrottlingThresholdFactor
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ThrottlingThresholdFactor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.Equals*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.Equals
  isExternal: false
  name: Equals
  nameWithType: ReliableStateManagerReplicatorSettings.Equals
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.Equals
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.GetHashCode*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: ReliableStateManagerReplicatorSettings.GetHashCode
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ToString*
  commentId: Overload:Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ToString
  isExternal: false
  name: ToString
  nameWithType: ReliableStateManagerReplicatorSettings.ToString
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerReplicatorSettings.ToString
