### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.PrimaryReplicatorStatus
  commentId: T:System.Fabric.Query.PrimaryReplicatorStatus
  id: PrimaryReplicatorStatus
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.PrimaryReplicatorStatus.#ctor
  - System.Fabric.Query.PrimaryReplicatorStatus.RemoteReplicators
  - System.Fabric.Query.PrimaryReplicatorStatus.ReplicationQueueStatus
  langs:
  - csharp
  - vb
  name: PrimaryReplicatorStatus
  nameWithType: PrimaryReplicatorStatus
  fullName: System.Fabric.Query.PrimaryReplicatorStatus
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/PrimaryReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PrimaryReplicatorStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/PrimaryReplicatorStatus.cs
    startLine: 12
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Provides statistics about the Service Fabric Replicator, when it is functioning in a <xref href=\"System.Fabric.ReplicaRole.Primary\" data-throw-if-not-resolved=\"false\"></xref> role.</p>\n"
  example: []
  syntax:
    content: 'public sealed class PrimaryReplicatorStatus : ReplicatorStatus'
    content.vb: >-
      Public NotInheritable Class PrimaryReplicatorStatus
          Inherits ReplicatorStatus
  inheritance:
  - System.Object
  - System.Fabric.Query.ReplicatorStatus
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.PrimaryReplicatorStatus.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.PrimaryReplicatorStatus.#ctor
  commentId: M:System.Fabric.Query.PrimaryReplicatorStatus.#ctor
  id: '#ctor'
  parent: System.Fabric.Query.PrimaryReplicatorStatus
  langs:
  - csharp
  - vb
  name: PrimaryReplicatorStatus()
  nameWithType: PrimaryReplicatorStatus.PrimaryReplicatorStatus()
  fullName: System.Fabric.Query.PrimaryReplicatorStatus.PrimaryReplicatorStatus()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/PrimaryReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/PrimaryReplicatorStatus.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Query.PrimaryReplicatorStatus\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public PrimaryReplicatorStatus()
    content.vb: Public Sub New
  overload: System.Fabric.Query.PrimaryReplicatorStatus.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Query.PrimaryReplicatorStatus.ReplicationQueueStatus
  commentId: P:System.Fabric.Query.PrimaryReplicatorStatus.ReplicationQueueStatus
  id: ReplicationQueueStatus
  parent: System.Fabric.Query.PrimaryReplicatorStatus
  langs:
  - csharp
  - vb
  name: ReplicationQueueStatus
  nameWithType: PrimaryReplicatorStatus.ReplicationQueueStatus
  fullName: System.Fabric.Query.PrimaryReplicatorStatus.ReplicationQueueStatus
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/PrimaryReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicationQueueStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/PrimaryReplicatorStatus.cs
    startLine: 28
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the status of the Replication queue.</p>\n"
  example: []
  syntax:
    content: public ReplicatorQueueStatus ReplicationQueueStatus { get; }
    content.vb: Public ReadOnly Property ReplicationQueueStatus As ReplicatorQueueStatus
    parameters: []
    return:
      type: System.Fabric.Query.ReplicatorQueueStatus
      description: "\n<p>The status of the replication queue.</p>\n"
  overload: System.Fabric.Query.PrimaryReplicatorStatus.ReplicationQueueStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.PrimaryReplicatorStatus.RemoteReplicators
  commentId: P:System.Fabric.Query.PrimaryReplicatorStatus.RemoteReplicators
  id: RemoteReplicators
  parent: System.Fabric.Query.PrimaryReplicatorStatus
  langs:
  - csharp
  - vb
  name: RemoteReplicators
  nameWithType: PrimaryReplicatorStatus.RemoteReplicators
  fullName: System.Fabric.Query.PrimaryReplicatorStatus.RemoteReplicators
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/PrimaryReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RemoteReplicators
    path: src/prod/src/managed/Api/src/System/Fabric/Query/PrimaryReplicatorStatus.cs
    startLine: 36
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the status of all the secondary replicas that the primary is aware of.</p>\n"
  example: []
  syntax:
    content: public IList<RemoteReplicatorStatus> RemoteReplicators { get; }
    content.vb: Public ReadOnly Property RemoteReplicators As IList(Of RemoteReplicatorStatus)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Query.RemoteReplicatorStatus}
      description: "\n<p>The list of remote replicators.</p>\n"
  overload: System.Fabric.Query.PrimaryReplicatorStatus.RemoteReplicators*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.ReplicaRole.Primary
  commentId: F:System.Fabric.ReplicaRole.Primary
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Query.ReplicatorStatus
  commentId: T:System.Fabric.Query.ReplicatorStatus
  parent: System.Fabric.Query
  isExternal: false
  name: ReplicatorStatus
  nameWithType: ReplicatorStatus
  fullName: System.Fabric.Query.ReplicatorStatus
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.PrimaryReplicatorStatus.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<PrimaryReplicatorStatus>()
  nameWithType: ByteArraySerializer.Serialize<PrimaryReplicatorStatus>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.PrimaryReplicatorStatus>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of PrimaryReplicatorStatus)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.PrimaryReplicatorStatus)()
  name.vb: Serialize(Of PrimaryReplicatorStatus)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<PrimaryReplicatorStatus>
    nameWithType: ByteArraySerializer.Serialize<PrimaryReplicatorStatus>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.PrimaryReplicatorStatus>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of PrimaryReplicatorStatus)
    nameWithType: ByteArraySerializer.Serialize(Of PrimaryReplicatorStatus)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.PrimaryReplicatorStatus)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.PrimaryReplicatorStatus
  commentId: T:System.Fabric.Query.PrimaryReplicatorStatus
  parent: System.Fabric.Query
  isExternal: false
  name: PrimaryReplicatorStatus
  nameWithType: PrimaryReplicatorStatus
  fullName: System.Fabric.Query.PrimaryReplicatorStatus
- uid: System.Fabric.Query.PrimaryReplicatorStatus.#ctor*
  commentId: Overload:System.Fabric.Query.PrimaryReplicatorStatus.#ctor
  isExternal: false
  name: PrimaryReplicatorStatus
  nameWithType: PrimaryReplicatorStatus.PrimaryReplicatorStatus
  fullName: System.Fabric.Query.PrimaryReplicatorStatus.PrimaryReplicatorStatus
- uid: System.Fabric.Query.PrimaryReplicatorStatus.ReplicationQueueStatus*
  commentId: Overload:System.Fabric.Query.PrimaryReplicatorStatus.ReplicationQueueStatus
  isExternal: false
  name: ReplicationQueueStatus
  nameWithType: PrimaryReplicatorStatus.ReplicationQueueStatus
  fullName: System.Fabric.Query.PrimaryReplicatorStatus.ReplicationQueueStatus
- uid: System.Fabric.Query.ReplicatorQueueStatus
  commentId: T:System.Fabric.Query.ReplicatorQueueStatus
  parent: System.Fabric.Query
  isExternal: false
  name: ReplicatorQueueStatus
  nameWithType: ReplicatorQueueStatus
  fullName: System.Fabric.Query.ReplicatorQueueStatus
- uid: System.Fabric.Query.PrimaryReplicatorStatus.RemoteReplicators*
  commentId: Overload:System.Fabric.Query.PrimaryReplicatorStatus.RemoteReplicators
  isExternal: false
  name: RemoteReplicators
  nameWithType: PrimaryReplicatorStatus.RemoteReplicators
  fullName: System.Fabric.Query.PrimaryReplicatorStatus.RemoteReplicators
- uid: System.Collections.Generic.IList{System.Fabric.Query.RemoteReplicatorStatus}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Query.RemoteReplicatorStatus}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<RemoteReplicatorStatus>
  nameWithType: IList<RemoteReplicatorStatus>
  fullName: System.Collections.Generic.IList<System.Fabric.Query.RemoteReplicatorStatus>
  nameWithType.vb: IList(Of RemoteReplicatorStatus)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Query.RemoteReplicatorStatus)
  name.vb: IList(Of RemoteReplicatorStatus)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.RemoteReplicatorStatus
    name: RemoteReplicatorStatus
    nameWithType: RemoteReplicatorStatus
    fullName: System.Fabric.Query.RemoteReplicatorStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.RemoteReplicatorStatus
    name: RemoteReplicatorStatus
    nameWithType: RemoteReplicatorStatus
    fullName: System.Fabric.Query.RemoteReplicatorStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
