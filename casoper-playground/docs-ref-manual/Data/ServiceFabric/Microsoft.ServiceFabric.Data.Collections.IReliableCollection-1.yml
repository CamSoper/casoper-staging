### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1
  commentId: T:Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1
  id: IReliableCollection`1
  parent: Microsoft.ServiceFabric.Data.Collections
  children:
  - Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.ClearAsync
  - Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.GetCountAsync(Microsoft.ServiceFabric.Data.ITransaction)
  langs:
  - csharp
  - vb
  name: IReliableCollection<T>
  nameWithType: IReliableCollection<T>
  fullName: Microsoft.ServiceFabric.Data.Collections.IReliableCollection<T>
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IReliableCollection.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IReliableCollection
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IReliableCollection.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Collections
  summary: "\nDefines methods for manipulating reliable collections.\n"
  example: []
  syntax:
    content: 'public interface IReliableCollection<T> : IReliableState'
    content.vb: >-
      Public Interface IReliableCollection(Of T)
          Inherits IReliableState
    typeParameters:
    - id: T
      description: The type of the elements in the collection.
  inheritedMembers:
  - Microsoft.ServiceFabric.Data.IReliableState.Name
  extensionMethods:
  - Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  nameWithType.vb: IReliableCollection(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.ServiceFabric.Data.Collections.IReliableCollection(Of T)
  name.vb: IReliableCollection(Of T)
- uid: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.GetCountAsync(Microsoft.ServiceFabric.Data.ITransaction)
  commentId: M:Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.GetCountAsync(Microsoft.ServiceFabric.Data.ITransaction)
  id: GetCountAsync(Microsoft.ServiceFabric.Data.ITransaction)
  parent: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1
  langs:
  - csharp
  - vb
  name: GetCountAsync(ITransaction)
  nameWithType: IReliableCollection<T>.GetCountAsync(ITransaction)
  fullName: Microsoft.ServiceFabric.Data.Collections.IReliableCollection<T>.GetCountAsync(Microsoft.ServiceFabric.Data.ITransaction)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IReliableCollection.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetCountAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IReliableCollection.cs
    startLine: 31
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Collections
  summary: "\nGets the number of elements contained in the <xref href=\"Microsoft.ServiceFabric.Data.Collections.IReliableCollection%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: Task<long> GetCountAsync(ITransaction tx)
    content.vb: Function GetCountAsync(tx As ITransaction) As Task(Of Long)
    parameters:
    - id: tx
      type: Microsoft.ServiceFabric.Data.ITransaction
      description: Transaction to associate this operation with.
    return:
      type: System.Threading.Tasks.Task{System.Int64}
      description: A task that represents the asynchronous operation. The task result indicates the number of elements.
  overload: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.GetCountAsync*
  exceptions:
  - type: System.Fabric.FabricNotReadableException
    commentId: T:System.Fabric.FabricNotReadableException
    description: "\nException indicates that the  <cref name=\"IReliableCollection{T}\"></cref> cannot serve reads at the moment.\n<cref name=\"FabricNotReadableException\"></cref> can be thrown in all <cref name=\"ReplicaRole\"></cref>s.\nOne example for it being thrown in the <cref name=\"ReplicaRole.Primary\"></cref> is loss of <cref name=\"IStatefulServicePartition.ReadStatus\"></cref>.\nOne example for it being thrown in the <cref name=\"ReplicaRole.ActiveSecondary\"></cref> is that Reliable Collection's state is not yet consistent.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe exception that is thrown when a method call is invalid for the object's current state.\nExample, transaction used is already terminated: committed or aborted.\n"
  nameWithType.vb: IReliableCollection(Of T).GetCountAsync(ITransaction)
  fullName.vb: Microsoft.ServiceFabric.Data.Collections.IReliableCollection(Of T).GetCountAsync(Microsoft.ServiceFabric.Data.ITransaction)
- uid: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.ClearAsync
  commentId: M:Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.ClearAsync
  id: ClearAsync
  parent: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1
  langs:
  - csharp
  - vb
  name: ClearAsync()
  nameWithType: IReliableCollection<T>.ClearAsync()
  fullName: Microsoft.ServiceFabric.Data.Collections.IReliableCollection<T>.ClearAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IReliableCollection.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClearAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/IReliableCollection.cs
    startLine: 39
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Collections
  summary: "\nRemoves all state from the <xref href=\"Microsoft.ServiceFabric.Data.Collections.IReliableCollection%601\" data-throw-if-not-resolved=\"false\"></xref>, including replicated and persisted state.\n"
  example: []
  syntax:
    content: Task ClearAsync()
    content.vb: Function ClearAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous clear operation.
  overload: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.ClearAsync*
  exceptions:
  - type: System.Fabric.FabricNotPrimaryException
    commentId: T:System.Fabric.FabricNotPrimaryException
    description: The exception that is thrown when the <cref name="IReliableQueue{T}"></cref> is not in <cref name="ReplicaRole.Primary"></cref>.
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: The operation failed to complete within the given timeout.
  nameWithType.vb: IReliableCollection(Of T).ClearAsync()
  fullName.vb: Microsoft.ServiceFabric.Data.Collections.IReliableCollection(Of T).ClearAsync()
references:
- uid: Microsoft.ServiceFabric.Data.Collections
  commentId: N:Microsoft.ServiceFabric.Data.Collections
  isExternal: false
  name: Microsoft.ServiceFabric.Data.Collections
  nameWithType: Microsoft.ServiceFabric.Data.Collections
  fullName: Microsoft.ServiceFabric.Data.Collections
- uid: Microsoft.ServiceFabric.Data.IReliableState.Name
  commentId: P:Microsoft.ServiceFabric.Data.IReliableState.Name
  parent: Microsoft.ServiceFabric.Data.IReliableState
  isExternal: false
  name: Name
  nameWithType: IReliableState.Name
  fullName: Microsoft.ServiceFabric.Data.IReliableState.Name
- uid: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IReliableCollection<T>>()
  nameWithType: ByteArraySerializer.Serialize<IReliableCollection<T>>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Collections.IReliableCollection<T>>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IReliableCollection(Of T))()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Collections.IReliableCollection(Of T))()
  name.vb: Serialize(Of IReliableCollection(Of T))()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IReliableCollection<T>>
    nameWithType: ByteArraySerializer.Serialize<IReliableCollection<T>>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Collections.IReliableCollection<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IReliableCollection(Of T))
    nameWithType: ByteArraySerializer.Serialize(Of IReliableCollection(Of T))
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Collections.IReliableCollection(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.IReliableState
  commentId: T:Microsoft.ServiceFabric.Data.IReliableState
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: IReliableState
  nameWithType: IReliableState
  fullName: Microsoft.ServiceFabric.Data.IReliableState
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1
  commentId: T:Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1
  isExternal: false
  name: IReliableCollection<T>
  nameWithType: IReliableCollection<T>
  fullName: Microsoft.ServiceFabric.Data.Collections.IReliableCollection<T>
  nameWithType.vb: IReliableCollection(Of T)
  fullname.vb: Microsoft.ServiceFabric.Data.Collections.IReliableCollection(Of T)
  name.vb: IReliableCollection(Of T)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1
    name: IReliableCollection
    nameWithType: IReliableCollection
    fullName: Microsoft.ServiceFabric.Data.Collections.IReliableCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1
    name: IReliableCollection
    nameWithType: IReliableCollection
    fullName: Microsoft.ServiceFabric.Data.Collections.IReliableCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.GetCountAsync*
  commentId: Overload:Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.GetCountAsync
  isExternal: false
  name: GetCountAsync
  nameWithType: IReliableCollection<T>.GetCountAsync
  fullName: Microsoft.ServiceFabric.Data.Collections.IReliableCollection<T>.GetCountAsync
  nameWithType.vb: IReliableCollection(Of T).GetCountAsync
  fullname.vb: Microsoft.ServiceFabric.Data.Collections.IReliableCollection(Of T).GetCountAsync
- uid: System.Fabric.FabricNotReadableException
  commentId: T:System.Fabric.FabricNotReadableException
  isExternal: false
  name: FabricNotReadableException
  nameWithType: FabricNotReadableException
  fullName: System.Fabric.FabricNotReadableException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Microsoft.ServiceFabric.Data.ITransaction
  commentId: T:Microsoft.ServiceFabric.Data.ITransaction
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: Microsoft.ServiceFabric.Data.ITransaction
- uid: System.Threading.Tasks.Task{System.Int64}
  commentId: T:System.Threading.Tasks.Task{System.Int64}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int64>
  nameWithType: Task<Int64>
  fullName: System.Threading.Tasks.Task<System.Int64>
  nameWithType.vb: Task(Of Int64)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int64)
  name.vb: Task(Of Int64)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.ClearAsync*
  commentId: Overload:Microsoft.ServiceFabric.Data.Collections.IReliableCollection`1.ClearAsync
  isExternal: false
  name: ClearAsync
  nameWithType: IReliableCollection<T>.ClearAsync
  fullName: Microsoft.ServiceFabric.Data.Collections.IReliableCollection<T>.ClearAsync
  nameWithType.vb: IReliableCollection(Of T).ClearAsync
  fullname.vb: Microsoft.ServiceFabric.Data.Collections.IReliableCollection(Of T).ClearAsync
- uid: System.Fabric.FabricNotPrimaryException
  commentId: T:System.Fabric.FabricNotPrimaryException
  isExternal: false
  name: FabricNotPrimaryException
  nameWithType: FabricNotPrimaryException
  fullName: System.Fabric.FabricNotPrimaryException
- uid: System.TimeoutException
  commentId: T:System.TimeoutException
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
