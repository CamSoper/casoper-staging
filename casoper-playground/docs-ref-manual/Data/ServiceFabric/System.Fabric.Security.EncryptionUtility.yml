### YamlMime:ManagedReference
items:
- uid: System.Fabric.Security.EncryptionUtility
  commentId: T:System.Fabric.Security.EncryptionUtility
  id: EncryptionUtility
  parent: System.Fabric.Security
  children:
  - System.Fabric.Security.EncryptionUtility.#ctor
  - System.Fabric.Security.EncryptionUtility.DecryptText(System.String)
  - System.Fabric.Security.EncryptionUtility.DecryptText(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  - System.Fabric.Security.EncryptionUtility.DecryptValue(System.String)
  - System.Fabric.Security.EncryptionUtility.EncryptText(System.String,System.String,System.String)
  - System.Fabric.Security.EncryptionUtility.EncryptText(System.String,System.String,System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)
  - System.Fabric.Security.EncryptionUtility.EncryptTextByCertFile(System.String,System.String,System.String)
  - System.Fabric.Security.EncryptionUtility.EncryptValue(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: EncryptionUtility
  nameWithType: EncryptionUtility
  fullName: System.Fabric.Security.EncryptionUtility
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EncryptionUtility
    path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
    startLine: 16
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\n<p>Represents the encryption utility.</p>\n"
  example: []
  syntax:
    content: public sealed class EncryptionUtility
    content.vb: Public NotInheritable Class EncryptionUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Security.EncryptionUtility.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Security.EncryptionUtility.#ctor
  commentId: M:System.Fabric.Security.EncryptionUtility.#ctor
  id: '#ctor'
  parent: System.Fabric.Security.EncryptionUtility
  langs:
  - csharp
  - vb
  name: EncryptionUtility()
  nameWithType: EncryptionUtility.EncryptionUtility()
  fullName: System.Fabric.Security.EncryptionUtility.EncryptionUtility()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
    startLine: 21
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\n<p>Instantiates a new <xref href=\"System.Fabric.Security.EncryptionUtility\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public EncryptionUtility()
    content.vb: Public Sub New
  overload: System.Fabric.Security.EncryptionUtility.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Security.EncryptionUtility.EncryptText(System.String,System.String,System.String)
  commentId: M:System.Fabric.Security.EncryptionUtility.EncryptText(System.String,System.String,System.String)
  id: EncryptText(System.String,System.String,System.String)
  parent: System.Fabric.Security.EncryptionUtility
  langs:
  - csharp
  - vb
  name: EncryptText(String, String, String)
  nameWithType: EncryptionUtility.EncryptText(String, String, String)
  fullName: System.Fabric.Security.EncryptionUtility.EncryptText(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EncryptText
    path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
    startLine: 42
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\n<p>Encrypt text string with an installed X509 certificate. Certificate store location is LocalMachine and the encryption algorithm is AES256 CBC.</p>\n"
  example: []
  syntax:
    content: public static string EncryptText(string textToEncrypt, string thumbprint, string storeName)
    content.vb: Public Shared Function EncryptText(textToEncrypt As String, thumbprint As String, storeName As String) As String
    parameters:
    - id: textToEncrypt
      type: System.String
      description: "\n<p>The text string to encrypt.</p>\n"
    - id: thumbprint
      type: System.String
      description: "\n<p>The thumbprint of encryption certificate.</p>\n"
    - id: storeName
      type: System.String
      description: "\n<p>The name of certificate store, from which encryption certificate is retrieved.</p>\n"
    return:
      type: System.String
      description: "\n<p>The encrypted text as <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Security.EncryptionUtility.EncryptText*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.Security.EncryptionUtility.EncryptText(System.String,System.String,System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)
  commentId: M:System.Fabric.Security.EncryptionUtility.EncryptText(System.String,System.String,System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)
  id: EncryptText(System.String,System.String,System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)
  parent: System.Fabric.Security.EncryptionUtility
  langs:
  - csharp
  - vb
  name: EncryptText(String, String, String, StoreLocation, String)
  nameWithType: EncryptionUtility.EncryptText(String, String, String, StoreLocation, String)
  fullName: System.Fabric.Security.EncryptionUtility.EncryptText(System.String, System.String, System.String, System.Security.Cryptography.X509Certificates.StoreLocation, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EncryptText
    path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
    startLine: 76
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\n<p>Encrypt text string with an installed X509 certificate.</p>\n"
  example: []
  syntax:
    content: public static string EncryptText(string textToEncrypt, string thumbprint, string storeName, StoreLocation storeLocation, string algorithmOid)
    content.vb: Public Shared Function EncryptText(textToEncrypt As String, thumbprint As String, storeName As String, storeLocation As StoreLocation, algorithmOid As String) As String
    parameters:
    - id: textToEncrypt
      type: System.String
      description: "\n<p>The text to encrypt.</p>\n"
    - id: thumbprint
      type: System.String
      description: "\n<p>The thumbprint of encryption certificate.</p>\n"
    - id: storeName
      type: System.String
      description: "\n<p>The name of certificate store, from which encryption certificate is retrieved.</p>\n"
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "\n<p>The certificate store location to retrieve encryption certificate.</p>\n"
    - id: algorithmOid
      type: System.String
      description: "\n<p>The encryption algorithm object identifier (OID).</p>\n"
    return:
      type: System.String
      description: "\n<p>The encrypted text as <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Security.EncryptionUtility.EncryptText*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.Security.EncryptionUtility.EncryptTextByCertFile(System.String,System.String,System.String)
  commentId: M:System.Fabric.Security.EncryptionUtility.EncryptTextByCertFile(System.String,System.String,System.String)
  id: EncryptTextByCertFile(System.String,System.String,System.String)
  parent: System.Fabric.Security.EncryptionUtility
  langs:
  - csharp
  - vb
  name: EncryptTextByCertFile(String, String, String)
  nameWithType: EncryptionUtility.EncryptTextByCertFile(String, String, String)
  fullName: System.Fabric.Security.EncryptionUtility.EncryptTextByCertFile(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EncryptTextByCertFile
    path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
    startLine: 109
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\n<p>Encrypt text string with an X509 certificate in a file.</p>\n"
  example: []
  syntax:
    content: public static string EncryptTextByCertFile(string textToEncrypt, string certFileName, string algorithmOid)
    content.vb: Public Shared Function EncryptTextByCertFile(textToEncrypt As String, certFileName As String, algorithmOid As String) As String
    parameters:
    - id: textToEncrypt
      type: System.String
      description: "\n<p>The text to encrypt.</p>\n"
    - id: certFileName
      type: System.String
      description: "\n<p>The encryption certificate file path.</p>\n"
    - id: algorithmOid
      type: System.String
      description: "\n<p>The encryption algorithm object identifier (OID).</p>\n"
    return:
      type: System.String
      description: "\n<p>The encrypted text as <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Security.EncryptionUtility.EncryptTextByCertFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.Security.EncryptionUtility.DecryptText(System.String)
  commentId: M:System.Fabric.Security.EncryptionUtility.DecryptText(System.String)
  id: DecryptText(System.String)
  parent: System.Fabric.Security.EncryptionUtility
  langs:
  - csharp
  - vb
  name: DecryptText(String)
  nameWithType: EncryptionUtility.DecryptText(String)
  fullName: System.Fabric.Security.EncryptionUtility.DecryptText(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DecryptText
    path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
    startLine: 132
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\n<p>Decrypt a text string encrypted by EncryptText methods of <xref href=\"System.Fabric.Security.EncryptionUtility\" data-throw-if-not-resolved=\"false\"></xref>, it is assumed that the store location of decryption certificate is LocalMachine.</p>\n"
  example: []
  syntax:
    content: public static SecureString DecryptText(string textToDecrypt)
    content.vb: Public Shared Function DecryptText(textToDecrypt As String) As SecureString
    parameters:
    - id: textToDecrypt
      type: System.String
      description: "\n<p>The encrypted text to decrypt.</p>\n"
    return:
      type: System.Security.SecureString
      description: "\n<p>The decrypted text as <xref href=\"System.Security.SecureString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Security.EncryptionUtility.DecryptText*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.Security.EncryptionUtility.DecryptText(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  commentId: M:System.Fabric.Security.EncryptionUtility.DecryptText(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  id: DecryptText(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  parent: System.Fabric.Security.EncryptionUtility
  langs:
  - csharp
  - vb
  name: DecryptText(String, StoreLocation)
  nameWithType: EncryptionUtility.DecryptText(String, StoreLocation)
  fullName: System.Fabric.Security.EncryptionUtility.DecryptText(System.String, System.Security.Cryptography.X509Certificates.StoreLocation)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DecryptText
    path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
    startLine: 149
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\n<p>Decrypt a text string encrypted by EncryptText methods of <xref href=\"System.Fabric.Security.EncryptionUtility\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public static SecureString DecryptText(string textToDecrypt, StoreLocation storeLocation)
    content.vb: Public Shared Function DecryptText(textToDecrypt As String, storeLocation As StoreLocation) As SecureString
    parameters:
    - id: textToDecrypt
      type: System.String
      description: "\n<p>The encrypted text to decrypt.</p>\n"
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "\n<p>The certificate store location to retrieve decryption certificate.</p>\n"
    return:
      type: System.Security.SecureString
      description: "\n<p>The decrypted text as <xref href=\"System.Security.SecureString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Security.EncryptionUtility.DecryptText*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.Security.EncryptionUtility.EncryptValue(System.String,System.String,System.String)
  commentId: M:System.Fabric.Security.EncryptionUtility.EncryptValue(System.String,System.String,System.String)
  id: EncryptValue(System.String,System.String,System.String)
  parent: System.Fabric.Security.EncryptionUtility
  langs:
  - csharp
  - vb
  name: EncryptValue(String, String, String)
  nameWithType: EncryptionUtility.EncryptValue(String, String, String)
  fullName: System.Fabric.Security.EncryptionUtility.EncryptValue(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EncryptValue
    path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
    startLine: 174
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\n<p>Encrypts string value using specified certificate. This method is deprecated; EncryptText method should be used instead.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated by EncryptText", false)]

      public static string EncryptValue(string thumbprint, string storeLocation, string textToEncrypt)
    content.vb: >-
      <Obsolete("Deprecated by EncryptText", False)>

      Public Shared Function EncryptValue(thumbprint As String, storeLocation As String, textToEncrypt As String) As String
    parameters:
    - id: thumbprint
      type: System.String
      description: "\n<p>The thumbprint of certificate used to encrypt text.</p>\n"
    - id: storeLocation
      type: System.String
      description: "\n<p>The StoreName for the certificate. Defaults to \"My\" store.</p>\n"
    - id: textToEncrypt
      type: System.String
      description: "\n<p>The text value that needs to be encrypted.</p>\n"
    return:
      type: System.String
      description: "\n<p>The encrypted text as <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Security.EncryptionUtility.EncryptValue*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Deprecated by EncryptText
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.Security.EncryptionUtility.DecryptValue(System.String)
  commentId: M:System.Fabric.Security.EncryptionUtility.DecryptValue(System.String)
  id: DecryptValue(System.String)
  parent: System.Fabric.Security.EncryptionUtility
  langs:
  - csharp
  - vb
  name: DecryptValue(String)
  nameWithType: EncryptionUtility.DecryptValue(String)
  fullName: System.Fabric.Security.EncryptionUtility.DecryptValue(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DecryptValue
    path: src/prod/src/managed/Api/src/System/Fabric/Security/EncryptionUtility.cs
    startLine: 197
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\n<p>Decrypts string values that were encrypted by calling EncryptValue. This method is deprecated; EncryptText method should be used instead.</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Deprecated DecryptText", false)]

      public static string DecryptValue(string textToDecrypt)
    content.vb: >-
      <Obsolete("Deprecated DecryptText", False)>

      Public Shared Function DecryptValue(textToDecrypt As String) As String
    parameters:
    - id: textToDecrypt
      type: System.String
      description: "\n<p>The string value to decrypt.</p>\n"
    return:
      type: System.String
      description: "\n<p>The decrypted value.</p>\n"
  overload: System.Fabric.Security.EncryptionUtility.DecryptValue*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Deprecated DecryptText
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Fabric.Security
  commentId: N:System.Fabric.Security
  isExternal: false
  name: System.Fabric.Security
  nameWithType: System.Fabric.Security
  fullName: System.Fabric.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Security.EncryptionUtility.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<EncryptionUtility>()
  nameWithType: ByteArraySerializer.Serialize<EncryptionUtility>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Security.EncryptionUtility>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of EncryptionUtility)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Security.EncryptionUtility)()
  name.vb: Serialize(Of EncryptionUtility)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<EncryptionUtility>
    nameWithType: ByteArraySerializer.Serialize<EncryptionUtility>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Security.EncryptionUtility>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of EncryptionUtility)
    nameWithType: ByteArraySerializer.Serialize(Of EncryptionUtility)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Security.EncryptionUtility)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Security.EncryptionUtility
  commentId: T:System.Fabric.Security.EncryptionUtility
  isExternal: false
  name: EncryptionUtility
  nameWithType: EncryptionUtility
  fullName: System.Fabric.Security.EncryptionUtility
- uid: System.Fabric.Security.EncryptionUtility.#ctor*
  commentId: Overload:System.Fabric.Security.EncryptionUtility.#ctor
  isExternal: false
  name: EncryptionUtility
  nameWithType: EncryptionUtility.EncryptionUtility
  fullName: System.Fabric.Security.EncryptionUtility.EncryptionUtility
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Security.EncryptionUtility.EncryptText*
  commentId: Overload:System.Fabric.Security.EncryptionUtility.EncryptText
  isExternal: false
  name: EncryptText
  nameWithType: EncryptionUtility.EncryptText
  fullName: System.Fabric.Security.EncryptionUtility.EncryptText
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  commentId: T:System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Fabric.Security.EncryptionUtility.EncryptTextByCertFile*
  commentId: Overload:System.Fabric.Security.EncryptionUtility.EncryptTextByCertFile
  isExternal: false
  name: EncryptTextByCertFile
  nameWithType: EncryptionUtility.EncryptTextByCertFile
  fullName: System.Fabric.Security.EncryptionUtility.EncryptTextByCertFile
- uid: System.Security.SecureString
  commentId: T:System.Security.SecureString
  parent: System.Security
  isExternal: true
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Fabric.Security.EncryptionUtility.DecryptText*
  commentId: Overload:System.Fabric.Security.EncryptionUtility.DecryptText
  isExternal: false
  name: DecryptText
  nameWithType: EncryptionUtility.DecryptText
  fullName: System.Fabric.Security.EncryptionUtility.DecryptText
- uid: System.Security
  commentId: N:System.Security
  isExternal: false
  name: System.Security
  nameWithType: System.Security
  fullName: System.Security
- uid: System.Fabric.Security.EncryptionUtility.EncryptValue*
  commentId: Overload:System.Fabric.Security.EncryptionUtility.EncryptValue
  isExternal: false
  name: EncryptValue
  nameWithType: EncryptionUtility.EncryptValue
  fullName: System.Fabric.Security.EncryptionUtility.EncryptValue
- uid: System.Fabric.Security.EncryptionUtility.DecryptValue*
  commentId: Overload:System.Fabric.Security.EncryptionUtility.DecryptValue
  isExternal: false
  name: DecryptValue
  nameWithType: EncryptionUtility.DecryptValue
  fullName: System.Fabric.Security.EncryptionUtility.DecryptValue
