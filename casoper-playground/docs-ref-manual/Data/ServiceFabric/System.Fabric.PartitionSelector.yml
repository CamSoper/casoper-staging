### YamlMime:ManagedReference
items:
- uid: System.Fabric.PartitionSelector
  commentId: T:System.Fabric.PartitionSelector
  id: PartitionSelector
  parent: System.Fabric
  children:
  - System.Fabric.PartitionSelector.Equals(System.Object)
  - System.Fabric.PartitionSelector.GetHashCode
  - System.Fabric.PartitionSelector.PartitionIdOf(System.Uri,System.Guid)
  - System.Fabric.PartitionSelector.PartitionKeyOf(System.Uri,System.Int64)
  - System.Fabric.PartitionSelector.PartitionKeyOf(System.Uri,System.String)
  - System.Fabric.PartitionSelector.RandomOf(System.Uri)
  - System.Fabric.PartitionSelector.SingletonOf(System.Uri)
  - System.Fabric.PartitionSelector.ToString
  langs:
  - csharp
  - vb
  name: PartitionSelector
  nameWithType: PartitionSelector
  fullName: System.Fabric.PartitionSelector
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionSelector
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
    startLine: 22
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nThis is a helper class for selecting partitions. \n"
  remarks: "\nIt allows the user to select partitions to be targeted by the testability APIs. The selection can be a particular partition of a service based on the \nId or Key or a random partition of a service.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class PartitionSelector
    content.vb: >-
      <Serializable>

      Public Class PartitionSelector
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.PartitionSelector.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.PartitionSelector.RandomOf(System.Uri)
  commentId: M:System.Fabric.PartitionSelector.RandomOf(System.Uri)
  id: RandomOf(System.Uri)
  parent: System.Fabric.PartitionSelector
  langs:
  - csharp
  - vb
  name: RandomOf(Uri)
  nameWithType: PartitionSelector.RandomOf(Uri)
  fullName: System.Fabric.PartitionSelector.RandomOf(System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RandomOf
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
    startLine: 105
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nSelects a random partition for given service.\n"
  example: []
  syntax:
    content: public static PartitionSelector RandomOf(Uri serviceName)
    content.vb: Public Shared Function RandomOf(serviceName As Uri) As PartitionSelector
    parameters:
    - id: serviceName
      type: System.Uri
      description: Name of the service whose partition needs to be selected.
    return:
      type: System.Fabric.PartitionSelector
      description: Constructed PartitionSelector.
  overload: System.Fabric.PartitionSelector.RandomOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.PartitionSelector.SingletonOf(System.Uri)
  commentId: M:System.Fabric.PartitionSelector.SingletonOf(System.Uri)
  id: SingletonOf(System.Uri)
  parent: System.Fabric.PartitionSelector
  langs:
  - csharp
  - vb
  name: SingletonOf(Uri)
  nameWithType: PartitionSelector.SingletonOf(Uri)
  fullName: System.Fabric.PartitionSelector.SingletonOf(System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SingletonOf
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
    startLine: 115
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nSelects the singleton partition for a service.\n"
  example: []
  syntax:
    content: public static PartitionSelector SingletonOf(Uri serviceName)
    content.vb: Public Shared Function SingletonOf(serviceName As Uri) As PartitionSelector
    parameters:
    - id: serviceName
      type: System.Uri
      description: Name of the service whose partition needs to be selected.
    return:
      type: System.Fabric.PartitionSelector
      description: Constructed PartitionSelector.
  overload: System.Fabric.PartitionSelector.SingletonOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.PartitionSelector.PartitionKeyOf(System.Uri,System.String)
  commentId: M:System.Fabric.PartitionSelector.PartitionKeyOf(System.Uri,System.String)
  id: PartitionKeyOf(System.Uri,System.String)
  parent: System.Fabric.PartitionSelector
  langs:
  - csharp
  - vb
  name: PartitionKeyOf(Uri, String)
  nameWithType: PartitionSelector.PartitionKeyOf(Uri, String)
  fullName: System.Fabric.PartitionSelector.PartitionKeyOf(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionKeyOf
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
    startLine: 126
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nSelects a partition for the service with the specified PartitionName.\n"
  example: []
  syntax:
    content: public static PartitionSelector PartitionKeyOf(Uri serviceName, string partitionName)
    content.vb: Public Shared Function PartitionKeyOf(serviceName As Uri, partitionName As String) As PartitionSelector
    parameters:
    - id: serviceName
      type: System.Uri
      description: Name of the service whose partition needs to be selected.
    - id: partitionName
      type: System.String
      description: Name of the partition that needs to be selected.
    return:
      type: System.Fabric.PartitionSelector
      description: Constructed PartitionSelector.
  overload: System.Fabric.PartitionSelector.PartitionKeyOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.PartitionSelector.PartitionKeyOf(System.Uri,System.Int64)
  commentId: M:System.Fabric.PartitionSelector.PartitionKeyOf(System.Uri,System.Int64)
  id: PartitionKeyOf(System.Uri,System.Int64)
  parent: System.Fabric.PartitionSelector
  langs:
  - csharp
  - vb
  name: PartitionKeyOf(Uri, Int64)
  nameWithType: PartitionSelector.PartitionKeyOf(Uri, Int64)
  fullName: System.Fabric.PartitionSelector.PartitionKeyOf(System.Uri, System.Int64)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionKeyOf
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
    startLine: 139
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nSelects a partition for the service to which the specified partition key belongs.\n"
  example: []
  syntax:
    content: public static PartitionSelector PartitionKeyOf(Uri serviceName, long partitionKey)
    content.vb: Public Shared Function PartitionKeyOf(serviceName As Uri, partitionKey As Long) As PartitionSelector
    parameters:
    - id: serviceName
      type: System.Uri
      description: Name of the service whose partition needs to be selected.
    - id: partitionKey
      type: System.Int64
      description: The partition key which belongs to the partition to be selected.
    return:
      type: System.Fabric.PartitionSelector
      description: Constructed PartitionSelector.
  overload: System.Fabric.PartitionSelector.PartitionKeyOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.PartitionSelector.PartitionIdOf(System.Uri,System.Guid)
  commentId: M:System.Fabric.PartitionSelector.PartitionIdOf(System.Uri,System.Guid)
  id: PartitionIdOf(System.Uri,System.Guid)
  parent: System.Fabric.PartitionSelector
  langs:
  - csharp
  - vb
  name: PartitionIdOf(Uri, Guid)
  nameWithType: PartitionSelector.PartitionIdOf(Uri, Guid)
  fullName: System.Fabric.PartitionSelector.PartitionIdOf(System.Uri, System.Guid)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionIdOf
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
    startLine: 150
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nSelects a partition for the service given the PartitionId.\n"
  example: []
  syntax:
    content: public static PartitionSelector PartitionIdOf(Uri serviceName, Guid partitionId)
    content.vb: Public Shared Function PartitionIdOf(serviceName As Uri, partitionId As Guid) As PartitionSelector
    parameters:
    - id: serviceName
      type: System.Uri
      description: Name of the service whose partition needs to be selected.
    - id: partitionId
      type: System.Guid
      description: The PartitionId for the partition.
    return:
      type: System.Fabric.PartitionSelector
      description: Constructed PartitionSelector.
  overload: System.Fabric.PartitionSelector.PartitionIdOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Fabric.PartitionSelector.Equals(System.Object)
  commentId: M:System.Fabric.PartitionSelector.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Fabric.PartitionSelector
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: PartitionSelector.Equals(Object)
  fullName: System.Fabric.PartitionSelector.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Equals
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
    startLine: 190
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nCompares whether two PartitionSelectors are the same.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: PartitionSelector to compare t.o
    return:
      type: System.Boolean
      description: true if same false if not.
  overridden: System.Object.Equals(System.Object)
  overload: System.Fabric.PartitionSelector.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Fabric.PartitionSelector.GetHashCode
  commentId: M:System.Fabric.PartitionSelector.GetHashCode
  id: GetHashCode
  parent: System.Fabric.PartitionSelector
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PartitionSelector.GetHashCode()
  fullName: System.Fabric.PartitionSelector.GetHashCode()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetHashCode
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
    startLine: 220
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nCalls the base GetHashCode()\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: ''
  overridden: System.Object.GetHashCode
  overload: System.Fabric.PartitionSelector.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Fabric.PartitionSelector.ToString
  commentId: M:System.Fabric.PartitionSelector.ToString
  id: ToString
  parent: System.Fabric.PartitionSelector
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PartitionSelector.ToString()
  fullName: System.Fabric.PartitionSelector.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionSelector.cs
    startLine: 229
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nString representation of the partition selector.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the selector.
  overridden: System.Object.ToString
  overload: System.Fabric.PartitionSelector.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.PartitionSelector.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<PartitionSelector>()
  nameWithType: ByteArraySerializer.Serialize<PartitionSelector>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.PartitionSelector>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of PartitionSelector)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.PartitionSelector)()
  name.vb: Serialize(Of PartitionSelector)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<PartitionSelector>
    nameWithType: ByteArraySerializer.Serialize<PartitionSelector>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.PartitionSelector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of PartitionSelector)
    nameWithType: ByteArraySerializer.Serialize(Of PartitionSelector)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.PartitionSelector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.PartitionSelector.RandomOf*
  commentId: Overload:System.Fabric.PartitionSelector.RandomOf
  isExternal: false
  name: RandomOf
  nameWithType: PartitionSelector.RandomOf
  fullName: System.Fabric.PartitionSelector.RandomOf
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.PartitionSelector
  commentId: T:System.Fabric.PartitionSelector
  parent: System.Fabric
  isExternal: false
  name: PartitionSelector
  nameWithType: PartitionSelector
  fullName: System.Fabric.PartitionSelector
- uid: System.Fabric.PartitionSelector.SingletonOf*
  commentId: Overload:System.Fabric.PartitionSelector.SingletonOf
  isExternal: false
  name: SingletonOf
  nameWithType: PartitionSelector.SingletonOf
  fullName: System.Fabric.PartitionSelector.SingletonOf
- uid: System.Fabric.PartitionSelector.PartitionKeyOf*
  commentId: Overload:System.Fabric.PartitionSelector.PartitionKeyOf
  isExternal: false
  name: PartitionKeyOf
  nameWithType: PartitionSelector.PartitionKeyOf
  fullName: System.Fabric.PartitionSelector.PartitionKeyOf
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.PartitionSelector.PartitionIdOf*
  commentId: Overload:System.Fabric.PartitionSelector.PartitionIdOf
  isExternal: false
  name: PartitionIdOf
  nameWithType: PartitionSelector.PartitionIdOf
  fullName: System.Fabric.PartitionSelector.PartitionIdOf
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.PartitionSelector.Equals*
  commentId: Overload:System.Fabric.PartitionSelector.Equals
  isExternal: false
  name: Equals
  nameWithType: PartitionSelector.Equals
  fullName: System.Fabric.PartitionSelector.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.PartitionSelector.GetHashCode*
  commentId: Overload:System.Fabric.PartitionSelector.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: PartitionSelector.GetHashCode
  fullName: System.Fabric.PartitionSelector.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.PartitionSelector.ToString*
  commentId: Overload:System.Fabric.PartitionSelector.ToString
  isExternal: false
  name: ToString
  nameWithType: PartitionSelector.ToString
  fullName: System.Fabric.PartitionSelector.ToString
