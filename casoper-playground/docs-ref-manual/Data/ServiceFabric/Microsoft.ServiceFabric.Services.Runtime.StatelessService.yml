### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  commentId: T:Microsoft.ServiceFabric.Services.Runtime.StatelessService
  id: StatelessService
  parent: Microsoft.ServiceFabric.Services.Runtime
  children:
  - Microsoft.ServiceFabric.Services.Runtime.StatelessService.#ctor(System.Fabric.StatelessServiceContext)
  - Microsoft.ServiceFabric.Services.Runtime.StatelessService.Context
  - Microsoft.ServiceFabric.Services.Runtime.StatelessService.CreateServiceInstanceListeners
  - Microsoft.ServiceFabric.Services.Runtime.StatelessService.GetAddresses
  - Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnAbort
  - Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnCloseAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnOpenAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Runtime.StatelessService.Partition
  - Microsoft.ServiceFabric.Services.Runtime.StatelessService.RunAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: StatelessService
  nameWithType: StatelessService
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StatelessService
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
    startLine: 18
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nRepresents Microsoft Service Fabric based stateless reliable service base class. \nDerive from this class to implement a Microsoft Service Fabric based stateless reliable service.\n"
  example: []
  syntax:
    content: 'public abstract class StatelessService : IStatelessUserServiceInstance'
    content.vb: >-
      Public MustInherit Class StatelessService
          Implements IStatelessUserServiceInstance
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Runtime.StatelessService.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.#ctor(System.Fabric.StatelessServiceContext)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatelessService.#ctor(System.Fabric.StatelessServiceContext)
  id: '#ctor(System.Fabric.StatelessServiceContext)'
  parent: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  langs:
  - csharp
  - vb
  name: StatelessService(StatelessServiceContext)
  nameWithType: StatelessService.StatelessService(StatelessServiceContext)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.StatelessService(System.Fabric.StatelessServiceContext)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
    startLine: 30
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nCreates a new <xref href=\"Microsoft.ServiceFabric.Services.Runtime.StatelessService\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: protected StatelessService(StatelessServiceContext serviceContext)
    content.vb: Protected Sub New(serviceContext As StatelessServiceContext)
    parameters:
    - id: serviceContext
      type: System.Fabric.StatelessServiceContext
      description: "\nA <xref href=\"System.Fabric.StatelessServiceContext\" data-throw-if-not-resolved=\"false\"></xref> that describes the service context.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatelessService.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.GetAddresses
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatelessService.GetAddresses
  id: GetAddresses
  parent: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  langs:
  - csharp
  - vb
  name: GetAddresses()
  nameWithType: StatelessService.GetAddresses()
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.GetAddresses()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetAddresses
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
    startLine: 44
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nGets list of all the addresses for this service instance\nas (ListenerName, Endpoint) key-value pair.\n"
  example: []
  syntax:
    content: protected IReadOnlyDictionary<string, string> GetAddresses()
    content.vb: Protected Function GetAddresses As IReadOnlyDictionary(Of String, String)
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
      description: "\nAn <xref href=\"System.Collections.Generic.IReadOnlyDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> containing list of addresses as\n(ListenerName, Endpoint) key-value pair.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatelessService.GetAddresses*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.Context
  commentId: P:Microsoft.ServiceFabric.Services.Runtime.StatelessService.Context
  id: Context
  parent: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: StatelessService.Context
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.Context
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Context
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
    startLine: 56
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nGets the service context that this stateless service is operating under. It provides\ninformation like InstanceId, PartitionId, ServiceName etc.\n"
  example: []
  syntax:
    content: public StatelessServiceContext Context { get; }
    content.vb: Public ReadOnly Property Context As StatelessServiceContext
    parameters: []
    return:
      type: System.Fabric.StatelessServiceContext
      description: "\nA <xref href=\"System.Fabric.StatelessServiceContext\" data-throw-if-not-resolved=\"false\"></xref> that describes the service context.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatelessService.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.Partition
  commentId: P:Microsoft.ServiceFabric.Services.Runtime.StatelessService.Partition
  id: Partition
  parent: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  langs:
  - csharp
  - vb
  name: Partition
  nameWithType: StatelessService.Partition
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.Partition
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Partition
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
    startLine: 68
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nService partition to which current service instance belongs. \n"
  example: []
  syntax:
    content: protected IStatelessServicePartition Partition { get; }
    content.vb: Protected ReadOnly Property Partition As IStatelessServicePartition
    parameters: []
    return:
      type: System.Fabric.IStatelessServicePartition
      description: "\nAn <xref href=\"System.Fabric.IStatelessServicePartition\" data-throw-if-not-resolved=\"false\"></xref> that represents the \npartition to which this service replica belongs.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatelessService.Partition*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.CreateServiceInstanceListeners
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatelessService.CreateServiceInstanceListeners
  id: CreateServiceInstanceListeners
  parent: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  langs:
  - csharp
  - vb
  name: CreateServiceInstanceListeners()
  nameWithType: StatelessService.CreateServiceInstanceListeners()
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.CreateServiceInstanceListeners()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateServiceInstanceListeners
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
    startLine: 76
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nOverride this method to supply the communication listeners for the service instance. The endpoints returned by the communication listener's\nare stored as a JSON string of ListenerName, Endpoint string pairs like \n{\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<ServiceInstanceListener> CreateServiceInstanceListeners()
    content.vb: Protected Overridable Function CreateServiceInstanceListeners As IEnumerable(Of ServiceInstanceListener)
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener}
      description: List of ServiceInstanceListeners
  overload: Microsoft.ServiceFabric.Services.Runtime.StatelessService.CreateServiceInstanceListeners*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnOpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnOpenAsync(System.Threading.CancellationToken)
  id: OnOpenAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  langs:
  - csharp
  - vb
  name: OnOpenAsync(CancellationToken)
  nameWithType: StatelessService.OnOpenAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnOpenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnOpenAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
    startLine: 89
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nThis method is called as the final step of opening the service.\nOverride this method to be notified that Open has completed for this instance's internal components.\n"
  example: []
  syntax:
    content: protected virtual Task OnOpenAsync(CancellationToken cancellationToken)
    content.vb: Protected Overridable Function OnOpenAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnOpenAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.RunAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatelessService.RunAsync(System.Threading.CancellationToken)
  id: RunAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  langs:
  - csharp
  - vb
  name: RunAsync(CancellationToken)
  nameWithType: StatelessService.RunAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.RunAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RunAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
    startLine: 102
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nServices that want to implement a background task which runs when it is opened,\njust override this method with their logic.\n"
  example: []
  syntax:
    content: protected virtual Task RunAsync(CancellationToken cancellationToken)
    content.vb: Protected Overridable Function RunAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatelessService.RunAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnCloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnCloseAsync(System.Threading.CancellationToken)
  id: OnCloseAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  langs:
  - csharp
  - vb
  name: OnCloseAsync(CancellationToken)
  nameWithType: StatelessService.OnCloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnCloseAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnCloseAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
    startLine: 115
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nThis method is called as the final step of closing the service.\nOverride this method to be notified that Close has completed for this instance's internal components.\n"
  example: []
  syntax:
    content: protected virtual Task OnCloseAsync(CancellationToken cancellationToken)
    content.vb: Protected Overridable Function OnCloseAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token provided to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnCloseAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnAbort
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnAbort
  id: OnAbort
  parent: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  langs:
  - csharp
  - vb
  name: OnAbort()
  nameWithType: StatelessService.OnAbort()
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnAbort()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnAbort
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Runtime/StatelessService.cs
    startLine: 124
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Runtime
  summary: "\nNotification that the service is being aborted.  RunAsync MAY be running concurrently\nwith the execution of this method, as cancellation is not awaited on the abort path.\n"
  example: []
  syntax:
    content: protected virtual void OnAbort()
    content.vb: Protected Overridable Sub OnAbort
  overload: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnAbort*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.ServiceFabric.Services.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Runtime
  fullName: Microsoft.ServiceFabric.Services.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<StatelessService>()
  nameWithType: ByteArraySerializer.Serialize<StatelessService>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Runtime.StatelessService>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of StatelessService)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Runtime.StatelessService)()
  name.vb: Serialize(Of StatelessService)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<StatelessService>
    nameWithType: ByteArraySerializer.Serialize<StatelessService>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Runtime.StatelessService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of StatelessService)
    nameWithType: ByteArraySerializer.Serialize(Of StatelessService)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Runtime.StatelessService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService
  commentId: T:Microsoft.ServiceFabric.Services.Runtime.StatelessService
  isExternal: false
  name: StatelessService
  nameWithType: StatelessService
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService
- uid: System.Fabric.StatelessServiceContext
  commentId: T:System.Fabric.StatelessServiceContext
  parent: System.Fabric
  isExternal: false
  name: StatelessServiceContext
  nameWithType: StatelessServiceContext
  fullName: System.Fabric.StatelessServiceContext
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatelessService.#ctor
  isExternal: false
  name: StatelessService
  nameWithType: StatelessService.StatelessService
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.StatelessService
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.GetAddresses*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatelessService.GetAddresses
  isExternal: false
  name: GetAddresses
  nameWithType: StatelessService.GetAddresses
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.GetAddresses
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, String>
  nameWithType: IReadOnlyDictionary<String, String>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.Context*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatelessService.Context
  isExternal: false
  name: Context
  nameWithType: StatelessService.Context
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.Context
- uid: System.Fabric.IStatelessServicePartition
  commentId: T:System.Fabric.IStatelessServicePartition
  parent: System.Fabric
  isExternal: false
  name: IStatelessServicePartition
  nameWithType: IStatelessServicePartition
  fullName: System.Fabric.IStatelessServicePartition
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.Partition*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatelessService.Partition
  isExternal: false
  name: Partition
  nameWithType: StatelessService.Partition
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.Partition
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.CreateServiceInstanceListeners*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatelessService.CreateServiceInstanceListeners
  isExternal: false
  name: CreateServiceInstanceListeners
  nameWithType: StatelessService.CreateServiceInstanceListeners
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.CreateServiceInstanceListeners
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ServiceInstanceListener>
  nameWithType: IEnumerable<ServiceInstanceListener>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener>
  nameWithType.vb: IEnumerable(Of ServiceInstanceListener)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener)
  name.vb: IEnumerable(Of ServiceInstanceListener)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
    name: ServiceInstanceListener
    nameWithType: ServiceInstanceListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
    name: ServiceInstanceListener
    nameWithType: ServiceInstanceListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceInstanceListener
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnOpenAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnOpenAsync
  isExternal: false
  name: OnOpenAsync
  nameWithType: StatelessService.OnOpenAsync
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnOpenAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.RunAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatelessService.RunAsync
  isExternal: false
  name: RunAsync
  nameWithType: StatelessService.RunAsync
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.RunAsync
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnCloseAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnCloseAsync
  isExternal: false
  name: OnCloseAsync
  nameWithType: StatelessService.OnCloseAsync
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnCloseAsync
- uid: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnAbort*
  commentId: Overload:Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnAbort
  isExternal: false
  name: OnAbort
  nameWithType: StatelessService.OnAbort
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatelessService.OnAbort
