### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
  commentId: T:Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
  id: RemoteExceptionInformation
  parent: Microsoft.ServiceFabric.Services.Communication
  children:
  - Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.#ctor(System.Byte[])
  - Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.Data
  - Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.FromException(System.Exception)
  - Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.ToException(Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation,System.Exception@)
  langs:
  - csharp
  - vb
  name: RemoteExceptionInformation
  nameWithType: RemoteExceptionInformation
  fullName: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/RemoteExceptionInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RemoteExceptionInformation
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/RemoteExceptionInformation.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication
  summary: "\nFault type used by Service Remoting to transfer the exception details from the Service Replica to the client.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Name = "RemoteExceptionInformation", Namespace = "urn:ServiceFabric.Communication")]

      public class RemoteExceptionInformation
    content.vb: >-
      <DataContract(Name:="RemoteExceptionInformation", Namespace:="urn:ServiceFabric.Communication")>

      Public Class RemoteExceptionInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: RemoteExceptionInformation
    - name: Namespace
      type: System.String
      value: urn:ServiceFabric.Communication
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.Data
  commentId: P:Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.Data
  id: Data
  parent: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: RemoteExceptionInformation.Data
  fullName: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.Data
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/RemoteExceptionInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Data
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/RemoteExceptionInformation.cs
    startLine: 20
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication
  summary: "\nSerialized exception details\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Data")]

      public byte[] Data { get; }
    content.vb: >-
      <DataMember(Name:="Data")>

      Public ReadOnly Property Data As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: Data in the exception
  overload: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.Data*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Data
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.#ctor(System.Byte[])
  commentId: M:Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
  langs:
  - csharp
  - vb
  name: RemoteExceptionInformation(Byte[])
  nameWithType: RemoteExceptionInformation.RemoteExceptionInformation(Byte[])
  fullName: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.RemoteExceptionInformation(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/RemoteExceptionInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/RemoteExceptionInformation.cs
    startLine: 27
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication
  summary: "\nInstantiates the RemoteExceptionInformation object with the data\n"
  example: []
  syntax:
    content: public RemoteExceptionInformation(byte[] data)
    content.vb: Public Sub New(data As Byte())
    parameters:
    - id: data
      type: System.Byte[]
      description: Data to be sent to the client
  overload: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.#ctor*
  nameWithType.vb: RemoteExceptionInformation.RemoteExceptionInformation(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.RemoteExceptionInformation(System.Byte())
  name.vb: RemoteExceptionInformation(Byte())
- uid: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.FromException(System.Exception)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.FromException(System.Exception)
  id: FromException(System.Exception)
  parent: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
  langs:
  - csharp
  - vb
  name: FromException(Exception)
  nameWithType: RemoteExceptionInformation.FromException(Exception)
  fullName: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.FromException(System.Exception)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/RemoteExceptionInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FromException
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/RemoteExceptionInformation.cs
    startLine: 37
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication
  summary: "\nFactory method that constructs the RemoteExceptionInformation from an exception.\n"
  example: []
  syntax:
    content: public static RemoteExceptionInformation FromException(Exception exception)
    content.vb: Public Shared Function FromException(exception As Exception) As RemoteExceptionInformation
    parameters:
    - id: exception
      type: System.Exception
      description: Exception
    return:
      type: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
      description: RemoteExceptionInformation
  overload: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.FromException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.ToException(Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation,System.Exception@)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.ToException(Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation,System.Exception@)
  id: ToException(Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation,System.Exception@)
  parent: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
  langs:
  - csharp
  - vb
  name: ToException(RemoteExceptionInformation, out Exception)
  nameWithType: RemoteExceptionInformation.ToException(RemoteExceptionInformation, out Exception)
  fullName: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.ToException(Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation, out System.Exception)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/RemoteExceptionInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToException
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/RemoteExceptionInformation.cs
    startLine: 55
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication
  summary: "\nGets the exception from the RemoteExceptionInformation\n"
  example: []
  syntax:
    content: public static bool ToException(RemoteExceptionInformation remoteExceptionInformation, out Exception result)
    content.vb: Public Shared Function ToException(remoteExceptionInformation As RemoteExceptionInformation, ByRef result As Exception) As Boolean
    parameters:
    - id: remoteExceptionInformation
      type: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
      description: RemoteExceptionInformation
    - id: result
      type: System.Exception
      description: Exception from the remote side
    return:
      type: System.Boolean
      description: true if there was a valid exception, false otherwise
  overload: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.ToException*
  nameWithType.vb: RemoteExceptionInformation.ToException(RemoteExceptionInformation, ByRef Exception)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.ToException(Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation, ByRef System.Exception)
  name.vb: ToException(RemoteExceptionInformation, ByRef Exception)
references:
- uid: Microsoft.ServiceFabric.Services.Communication
  commentId: N:Microsoft.ServiceFabric.Services.Communication
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication
  nameWithType: Microsoft.ServiceFabric.Services.Communication
  fullName: Microsoft.ServiceFabric.Services.Communication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<RemoteExceptionInformation>()
  nameWithType: ByteArraySerializer.Serialize<RemoteExceptionInformation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of RemoteExceptionInformation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation)()
  name.vb: Serialize(Of RemoteExceptionInformation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<RemoteExceptionInformation>
    nameWithType: ByteArraySerializer.Serialize<RemoteExceptionInformation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of RemoteExceptionInformation)
    nameWithType: ByteArraySerializer.Serialize(Of RemoteExceptionInformation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.Data*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.Data
  isExternal: false
  name: Data
  nameWithType: RemoteExceptionInformation.Data
  fullName: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.Data
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.#ctor
  isExternal: false
  name: RemoteExceptionInformation
  nameWithType: RemoteExceptionInformation.RemoteExceptionInformation
  fullName: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.RemoteExceptionInformation
- uid: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.FromException*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.FromException
  isExternal: false
  name: FromException
  nameWithType: RemoteExceptionInformation.FromException
  fullName: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.FromException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
  commentId: T:Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
  parent: Microsoft.ServiceFabric.Services.Communication
  isExternal: false
  name: RemoteExceptionInformation
  nameWithType: RemoteExceptionInformation
  fullName: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation
- uid: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.ToException*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.ToException
  isExternal: false
  name: ToException
  nameWithType: RemoteExceptionInformation.ToException
  fullName: Microsoft.ServiceFabric.Services.Communication.RemoteExceptionInformation.ToException
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
