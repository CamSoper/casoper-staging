### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.TestCommandStatus
  commentId: T:System.Fabric.Query.TestCommandStatus
  id: TestCommandStatus
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.TestCommandStatus.OperationId
  - System.Fabric.Query.TestCommandStatus.State
  - System.Fabric.Query.TestCommandStatus.TestCommandType
  - System.Fabric.Query.TestCommandStatus.ToString
  langs:
  - csharp
  - vb
  name: TestCommandStatus
  nameWithType: TestCommandStatus
  fullName: System.Fabric.Query.TestCommandStatus
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/TestCommandStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TestCommandStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/TestCommandStatus.cs
    startLine: 11
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nThis class represents the status of a test command.  Calling <xref href=\"System.Fabric.FabricClient.TestManagementClient.GetTestCommandStatusListAsync(System.Fabric.Query.TestCommandStateFilter%2cSystem.Fabric.Query.TestCommandTypeFilter%2cSystem.TimeSpan%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> returns an IList of this type of object.\n"
  example: []
  syntax:
    content: public sealed class TestCommandStatus
    content.vb: Public NotInheritable Class TestCommandStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.TestCommandStatus.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.TestCommandStatus.OperationId
  commentId: P:System.Fabric.Query.TestCommandStatus.OperationId
  id: OperationId
  parent: System.Fabric.Query.TestCommandStatus
  langs:
  - csharp
  - vb
  name: OperationId
  nameWithType: TestCommandStatus.OperationId
  fullName: System.Fabric.Query.TestCommandStatus.OperationId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/TestCommandStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OperationId
    path: src/prod/src/managed/Api/src/System/Fabric/Query/TestCommandStatus.cs
    startLine: 31
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nThe OperationId of the test command.  This Guid was provided by the user when starting the test operation.\n"
  example: []
  syntax:
    content: public Guid OperationId { get; }
    content.vb: Public ReadOnly Property OperationId As Guid
    parameters: []
    return:
      type: System.Guid
      description: A Guid representing the OperationId.
  overload: System.Fabric.Query.TestCommandStatus.OperationId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.TestCommandStatus.State
  commentId: P:System.Fabric.Query.TestCommandStatus.State
  id: State
  parent: System.Fabric.Query.TestCommandStatus
  langs:
  - csharp
  - vb
  name: State
  nameWithType: TestCommandStatus.State
  fullName: System.Fabric.Query.TestCommandStatus.State
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/TestCommandStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: State
    path: src/prod/src/managed/Api/src/System/Fabric/Query/TestCommandStatus.cs
    startLine: 48
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nThe current state of the test command.\n"
  example: []
  syntax:
    content: public TestCommandProgressState State { get; }
    content.vb: Public ReadOnly Property State As TestCommandProgressState
    parameters: []
    return:
      type: System.Fabric.TestCommandProgressState
      description: A TestCommandProgressState with the current state.
  overload: System.Fabric.Query.TestCommandStatus.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.TestCommandStatus.TestCommandType
  commentId: P:System.Fabric.Query.TestCommandStatus.TestCommandType
  id: TestCommandType
  parent: System.Fabric.Query.TestCommandStatus
  langs:
  - csharp
  - vb
  name: TestCommandType
  nameWithType: TestCommandStatus.TestCommandType
  fullName: System.Fabric.Query.TestCommandStatus.TestCommandType
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/TestCommandStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TestCommandType
    path: src/prod/src/managed/Api/src/System/Fabric/Query/TestCommandStatus.cs
    startLine: 66
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nThe type of the test command.\n"
  example: []
  syntax:
    content: public TestCommandType TestCommandType { get; }
    content.vb: Public ReadOnly Property TestCommandType As TestCommandType
    parameters: []
    return:
      type: System.Fabric.TestCommandType
      description: A TestCommandType object.
  overload: System.Fabric.Query.TestCommandStatus.TestCommandType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.TestCommandStatus.ToString
  commentId: M:System.Fabric.Query.TestCommandStatus.ToString
  id: ToString
  parent: System.Fabric.Query.TestCommandStatus
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TestCommandStatus.ToString()
  fullName: System.Fabric.Query.TestCommandStatus.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/TestCommandStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Query/TestCommandStatus.cs
    startLine: 84
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nFormats OperationId, State, and ActionType into a string.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The formatted string.
  overridden: System.Object.ToString
  overload: System.Fabric.Query.TestCommandStatus.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.FabricClient.TestManagementClient.GetTestCommandStatusListAsync(System.Fabric.Query.TestCommandStateFilter,System.Fabric.Query.TestCommandTypeFilter,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.TestManagementClient.GetTestCommandStatusListAsync(System.Fabric.Query.TestCommandStateFilter,System.Fabric.Query.TestCommandTypeFilter,System.TimeSpan,System.Threading.CancellationToken)
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.TestCommandStatus.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<TestCommandStatus>()
  nameWithType: ByteArraySerializer.Serialize<TestCommandStatus>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.TestCommandStatus>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of TestCommandStatus)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.TestCommandStatus)()
  name.vb: Serialize(Of TestCommandStatus)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<TestCommandStatus>
    nameWithType: ByteArraySerializer.Serialize<TestCommandStatus>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.TestCommandStatus>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of TestCommandStatus)
    nameWithType: ByteArraySerializer.Serialize(Of TestCommandStatus)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.TestCommandStatus)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.TestCommandStatus.OperationId*
  commentId: Overload:System.Fabric.Query.TestCommandStatus.OperationId
  isExternal: false
  name: OperationId
  nameWithType: TestCommandStatus.OperationId
  fullName: System.Fabric.Query.TestCommandStatus.OperationId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.Query.TestCommandStatus.State*
  commentId: Overload:System.Fabric.Query.TestCommandStatus.State
  isExternal: false
  name: State
  nameWithType: TestCommandStatus.State
  fullName: System.Fabric.Query.TestCommandStatus.State
- uid: System.Fabric.TestCommandProgressState
  commentId: T:System.Fabric.TestCommandProgressState
  parent: System.Fabric
  isExternal: false
  name: TestCommandProgressState
  nameWithType: TestCommandProgressState
  fullName: System.Fabric.TestCommandProgressState
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.Query.TestCommandStatus.TestCommandType*
  commentId: Overload:System.Fabric.Query.TestCommandStatus.TestCommandType
  isExternal: false
  name: TestCommandType
  nameWithType: TestCommandStatus.TestCommandType
  fullName: System.Fabric.Query.TestCommandStatus.TestCommandType
- uid: System.Fabric.TestCommandType
  commentId: T:System.Fabric.TestCommandType
  parent: System.Fabric
  isExternal: false
  name: TestCommandType
  nameWithType: TestCommandType
  fullName: System.Fabric.TestCommandType
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.TestCommandStatus.ToString*
  commentId: Overload:System.Fabric.Query.TestCommandStatus.ToString
  isExternal: false
  name: ToString
  nameWithType: TestCommandStatus.ToString
  fullName: System.Fabric.Query.TestCommandStatus.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
