### YamlMime:ManagedReference
items:
- uid: System.Fabric.Testability.Scenario.TestScenarioParameters
  commentId: T:System.Fabric.Testability.Scenario.TestScenarioParameters
  id: TestScenarioParameters
  parent: System.Fabric.Testability.Scenario
  children:
  - System.Fabric.Testability.Scenario.TestScenarioParameters.#ctor(System.TimeSpan)
  - System.Fabric.Testability.Scenario.TestScenarioParameters.TimeToRun
  - System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaults
  - System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaultsDefault
  langs:
  - csharp
  - vb
  name: TestScenarioParameters
  nameWithType: TestScenarioParameters
  fullName: System.Fabric.Testability.Scenario.TestScenarioParameters
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenarioParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TestScenarioParameters
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenarioParameters.cs
    startLine: 11
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nBase class for parameters passed into all the TestScenarios which defines all the common parameters.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public abstract class TestScenarioParameters
    content.vb: >-
      <Serializable>

      Public MustInherit Class TestScenarioParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Testability.Scenario.TestScenarioParameters.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaultsDefault
  commentId: F:System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaultsDefault
  id: WaitTimeBetweenFaultsDefault
  parent: System.Fabric.Testability.Scenario.TestScenarioParameters
  langs:
  - csharp
  - vb
  name: WaitTimeBetweenFaultsDefault
  nameWithType: TestScenarioParameters.WaitTimeBetweenFaultsDefault
  fullName: System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaultsDefault
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenarioParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WaitTimeBetweenFaultsDefault
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenarioParameters.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nDefault value for WaitTimeBetweenFaults used if value not specified by user.\n"
  example: []
  syntax:
    content: public static readonly TimeSpan WaitTimeBetweenFaultsDefault
    content.vb: Public Shared ReadOnly WaitTimeBetweenFaultsDefault As TimeSpan
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Fabric.Testability.Scenario.TestScenarioParameters.#ctor(System.TimeSpan)
  commentId: M:System.Fabric.Testability.Scenario.TestScenarioParameters.#ctor(System.TimeSpan)
  id: '#ctor(System.TimeSpan)'
  parent: System.Fabric.Testability.Scenario.TestScenarioParameters
  langs:
  - csharp
  - vb
  name: TestScenarioParameters(TimeSpan)
  nameWithType: TestScenarioParameters.TestScenarioParameters(TimeSpan)
  fullName: System.Fabric.Testability.Scenario.TestScenarioParameters.TestScenarioParameters(System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenarioParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenarioParameters.cs
    startLine: 28
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected TestScenarioParameters(TimeSpan timetoRun)
    content.vb: Protected Sub New(timetoRun As TimeSpan)
    parameters:
    - id: timetoRun
      type: System.TimeSpan
      description: This API supports the Service Fabric platform and is not meant to be called from your code
  overload: System.Fabric.Testability.Scenario.TestScenarioParameters.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Testability.Scenario.TestScenarioParameters.TimeToRun
  commentId: P:System.Fabric.Testability.Scenario.TestScenarioParameters.TimeToRun
  id: TimeToRun
  parent: System.Fabric.Testability.Scenario.TestScenarioParameters
  langs:
  - csharp
  - vb
  name: TimeToRun
  nameWithType: TestScenarioParameters.TimeToRun
  fullName: System.Fabric.Testability.Scenario.TestScenarioParameters.TimeToRun
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenarioParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TimeToRun
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenarioParameters.cs
    startLine: 42
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nTotal time for which the scenario will run before ending.\n"
  example: []
  syntax:
    content: public TimeSpan TimeToRun { get; }
    content.vb: Public ReadOnly Property TimeToRun As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nReturns the max run-time of the scenario as TimeSpan\n"
  overload: System.Fabric.Testability.Scenario.TestScenarioParameters.TimeToRun*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaults
  commentId: P:System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaults
  id: WaitTimeBetweenFaults
  parent: System.Fabric.Testability.Scenario.TestScenarioParameters
  langs:
  - csharp
  - vb
  name: WaitTimeBetweenFaults
  nameWithType: TestScenarioParameters.WaitTimeBetweenFaults
  fullName: System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaults
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenarioParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WaitTimeBetweenFaults
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenarioParameters.cs
    startLine: 50
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThe maximum wait time between consecutive faults: the larger the value, the lower the concurrency (of faults).\n"
  example: []
  syntax:
    content: public TimeSpan WaitTimeBetweenFaults { get; set; }
    content.vb: Public Property WaitTimeBetweenFaults As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nReturns the maximum wait time between two consecutive faults as a TimeSpan\n"
  overload: System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaults*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.Testability.Scenario
  commentId: N:System.Fabric.Testability.Scenario
  isExternal: false
  name: System.Fabric.Testability.Scenario
  nameWithType: System.Fabric.Testability.Scenario
  fullName: System.Fabric.Testability.Scenario
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.TestScenarioParameters.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<TestScenarioParameters>()
  nameWithType: ByteArraySerializer.Serialize<TestScenarioParameters>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Testability.Scenario.TestScenarioParameters>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of TestScenarioParameters)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Testability.Scenario.TestScenarioParameters)()
  name.vb: Serialize(Of TestScenarioParameters)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<TestScenarioParameters>
    nameWithType: ByteArraySerializer.Serialize<TestScenarioParameters>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Testability.Scenario.TestScenarioParameters>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of TestScenarioParameters)
    nameWithType: ByteArraySerializer.Serialize(Of TestScenarioParameters)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Testability.Scenario.TestScenarioParameters)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.Testability.Scenario.TestScenarioParameters.#ctor*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenarioParameters.#ctor
  isExternal: false
  name: TestScenarioParameters
  nameWithType: TestScenarioParameters.TestScenarioParameters
  fullName: System.Fabric.Testability.Scenario.TestScenarioParameters.TestScenarioParameters
- uid: System.Fabric.Testability.Scenario.TestScenarioParameters.TimeToRun*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenarioParameters.TimeToRun
  isExternal: false
  name: TimeToRun
  nameWithType: TestScenarioParameters.TimeToRun
  fullName: System.Fabric.Testability.Scenario.TestScenarioParameters.TimeToRun
- uid: System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaults*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaults
  isExternal: false
  name: WaitTimeBetweenFaults
  nameWithType: TestScenarioParameters.WaitTimeBetweenFaults
  fullName: System.Fabric.Testability.Scenario.TestScenarioParameters.WaitTimeBetweenFaults
