### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.ApplicationHealthStateChunk
  commentId: T:System.Fabric.Health.ApplicationHealthStateChunk
  id: ApplicationHealthStateChunk
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.ApplicationHealthStateChunk.ApplicationName
  - System.Fabric.Health.ApplicationHealthStateChunk.ApplicationTypeName
  - System.Fabric.Health.ApplicationHealthStateChunk.DeployedApplicationHealthStateChunks
  - System.Fabric.Health.ApplicationHealthStateChunk.HealthState
  - System.Fabric.Health.ApplicationHealthStateChunk.ServiceHealthStateChunks
  - System.Fabric.Health.ApplicationHealthStateChunk.ToString
  langs:
  - csharp
  - vb
  name: ApplicationHealthStateChunk
  nameWithType: ApplicationHealthStateChunk
  fullName: System.Fabric.Health.ApplicationHealthStateChunk
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationHealthStateChunk
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
    startLine: 13
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nRepresents an application health state chunk, which contains basic health information about the application.\n"
  example: []
  syntax:
    content: public sealed class ApplicationHealthStateChunk
    content.vb: Public NotInheritable Class ApplicationHealthStateChunk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.ApplicationHealthStateChunk.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.ApplicationHealthStateChunk.ApplicationName
  commentId: P:System.Fabric.Health.ApplicationHealthStateChunk.ApplicationName
  id: ApplicationName
  parent: System.Fabric.Health.ApplicationHealthStateChunk
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: ApplicationHealthStateChunk.ApplicationName
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
    startLine: 26
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the application name.\n"
  example: []
  syntax:
    content: public Uri ApplicationName { get; }
    content.vb: Public ReadOnly Property ApplicationName As Uri
    parameters: []
    return:
      type: System.Uri
      description: The application name.
  overload: System.Fabric.Health.ApplicationHealthStateChunk.ApplicationName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ApplicationHealthStateChunk.ApplicationTypeName
  commentId: P:System.Fabric.Health.ApplicationHealthStateChunk.ApplicationTypeName
  id: ApplicationTypeName
  parent: System.Fabric.Health.ApplicationHealthStateChunk
  langs:
  - csharp
  - vb
  name: ApplicationTypeName
  nameWithType: ApplicationHealthStateChunk.ApplicationTypeName
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.ApplicationTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
    startLine: 36
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the application type name.\n"
  example: []
  syntax:
    content: public string ApplicationTypeName { get; }
    content.vb: Public ReadOnly Property ApplicationTypeName As String
    parameters: []
    return:
      type: System.String
      description: The application type name.
  overload: System.Fabric.Health.ApplicationHealthStateChunk.ApplicationTypeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ApplicationHealthStateChunk.HealthState
  commentId: P:System.Fabric.Health.ApplicationHealthStateChunk.HealthState
  id: HealthState
  parent: System.Fabric.Health.ApplicationHealthStateChunk
  langs:
  - csharp
  - vb
  name: HealthState
  nameWithType: ApplicationHealthStateChunk.HealthState
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.HealthState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthState
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
    startLine: 46
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the application aggregated health state, computed based on all reported health events, the children and the application health policy.\n"
  example: []
  syntax:
    content: public HealthState HealthState { get; }
    content.vb: Public ReadOnly Property HealthState As HealthState
    parameters: []
    return:
      type: System.Fabric.Health.HealthState
      description: The application aggregated health state.
  overload: System.Fabric.Health.ApplicationHealthStateChunk.HealthState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ApplicationHealthStateChunk.ServiceHealthStateChunks
  commentId: P:System.Fabric.Health.ApplicationHealthStateChunk.ServiceHealthStateChunks
  id: ServiceHealthStateChunks
  parent: System.Fabric.Health.ApplicationHealthStateChunk
  langs:
  - csharp
  - vb
  name: ServiceHealthStateChunks
  nameWithType: ApplicationHealthStateChunk.ServiceHealthStateChunks
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.ServiceHealthStateChunks
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceHealthStateChunks
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
    startLine: 62
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the list of the service health state chunks that respect the input filters.\n"
  remarks: "\n<p>By default, no children are included in results. Users can request to include\nsome children based on desired health or other information. \nFor example, users can request to include all services that have health state error.\nRegardless of filter value, all children are used to compute application aggregated health.</p>\n"
  example: []
  syntax:
    content: public ServiceHealthStateChunkList ServiceHealthStateChunks { get; }
    content.vb: Public ReadOnly Property ServiceHealthStateChunks As ServiceHealthStateChunkList
    parameters: []
    return:
      type: System.Fabric.Health.ServiceHealthStateChunkList
      description: The list of the service health state chunks that respect the input filters.
  overload: System.Fabric.Health.ApplicationHealthStateChunk.ServiceHealthStateChunks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ApplicationHealthStateChunk.DeployedApplicationHealthStateChunks
  commentId: P:System.Fabric.Health.ApplicationHealthStateChunk.DeployedApplicationHealthStateChunks
  id: DeployedApplicationHealthStateChunks
  parent: System.Fabric.Health.ApplicationHealthStateChunk
  langs:
  - csharp
  - vb
  name: DeployedApplicationHealthStateChunks
  nameWithType: ApplicationHealthStateChunk.DeployedApplicationHealthStateChunks
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.DeployedApplicationHealthStateChunks
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DeployedApplicationHealthStateChunks
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
    startLine: 78
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the list of the deployed application health state chunks that respect the input filters.\n"
  remarks: "\n<p>By default, no children are included in results. Users can request to include\nsome children based on desired health or other information. \nFor example, users can request to include all deployed applications that have health state error.\nRegardless of filter value, all children are used to compute application aggregated health.</p>\n"
  example: []
  syntax:
    content: public DeployedApplicationHealthStateChunkList DeployedApplicationHealthStateChunks { get; }
    content.vb: Public ReadOnly Property DeployedApplicationHealthStateChunks As DeployedApplicationHealthStateChunkList
    parameters: []
    return:
      type: System.Fabric.Health.DeployedApplicationHealthStateChunkList
      description: The list of the deployed application health state chunks that respect the input filters.
  overload: System.Fabric.Health.ApplicationHealthStateChunk.DeployedApplicationHealthStateChunks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ApplicationHealthStateChunk.ToString
  commentId: M:System.Fabric.Health.ApplicationHealthStateChunk.ToString
  id: ToString
  parent: System.Fabric.Health.ApplicationHealthStateChunk
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ApplicationHealthStateChunk.ToString()
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealthStateChunk.cs
    startLine: 88
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nCreates a string description of the health state chunk.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: String description of the health state chunk.
  overridden: System.Object.ToString
  overload: System.Fabric.Health.ApplicationHealthStateChunk.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ApplicationHealthStateChunk.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ApplicationHealthStateChunk>()
  nameWithType: ByteArraySerializer.Serialize<ApplicationHealthStateChunk>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ApplicationHealthStateChunk>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ApplicationHealthStateChunk)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ApplicationHealthStateChunk)()
  name.vb: Serialize(Of ApplicationHealthStateChunk)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ApplicationHealthStateChunk>
    nameWithType: ByteArraySerializer.Serialize<ApplicationHealthStateChunk>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ApplicationHealthStateChunk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ApplicationHealthStateChunk)
    nameWithType: ByteArraySerializer.Serialize(Of ApplicationHealthStateChunk)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ApplicationHealthStateChunk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.ApplicationHealthStateChunk.ApplicationName*
  commentId: Overload:System.Fabric.Health.ApplicationHealthStateChunk.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: ApplicationHealthStateChunk.ApplicationName
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.ApplicationName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Health.ApplicationHealthStateChunk.ApplicationTypeName*
  commentId: Overload:System.Fabric.Health.ApplicationHealthStateChunk.ApplicationTypeName
  isExternal: false
  name: ApplicationTypeName
  nameWithType: ApplicationHealthStateChunk.ApplicationTypeName
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.ApplicationTypeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Health.ApplicationHealthStateChunk.HealthState*
  commentId: Overload:System.Fabric.Health.ApplicationHealthStateChunk.HealthState
  isExternal: false
  name: HealthState
  nameWithType: ApplicationHealthStateChunk.HealthState
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.HealthState
- uid: System.Fabric.Health.HealthState
  commentId: T:System.Fabric.Health.HealthState
  parent: System.Fabric.Health
  isExternal: false
  name: HealthState
  nameWithType: HealthState
  fullName: System.Fabric.Health.HealthState
- uid: System.Fabric.Health.ApplicationHealthStateChunk.ServiceHealthStateChunks*
  commentId: Overload:System.Fabric.Health.ApplicationHealthStateChunk.ServiceHealthStateChunks
  isExternal: false
  name: ServiceHealthStateChunks
  nameWithType: ApplicationHealthStateChunk.ServiceHealthStateChunks
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.ServiceHealthStateChunks
- uid: System.Fabric.Health.ServiceHealthStateChunkList
  commentId: T:System.Fabric.Health.ServiceHealthStateChunkList
  parent: System.Fabric.Health
  isExternal: false
  name: ServiceHealthStateChunkList
  nameWithType: ServiceHealthStateChunkList
  fullName: System.Fabric.Health.ServiceHealthStateChunkList
- uid: System.Fabric.Health.ApplicationHealthStateChunk.DeployedApplicationHealthStateChunks*
  commentId: Overload:System.Fabric.Health.ApplicationHealthStateChunk.DeployedApplicationHealthStateChunks
  isExternal: false
  name: DeployedApplicationHealthStateChunks
  nameWithType: ApplicationHealthStateChunk.DeployedApplicationHealthStateChunks
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.DeployedApplicationHealthStateChunks
- uid: System.Fabric.Health.DeployedApplicationHealthStateChunkList
  commentId: T:System.Fabric.Health.DeployedApplicationHealthStateChunkList
  parent: System.Fabric.Health
  isExternal: false
  name: DeployedApplicationHealthStateChunkList
  nameWithType: DeployedApplicationHealthStateChunkList
  fullName: System.Fabric.Health.DeployedApplicationHealthStateChunkList
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ApplicationHealthStateChunk.ToString*
  commentId: Overload:System.Fabric.Health.ApplicationHealthStateChunk.ToString
  isExternal: false
  name: ToString
  nameWithType: ApplicationHealthStateChunk.ToString
  fullName: System.Fabric.Health.ApplicationHealthStateChunk.ToString
