### YamlMime:ManagedReference
items:
- uid: System.Fabric.NodeContext
  commentId: T:System.Fabric.NodeContext
  id: NodeContext
  parent: System.Fabric
  children:
  - System.Fabric.NodeContext.#ctor(System.String,System.Fabric.NodeId,System.Numerics.BigInteger,System.String,System.String)
  - System.Fabric.NodeContext.IPAddressOrFQDN
  - System.Fabric.NodeContext.NodeId
  - System.Fabric.NodeContext.NodeInstanceId
  - System.Fabric.NodeContext.NodeName
  - System.Fabric.NodeContext.NodeType
  langs:
  - csharp
  - vb
  name: NodeContext
  nameWithType: NodeContext
  fullName: System.Fabric.NodeContext
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeContext
    path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Class to encapsulate a node context.</p>\n"
  example: []
  syntax:
    content: public class NodeContext
    content.vb: Public Class NodeContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.NodeContext.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.NodeContext.#ctor(System.String,System.Fabric.NodeId,System.Numerics.BigInteger,System.String,System.String)
  commentId: M:System.Fabric.NodeContext.#ctor(System.String,System.Fabric.NodeId,System.Numerics.BigInteger,System.String,System.String)
  id: '#ctor(System.String,System.Fabric.NodeId,System.Numerics.BigInteger,System.String,System.String)'
  parent: System.Fabric.NodeContext
  langs:
  - csharp
  - vb
  name: NodeContext(String, NodeId, BigInteger, String, String)
  nameWithType: NodeContext.NodeContext(String, NodeId, BigInteger, String, String)
  fullName: System.Fabric.NodeContext.NodeContext(System.String, System.Fabric.NodeId, System.Numerics.BigInteger, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
    startLine: 25
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nInitializes a new instance of the <xref href=\"System.Fabric.NodeContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public NodeContext(string nodeName, NodeId nodeId, BigInteger nodeInstanceId, string nodeType, string ipAddressOrFQDN)
    content.vb: Public Sub New(nodeName As String, nodeId As NodeId, nodeInstanceId As BigInteger, nodeType As String, ipAddressOrFQDN As String)
    parameters:
    - id: nodeName
      type: System.String
      description: The node name.
    - id: nodeId
      type: System.Fabric.NodeId
      description: The node id.
    - id: nodeInstanceId
      type: System.Numerics.BigInteger
      description: The node instance id.
    - id: nodeType
      type: System.String
      description: The node type.
    - id: ipAddressOrFQDN
      type: System.String
      description: The IP address or FQDN of the node.
  overload: System.Fabric.NodeContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.NodeContext.NodeId
  commentId: P:System.Fabric.NodeContext.NodeId
  id: NodeId
  parent: System.Fabric.NodeContext
  langs:
  - csharp
  - vb
  name: NodeId
  nameWithType: NodeContext.NodeId
  fullName: System.Fabric.NodeContext.NodeId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeId
    path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
    startLine: 51
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the node ID.</p>\n"
  example: []
  syntax:
    content: public NodeId NodeId { get; }
    content.vb: Public ReadOnly Property NodeId As NodeId
    parameters: []
    return:
      type: System.Fabric.NodeId
      description: "\n<p>Returns <xref href=\"System.Fabric.NodeId\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.NodeContext.NodeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NodeContext.NodeInstanceId
  commentId: P:System.Fabric.NodeContext.NodeInstanceId
  id: NodeInstanceId
  parent: System.Fabric.NodeContext
  langs:
  - csharp
  - vb
  name: NodeInstanceId
  nameWithType: NodeContext.NodeInstanceId
  fullName: System.Fabric.NodeContext.NodeInstanceId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeInstanceId
    path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
    startLine: 59
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the node instance ID.</p>\n"
  example: []
  syntax:
    content: public BigInteger NodeInstanceId { get; }
    content.vb: Public ReadOnly Property NodeInstanceId As BigInteger
    parameters: []
    return:
      type: System.Numerics.BigInteger
      description: "\n<p>Returns <xref href=\"System.Numerics.BigInteger\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.NodeContext.NodeInstanceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NodeContext.NodeName
  commentId: P:System.Fabric.NodeContext.NodeName
  id: NodeName
  parent: System.Fabric.NodeContext
  langs:
  - csharp
  - vb
  name: NodeName
  nameWithType: NodeContext.NodeName
  fullName: System.Fabric.NodeContext.NodeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeName
    path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
    startLine: 67
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the node name.</p>\n"
  example: []
  syntax:
    content: public string NodeName { get; }
    content.vb: Public ReadOnly Property NodeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.NodeContext.NodeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NodeContext.NodeType
  commentId: P:System.Fabric.NodeContext.NodeType
  id: NodeType
  parent: System.Fabric.NodeContext
  langs:
  - csharp
  - vb
  name: NodeType
  nameWithType: NodeContext.NodeType
  fullName: System.Fabric.NodeContext.NodeType
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeType
    path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
    startLine: 75
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the node type.</p>\n"
  example: []
  syntax:
    content: public string NodeType { get; }
    content.vb: Public ReadOnly Property NodeType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.NodeContext.NodeType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NodeContext.IPAddressOrFQDN
  commentId: P:System.Fabric.NodeContext.IPAddressOrFQDN
  id: IPAddressOrFQDN
  parent: System.Fabric.NodeContext
  langs:
  - csharp
  - vb
  name: IPAddressOrFQDN
  nameWithType: NodeContext.IPAddressOrFQDN
  fullName: System.Fabric.NodeContext.IPAddressOrFQDN
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IPAddressOrFQDN
    path: src/prod/src/managed/Api/src/System/Fabric/NodeContext.cs
    startLine: 84
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the IP address or the fully qualified domain name of the node.</p>\n"
  example: []
  syntax:
    content: public string IPAddressOrFQDN { get; }
    content.vb: Public ReadOnly Property IPAddressOrFQDN As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.NodeContext.IPAddressOrFQDN*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.NodeContext.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NodeContext>()
  nameWithType: ByteArraySerializer.Serialize<NodeContext>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.NodeContext>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NodeContext)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.NodeContext)()
  name.vb: Serialize(Of NodeContext)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NodeContext>
    nameWithType: ByteArraySerializer.Serialize<NodeContext>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.NodeContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NodeContext)
    nameWithType: ByteArraySerializer.Serialize(Of NodeContext)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.NodeContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.NodeContext
  commentId: T:System.Fabric.NodeContext
  parent: System.Fabric
  isExternal: false
  name: NodeContext
  nameWithType: NodeContext
  fullName: System.Fabric.NodeContext
- uid: System.Fabric.NodeContext.#ctor*
  commentId: Overload:System.Fabric.NodeContext.#ctor
  isExternal: false
  name: NodeContext
  nameWithType: NodeContext.NodeContext
  fullName: System.Fabric.NodeContext.NodeContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.NodeId
  commentId: T:System.Fabric.NodeId
  parent: System.Fabric
  isExternal: false
  name: NodeId
  nameWithType: NodeId
  fullName: System.Fabric.NodeId
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: true
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: false
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: System.Fabric.NodeContext.NodeId*
  commentId: Overload:System.Fabric.NodeContext.NodeId
  isExternal: false
  name: NodeId
  nameWithType: NodeContext.NodeId
  fullName: System.Fabric.NodeContext.NodeId
- uid: System.Fabric.NodeContext.NodeInstanceId*
  commentId: Overload:System.Fabric.NodeContext.NodeInstanceId
  isExternal: false
  name: NodeInstanceId
  nameWithType: NodeContext.NodeInstanceId
  fullName: System.Fabric.NodeContext.NodeInstanceId
- uid: System.Fabric.NodeContext.NodeName*
  commentId: Overload:System.Fabric.NodeContext.NodeName
  isExternal: false
  name: NodeName
  nameWithType: NodeContext.NodeName
  fullName: System.Fabric.NodeContext.NodeName
- uid: System.Fabric.NodeContext.NodeType*
  commentId: Overload:System.Fabric.NodeContext.NodeType
  isExternal: false
  name: NodeType
  nameWithType: NodeContext.NodeType
  fullName: System.Fabric.NodeContext.NodeType
- uid: System.Fabric.NodeContext.IPAddressOrFQDN*
  commentId: Overload:System.Fabric.NodeContext.IPAddressOrFQDN
  isExternal: false
  name: IPAddressOrFQDN
  nameWithType: NodeContext.IPAddressOrFQDN
  fullName: System.Fabric.NodeContext.IPAddressOrFQDN
