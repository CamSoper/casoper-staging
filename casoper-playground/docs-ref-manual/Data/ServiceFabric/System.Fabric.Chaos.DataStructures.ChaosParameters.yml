### YamlMime:ManagedReference
items:
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters
  commentId: T:System.Fabric.Chaos.DataStructures.ChaosParameters
  id: ChaosParameters
  parent: System.Fabric.Chaos.DataStructures
  children:
  - System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor
  - System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.Int64,System.Nullable{System.TimeSpan})
  - System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.Nullable{System.TimeSpan})
  - System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.String})
  - System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.String},System.TimeSpan,System.TimeSpan)
  - System.Fabric.Chaos.DataStructures.ChaosParameters.Context
  - System.Fabric.Chaos.DataStructures.ChaosParameters.EnableMoveReplicaFaults
  - System.Fabric.Chaos.DataStructures.ChaosParameters.MaxClusterStabilizationTimeout
  - System.Fabric.Chaos.DataStructures.ChaosParameters.MaxConcurrentFaults
  - System.Fabric.Chaos.DataStructures.ChaosParameters.Read(System.IO.BinaryReader)
  - System.Fabric.Chaos.DataStructures.ChaosParameters.TimeToRun
  - System.Fabric.Chaos.DataStructures.ChaosParameters.ToString
  - System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenFaults
  - System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenIterations
  - System.Fabric.Chaos.DataStructures.ChaosParameters.Write(System.IO.BinaryWriter)
  langs:
  - csharp
  - vb
  name: ChaosParameters
  nameWithType: ChaosParameters
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ChaosParameters
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 21
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nThis class defines all the test parameters to configure the ChaosTestScenario.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class ChaosParameters : ByteSerializable, IByteSerializable
    content.vb: >-
      <Serializable>

      Public Class ChaosParameters
          Inherits ByteSerializable
          Implements IByteSerializable
  inheritance:
  - System.Object
  - System.Fabric.Common.ByteSerializable
  inheritedMembers:
  - System.Fabric.Common.ByteSerializable.ToBytes
  - System.Fabric.Common.ByteSerializable.FromBytes(System.Byte[])
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Chaos.DataStructures.ChaosParameters.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.Int64,System.Nullable{System.TimeSpan})
  commentId: M:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.Int64,System.Nullable{System.TimeSpan})
  id: '#ctor(System.Int64,System.Nullable{System.TimeSpan})'
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: ChaosParameters(Int64, Nullable<TimeSpan>)
  nameWithType: ChaosParameters.ChaosParameters(Int64, Nullable<TimeSpan>)
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.ChaosParameters(System.Int64, System.Nullable<System.TimeSpan>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 116
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Chaos.DataStructures.ChaosParameters\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ChaosParameters(long maxConcurrentFaults, TimeSpan? timeToRun = null)
    content.vb: Public Sub New(maxConcurrentFaults As Long, timeToRun As TimeSpan? = Nothing)
    parameters:
    - id: maxConcurrentFaults
      type: System.Int64
      description: "Maximum number of concurrent faults induced per iteration with the lowest being 1. The higher the concurrency the more aggressive the failovers \nthus inducing more complex series of failures to uncover bugs. using 2 or 3 for this is recommended."
    - id: timeToRun
      type: System.Nullable{System.TimeSpan}
      description: Total time Chaos sould run
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor*
  nameWithType.vb: ChaosParameters.ChaosParameters(Int64, Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.Chaos.DataStructures.ChaosParameters.ChaosParameters(System.Int64, System.Nullable(Of System.TimeSpan))
  name.vb: ChaosParameters(Int64, Nullable(Of TimeSpan))
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor
  commentId: M:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor
  id: '#ctor'
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: ChaosParameters()
  nameWithType: ChaosParameters.ChaosParameters()
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.ChaosParameters()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 126
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\n\n"
  example: []
  syntax:
    content: public ChaosParameters()
    content.vb: Public Sub New
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.Nullable{System.TimeSpan})
  commentId: M:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.Nullable{System.TimeSpan})
  id: '#ctor(System.TimeSpan,System.Int64,System.Boolean,System.Nullable{System.TimeSpan})'
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: ChaosParameters(TimeSpan, Int64, Boolean, Nullable<TimeSpan>)
  nameWithType: ChaosParameters.ChaosParameters(TimeSpan, Int64, Boolean, Nullable<TimeSpan>)
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.ChaosParameters(System.TimeSpan, System.Int64, System.Boolean, System.Nullable<System.TimeSpan>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 140
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Chaos.DataStructures.ChaosParameters\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ChaosParameters(TimeSpan maxClusterStabilizationTimeout, long maxConcurrentFaults, bool enableMoveReplicaFaults, TimeSpan? timeToRun = null)
    content.vb: Public Sub New(maxClusterStabilizationTimeout As TimeSpan, maxConcurrentFaults As Long, enableMoveReplicaFaults As Boolean, timeToRun As TimeSpan? = Nothing)
    parameters:
    - id: maxClusterStabilizationTimeout
      type: System.TimeSpan
      description: The maximum amount of time to wait for the entire cluster to stabilize after a fault iteration before failing the test.
    - id: maxConcurrentFaults
      type: System.Int64
      description: "Maximum number of concurrent faults induced per iteration with the lowest being 1. The higher the concurrency the more aggressive the failovers \nthus inducing more complex series of failures to uncover bugs. using 2 or 3 for this is recommended."
    - id: enableMoveReplicaFaults
      type: System.Boolean
      description: Enables or disables the MovePrimary and MoveSecondary faults.
    - id: timeToRun
      type: System.Nullable{System.TimeSpan}
      description: Total time Chaos sould run
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor*
  nameWithType.vb: ChaosParameters.ChaosParameters(TimeSpan, Int64, Boolean, Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.Chaos.DataStructures.ChaosParameters.ChaosParameters(System.TimeSpan, System.Int64, System.Boolean, System.Nullable(Of System.TimeSpan))
  name.vb: ChaosParameters(TimeSpan, Int64, Boolean, Nullable(Of TimeSpan))
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.String})
  id: '#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.String})'
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: ChaosParameters(TimeSpan, Int64, Boolean, TimeSpan, Dictionary<String, String>)
  nameWithType: ChaosParameters.ChaosParameters(TimeSpan, Int64, Boolean, TimeSpan, Dictionary<String, String>)
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.ChaosParameters(System.TimeSpan, System.Int64, System.Boolean, System.TimeSpan, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 159
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Chaos.DataStructures.ChaosParameters\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ChaosParameters(TimeSpan maxClusterStabilizationTimeout, long maxConcurrentFaults, bool enableMoveReplicaFaults, TimeSpan timeToRun, Dictionary<string, string> context)
    content.vb: Public Sub New(maxClusterStabilizationTimeout As TimeSpan, maxConcurrentFaults As Long, enableMoveReplicaFaults As Boolean, timeToRun As TimeSpan, context As Dictionary(Of String, String))
    parameters:
    - id: maxClusterStabilizationTimeout
      type: System.TimeSpan
      description: The maximum amount of time to wait for the entire cluster to stabilize after a fault iteration before failing the test.
    - id: maxConcurrentFaults
      type: System.Int64
      description: "Maximum number of concurrent faults induced per iteration with the lowest being 1. The higher the concurrency the more aggressive the failovers \nthus inducing more complex series of failures to uncover bugs. using 2 or 3 for this is recommended."
    - id: enableMoveReplicaFaults
      type: System.Boolean
      description: Enables or disables the MovePrimary and MoveSecondary faults.
    - id: timeToRun
      type: System.TimeSpan
      description: After running for this much time, Chaos will stop.
    - id: context
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: This is a bag of (key, value) pairs. This can be used to record detailed context about why Chaos is being started for example.
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor*
  nameWithType.vb: ChaosParameters.ChaosParameters(TimeSpan, Int64, Boolean, TimeSpan, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.Chaos.DataStructures.ChaosParameters.ChaosParameters(System.TimeSpan, System.Int64, System.Boolean, System.TimeSpan, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: ChaosParameters(TimeSpan, Int64, Boolean, TimeSpan, Dictionary(Of String, String))
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.String},System.TimeSpan,System.TimeSpan)
  commentId: M:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.String},System.TimeSpan,System.TimeSpan)
  id: '#ctor(System.TimeSpan,System.Int64,System.Boolean,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.String},System.TimeSpan,System.TimeSpan)'
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: ChaosParameters(TimeSpan, Int64, Boolean, TimeSpan, Dictionary<String, String>, TimeSpan, TimeSpan)
  nameWithType: ChaosParameters.ChaosParameters(TimeSpan, Int64, Boolean, TimeSpan, Dictionary<String, String>, TimeSpan, TimeSpan)
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.ChaosParameters(System.TimeSpan, System.Int64, System.Boolean, System.TimeSpan, System.Collections.Generic.Dictionary<System.String, System.String>, System.TimeSpan, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 179
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\n\n"
  example: []
  syntax:
    content: public ChaosParameters(TimeSpan maxClusterStabilizationTimeout, long maxConcurrentFaults, bool enableMoveReplicaFaults, TimeSpan timeToRun, Dictionary<string, string> context, TimeSpan waitTimeBetweenInterations, TimeSpan waitTimeBetweenFaults)
    content.vb: Public Sub New(maxClusterStabilizationTimeout As TimeSpan, maxConcurrentFaults As Long, enableMoveReplicaFaults As Boolean, timeToRun As TimeSpan, context As Dictionary(Of String, String), waitTimeBetweenInterations As TimeSpan, waitTimeBetweenFaults As TimeSpan)
    parameters:
    - id: maxClusterStabilizationTimeout
      type: System.TimeSpan
      description: ''
    - id: maxConcurrentFaults
      type: System.Int64
      description: ''
    - id: enableMoveReplicaFaults
      type: System.Boolean
      description: ''
    - id: timeToRun
      type: System.TimeSpan
      description: ''
    - id: context
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: ''
    - id: waitTimeBetweenInterations
      type: System.TimeSpan
      description: ''
    - id: waitTimeBetweenFaults
      type: System.TimeSpan
      description: ''
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor*
  nameWithType.vb: ChaosParameters.ChaosParameters(TimeSpan, Int64, Boolean, TimeSpan, Dictionary(Of String, String), TimeSpan, TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.Chaos.DataStructures.ChaosParameters.ChaosParameters(System.TimeSpan, System.Int64, System.Boolean, System.TimeSpan, System.Collections.Generic.Dictionary(Of System.String, System.String), System.TimeSpan, System.TimeSpan)
  name.vb: ChaosParameters(TimeSpan, Int64, Boolean, TimeSpan, Dictionary(Of String, String), TimeSpan, TimeSpan)
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenIterations
  commentId: P:System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenIterations
  id: WaitTimeBetweenIterations
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: WaitTimeBetweenIterations
  nameWithType: ChaosParameters.WaitTimeBetweenIterations
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenIterations
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WaitTimeBetweenIterations
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 216
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nWait time between two iterations for a random duration bound by this value.\n"
  example: []
  syntax:
    content: public TimeSpan WaitTimeBetweenIterations { get; set; }
    content.vb: Public Property WaitTimeBetweenIterations As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nThe time-separation between two consecutive iterations of the ChaosTestScenario\n"
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenIterations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.MaxClusterStabilizationTimeout
  commentId: P:System.Fabric.Chaos.DataStructures.ChaosParameters.MaxClusterStabilizationTimeout
  id: MaxClusterStabilizationTimeout
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: MaxClusterStabilizationTimeout
  nameWithType: ChaosParameters.MaxClusterStabilizationTimeout
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.MaxClusterStabilizationTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxClusterStabilizationTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 226
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nThe maximum amount of time to wait for the cluster to stabilize after a fault before failing the test.\n"
  example: []
  syntax:
    content: public TimeSpan MaxClusterStabilizationTimeout { get; set; }
    content.vb: Public Property MaxClusterStabilizationTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nAfter each iteration, the ChaosTestScenario waits for at most this amount of time for the cluster to become healthy\n"
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.MaxClusterStabilizationTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.MaxConcurrentFaults
  commentId: P:System.Fabric.Chaos.DataStructures.ChaosParameters.MaxConcurrentFaults
  id: MaxConcurrentFaults
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: MaxConcurrentFaults
  nameWithType: ChaosParameters.MaxConcurrentFaults
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.MaxConcurrentFaults
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxConcurrentFaults
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 232
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nMaximum number of concurrent faults induced per iteration with the lowest being 1. The higer the concurrency the more aggressive the failovers; \nthus, inducing more complex series of failures to uncover bugs -- using 2 or 3 for this is recommended.\n"
  example: []
  syntax:
    content: public long MaxConcurrentFaults { get; set; }
    content.vb: Public Property MaxConcurrentFaults As Long
    parameters: []
    return:
      type: System.Int64
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.MaxConcurrentFaults*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.EnableMoveReplicaFaults
  commentId: P:System.Fabric.Chaos.DataStructures.ChaosParameters.EnableMoveReplicaFaults
  id: EnableMoveReplicaFaults
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: EnableMoveReplicaFaults
  nameWithType: ChaosParameters.EnableMoveReplicaFaults
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.EnableMoveReplicaFaults
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EnableMoveReplicaFaults
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 237
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nEnables or disables the MovePrimary and MoveSecondary faults.\n"
  example: []
  syntax:
    content: public bool EnableMoveReplicaFaults { get; set; }
    content.vb: Public Property EnableMoveReplicaFaults As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.EnableMoveReplicaFaults*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenFaults
  commentId: P:System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenFaults
  id: WaitTimeBetweenFaults
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: WaitTimeBetweenFaults
  nameWithType: ChaosParameters.WaitTimeBetweenFaults
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenFaults
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WaitTimeBetweenFaults
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 246
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nThe maximum wait time between consecutive faults: the larger the value, the lower the concurrency (of faults).\n"
  example: []
  syntax:
    content: public TimeSpan WaitTimeBetweenFaults { get; set; }
    content.vb: Public Property WaitTimeBetweenFaults As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nReturns the maximum wait time between two consecutive faults as a TimeSpan\n"
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenFaults*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.Context
  commentId: P:System.Fabric.Chaos.DataStructures.ChaosParameters.Context
  id: Context
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: ChaosParameters.Context
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.Context
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Context
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 274
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nGets the bag of (key, value) pairs that was passed while starting Chaos\n"
  example: []
  syntax:
    content: public Dictionary<string, string> Context { get; }
    content.vb: Public ReadOnly Property Context As Dictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.TimeToRun
  commentId: P:System.Fabric.Chaos.DataStructures.ChaosParameters.TimeToRun
  id: TimeToRun
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: TimeToRun
  nameWithType: ChaosParameters.TimeToRun
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.TimeToRun
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TimeToRun
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 298
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nTotal time for which the scenario will run before ending.\n"
  example: []
  syntax:
    content: public TimeSpan TimeToRun { get; }
    content.vb: Public ReadOnly Property TimeToRun As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nReturns the max run-time of the scenario as TimeSpan\n"
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.TimeToRun*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.ToString
  commentId: M:System.Fabric.Chaos.DataStructures.ChaosParameters.ToString
  id: ToString
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ChaosParameters.ToString()
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 306
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nReturns a string representation of the class\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string object
  overridden: System.Object.ToString
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.Read(System.IO.BinaryReader)
  commentId: M:System.Fabric.Chaos.DataStructures.ChaosParameters.Read(System.IO.BinaryReader)
  id: Read(System.IO.BinaryReader)
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: Read(BinaryReader)
  nameWithType: ChaosParameters.Read(BinaryReader)
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.Read(System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Read
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 374
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nReads the state of this object from byte array.\n"
  example: []
  syntax:
    content: public override void Read(BinaryReader br)
    content.vb: Public Overrides Sub Read(br As BinaryReader)
    parameters:
    - id: br
      type: System.IO.BinaryReader
      description: A BinaryReader object
  overridden: System.Fabric.Common.ByteSerializable.Read(System.IO.BinaryReader)
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.Read*
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.Write(System.IO.BinaryWriter)
  commentId: M:System.Fabric.Chaos.DataStructures.ChaosParameters.Write(System.IO.BinaryWriter)
  id: Write(System.IO.BinaryWriter)
  parent: System.Fabric.Chaos.DataStructures.ChaosParameters
  langs:
  - csharp
  - vb
  name: Write(BinaryWriter)
  nameWithType: ChaosParameters.Write(BinaryWriter)
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.Write(System.IO.BinaryWriter)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Write
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosParameters.cs
    startLine: 417
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nWrites the state of this object into a byte array.\n"
  example: []
  syntax:
    content: public override void Write(BinaryWriter bw)
    content.vb: Public Overrides Sub Write(bw As BinaryWriter)
    parameters:
    - id: bw
      type: System.IO.BinaryWriter
      description: A BinaryWriter object.
  overridden: System.Fabric.Common.ByteSerializable.Write(System.IO.BinaryWriter)
  overload: System.Fabric.Chaos.DataStructures.ChaosParameters.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Chaos.DataStructures
  commentId: N:System.Fabric.Chaos.DataStructures
  isExternal: false
  name: System.Fabric.Chaos.DataStructures
  nameWithType: System.Fabric.Chaos.DataStructures
  fullName: System.Fabric.Chaos.DataStructures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Common.ByteSerializable
  commentId: T:System.Fabric.Common.ByteSerializable
  parent: System.Fabric.Common
  isExternal: false
  name: ByteSerializable
  nameWithType: ByteSerializable
  fullName: System.Fabric.Common.ByteSerializable
- uid: System.Fabric.Common.ByteSerializable.ToBytes
  commentId: M:System.Fabric.Common.ByteSerializable.ToBytes
  parent: System.Fabric.Common.ByteSerializable
  isExternal: false
  name: ToBytes()
  nameWithType: ByteSerializable.ToBytes()
  fullName: System.Fabric.Common.ByteSerializable.ToBytes()
  spec.csharp:
  - uid: System.Fabric.Common.ByteSerializable.ToBytes
    name: ToBytes
    nameWithType: ByteSerializable.ToBytes
    fullName: System.Fabric.Common.ByteSerializable.ToBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Common.ByteSerializable.ToBytes
    name: ToBytes
    nameWithType: ByteSerializable.ToBytes
    fullName: System.Fabric.Common.ByteSerializable.ToBytes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Common.ByteSerializable.FromBytes(System.Byte[])
  commentId: M:System.Fabric.Common.ByteSerializable.FromBytes(System.Byte[])
  parent: System.Fabric.Common.ByteSerializable
  isExternal: true
  name: FromBytes(Byte[])
  nameWithType: ByteSerializable.FromBytes(Byte[])
  fullName: System.Fabric.Common.ByteSerializable.FromBytes(System.Byte[])
  nameWithType.vb: ByteSerializable.FromBytes(Byte())
  fullname.vb: System.Fabric.Common.ByteSerializable.FromBytes(System.Byte())
  name.vb: FromBytes(Byte())
  spec.csharp:
  - uid: System.Fabric.Common.ByteSerializable.FromBytes(System.Byte[])
    name: FromBytes
    nameWithType: ByteSerializable.FromBytes
    fullName: System.Fabric.Common.ByteSerializable.FromBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Common.ByteSerializable.FromBytes(System.Byte[])
    name: FromBytes
    nameWithType: ByteSerializable.FromBytes
    fullName: System.Fabric.Common.ByteSerializable.FromBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ChaosParameters>()
  nameWithType: ByteArraySerializer.Serialize<ChaosParameters>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Chaos.DataStructures.ChaosParameters>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ChaosParameters)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Chaos.DataStructures.ChaosParameters)()
  name.vb: Serialize(Of ChaosParameters)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ChaosParameters>
    nameWithType: ByteArraySerializer.Serialize<ChaosParameters>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Chaos.DataStructures.ChaosParameters>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ChaosParameters)
    nameWithType: ByteArraySerializer.Serialize(Of ChaosParameters)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Chaos.DataStructures.ChaosParameters)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Common
  commentId: N:System.Fabric.Common
  isExternal: false
  name: System.Fabric.Common
  nameWithType: System.Fabric.Common
  fullName: System.Fabric.Common
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters
  commentId: T:System.Fabric.Chaos.DataStructures.ChaosParameters
  parent: System.Fabric.Chaos.DataStructures
  isExternal: false
  name: ChaosParameters
  nameWithType: ChaosParameters
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosParameters.#ctor
  isExternal: false
  name: ChaosParameters
  nameWithType: ChaosParameters.ChaosParameters
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.ChaosParameters
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenIterations*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenIterations
  isExternal: false
  name: WaitTimeBetweenIterations
  nameWithType: ChaosParameters.WaitTimeBetweenIterations
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenIterations
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.MaxClusterStabilizationTimeout*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosParameters.MaxClusterStabilizationTimeout
  isExternal: false
  name: MaxClusterStabilizationTimeout
  nameWithType: ChaosParameters.MaxClusterStabilizationTimeout
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.MaxClusterStabilizationTimeout
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.MaxConcurrentFaults*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosParameters.MaxConcurrentFaults
  isExternal: false
  name: MaxConcurrentFaults
  nameWithType: ChaosParameters.MaxConcurrentFaults
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.MaxConcurrentFaults
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.EnableMoveReplicaFaults*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosParameters.EnableMoveReplicaFaults
  isExternal: false
  name: EnableMoveReplicaFaults
  nameWithType: ChaosParameters.EnableMoveReplicaFaults
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.EnableMoveReplicaFaults
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenFaults*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenFaults
  isExternal: false
  name: WaitTimeBetweenFaults
  nameWithType: ChaosParameters.WaitTimeBetweenFaults
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.WaitTimeBetweenFaults
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.Context*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosParameters.Context
  isExternal: false
  name: Context
  nameWithType: ChaosParameters.Context
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.Context
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.TimeToRun*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosParameters.TimeToRun
  isExternal: false
  name: TimeToRun
  nameWithType: ChaosParameters.TimeToRun
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.TimeToRun
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.ToString*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosParameters.ToString
  isExternal: false
  name: ToString
  nameWithType: ChaosParameters.ToString
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Common.ByteSerializable.Read(System.IO.BinaryReader)
  commentId: M:System.Fabric.Common.ByteSerializable.Read(System.IO.BinaryReader)
  parent: System.Fabric.Common.ByteSerializable
  isExternal: true
  name: Read(BinaryReader)
  nameWithType: ByteSerializable.Read(BinaryReader)
  fullName: System.Fabric.Common.ByteSerializable.Read(System.IO.BinaryReader)
  spec.csharp:
  - uid: System.Fabric.Common.ByteSerializable.Read(System.IO.BinaryReader)
    name: Read
    nameWithType: ByteSerializable.Read
    fullName: System.Fabric.Common.ByteSerializable.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    nameWithType: BinaryReader
    fullName: System.IO.BinaryReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Common.ByteSerializable.Read(System.IO.BinaryReader)
    name: Read
    nameWithType: ByteSerializable.Read
    fullName: System.Fabric.Common.ByteSerializable.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    nameWithType: BinaryReader
    fullName: System.IO.BinaryReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.Read*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosParameters.Read
  isExternal: false
  name: Read
  nameWithType: ChaosParameters.Read
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.Read
- uid: System.IO.EndOfStreamException
  commentId: T:System.IO.EndOfStreamException
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Fabric.Common.ByteSerializable.Write(System.IO.BinaryWriter)
  commentId: M:System.Fabric.Common.ByteSerializable.Write(System.IO.BinaryWriter)
  parent: System.Fabric.Common.ByteSerializable
  isExternal: true
  name: Write(BinaryWriter)
  nameWithType: ByteSerializable.Write(BinaryWriter)
  fullName: System.Fabric.Common.ByteSerializable.Write(System.IO.BinaryWriter)
  spec.csharp:
  - uid: System.Fabric.Common.ByteSerializable.Write(System.IO.BinaryWriter)
    name: Write
    nameWithType: ByteSerializable.Write
    fullName: System.Fabric.Common.ByteSerializable.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: BinaryWriter
    nameWithType: BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Common.ByteSerializable.Write(System.IO.BinaryWriter)
    name: Write
    nameWithType: ByteSerializable.Write
    fullName: System.Fabric.Common.ByteSerializable.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: BinaryWriter
    nameWithType: BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters.Write*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosParameters.Write
  isExternal: false
  name: Write
  nameWithType: ChaosParameters.Write
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters.Write
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
