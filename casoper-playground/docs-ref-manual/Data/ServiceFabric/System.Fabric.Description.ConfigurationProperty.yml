### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.ConfigurationProperty
  commentId: T:System.Fabric.Description.ConfigurationProperty
  id: ConfigurationProperty
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.ConfigurationProperty.DecryptValue
  - System.Fabric.Description.ConfigurationProperty.IsEncrypted
  - System.Fabric.Description.ConfigurationProperty.MustOverride
  - System.Fabric.Description.ConfigurationProperty.Name
  - System.Fabric.Description.ConfigurationProperty.Value
  langs:
  - csharp
  - vb
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Fabric.Description.ConfigurationProperty
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ConfigurationProperty
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies a name-value pair that is used to configure a service or application.</p>\n"
  example: []
  syntax:
    content: public sealed class ConfigurationProperty
    content.vb: Public NotInheritable Class ConfigurationProperty
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.ConfigurationProperty.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.ConfigurationProperty.Name
  commentId: P:System.Fabric.Description.ConfigurationProperty.Name
  id: Name
  parent: System.Fabric.Description.ConfigurationProperty
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ConfigurationProperty.Name
  fullName: System.Fabric.Description.ConfigurationProperty.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
    startLine: 27
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies the name of the setting.</p>\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the setting.</p>\n"
  overload: System.Fabric.Description.ConfigurationProperty.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ConfigurationProperty.Value
  commentId: P:System.Fabric.Description.ConfigurationProperty.Value
  id: Value
  parent: System.Fabric.Description.ConfigurationProperty
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ConfigurationProperty.Value
  fullName: System.Fabric.Description.ConfigurationProperty.Value
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Value
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
    startLine: 35
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the value of the setting.</p>\n"
  example: []
  syntax:
    content: public string Value { get; }
    content.vb: Public ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The value of the setting.</p>\n"
  overload: System.Fabric.Description.ConfigurationProperty.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ConfigurationProperty.MustOverride
  commentId: P:System.Fabric.Description.ConfigurationProperty.MustOverride
  id: MustOverride
  parent: System.Fabric.Description.ConfigurationProperty
  langs:
  - csharp
  - vb
  name: MustOverride
  nameWithType: ConfigurationProperty.MustOverride
  fullName: System.Fabric.Description.ConfigurationProperty.MustOverride
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MustOverride
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
    startLine: 43
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets a flag indicating whether the setting must be overridden in the application manifest.</p>\n"
  example: []
  syntax:
    content: public bool MustOverride { get; }
    content.vb: Public ReadOnly Property MustOverride As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Flag indicating whether the setting must be overridden in the application manifest.</p>\n"
  overload: System.Fabric.Description.ConfigurationProperty.MustOverride*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ConfigurationProperty.IsEncrypted
  commentId: P:System.Fabric.Description.ConfigurationProperty.IsEncrypted
  id: IsEncrypted
  parent: System.Fabric.Description.ConfigurationProperty
  langs:
  - csharp
  - vb
  name: IsEncrypted
  nameWithType: ConfigurationProperty.IsEncrypted
  fullName: System.Fabric.Description.ConfigurationProperty.IsEncrypted
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsEncrypted
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
    startLine: 51
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies whether the configuration is encrypted. </p>\n"
  example: []
  syntax:
    content: public bool IsEncrypted { get; }
    content.vb: Public ReadOnly Property IsEncrypted As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns true if the configuration is encrypted; false, otherwise.</p>\n"
  overload: System.Fabric.Description.ConfigurationProperty.IsEncrypted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ConfigurationProperty.DecryptValue
  commentId: M:System.Fabric.Description.ConfigurationProperty.DecryptValue
  id: DecryptValue
  parent: System.Fabric.Description.ConfigurationProperty
  langs:
  - csharp
  - vb
  name: DecryptValue()
  nameWithType: ConfigurationProperty.DecryptValue()
  fullName: System.Fabric.Description.ConfigurationProperty.DecryptValue()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DecryptValue
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ConfigurationProperty.cs
    startLine: 62
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies the method to decrypt the encrypted value.</p>\n"
  example: []
  syntax:
    content: public SecureString DecryptValue()
    content.vb: Public Function DecryptValue As SecureString
    return:
      type: System.Security.SecureString
      description: "\n<p>Returns <xref href=\"System.Security.SecureString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.ConfigurationProperty.DecryptValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The value of the <xref href=\"System.Fabric.Description.ConfigurationProperty\" data-throw-if-not-resolved=\"false\"></xref> is not encrypted.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ConfigurationProperty.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ConfigurationProperty>()
  nameWithType: ByteArraySerializer.Serialize<ConfigurationProperty>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ConfigurationProperty>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ConfigurationProperty)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ConfigurationProperty)()
  name.vb: Serialize(Of ConfigurationProperty)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ConfigurationProperty>
    nameWithType: ByteArraySerializer.Serialize<ConfigurationProperty>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ConfigurationProperty>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ConfigurationProperty)
    nameWithType: ByteArraySerializer.Serialize(Of ConfigurationProperty)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ConfigurationProperty)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.ConfigurationProperty.Name*
  commentId: Overload:System.Fabric.Description.ConfigurationProperty.Name
  isExternal: false
  name: Name
  nameWithType: ConfigurationProperty.Name
  fullName: System.Fabric.Description.ConfigurationProperty.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Description.ConfigurationProperty.Value*
  commentId: Overload:System.Fabric.Description.ConfigurationProperty.Value
  isExternal: false
  name: Value
  nameWithType: ConfigurationProperty.Value
  fullName: System.Fabric.Description.ConfigurationProperty.Value
- uid: System.Fabric.Description.ConfigurationProperty.MustOverride*
  commentId: Overload:System.Fabric.Description.ConfigurationProperty.MustOverride
  isExternal: false
  name: MustOverride
  nameWithType: ConfigurationProperty.MustOverride
  fullName: System.Fabric.Description.ConfigurationProperty.MustOverride
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Description.ConfigurationProperty.IsEncrypted*
  commentId: Overload:System.Fabric.Description.ConfigurationProperty.IsEncrypted
  isExternal: false
  name: IsEncrypted
  nameWithType: ConfigurationProperty.IsEncrypted
  fullName: System.Fabric.Description.ConfigurationProperty.IsEncrypted
- uid: System.Security.SecureString
  commentId: T:System.Security.SecureString
  parent: System.Security
  isExternal: true
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Fabric.Description.ConfigurationProperty
  commentId: T:System.Fabric.Description.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Fabric.Description.ConfigurationProperty
- uid: System.Fabric.Description.ConfigurationProperty.DecryptValue*
  commentId: Overload:System.Fabric.Description.ConfigurationProperty.DecryptValue
  isExternal: false
  name: DecryptValue
  nameWithType: ConfigurationProperty.DecryptValue
  fullName: System.Fabric.Description.ConfigurationProperty.DecryptValue
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Security
  commentId: N:System.Security
  isExternal: false
  name: System.Security
  nameWithType: System.Security
  fullName: System.Security
