### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  id: IExceptionHandler
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  children:
  - Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler.TryHandleException(Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult@)
  langs:
  - csharp
  - vb
  name: IExceptionHandler
  nameWithType: IExceptionHandler
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IExceptionHandler.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IExceptionHandler
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IExceptionHandler.cs
    startLine: 9
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nDefines the interface for handling the exceptions encountered in communicating with service fabric services. \n"
  example: []
  syntax:
    content: public interface IExceptionHandler
    content.vb: Public Interface IExceptionHandler
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler.TryHandleException(Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult@)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler.TryHandleException(Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult@)
  id: TryHandleException(Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult@)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  langs:
  - csharp
  - vb
  name: TryHandleException(ExceptionInformation, OperationRetrySettings, out ExceptionHandlingResult)
  nameWithType: IExceptionHandler.TryHandleException(ExceptionInformation, OperationRetrySettings, out ExceptionHandlingResult)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler.TryHandleException(Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, out Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IExceptionHandler.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TryHandleException
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IExceptionHandler.cs
    startLine: 18
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nMethod that examines the exception and determines how that exception can be handled. \n"
  example: []
  syntax:
    content: bool TryHandleException(ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings, out ExceptionHandlingResult result)
    content.vb: Function TryHandleException(exceptionInformation As ExceptionInformation, retrySettings As OperationRetrySettings, ByRef result As ExceptionHandlingResult) As Boolean
    parameters:
    - id: exceptionInformation
      type: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
      description: Information about the exception
    - id: retrySettings
      type: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
      description: The operation retry preferences.
    - id: result
      type: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult
      description: Result of the exception handling
    return:
      type: System.Boolean
      description: true if the exception is handled, false otherwise
  overload: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler.TryHandleException*
  nameWithType.vb: IExceptionHandler.TryHandleException(ExceptionInformation, OperationRetrySettings, ByRef ExceptionHandlingResult)
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler.TryHandleException(Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, ByRef Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult)
  name.vb: TryHandleException(ExceptionInformation, OperationRetrySettings, ByRef ExceptionHandlingResult)
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IExceptionHandler>()
  nameWithType: ByteArraySerializer.Serialize<IExceptionHandler>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IExceptionHandler)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler)()
  name.vb: Serialize(Of IExceptionHandler)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IExceptionHandler>
    nameWithType: ByteArraySerializer.Serialize<IExceptionHandler>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IExceptionHandler)
    nameWithType: ByteArraySerializer.Serialize(Of IExceptionHandler)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler.TryHandleException*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler.TryHandleException
  isExternal: false
  name: TryHandleException
  nameWithType: IExceptionHandler.TryHandleException
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler.TryHandleException
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: ExceptionInformation
  nameWithType: ExceptionInformation
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: OperationRetrySettings
  nameWithType: OperationRetrySettings
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: ExceptionHandlingResult
  nameWithType: ExceptionHandlingResult
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionHandlingResult
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
