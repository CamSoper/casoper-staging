### YamlMime:ManagedReference
items:
- uid: System.Fabric.Testability.Scenario.TestScenario
  commentId: T:System.Fabric.Testability.Scenario.TestScenario
  id: TestScenario
  parent: System.Fabric.Testability.Scenario
  children:
  - System.Fabric.Testability.Scenario.TestScenario.#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.TestScenarioParameters)
  - System.Fabric.Testability.Scenario.TestScenario.Dispose
  - System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)
  - System.Fabric.Testability.Scenario.TestScenario.FabricClient
  - System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
  - System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task,System.String,System.String)
  - System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)
  - System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  - System.Fabric.Testability.Scenario.TestScenario.ProgressChanged
  - System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)
  - System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String,System.Object[])
  - System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters
  - System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: TestScenario
  nameWithType: TestScenario
  fullName: System.Fabric.Testability.Scenario.TestScenario
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TestScenario
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nBase class for TestScenarios which defines all the common methods and functionality.\n"
  example: []
  syntax:
    content: 'public abstract class TestScenario : IDisposable'
    content.vb: >-
      Public MustInherit Class TestScenario
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Testability.Scenario.TestScenario.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Testability.Scenario.TestScenario.#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.TestScenarioParameters)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.TestScenarioParameters)
  id: '#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.TestScenarioParameters)'
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: TestScenario(FabricClient, TestScenarioParameters)
  nameWithType: TestScenario.TestScenario(FabricClient, TestScenarioParameters)
  fullName: System.Fabric.Testability.Scenario.TestScenario.TestScenario(System.Fabric.FabricClient, System.Fabric.Testability.Scenario.TestScenarioParameters)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 34
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected TestScenario(FabricClient fabricClient, TestScenarioParameters testScenarioParameters)
    content.vb: Protected Sub New(fabricClient As FabricClient, testScenarioParameters As TestScenarioParameters)
    parameters:
    - id: fabricClient
      type: System.Fabric.FabricClient
      description: This API supports the Service Fabric platform and is not meant to be called from your code
    - id: testScenarioParameters
      type: System.Fabric.Testability.Scenario.TestScenarioParameters
      description: This API supports the Service Fabric platform and is not meant to be called from your code
  overload: System.Fabric.Testability.Scenario.TestScenario.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters
  commentId: P:System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters
  id: ScenarioParameters
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: ScenarioParameters
  nameWithType: TestScenario.ScenarioParameters
  fullName: System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ScenarioParameters
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 53
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected TestScenarioParameters ScenarioParameters { get; }
    content.vb: Protected ReadOnly Property ScenarioParameters As TestScenarioParameters
    parameters: []
    return:
      type: System.Fabric.Testability.Scenario.TestScenarioParameters
      description: "\nReturns <xref href=\"System.Fabric.Testability.Scenario.TestScenarioParameters\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Fabric.Testability.Scenario.TestScenario.FabricClient
  commentId: P:System.Fabric.Testability.Scenario.TestScenario.FabricClient
  id: FabricClient
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: FabricClient
  nameWithType: TestScenario.FabricClient
  fullName: System.Fabric.Testability.Scenario.TestScenario.FabricClient
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FabricClient
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 61
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected FabricClient FabricClient { get; }
    content.vb: Protected ReadOnly Property FabricClient As FabricClient
    parameters: []
    return:
      type: System.Fabric.FabricClient
      description: "\nReturns <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: System.Fabric.Testability.Scenario.TestScenario.FabricClient*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Fabric.Testability.Scenario.TestScenario.ProgressChanged
  commentId: F:System.Fabric.Testability.Scenario.TestScenario.ProgressChanged
  id: ProgressChanged
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: ProgressChanged
  nameWithType: TestScenario.ProgressChanged
  fullName: System.Fabric.Testability.Scenario.TestScenario.ProgressChanged
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ProgressChanged
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 68
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nEvent handler which exposes the current progress of the test. When handled it gives you the ProgressChangedEventArgs\nwhich gives out a total % of the test which has already completed and the last operation (string) that was performed \nwhich can be useful for logging.\n"
  example: []
  syntax:
    content: public ProgressChangedEventHandler ProgressChanged
    content.vb: Public ProgressChanged As ProgressChangedEventHandler
    return:
      type: System.ComponentModel.ProgressChangedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)
  id: ExecuteAsync(System.Threading.CancellationToken)
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: ExecuteAsync(CancellationToken)
  nameWithType: TestScenario.ExecuteAsync(CancellationToken)
  fullName: System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ExecuteAsync
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 76
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis method executes the test with the specified parameter set passed into the constructor.\n"
  example: []
  syntax:
    content: public Task ExecuteAsync(CancellationToken token)
    content.vb: Public Function ExecuteAsync(token As CancellationToken) As Task
    parameters:
    - id: token
      type: System.Threading.CancellationToken
      description: the Cancellation token for the async operation.
    return:
      type: System.Threading.Tasks.Task
      description: Returns a Task which represents the asynchronous operation.
  overload: System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync*
  exceptions:
  - type: System.Fabric.FabricValidationException
    commentId: T:System.Fabric.FabricValidationException
    description: If any service does not stabilize within the specified timeout.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Testability.Scenario.TestScenario.Dispose
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.Dispose
  id: Dispose
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TestScenario.Dispose()
  fullName: System.Fabric.Testability.Scenario.TestScenario.Dispose()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Dispose
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 110
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis method will dispose the TestScenario.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: System.Fabric.Testability.Scenario.TestScenario.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  id: OnExecuteAsync(System.Threading.CancellationToken)
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: OnExecuteAsync(CancellationToken)
  nameWithType: TestScenario.OnExecuteAsync(CancellationToken)
  fullName: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnExecuteAsync
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 130
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected abstract Task OnExecuteAsync(CancellationToken token)
    content.vb: Protected MustOverride Function OnExecuteAsync(token As CancellationToken) As Task
    parameters:
    - id: token
      type: System.Threading.CancellationToken
      description: This API supports the Service Fabric platform and is not meant to be called from your code
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the execution of the TestScenario.
  overload: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)
  id: OnDispose(System.Boolean)
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: OnDispose(Boolean)
  nameWithType: TestScenario.OnDispose(Boolean)
  fullName: System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnDispose
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 136
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected abstract void OnDispose(bool disposing)
    content.vb: Protected MustOverride Sub OnDispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: This API supports the Service Fabric platform and is not meant to be called from your code
  overload: System.Fabric.Testability.Scenario.TestScenario.OnDispose*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  id: ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: ValidateScenarioAtExitAsync(CancellationToken)
  nameWithType: TestScenario.ValidateScenarioAtExitAsync(CancellationToken)
  fullName: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ValidateScenarioAtExitAsync
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 143
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected abstract Task ValidateScenarioAtExitAsync(CancellationToken token)
    content.vb: Protected MustOverride Function ValidateScenarioAtExitAsync(token As CancellationToken) As Task
    parameters:
    - id: token
      type: System.Threading.CancellationToken
      description: This API supports the Service Fabric platform and is not meant to be called from your code
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the validation operation - implemented by the derived TestScenario - that needs to run when OnExecuteAsync has completed.
  overload: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
  id: GetElapsedTime
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: GetElapsedTime()
  nameWithType: TestScenario.GetElapsedTime()
  fullName: System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetElapsedTime
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 149
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected TimeSpan GetElapsedTime()
    content.vb: Protected Function GetElapsedTime As TimeSpan
    return:
      type: System.TimeSpan
      description: This API supports the Service Fabric platform and is not meant to be called from your code
  overload: System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)
  id: ReportProgress(System.String)
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: ReportProgress(String)
  nameWithType: TestScenario.ReportProgress(String)
  fullName: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReportProgress
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 158
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected void ReportProgress(string progressReport)
    content.vb: Protected Sub ReportProgress(progressReport As String)
    parameters:
    - id: progressReport
      type: System.String
      description: This API supports the Service Fabric platform and is not meant to be called from your code
  overload: System.Fabric.Testability.Scenario.TestScenario.ReportProgress*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String,System.Object[])
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String,System.Object[])
  id: ReportProgress(System.String,System.Object[])
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: ReportProgress(String, Object[])
  nameWithType: TestScenario.ReportProgress(String, Object[])
  fullName: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReportProgress
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 179
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected void ReportProgress(string format, params object[] args)
    content.vb: Protected Sub ReportProgress(format As String, ParamArray args As Object())
    parameters:
    - id: format
      type: System.String
      description: This API supports the Service Fabric platform and is not meant to be called from your code
    - id: args
      type: System.Object[]
      description: This API supports the Service Fabric platform and is not meant to be called from your code
  overload: System.Fabric.Testability.Scenario.TestScenario.ReportProgress*
  nameWithType.vb: TestScenario.ReportProgress(String, Object())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String, System.Object())
  name.vb: ReportProgress(String, Object())
- uid: System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task,System.String,System.String)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task,System.String,System.String)
  id: HandleTaskComplete(System.Threading.Tasks.Task,System.String,System.String)
  parent: System.Fabric.Testability.Scenario.TestScenario
  langs:
  - csharp
  - vb
  name: HandleTaskComplete(Task, String, String)
  nameWithType: TestScenario.HandleTaskComplete(Task, String, String)
  fullName: System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HandleTaskComplete
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/TestScenario.cs
    startLine: 200
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected void HandleTaskComplete(Task t, string actionId, string actionName)
    content.vb: Protected Sub HandleTaskComplete(t As Task, actionId As String, actionName As String)
    parameters:
    - id: t
      type: System.Threading.Tasks.Task
      description: This API supports the Service Fabric platform and is not meant to be called from your code
    - id: actionId
      type: System.String
      description: This API supports the Service Fabric platform and is not meant to be called from your code
    - id: actionName
      type: System.String
      description: This API supports the Service Fabric platform and is not meant to be called from your code
  overload: System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.Fabric.Testability.Scenario
  commentId: N:System.Fabric.Testability.Scenario
  isExternal: false
  name: System.Fabric.Testability.Scenario
  nameWithType: System.Fabric.Testability.Scenario
  fullName: System.Fabric.Testability.Scenario
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.TestScenario.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<TestScenario>()
  nameWithType: ByteArraySerializer.Serialize<TestScenario>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Testability.Scenario.TestScenario>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of TestScenario)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Testability.Scenario.TestScenario)()
  name.vb: Serialize(Of TestScenario)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<TestScenario>
    nameWithType: ByteArraySerializer.Serialize<TestScenario>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Testability.Scenario.TestScenario>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of TestScenario)
    nameWithType: ByteArraySerializer.Serialize(Of TestScenario)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Testability.Scenario.TestScenario)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Testability.Scenario.TestScenario.#ctor*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenario.#ctor
  isExternal: false
  name: TestScenario
  nameWithType: TestScenario.TestScenario
  fullName: System.Fabric.Testability.Scenario.TestScenario.TestScenario
- uid: System.Fabric.FabricClient
  commentId: T:System.Fabric.FabricClient
  parent: System.Fabric
  isExternal: false
  name: FabricClient
  nameWithType: FabricClient
  fullName: System.Fabric.FabricClient
- uid: System.Fabric.Testability.Scenario.TestScenarioParameters
  commentId: T:System.Fabric.Testability.Scenario.TestScenarioParameters
  parent: System.Fabric.Testability.Scenario
  isExternal: false
  name: TestScenarioParameters
  nameWithType: TestScenarioParameters
  fullName: System.Fabric.Testability.Scenario.TestScenarioParameters
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters
  isExternal: false
  name: ScenarioParameters
  nameWithType: TestScenario.ScenarioParameters
  fullName: System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters
- uid: System.Fabric.Testability.Scenario.TestScenario.FabricClient*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenario.FabricClient
  isExternal: false
  name: FabricClient
  nameWithType: TestScenario.FabricClient
  fullName: System.Fabric.Testability.Scenario.TestScenario.FabricClient
- uid: System.ComponentModel.ProgressChangedEventHandler
  commentId: T:System.ComponentModel.ProgressChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: ProgressChangedEventHandler
  nameWithType: ProgressChangedEventHandler
  fullName: System.ComponentModel.ProgressChangedEventHandler
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync
  isExternal: false
  name: ExecuteAsync
  nameWithType: TestScenario.ExecuteAsync
  fullName: System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync
- uid: System.Fabric.FabricValidationException
  commentId: T:System.Fabric.FabricValidationException
  isExternal: false
  name: FabricValidationException
  nameWithType: FabricValidationException
  fullName: System.Fabric.FabricValidationException
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Fabric.Testability.Scenario.TestScenario.Dispose*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenario.Dispose
  isExternal: false
  name: Dispose
  nameWithType: TestScenario.Dispose
  fullName: System.Fabric.Testability.Scenario.TestScenario.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync
  isExternal: false
  name: OnExecuteAsync
  nameWithType: TestScenario.OnExecuteAsync
  fullName: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync
- uid: System.Fabric.Testability.Scenario.TestScenario.OnDispose*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenario.OnDispose
  isExternal: false
  name: OnDispose
  nameWithType: TestScenario.OnDispose
  fullName: System.Fabric.Testability.Scenario.TestScenario.OnDispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync
  isExternal: false
  name: ValidateScenarioAtExitAsync
  nameWithType: TestScenario.ValidateScenarioAtExitAsync
  fullName: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync
- uid: System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
  isExternal: false
  name: GetElapsedTime
  nameWithType: TestScenario.GetElapsedTime
  fullName: System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.Testability.Scenario.TestScenario.ReportProgress*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenario.ReportProgress
  isExternal: false
  name: ReportProgress
  nameWithType: TestScenario.ReportProgress
  fullName: System.Fabric.Testability.Scenario.TestScenario.ReportProgress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete*
  commentId: Overload:System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete
  isExternal: false
  name: HandleTaskComplete
  nameWithType: TestScenario.HandleTaskComplete
  fullName: System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete
