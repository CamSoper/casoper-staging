### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.ServiceTypeHealthPolicy
  commentId: T:System.Fabric.Health.ServiceTypeHealthPolicy
  id: ServiceTypeHealthPolicy
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.ServiceTypeHealthPolicy.#ctor
  - System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService
  - System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition
  - System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyServices
  - System.Fabric.Health.ServiceTypeHealthPolicy.ToString
  langs:
  - csharp
  - vb
  name: ServiceTypeHealthPolicy
  nameWithType: ServiceTypeHealthPolicy
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeHealthPolicy
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Represents the health policy used to evaluate the health of services belonging to a service type.</p>\n"
  example: []
  syntax:
    content: public class ServiceTypeHealthPolicy
    content.vb: Public Class ServiceTypeHealthPolicy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.ServiceTypeHealthPolicy.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Health.ServiceTypeHealthPolicy.#ctor
  commentId: M:System.Fabric.Health.ServiceTypeHealthPolicy.#ctor
  id: '#ctor'
  parent: System.Fabric.Health.ServiceTypeHealthPolicy
  langs:
  - csharp
  - vb
  name: ServiceTypeHealthPolicy()
  nameWithType: ServiceTypeHealthPolicy.ServiceTypeHealthPolicy()
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy.ServiceTypeHealthPolicy()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
    startLine: 25
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Fabric.Health.ServiceTypeHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: By default, no errors or warnings are tolerated.
  example: []
  syntax:
    content: public ServiceTypeHealthPolicy()
    content.vb: Public Sub New
  overload: System.Fabric.Health.ServiceTypeHealthPolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyServices
  commentId: P:System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyServices
  id: MaxPercentUnhealthyServices
  parent: System.Fabric.Health.ServiceTypeHealthPolicy
  langs:
  - csharp
  - vb
  name: MaxPercentUnhealthyServices
  nameWithType: ServiceTypeHealthPolicy.MaxPercentUnhealthyServices
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyServices
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxPercentUnhealthyServices
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
    startLine: 52
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets or sets the maximum allowed percentage of unhealthy services.</p>\n"
  remarks: "\n<p>\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy \nbefore the application is considered in error. If the percentage is respected but there is at least one unhealthy service,\nthe health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type \nover the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services. Default percentage: zero.\n</p>\n"
  example: []
  syntax:
    content: public byte MaxPercentUnhealthyServices { get; set; }
    content.vb: Public Property MaxPercentUnhealthyServices As Byte
    parameters: []
    return:
      type: System.Byte
      description: "\n<p>Returns the maximum allowed percentage of unhealthy services. \nAllowed values are <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> values from zero to 100.</p>\n"
  overload: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyServices*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The specified value was outside the range of integer values from zero to 100.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService
  commentId: P:System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService
  id: MaxPercentUnhealthyPartitionsPerService
  parent: System.Fabric.Health.ServiceTypeHealthPolicy
  langs:
  - csharp
  - vb
  name: MaxPercentUnhealthyPartitionsPerService
  nameWithType: ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxPercentUnhealthyPartitionsPerService
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
    startLine: 89
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets or sets the maximum allowed percentage of unhealthy partitions per service.</p>\n"
  remarks: "\n<p>\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy \nbefore the service is considered in error. If the percentage is respected but there is at least one unhealthy partition,\nthe health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions. Default percentage: zero.\n</p>\n"
  example: []
  syntax:
    content: public byte MaxPercentUnhealthyPartitionsPerService { get; set; }
    content.vb: Public Property MaxPercentUnhealthyPartitionsPerService As Byte
    parameters: []
    return:
      type: System.Byte
      description: "\n<p>Returns the maximum allowed percentage of unhealthy partitions per service.\nAllowed values are <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> values from zero to 100.</p>\n"
  overload: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The specified value was outside the range of integer values from zero to 100.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition
  commentId: P:System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition
  id: MaxPercentUnhealthyReplicasPerPartition
  parent: System.Fabric.Health.ServiceTypeHealthPolicy
  langs:
  - csharp
  - vb
  name: MaxPercentUnhealthyReplicasPerPartition
  nameWithType: ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxPercentUnhealthyReplicasPerPartition
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
    startLine: 126
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets or sets the maximum allowed percentage of unhealthy replicas per partition.</p>\n"
  remarks: "\n<p>\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy \nbefore the partition is considered in error. If the percentage is respected but there is at least one unhealthy replica,\nthe health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas. Default percentage: zero.\n</p>\n"
  example: []
  syntax:
    content: public byte MaxPercentUnhealthyReplicasPerPartition { get; set; }
    content.vb: Public Property MaxPercentUnhealthyReplicasPerPartition As Byte
    parameters: []
    return:
      type: System.Byte
      description: "\n<p>Returns the maximum allowed percentage of unhealthy replicas per partition.\nAllowed values are <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> values from zero to 100.</p>\n"
  overload: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The specified value was outside the range of integer values from zero to 100.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.ServiceTypeHealthPolicy.ToString
  commentId: M:System.Fabric.Health.ServiceTypeHealthPolicy.ToString
  id: ToString
  parent: System.Fabric.Health.ServiceTypeHealthPolicy
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ServiceTypeHealthPolicy.ToString()
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceTypeHealthPolicy.cs
    startLine: 148
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets a string representation of the service type health policy.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the service type health policy.
  overridden: System.Object.ToString
  overload: System.Fabric.Health.ServiceTypeHealthPolicy.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ServiceTypeHealthPolicy.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceTypeHealthPolicy>()
  nameWithType: ByteArraySerializer.Serialize<ServiceTypeHealthPolicy>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ServiceTypeHealthPolicy>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceTypeHealthPolicy)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ServiceTypeHealthPolicy)()
  name.vb: Serialize(Of ServiceTypeHealthPolicy)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceTypeHealthPolicy>
    nameWithType: ByteArraySerializer.Serialize<ServiceTypeHealthPolicy>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ServiceTypeHealthPolicy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceTypeHealthPolicy)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceTypeHealthPolicy)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ServiceTypeHealthPolicy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.ServiceTypeHealthPolicy
  commentId: T:System.Fabric.Health.ServiceTypeHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ServiceTypeHealthPolicy
  nameWithType: ServiceTypeHealthPolicy
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy
- uid: System.Fabric.Health.ServiceTypeHealthPolicy.#ctor*
  commentId: Overload:System.Fabric.Health.ServiceTypeHealthPolicy.#ctor
  isExternal: false
  name: ServiceTypeHealthPolicy
  nameWithType: ServiceTypeHealthPolicy.ServiceTypeHealthPolicy
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy.ServiceTypeHealthPolicy
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyServices*
  commentId: Overload:System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyServices
  isExternal: false
  name: MaxPercentUnhealthyServices
  nameWithType: ServiceTypeHealthPolicy.MaxPercentUnhealthyServices
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyServices
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService*
  commentId: Overload:System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService
  isExternal: false
  name: MaxPercentUnhealthyPartitionsPerService
  nameWithType: ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyPartitionsPerService
- uid: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition*
  commentId: Overload:System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition
  isExternal: false
  name: MaxPercentUnhealthyReplicasPerPartition
  nameWithType: ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy.MaxPercentUnhealthyReplicasPerPartition
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ServiceTypeHealthPolicy.ToString*
  commentId: Overload:System.Fabric.Health.ServiceTypeHealthPolicy.ToString
  isExternal: false
  name: ToString
  nameWithType: ServiceTypeHealthPolicy.ToString
  fullName: System.Fabric.Health.ServiceTypeHealthPolicy.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
