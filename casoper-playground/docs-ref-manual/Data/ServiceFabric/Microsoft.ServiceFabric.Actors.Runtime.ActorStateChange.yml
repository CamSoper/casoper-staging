### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  id: ActorStateChange
  parent: Microsoft.ServiceFabric.Actors.Runtime
  children:
  - Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.#ctor(System.String,System.Type,System.Object,Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.ChangeKind
  - Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.StateName
  - Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Type
  - Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Value
  langs:
  - csharp
  - vb
  name: ActorStateChange
  nameWithType: ActorStateChange
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorStateChange
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
    startLine: 12
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nRepresents change to an actor state with a given state name.\n"
  example: []
  syntax:
    content: public sealed class ActorStateChange
    content.vb: Public NotInheritable Class ActorStateChange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.#ctor(System.String,System.Type,System.Object,Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.#ctor(System.String,System.Type,System.Object,Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind)
  id: '#ctor(System.String,System.Type,System.Object,Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind)'
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  langs:
  - csharp
  - vb
  name: ActorStateChange(String, Type, Object, StateChangeKind)
  nameWithType: ActorStateChange.ActorStateChange(String, Type, Object, StateChangeKind)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.ActorStateChange(System.String, System.Type, System.Object, Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
    startLine: 26
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nCreates an instance of ActorStateChange class.\n"
  example: []
  syntax:
    content: public ActorStateChange(string stateName, Type type, object value, StateChangeKind changeKind)
    content.vb: Public Sub New(stateName As String, type As Type, value As Object, changeKind As StateChangeKind)
    parameters:
    - id: stateName
      type: System.String
      description: Name of the actor state
    - id: type
      type: System.Type
      description: Type of value associated with given actor state name.
    - id: value
      type: System.Object
      description: Value associated with given actor state name.
    - id: changeKind
      type: Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind
      description: Kind of state change for given actor state name.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.StateName
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.StateName
  id: StateName
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  langs:
  - csharp
  - vb
  name: StateName
  nameWithType: ActorStateChange.StateName
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.StateName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StateName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
    startLine: 42
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets name of the actor state.\n"
  example: []
  syntax:
    content: public string StateName { get; }
    content.vb: Public ReadOnly Property StateName As String
    parameters: []
    return:
      type: System.String
      description: "\nName of the actor state.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.StateName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Type
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Type
  id: Type
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ActorStateChange.Type
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Type
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Type
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets the type of value associated with given actor state name.\n"
  example: []
  syntax:
    content: public Type Type { get; }
    content.vb: Public ReadOnly Property Type As Type
    parameters: []
    return:
      type: System.Type
      description: "\nType of value associated with given actor state name.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Value
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Value
  id: Value
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ActorStateChange.Value
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Value
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Value
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
    startLine: 64
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets the value associated with given actor state name.\n"
  example: []
  syntax:
    content: public object Value { get; }
    content.vb: Public ReadOnly Property Value As Object
    parameters: []
    return:
      type: System.Object
      description: "\nValue associated with given actor state name.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.ChangeKind
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.ChangeKind
  id: ChangeKind
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  langs:
  - csharp
  - vb
  name: ChangeKind
  nameWithType: ActorStateChange.ChangeKind
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.ChangeKind
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ChangeKind
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorStateChange.cs
    startLine: 75
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets the kind of state change for given actor state name.\n"
  example: []
  syntax:
    content: public StateChangeKind ChangeKind { get; }
    content.vb: Public ReadOnly Property ChangeKind As StateChangeKind
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind
      description: "\nKind of state change for given actor state name.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.ChangeKind*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Actors.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ActorStateChange>()
  nameWithType: ByteArraySerializer.Serialize<ActorStateChange>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ActorStateChange)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange)()
  name.vb: Serialize(Of ActorStateChange)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ActorStateChange>
    nameWithType: ByteArraySerializer.Serialize<ActorStateChange>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ActorStateChange)
    nameWithType: ByteArraySerializer.Serialize(Of ActorStateChange)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.#ctor
  isExternal: false
  name: ActorStateChange
  nameWithType: ActorStateChange.ActorStateChange
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.ActorStateChange
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: StateChangeKind
  nameWithType: StateChangeKind
  fullName: Microsoft.ServiceFabric.Actors.Runtime.StateChangeKind
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.StateName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.StateName
  isExternal: false
  name: StateName
  nameWithType: ActorStateChange.StateName
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.StateName
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Type*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Type
  isExternal: false
  name: Type
  nameWithType: ActorStateChange.Type
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Type
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Value*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Value
  isExternal: false
  name: Value
  nameWithType: ActorStateChange.Value
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.Value
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.ChangeKind*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.ChangeKind
  isExternal: false
  name: ChangeKind
  nameWithType: ActorStateChange.ChangeKind
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange.ChangeKind
