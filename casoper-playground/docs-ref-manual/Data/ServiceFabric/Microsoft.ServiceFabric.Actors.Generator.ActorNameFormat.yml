### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  commentId: T:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  id: ActorNameFormat
  parent: Microsoft.ServiceFabric.Actors.Generator
  children:
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetCodePackageName(System.Type)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetConfigPackageName(System.Type)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationName(System.String)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationPackageName(System.String)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationTypeName(System.String)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceEndpointName(System.Type)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceName(System.Type,System.String)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServicePackageName(System.String)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorConfigSectionName(System.Type)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorEndpointName(System.Type)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityConfigSectionName(System.Type)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityCredentialTypeName(System.Type)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTransportSettingsSectionName(System.Type)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTypeName(System.Type)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.String,System.String)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.Uri)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.Uri,System.String)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetLocalEseStoreConfigSectionName(System.Type)
  - Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetName(System.Type)
  langs:
  - csharp
  - vb
  name: ActorNameFormat
  nameWithType: ActorNameFormat
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorNameFormat
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nContains static methods for generating names like service name, application name form the actor interface type.\n"
  example: []
  syntax:
    content: public static class ActorNameFormat
    content.vb: Public Module ActorNameFormat
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetName(System.Type)
  id: GetName(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetName(Type)
  nameWithType: ActorNameFormat.GetName(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetName(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 23
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets name of Actor from actorInterfaceType.\n"
  example: []
  syntax:
    content: public static string GetName(Type actorInterfaceType)
    content.vb: Public Shared Function GetName(actorInterfaceType As Type) As String
    parameters:
    - id: actorInterfaceType
      type: System.Type
      description: Type of the actor interface.
    return:
      type: System.String
      description: Name of Actor.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceName(System.Type,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceName(System.Type,System.String)
  id: GetFabricServiceName(System.Type,System.String)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceName(Type, String)
  nameWithType: ActorNameFormat.GetFabricServiceName(Type, String)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceName(System.Type, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 52
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets name of service which hosts the actor type in Service Fabric cluster.\n"
  example: []
  syntax:
    content: public static string GetFabricServiceName(Type actorInterfaceType, string serviceName = null)
    content.vb: Public Shared Function GetFabricServiceName(actorInterfaceType As Type, serviceName As String = Nothing) As String
    parameters:
    - id: actorInterfaceType
      type: System.Type
      description: Type of the actor interface.
    - id: serviceName
      type: System.String
      description: >-
        Name of service hosting the actor type. If this value is null then

        service name is constructed using the actorInterfaceType.
    return:
      type: System.String
      description: Service Fabric service name hosting the actor type.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.String,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.String,System.String)
  id: GetFabricServiceUri(System.Type,System.String,System.String)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceUri(Type, String, String)
  nameWithType: ActorNameFormat.GetFabricServiceUri(Type, String, String)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceUri
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 72
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets service Uri which hosts the actor type in Service Fabric cluster.\n"
  remarks: "If applicationName is passed as null or empty string, an attempt is made to get application name from\n<xref href=\"System.Fabric.CodePackageActivationContext\" data-throw-if-not-resolved=\"false\"></xref>. If the method still cannot determine application name,\n<xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown. "
  example: []
  syntax:
    content: public static Uri GetFabricServiceUri(Type actorInterfaceType, string applicationName = null, string serviceName = null)
    content.vb: Public Shared Function GetFabricServiceUri(actorInterfaceType As Type, applicationName As String = Nothing, serviceName As String = Nothing) As Uri
    parameters:
    - id: actorInterfaceType
      type: System.Type
      description: Type of the actor interface.
    - id: applicationName
      type: System.String
      description: >-
        Service Fabric application name containing the actor service.

        If this value is null application name is obtained from <xref href="System.Fabric.CodePackageActivationContext.ApplicationName" data-throw-if-not-resolved="false"></xref>.
    - id: serviceName
      type: System.String
      description: >-
        Name of service hosting the actor type. If this value is null then

        service name is constructed using the actorInterfaceType.
    return:
      type: System.Uri
      description: Service Fabric service Uri hosting the actor type.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nWhen applicationName cannot be determined using <xref href=\"System.Fabric.CodePackageActivationContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type)
  id: GetFabricServiceUri(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceUri(Type)
  nameWithType: ActorNameFormat.GetFabricServiceUri(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceUri
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 114
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets service Uri which hosts the actor type in Service Fabric cluster.\n"
  remarks: "Method will try to get application name from <xref href=\"System.Fabric.CodePackageActivationContext\" data-throw-if-not-resolved=\"false\"></xref>.\nIf the method still cannot determine application name, <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown. "
  example: []
  syntax:
    content: public static Uri GetFabricServiceUri(Type actorInterfaceType)
    content.vb: Public Shared Function GetFabricServiceUri(actorInterfaceType As Type) As Uri
    parameters:
    - id: actorInterfaceType
      type: System.Type
      description: Type of the actor interface.
    return:
      type: System.Uri
      description: Service Fabric service Uri hosting the actor type.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nWhen application name cannot be determined using <xref href=\"System.Fabric.CodePackageActivationContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.Uri)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.Uri)
  id: GetFabricServiceUri(System.Type,System.Uri)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceUri(Type, Uri)
  nameWithType: ActorNameFormat.GetFabricServiceUri(Type, Uri)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type, System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceUri
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 132
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets service Uri which hosts the actor type in Service Fabric cluster.\n"
  remarks: "Method will create service name using the actorInterfaceType. If applicationUri is passed as null, an attempt is made to get application name from\n<xref href=\"System.Fabric.CodePackageActivationContext\" data-throw-if-not-resolved=\"false\"></xref>. If the method still cannot determine application name,\n<xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown. "
  example: []
  syntax:
    content: public static Uri GetFabricServiceUri(Type actorInterfaceType, Uri applicationUri)
    content.vb: Public Shared Function GetFabricServiceUri(actorInterfaceType As Type, applicationUri As Uri) As Uri
    parameters:
    - id: actorInterfaceType
      type: System.Type
      description: Type of the actor interface.
    - id: applicationUri
      type: System.Uri
      description: >-
        Service Fabric application Uri containing the actor service.

        If this value is null application name is obtained from <xref href="System.Fabric.CodePackageActivationContext.ApplicationName" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Uri
      description: Service Fabric service Uri hosting the actor type.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nWhen application name cannot be determined using <xref href=\"System.Fabric.CodePackageActivationContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.Uri,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type,System.Uri,System.String)
  id: GetFabricServiceUri(System.Type,System.Uri,System.String)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceUri(Type, Uri, String)
  nameWithType: ActorNameFormat.GetFabricServiceUri(Type, Uri, String)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri(System.Type, System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceUri
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 152
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets service Uri which hosts the actor type in Service Fabric cluster.\n"
  remarks: "If applicationUri is passed as null, an attempt is made to get application name from\n<xref href=\"System.Fabric.CodePackageActivationContext\" data-throw-if-not-resolved=\"false\"></xref>. If the method still cannot determine application name,\n<xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown. "
  example: []
  syntax:
    content: public static Uri GetFabricServiceUri(Type actorInterfaceType, Uri applicationUri, string serviceName)
    content.vb: Public Shared Function GetFabricServiceUri(actorInterfaceType As Type, applicationUri As Uri, serviceName As String) As Uri
    parameters:
    - id: actorInterfaceType
      type: System.Type
      description: Type of the actor interface.
    - id: applicationUri
      type: System.Uri
      description: >-
        Service Fabric application Uri containing the actor service.

        If this value is null application name is obtained from <xref href="System.Fabric.CodePackageActivationContext.ApplicationName" data-throw-if-not-resolved="false"></xref>.
    - id: serviceName
      type: System.String
      description: >-
        Name of service hosting the actor type. If this value is null then

        service name is constructed using the actorInterfaceType.
    return:
      type: System.Uri
      description: Service Fabric service Uri hosting the actor type.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nWhen application name cannot be determined using <xref href=\"System.Fabric.CodePackageActivationContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTypeName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTypeName(System.Type)
  id: GetFabricServiceTypeName(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceTypeName(Type)
  nameWithType: ActorNameFormat.GetFabricServiceTypeName(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTypeName(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceTypeName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 169
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets service type name for the actor.\n"
  example: []
  syntax:
    content: public static string GetFabricServiceTypeName(Type actorImplementationType)
    content.vb: Public Shared Function GetFabricServiceTypeName(actorImplementationType As Type) As String
    parameters:
    - id: actorImplementationType
      type: System.Type
      description: Actor implementation type.
    return:
      type: System.String
      description: Service type name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTypeName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServicePackageName(System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServicePackageName(System.String)
  id: GetFabricServicePackageName(System.String)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServicePackageName(String)
  nameWithType: ActorNameFormat.GetFabricServicePackageName(String)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServicePackageName(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServicePackageName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 179
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets service package name which is used in Service Fabric Application package for the actor.\n"
  example: []
  syntax:
    content: public static string GetFabricServicePackageName(string servicePackageNamePrefix)
    content.vb: Public Shared Function GetFabricServicePackageName(servicePackageNamePrefix As String) As String
    parameters:
    - id: servicePackageNamePrefix
      type: System.String
      description: Prefix to be used for the service package name.
    return:
      type: System.String
      description: Service package name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServicePackageName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceEndpointName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceEndpointName(System.Type)
  id: GetFabricServiceEndpointName(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceEndpointName(Type)
  nameWithType: ActorNameFormat.GetFabricServiceEndpointName(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceEndpointName(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceEndpointName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 194
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets the service endpoint for the actor type which is specified in service manifest for the actor service.\n"
  example: []
  syntax:
    content: public static string GetFabricServiceEndpointName(Type actorImplementationType)
    content.vb: Public Shared Function GetFabricServiceEndpointName(actorImplementationType As Type) As String
    parameters:
    - id: actorImplementationType
      type: System.Type
      description: Type of class implementing the actor.
    return:
      type: System.String
      description: Service endpoint name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceEndpointName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorEndpointName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorEndpointName(System.Type)
  id: GetFabricServiceReplicatorEndpointName(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceReplicatorEndpointName(Type)
  nameWithType: ActorNameFormat.GetFabricServiceReplicatorEndpointName(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorEndpointName(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceReplicatorEndpointName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 205
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets the replicator endpoint which is specified in service manifest for the actor service.\n"
  example: []
  syntax:
    content: public static string GetFabricServiceReplicatorEndpointName(Type actorImplementationType)
    content.vb: Public Shared Function GetFabricServiceReplicatorEndpointName(actorImplementationType As Type) As String
    parameters:
    - id: actorImplementationType
      type: System.Type
      description: Type of class implementing the actor.
    return:
      type: System.String
      description: Service replicator endpoint name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorEndpointName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorConfigSectionName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorConfigSectionName(System.Type)
  id: GetFabricServiceReplicatorConfigSectionName(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceReplicatorConfigSectionName(Type)
  nameWithType: ActorNameFormat.GetFabricServiceReplicatorConfigSectionName(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorConfigSectionName(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceReplicatorConfigSectionName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 219
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets the replicator configuration section name specified in configuration package for the actor service.\n"
  remarks: >
    Values specified in replicator configuration section are used to configure <xref href="System.Fabric.ReplicatorSettings" data-throw-if-not-resolved="false"></xref>

    for the replication of actor state between primary and secondary replicas.
  example: []
  syntax:
    content: public static string GetFabricServiceReplicatorConfigSectionName(Type actorImplementationType)
    content.vb: Public Shared Function GetFabricServiceReplicatorConfigSectionName(actorImplementationType As Type) As String
    parameters:
    - id: actorImplementationType
      type: System.Type
      description: Type of class implementing the actor.
    return:
      type: System.String
      description: Replicator configuration section name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorConfigSectionName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTransportSettingsSectionName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTransportSettingsSectionName(System.Type)
  id: GetFabricServiceTransportSettingsSectionName(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceTransportSettingsSectionName(Type)
  nameWithType: ActorNameFormat.GetFabricServiceTransportSettingsSectionName(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTransportSettingsSectionName(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceTransportSettingsSectionName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 232
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets the fabrictransport configuration section name specified in configuration package for the actor service.\n"
  remarks: >
    Values specified in FabricTransport configuration section are used to configure <xref href="Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings" data-throw-if-not-resolved="false"></xref>

    for the communication.
  example: []
  syntax:
    content: public static string GetFabricServiceTransportSettingsSectionName(Type actorImplementationType)
    content.vb: Public Shared Function GetFabricServiceTransportSettingsSectionName(actorImplementationType As Type) As String
    parameters:
    - id: actorImplementationType
      type: System.Type
      description: Type of class implementing the actor.
    return:
      type: System.String
      description: FabricTransport configuration section name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTransportSettingsSectionName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityConfigSectionName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityConfigSectionName(System.Type)
  id: GetFabricServiceReplicatorSecurityConfigSectionName(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceReplicatorSecurityConfigSectionName(Type)
  nameWithType: ActorNameFormat.GetFabricServiceReplicatorSecurityConfigSectionName(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityConfigSectionName(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceReplicatorSecurityConfigSectionName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 246
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets the replicator security configuration section name specified in configuration package for the actor service.\n"
  remarks: >
    Values specified in replicator security configuration section are used to configure <xref href="System.Fabric.ReplicatorSettings.SecurityCredentials" data-throw-if-not-resolved="false"></xref>

    for the replication of actor state between primary and secondary replicas.
  example: []
  syntax:
    content: public static string GetFabricServiceReplicatorSecurityConfigSectionName(Type actorImplementationType)
    content.vb: Public Shared Function GetFabricServiceReplicatorSecurityConfigSectionName(actorImplementationType As Type) As String
    parameters:
    - id: actorImplementationType
      type: System.Type
      description: Type of class implementing the actor.
    return:
      type: System.String
      description: Replicator security configuration section name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityConfigSectionName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetLocalEseStoreConfigSectionName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetLocalEseStoreConfigSectionName(System.Type)
  id: GetLocalEseStoreConfigSectionName(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetLocalEseStoreConfigSectionName(Type)
  nameWithType: ActorNameFormat.GetLocalEseStoreConfigSectionName(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetLocalEseStoreConfigSectionName(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetLocalEseStoreConfigSectionName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 260
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets local store configuration section name specified in configuration package for the actor service. \n"
  remarks: >
    Values specified in local ESE configuration section are used to configure <xref href="System.Fabric.LocalEseStoreSettings" data-throw-if-not-resolved="false"></xref>

    for storing the state of actor.
  example: []
  syntax:
    content: public static string GetLocalEseStoreConfigSectionName(Type actorImplementationType)
    content.vb: Public Shared Function GetLocalEseStoreConfigSectionName(actorImplementationType As Type) As String
    parameters:
    - id: actorImplementationType
      type: System.Type
      description: Type of class implementing the actor.
    return:
      type: System.String
      description: Local store configuration section name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetLocalEseStoreConfigSectionName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetConfigPackageName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetConfigPackageName(System.Type)
  id: GetConfigPackageName(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetConfigPackageName(Type)
  nameWithType: ActorNameFormat.GetConfigPackageName(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetConfigPackageName(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetConfigPackageName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 271
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets the configuration package name used in service package for the actor.\n"
  example: []
  syntax:
    content: public static string GetConfigPackageName(Type actorImplementationType = null)
    content.vb: Public Shared Function GetConfigPackageName(actorImplementationType As Type = Nothing) As String
    parameters:
    - id: actorImplementationType
      type: System.Type
      description: Type of class implementing the actor.
    return:
      type: System.String
      description: configuration package name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetConfigPackageName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetCodePackageName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetCodePackageName(System.Type)
  id: GetCodePackageName(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetCodePackageName(Type)
  nameWithType: ActorNameFormat.GetCodePackageName(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetCodePackageName(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetCodePackageName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 282
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets the code package name used in service package for the actor.\n"
  remarks: Code package name can be accessed from within a service as <xref href="System.Fabric.CodePackageActivationContext.CodePackageName" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string GetCodePackageName(Type actorImplementationType = null)
    content.vb: Public Shared Function GetCodePackageName(actorImplementationType As Type = Nothing) As String
    parameters:
    - id: actorImplementationType
      type: System.Type
      description: Type of class implementing the actor.
    return:
      type: System.String
      description: code package name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetCodePackageName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityCredentialTypeName(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityCredentialTypeName(System.Type)
  id: GetFabricServiceReplicatorSecurityCredentialTypeName(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricServiceReplicatorSecurityCredentialTypeName(Type)
  nameWithType: ActorNameFormat.GetFabricServiceReplicatorSecurityCredentialTypeName(Type)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityCredentialTypeName(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricServiceReplicatorSecurityCredentialTypeName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 292
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets the credential type name used in replicator security configuration section in configuration package for the actor service.\n"
  example: []
  syntax:
    content: public static string GetFabricServiceReplicatorSecurityCredentialTypeName(Type actorImplementationType = null)
    content.vb: Public Shared Function GetFabricServiceReplicatorSecurityCredentialTypeName(actorImplementationType As Type = Nothing) As String
    parameters:
    - id: actorImplementationType
      type: System.Type
      description: Type of class implementing the actor.
    return:
      type: System.String
      description: Replicator security credential type name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityCredentialTypeName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationPackageName(System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationPackageName(System.String)
  id: GetFabricApplicationPackageName(System.String)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricApplicationPackageName(String)
  nameWithType: ActorNameFormat.GetFabricApplicationPackageName(String)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationPackageName(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricApplicationPackageName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 302
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets package name used to create Service Fabric Application package for the actor.\n"
  example: []
  syntax:
    content: public static string GetFabricApplicationPackageName(string appPrefix)
    content.vb: Public Shared Function GetFabricApplicationPackageName(appPrefix As String) As String
    parameters:
    - id: appPrefix
      type: System.String
      description: Prefix to be used for the application package name.
    return:
      type: System.String
      description: Application package name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationPackageName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationTypeName(System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationTypeName(System.String)
  id: GetFabricApplicationTypeName(System.String)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricApplicationTypeName(String)
  nameWithType: ActorNameFormat.GetFabricApplicationTypeName(String)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationTypeName(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricApplicationTypeName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 312
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets the application type name used in application manifest when creating Service Fabric Application package for the actor.\n"
  example: []
  syntax:
    content: public static string GetFabricApplicationTypeName(string appPrefix)
    content.vb: Public Shared Function GetFabricApplicationTypeName(appPrefix As String) As String
    parameters:
    - id: appPrefix
      type: System.String
      description: Prefix to be used for the application type name.
    return:
      type: System.String
      description: Application type name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationTypeName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationName(System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationName(System.String)
  id: GetFabricApplicationName(System.String)
  parent: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat
  langs:
  - csharp
  - vb
  name: GetFabricApplicationName(String)
  nameWithType: ActorNameFormat.GetFabricApplicationName(String)
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationName(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetFabricApplicationName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Generator/ActorNameFormat.cs
    startLine: 322
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Generator
  summary: "\nGets the application name used to create application in Service Fabric cluster.\n"
  example: []
  syntax:
    content: public static string GetFabricApplicationName(string appPrefix)
    content.vb: Public Shared Function GetFabricApplicationName(appPrefix As String) As String
    parameters:
    - id: appPrefix
      type: System.String
      description: Prefix to be used for the application name.
    return:
      type: System.String
      description: Application name.
  overload: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.ServiceFabric.Actors.Generator
  commentId: N:Microsoft.ServiceFabric.Actors.Generator
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Generator
  nameWithType: Microsoft.ServiceFabric.Actors.Generator
  fullName: Microsoft.ServiceFabric.Actors.Generator
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetName
  isExternal: false
  name: GetName
  nameWithType: ActorNameFormat.GetName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetName
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceName
  isExternal: false
  name: GetFabricServiceName
  nameWithType: ActorNameFormat.GetFabricServiceName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceName
- uid: System.Fabric.CodePackageActivationContext.ApplicationName
  commentId: P:System.Fabric.CodePackageActivationContext.ApplicationName
- uid: System.Fabric.CodePackageActivationContext
  commentId: T:System.Fabric.CodePackageActivationContext
  parent: System.Fabric
  isExternal: false
  name: CodePackageActivationContext
  nameWithType: CodePackageActivationContext
  fullName: System.Fabric.CodePackageActivationContext
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri
  isExternal: false
  name: GetFabricServiceUri
  nameWithType: ActorNameFormat.GetFabricServiceUri
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTypeName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTypeName
  isExternal: false
  name: GetFabricServiceTypeName
  nameWithType: ActorNameFormat.GetFabricServiceTypeName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTypeName
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServicePackageName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServicePackageName
  isExternal: false
  name: GetFabricServicePackageName
  nameWithType: ActorNameFormat.GetFabricServicePackageName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServicePackageName
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceEndpointName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceEndpointName
  isExternal: false
  name: GetFabricServiceEndpointName
  nameWithType: ActorNameFormat.GetFabricServiceEndpointName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceEndpointName
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorEndpointName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorEndpointName
  isExternal: false
  name: GetFabricServiceReplicatorEndpointName
  nameWithType: ActorNameFormat.GetFabricServiceReplicatorEndpointName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorEndpointName
- uid: System.Fabric.ReplicatorSettings
  commentId: T:System.Fabric.ReplicatorSettings
  parent: System.Fabric
  isExternal: false
  name: ReplicatorSettings
  nameWithType: ReplicatorSettings
  fullName: System.Fabric.ReplicatorSettings
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorConfigSectionName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorConfigSectionName
  isExternal: false
  name: GetFabricServiceReplicatorConfigSectionName
  nameWithType: ActorNameFormat.GetFabricServiceReplicatorConfigSectionName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorConfigSectionName
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings
  commentId: T:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
  isExternal: false
  name: FabricTransportListenerSettings
  nameWithType: FabricTransportListenerSettings
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTransportSettingsSectionName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTransportSettingsSectionName
  isExternal: false
  name: GetFabricServiceTransportSettingsSectionName
  nameWithType: ActorNameFormat.GetFabricServiceTransportSettingsSectionName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceTransportSettingsSectionName
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
- uid: System.Fabric.ReplicatorSettings.SecurityCredentials
  commentId: P:System.Fabric.ReplicatorSettings.SecurityCredentials
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityConfigSectionName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityConfigSectionName
  isExternal: false
  name: GetFabricServiceReplicatorSecurityConfigSectionName
  nameWithType: ActorNameFormat.GetFabricServiceReplicatorSecurityConfigSectionName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityConfigSectionName
- uid: System.Fabric.LocalEseStoreSettings
  commentId: T:System.Fabric.LocalEseStoreSettings
  parent: System.Fabric
  isExternal: false
  name: LocalEseStoreSettings
  nameWithType: LocalEseStoreSettings
  fullName: System.Fabric.LocalEseStoreSettings
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetLocalEseStoreConfigSectionName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetLocalEseStoreConfigSectionName
  isExternal: false
  name: GetLocalEseStoreConfigSectionName
  nameWithType: ActorNameFormat.GetLocalEseStoreConfigSectionName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetLocalEseStoreConfigSectionName
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetConfigPackageName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetConfigPackageName
  isExternal: false
  name: GetConfigPackageName
  nameWithType: ActorNameFormat.GetConfigPackageName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetConfigPackageName
- uid: System.Fabric.CodePackageActivationContext.CodePackageName
  commentId: P:System.Fabric.CodePackageActivationContext.CodePackageName
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetCodePackageName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetCodePackageName
  isExternal: false
  name: GetCodePackageName
  nameWithType: ActorNameFormat.GetCodePackageName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetCodePackageName
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityCredentialTypeName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityCredentialTypeName
  isExternal: false
  name: GetFabricServiceReplicatorSecurityCredentialTypeName
  nameWithType: ActorNameFormat.GetFabricServiceReplicatorSecurityCredentialTypeName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricServiceReplicatorSecurityCredentialTypeName
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationPackageName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationPackageName
  isExternal: false
  name: GetFabricApplicationPackageName
  nameWithType: ActorNameFormat.GetFabricApplicationPackageName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationPackageName
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationTypeName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationTypeName
  isExternal: false
  name: GetFabricApplicationTypeName
  nameWithType: ActorNameFormat.GetFabricApplicationTypeName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationTypeName
- uid: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationName
  isExternal: false
  name: GetFabricApplicationName
  nameWithType: ActorNameFormat.GetFabricApplicationName
  fullName: Microsoft.ServiceFabric.Actors.Generator.ActorNameFormat.GetFabricApplicationName
