### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.NodeLoadMetricInformation
  commentId: T:System.Fabric.Query.NodeLoadMetricInformation
  id: NodeLoadMetricInformation
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.NodeLoadMetricInformation.#ctor
  - System.Fabric.Query.NodeLoadMetricInformation.IsCapacityViolation
  - System.Fabric.Query.NodeLoadMetricInformation.Name
  - System.Fabric.Query.NodeLoadMetricInformation.NodeBufferedCapacity
  - System.Fabric.Query.NodeLoadMetricInformation.NodeCapacity
  - System.Fabric.Query.NodeLoadMetricInformation.NodeLoad
  - System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingBufferedCapacity
  - System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingCapacity
  langs:
  - csharp
  - vb
  name: NodeLoadMetricInformation
  nameWithType: NodeLoadMetricInformation
  fullName: System.Fabric.Query.NodeLoadMetricInformation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeLoadMetricInformation
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
    startLine: 12
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Represents data structure that contains load information for a certain metric on a node.</p>\n"
  example: []
  syntax:
    content: public sealed class NodeLoadMetricInformation
    content.vb: Public NotInheritable Class NodeLoadMetricInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.NodeLoadMetricInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.NodeLoadMetricInformation.#ctor
  commentId: M:System.Fabric.Query.NodeLoadMetricInformation.#ctor
  id: '#ctor'
  parent: System.Fabric.Query.NodeLoadMetricInformation
  langs:
  - csharp
  - vb
  name: NodeLoadMetricInformation()
  nameWithType: NodeLoadMetricInformation.NodeLoadMetricInformation()
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeLoadMetricInformation()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Query.NodeLoadMetricInformation\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public NodeLoadMetricInformation()
    content.vb: Public Sub New
  overload: System.Fabric.Query.NodeLoadMetricInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Query.NodeLoadMetricInformation.Name
  commentId: P:System.Fabric.Query.NodeLoadMetricInformation.Name
  id: Name
  parent: System.Fabric.Query.NodeLoadMetricInformation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NodeLoadMetricInformation.Name
  fullName: System.Fabric.Query.NodeLoadMetricInformation.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
    startLine: 27
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the name of the metric.</p>\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the metric.</p>\n"
  overload: System.Fabric.Query.NodeLoadMetricInformation.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.NodeLoadMetricInformation.NodeCapacity
  commentId: P:System.Fabric.Query.NodeLoadMetricInformation.NodeCapacity
  id: NodeCapacity
  parent: System.Fabric.Query.NodeLoadMetricInformation
  langs:
  - csharp
  - vb
  name: NodeCapacity
  nameWithType: NodeLoadMetricInformation.NodeCapacity
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeCapacity
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeCapacity
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
    startLine: 35
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the total capacity on the node for the metric.</p>\n"
  example: []
  syntax:
    content: public long NodeCapacity { get; }
    content.vb: Public ReadOnly Property NodeCapacity As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The total capacity on the node for the metric.</p>\n"
  overload: System.Fabric.Query.NodeLoadMetricInformation.NodeCapacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.NodeLoadMetricInformation.NodeLoad
  commentId: P:System.Fabric.Query.NodeLoadMetricInformation.NodeLoad
  id: NodeLoad
  parent: System.Fabric.Query.NodeLoadMetricInformation
  langs:
  - csharp
  - vb
  name: NodeLoad
  nameWithType: NodeLoadMetricInformation.NodeLoad
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeLoad
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeLoad
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
    startLine: 43
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the current load on the node for a metric.</p>\n"
  example: []
  syntax:
    content: public long NodeLoad { get; }
    content.vb: Public ReadOnly Property NodeLoad As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The current load on the node for a metric.</p>\n"
  overload: System.Fabric.Query.NodeLoadMetricInformation.NodeLoad*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingCapacity
  commentId: P:System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingCapacity
  id: NodeRemainingCapacity
  parent: System.Fabric.Query.NodeLoadMetricInformation
  langs:
  - csharp
  - vb
  name: NodeRemainingCapacity
  nameWithType: NodeLoadMetricInformation.NodeRemainingCapacity
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingCapacity
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeRemainingCapacity
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
    startLine: 51
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the remaining capacity on the node for the metric.</p>\n"
  example: []
  syntax:
    content: public long NodeRemainingCapacity { get; }
    content.vb: Public ReadOnly Property NodeRemainingCapacity As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The remaining capacity on the node for the metric.</p>\n"
  overload: System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingCapacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.NodeLoadMetricInformation.IsCapacityViolation
  commentId: P:System.Fabric.Query.NodeLoadMetricInformation.IsCapacityViolation
  id: IsCapacityViolation
  parent: System.Fabric.Query.NodeLoadMetricInformation
  langs:
  - csharp
  - vb
  name: IsCapacityViolation
  nameWithType: NodeLoadMetricInformation.IsCapacityViolation
  fullName: System.Fabric.Query.NodeLoadMetricInformation.IsCapacityViolation
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsCapacityViolation
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
    startLine: 61
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets a value that indicates whether there is a capacity violation for the metric on the given node.</p>\n"
  example: []
  syntax:
    content: public bool IsCapacityViolation { get; }
    content.vb: Public ReadOnly Property IsCapacityViolation As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if there is a capacity violation for the metric on the given node; \notherwise, <strong>false</strong>.</p>\n"
  overload: System.Fabric.Query.NodeLoadMetricInformation.IsCapacityViolation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.NodeLoadMetricInformation.NodeBufferedCapacity
  commentId: P:System.Fabric.Query.NodeLoadMetricInformation.NodeBufferedCapacity
  id: NodeBufferedCapacity
  parent: System.Fabric.Query.NodeLoadMetricInformation
  langs:
  - csharp
  - vb
  name: NodeBufferedCapacity
  nameWithType: NodeLoadMetricInformation.NodeBufferedCapacity
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeBufferedCapacity
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeBufferedCapacity
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
    startLine: 69
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets a value that indicates the capacity which is not reserved by NodeBufferPercentage.</p>\n"
  example: []
  syntax:
    content: public long NodeBufferedCapacity { get; }
    content.vb: Public ReadOnly Property NodeBufferedCapacity As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The capacity which is not reserved by NodeBufferPercentage for this metric on the node.</p>\n"
  overload: System.Fabric.Query.NodeLoadMetricInformation.NodeBufferedCapacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingBufferedCapacity
  commentId: P:System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingBufferedCapacity
  id: NodeRemainingBufferedCapacity
  parent: System.Fabric.Query.NodeLoadMetricInformation
  langs:
  - csharp
  - vb
  name: NodeRemainingBufferedCapacity
  nameWithType: NodeLoadMetricInformation.NodeRemainingBufferedCapacity
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingBufferedCapacity
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeRemainingBufferedCapacity
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeLoadMetricInformation.cs
    startLine: 77
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets a value that indicates the remaining capacity which is not reserved by NodeBufferPercentage.</p>\n"
  example: []
  syntax:
    content: public long NodeRemainingBufferedCapacity { get; }
    content.vb: Public ReadOnly Property NodeRemainingBufferedCapacity As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The remaining capacity which is not reserved by NodeBufferPercentage for this metric on the node.</p>\n"
  overload: System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingBufferedCapacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.NodeLoadMetricInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NodeLoadMetricInformation>()
  nameWithType: ByteArraySerializer.Serialize<NodeLoadMetricInformation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.NodeLoadMetricInformation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NodeLoadMetricInformation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.NodeLoadMetricInformation)()
  name.vb: Serialize(Of NodeLoadMetricInformation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NodeLoadMetricInformation>
    nameWithType: ByteArraySerializer.Serialize<NodeLoadMetricInformation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.NodeLoadMetricInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NodeLoadMetricInformation)
    nameWithType: ByteArraySerializer.Serialize(Of NodeLoadMetricInformation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.NodeLoadMetricInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.NodeLoadMetricInformation
  commentId: T:System.Fabric.Query.NodeLoadMetricInformation
  isExternal: false
  name: NodeLoadMetricInformation
  nameWithType: NodeLoadMetricInformation
  fullName: System.Fabric.Query.NodeLoadMetricInformation
- uid: System.Fabric.Query.NodeLoadMetricInformation.#ctor*
  commentId: Overload:System.Fabric.Query.NodeLoadMetricInformation.#ctor
  isExternal: false
  name: NodeLoadMetricInformation
  nameWithType: NodeLoadMetricInformation.NodeLoadMetricInformation
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeLoadMetricInformation
- uid: System.Fabric.Query.NodeLoadMetricInformation.Name*
  commentId: Overload:System.Fabric.Query.NodeLoadMetricInformation.Name
  isExternal: false
  name: Name
  nameWithType: NodeLoadMetricInformation.Name
  fullName: System.Fabric.Query.NodeLoadMetricInformation.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Query.NodeLoadMetricInformation.NodeCapacity*
  commentId: Overload:System.Fabric.Query.NodeLoadMetricInformation.NodeCapacity
  isExternal: false
  name: NodeCapacity
  nameWithType: NodeLoadMetricInformation.NodeCapacity
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeCapacity
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Query.NodeLoadMetricInformation.NodeLoad*
  commentId: Overload:System.Fabric.Query.NodeLoadMetricInformation.NodeLoad
  isExternal: false
  name: NodeLoad
  nameWithType: NodeLoadMetricInformation.NodeLoad
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeLoad
- uid: System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingCapacity*
  commentId: Overload:System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingCapacity
  isExternal: false
  name: NodeRemainingCapacity
  nameWithType: NodeLoadMetricInformation.NodeRemainingCapacity
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingCapacity
- uid: System.Fabric.Query.NodeLoadMetricInformation.IsCapacityViolation*
  commentId: Overload:System.Fabric.Query.NodeLoadMetricInformation.IsCapacityViolation
  isExternal: false
  name: IsCapacityViolation
  nameWithType: NodeLoadMetricInformation.IsCapacityViolation
  fullName: System.Fabric.Query.NodeLoadMetricInformation.IsCapacityViolation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Query.NodeLoadMetricInformation.NodeBufferedCapacity*
  commentId: Overload:System.Fabric.Query.NodeLoadMetricInformation.NodeBufferedCapacity
  isExternal: false
  name: NodeBufferedCapacity
  nameWithType: NodeLoadMetricInformation.NodeBufferedCapacity
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeBufferedCapacity
- uid: System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingBufferedCapacity*
  commentId: Overload:System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingBufferedCapacity
  isExternal: false
  name: NodeRemainingBufferedCapacity
  nameWithType: NodeLoadMetricInformation.NodeRemainingBufferedCapacity
  fullName: System.Fabric.Query.NodeLoadMetricInformation.NodeRemainingBufferedCapacity
