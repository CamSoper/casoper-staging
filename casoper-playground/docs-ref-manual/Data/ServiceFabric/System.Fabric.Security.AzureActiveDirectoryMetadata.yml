### YamlMime:ManagedReference
items:
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata
  commentId: T:System.Fabric.Security.AzureActiveDirectoryMetadata
  id: AzureActiveDirectoryMetadata
  parent: System.Fabric.Security
  children:
  - System.Fabric.Security.AzureActiveDirectoryMetadata.Authority
  - System.Fabric.Security.AzureActiveDirectoryMetadata.ClientApplication
  - System.Fabric.Security.AzureActiveDirectoryMetadata.ClientRedirect
  - System.Fabric.Security.AzureActiveDirectoryMetadata.ClusterApplication
  - System.Fabric.Security.AzureActiveDirectoryMetadata.LoginEndpoint
  - System.Fabric.Security.AzureActiveDirectoryMetadata.TenantId
  langs:
  - csharp
  - vb
  name: AzureActiveDirectoryMetadata
  nameWithType: AzureActiveDirectoryMetadata
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AzureActiveDirectoryMetadata
    path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
    startLine: 11
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\nRepresents the metadata used to acquire authentication tokens from Azure Active Directory.\n"
  example: []
  syntax:
    content: public sealed class AzureActiveDirectoryMetadata
    content.vb: Public NotInheritable Class AzureActiveDirectoryMetadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Security.AzureActiveDirectoryMetadata.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.LoginEndpoint
  commentId: P:System.Fabric.Security.AzureActiveDirectoryMetadata.LoginEndpoint
  id: LoginEndpoint
  parent: System.Fabric.Security.AzureActiveDirectoryMetadata
  langs:
  - csharp
  - vb
  name: LoginEndpoint
  nameWithType: AzureActiveDirectoryMetadata.LoginEndpoint
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.LoginEndpoint
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LoginEndpoint
    path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
    startLine: 23
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\nGets a value indicating the Azure Active Directory login instance endpoint (for ADAL initialization).\n"
  example: []
  syntax:
    content: public string LoginEndpoint { get; }
    content.vb: Public ReadOnly Property LoginEndpoint As String
    parameters: []
    return:
      type: System.String
      description: "\nReturns the login instance endpoint.\n"
  overload: System.Fabric.Security.AzureActiveDirectoryMetadata.LoginEndpoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.Authority
  commentId: P:System.Fabric.Security.AzureActiveDirectoryMetadata.Authority
  id: Authority
  parent: System.Fabric.Security.AzureActiveDirectoryMetadata
  langs:
  - csharp
  - vb
  name: Authority
  nameWithType: AzureActiveDirectoryMetadata.Authority
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.Authority
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Authority
    path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
    startLine: 31
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\nGets a value indicating the authority location to acquire a token from.\n"
  example: []
  syntax:
    content: public string Authority { get; }
    content.vb: Public ReadOnly Property Authority As String
    parameters: []
    return:
      type: System.String
      description: "\nReturns the authority.\n"
  overload: System.Fabric.Security.AzureActiveDirectoryMetadata.Authority*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.TenantId
  commentId: P:System.Fabric.Security.AzureActiveDirectoryMetadata.TenantId
  id: TenantId
  parent: System.Fabric.Security.AzureActiveDirectoryMetadata
  langs:
  - csharp
  - vb
  name: TenantId
  nameWithType: AzureActiveDirectoryMetadata.TenantId
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.TenantId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TenantId
    path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
    startLine: 39
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\nGets a value indicating the tenant ID of the relevant Azure Active Directory tenant.\n"
  example: []
  syntax:
    content: public string TenantId { get; }
    content.vb: Public ReadOnly Property TenantId As String
    parameters: []
    return:
      type: System.String
      description: "\nReturns the tenant ID.\n"
  overload: System.Fabric.Security.AzureActiveDirectoryMetadata.TenantId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.ClusterApplication
  commentId: P:System.Fabric.Security.AzureActiveDirectoryMetadata.ClusterApplication
  id: ClusterApplication
  parent: System.Fabric.Security.AzureActiveDirectoryMetadata
  langs:
  - csharp
  - vb
  name: ClusterApplication
  nameWithType: AzureActiveDirectoryMetadata.ClusterApplication
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.ClusterApplication
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClusterApplication
    path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
    startLine: 47
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\nGets a value indicating the cluster application resource.\n"
  example: []
  syntax:
    content: public string ClusterApplication { get; }
    content.vb: Public ReadOnly Property ClusterApplication As String
    parameters: []
    return:
      type: System.String
      description: "\nReturns the cluster application resource.\n"
  overload: System.Fabric.Security.AzureActiveDirectoryMetadata.ClusterApplication*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.ClientApplication
  commentId: P:System.Fabric.Security.AzureActiveDirectoryMetadata.ClientApplication
  id: ClientApplication
  parent: System.Fabric.Security.AzureActiveDirectoryMetadata
  langs:
  - csharp
  - vb
  name: ClientApplication
  nameWithType: AzureActiveDirectoryMetadata.ClientApplication
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.ClientApplication
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClientApplication
    path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
    startLine: 55
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\nGets a value indicating the client ID to use when acquiring tokens for the cluster application resource.\n"
  example: []
  syntax:
    content: public string ClientApplication { get; }
    content.vb: Public ReadOnly Property ClientApplication As String
    parameters: []
    return:
      type: System.String
      description: "\nReturns the client ID.\n"
  overload: System.Fabric.Security.AzureActiveDirectoryMetadata.ClientApplication*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.ClientRedirect
  commentId: P:System.Fabric.Security.AzureActiveDirectoryMetadata.ClientRedirect
  id: ClientRedirect
  parent: System.Fabric.Security.AzureActiveDirectoryMetadata
  langs:
  - csharp
  - vb
  name: ClientRedirect
  nameWithType: AzureActiveDirectoryMetadata.ClientRedirect
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.ClientRedirect
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClientRedirect
    path: src/prod/src/managed/Api/src/System/Fabric/Security/AzureActiveDirectoryMetadata.cs
    startLine: 63
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Security
  summary: "\nGets a value indicating the client redirect URI.\n"
  example: []
  syntax:
    content: public string ClientRedirect { get; }
    content.vb: Public ReadOnly Property ClientRedirect As String
    parameters: []
    return:
      type: System.String
      description: "\nReturns the client redirect URI.\n"
  overload: System.Fabric.Security.AzureActiveDirectoryMetadata.ClientRedirect*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Security
  commentId: N:System.Fabric.Security
  isExternal: false
  name: System.Fabric.Security
  nameWithType: System.Fabric.Security
  fullName: System.Fabric.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<AzureActiveDirectoryMetadata>()
  nameWithType: ByteArraySerializer.Serialize<AzureActiveDirectoryMetadata>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Security.AzureActiveDirectoryMetadata>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of AzureActiveDirectoryMetadata)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Security.AzureActiveDirectoryMetadata)()
  name.vb: Serialize(Of AzureActiveDirectoryMetadata)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<AzureActiveDirectoryMetadata>
    nameWithType: ByteArraySerializer.Serialize<AzureActiveDirectoryMetadata>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Security.AzureActiveDirectoryMetadata>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of AzureActiveDirectoryMetadata)
    nameWithType: ByteArraySerializer.Serialize(Of AzureActiveDirectoryMetadata)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Security.AzureActiveDirectoryMetadata)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.LoginEndpoint*
  commentId: Overload:System.Fabric.Security.AzureActiveDirectoryMetadata.LoginEndpoint
  isExternal: false
  name: LoginEndpoint
  nameWithType: AzureActiveDirectoryMetadata.LoginEndpoint
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.LoginEndpoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.Authority*
  commentId: Overload:System.Fabric.Security.AzureActiveDirectoryMetadata.Authority
  isExternal: false
  name: Authority
  nameWithType: AzureActiveDirectoryMetadata.Authority
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.Authority
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.TenantId*
  commentId: Overload:System.Fabric.Security.AzureActiveDirectoryMetadata.TenantId
  isExternal: false
  name: TenantId
  nameWithType: AzureActiveDirectoryMetadata.TenantId
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.TenantId
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.ClusterApplication*
  commentId: Overload:System.Fabric.Security.AzureActiveDirectoryMetadata.ClusterApplication
  isExternal: false
  name: ClusterApplication
  nameWithType: AzureActiveDirectoryMetadata.ClusterApplication
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.ClusterApplication
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.ClientApplication*
  commentId: Overload:System.Fabric.Security.AzureActiveDirectoryMetadata.ClientApplication
  isExternal: false
  name: ClientApplication
  nameWithType: AzureActiveDirectoryMetadata.ClientApplication
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.ClientApplication
- uid: System.Fabric.Security.AzureActiveDirectoryMetadata.ClientRedirect*
  commentId: Overload:System.Fabric.Security.AzureActiveDirectoryMetadata.ClientRedirect
  isExternal: false
  name: ClientRedirect
  nameWithType: AzureActiveDirectoryMetadata.ClientRedirect
  fullName: System.Fabric.Security.AzureActiveDirectoryMetadata.ClientRedirect
