### YamlMime:ManagedReference
items:
- uid: System.Fabric.TokenServiceMetadata
  commentId: T:System.Fabric.TokenServiceMetadata
  id: TokenServiceMetadata
  parent: System.Fabric
  children:
  - System.Fabric.TokenServiceMetadata.#ctor(System.String,System.String,System.String)
  - System.Fabric.TokenServiceMetadata.Metadata
  - System.Fabric.TokenServiceMetadata.ServiceDnsName
  - System.Fabric.TokenServiceMetadata.ServiceName
  langs:
  - csharp
  - vb
  name: TokenServiceMetadata
  nameWithType: TokenServiceMetadata
  fullName: System.Fabric.TokenServiceMetadata
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TokenServiceMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TokenServiceMetadata
    path: src/prod/src/managed/Api/src/System/Fabric/TokenServiceMetadata.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nFor internal use only.\n</p>\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      [DataContract]

      public sealed class TokenServiceMetadata
    content.vb: >-
      <Serializable>

      <DataContract>

      Public NotInheritable Class TokenServiceMetadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.TokenServiceMetadata.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.TokenServiceMetadata.#ctor(System.String,System.String,System.String)
  commentId: M:System.Fabric.TokenServiceMetadata.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Fabric.TokenServiceMetadata
  langs:
  - csharp
  - vb
  name: TokenServiceMetadata(String, String, String)
  nameWithType: TokenServiceMetadata.TokenServiceMetadata(String, String, String)
  fullName: System.Fabric.TokenServiceMetadata.TokenServiceMetadata(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TokenServiceMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/TokenServiceMetadata.cs
    startLine: 33
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nFor internal use only.\n</p>\n"
  example: []
  syntax:
    content: public TokenServiceMetadata(string metadata, string serviceName, string serviceDnsName)
    content.vb: Public Sub New(metadata As String, serviceName As String, serviceDnsName As String)
    parameters:
    - id: metadata
      type: System.String
      description: "\n<p>The metadata.</p>\n"
    - id: serviceName
      type: System.String
      description: "\n<p>The service name.</p>\n"
    - id: serviceDnsName
      type: System.String
      description: "\n<p>The service Dns name.</p>\n"
  overload: System.Fabric.TokenServiceMetadata.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.TokenServiceMetadata.ServiceName
  commentId: P:System.Fabric.TokenServiceMetadata.ServiceName
  id: ServiceName
  parent: System.Fabric.TokenServiceMetadata
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: TokenServiceMetadata.ServiceName
  fullName: System.Fabric.TokenServiceMetadata.ServiceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TokenServiceMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceName
    path: src/prod/src/managed/Api/src/System/Fabric/TokenServiceMetadata.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nFor internal use only.\nGets or sets the service name.\n</p>\n"
  example: []
  syntax:
    content: >-
      [DataMember(IsRequired = true, Name = "ServiceName")]

      public string ServiceName { get; set; }
    content.vb: >-
      <DataMember(IsRequired:=True, Name:="ServiceName")>

      Public Property ServiceName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The service name.</p>\n"
  overload: System.Fabric.TokenServiceMetadata.ServiceName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: ServiceName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.TokenServiceMetadata.ServiceDnsName
  commentId: P:System.Fabric.TokenServiceMetadata.ServiceDnsName
  id: ServiceDnsName
  parent: System.Fabric.TokenServiceMetadata
  langs:
  - csharp
  - vb
  name: ServiceDnsName
  nameWithType: TokenServiceMetadata.ServiceDnsName
  fullName: System.Fabric.TokenServiceMetadata.ServiceDnsName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TokenServiceMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceDnsName
    path: src/prod/src/managed/Api/src/System/Fabric/TokenServiceMetadata.cs
    startLine: 65
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nFor internal use only.\nGets or sets the service Dns name.\n</p>\n"
  example: []
  syntax:
    content: >-
      [DataMember(IsRequired = true, Name = "ServiceDnsName")]

      public string ServiceDnsName { get; set; }
    content.vb: >-
      <DataMember(IsRequired:=True, Name:="ServiceDnsName")>

      Public Property ServiceDnsName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The service Dns name.</p>\n"
  overload: System.Fabric.TokenServiceMetadata.ServiceDnsName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: ServiceDnsName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.TokenServiceMetadata.Metadata
  commentId: P:System.Fabric.TokenServiceMetadata.Metadata
  id: Metadata
  parent: System.Fabric.TokenServiceMetadata
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: TokenServiceMetadata.Metadata
  fullName: System.Fabric.TokenServiceMetadata.Metadata
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TokenServiceMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Metadata
    path: src/prod/src/managed/Api/src/System/Fabric/TokenServiceMetadata.cs
    startLine: 81
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nFor internal use only.\nGets or sets the metadata.\n</p>\n"
  example: []
  syntax:
    content: >-
      [DataMember(IsRequired = true, Name = "Metadata")]

      public string Metadata { get; set; }
    content.vb: >-
      <DataMember(IsRequired:=True, Name:="Metadata")>

      Public Property Metadata As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The metadata.</p>\n"
  overload: System.Fabric.TokenServiceMetadata.Metadata*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsRequired
      type: System.Boolean
      value: true
    - name: Name
      type: System.String
      value: Metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.TokenServiceMetadata.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<TokenServiceMetadata>()
  nameWithType: ByteArraySerializer.Serialize<TokenServiceMetadata>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.TokenServiceMetadata>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of TokenServiceMetadata)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.TokenServiceMetadata)()
  name.vb: Serialize(Of TokenServiceMetadata)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<TokenServiceMetadata>
    nameWithType: ByteArraySerializer.Serialize<TokenServiceMetadata>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.TokenServiceMetadata>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of TokenServiceMetadata)
    nameWithType: ByteArraySerializer.Serialize(Of TokenServiceMetadata)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.TokenServiceMetadata)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.TokenServiceMetadata.#ctor*
  commentId: Overload:System.Fabric.TokenServiceMetadata.#ctor
  isExternal: false
  name: TokenServiceMetadata
  nameWithType: TokenServiceMetadata.TokenServiceMetadata
  fullName: System.Fabric.TokenServiceMetadata.TokenServiceMetadata
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.TokenServiceMetadata.ServiceName*
  commentId: Overload:System.Fabric.TokenServiceMetadata.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: TokenServiceMetadata.ServiceName
  fullName: System.Fabric.TokenServiceMetadata.ServiceName
- uid: System.Fabric.TokenServiceMetadata.ServiceDnsName*
  commentId: Overload:System.Fabric.TokenServiceMetadata.ServiceDnsName
  isExternal: false
  name: ServiceDnsName
  nameWithType: TokenServiceMetadata.ServiceDnsName
  fullName: System.Fabric.TokenServiceMetadata.ServiceDnsName
- uid: System.Fabric.TokenServiceMetadata.Metadata*
  commentId: Overload:System.Fabric.TokenServiceMetadata.Metadata
  isExternal: false
  name: Metadata
  nameWithType: TokenServiceMetadata.Metadata
  fullName: System.Fabric.TokenServiceMetadata.Metadata
