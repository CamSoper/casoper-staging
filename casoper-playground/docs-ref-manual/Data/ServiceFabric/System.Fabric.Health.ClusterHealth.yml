### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.ClusterHealth
  commentId: T:System.Fabric.Health.ClusterHealth
  id: ClusterHealth
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.ClusterHealth.ApplicationHealthStates
  - System.Fabric.Health.ClusterHealth.NodeHealthStates
  langs:
  - csharp
  - vb
  name: ClusterHealth
  nameWithType: ClusterHealth
  fullName: System.Fabric.Health.ClusterHealth
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealth.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClusterHealth
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealth.cs
    startLine: 16
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Represents the health of the cluster, as returned by <xref href=\"System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription)\" data-throw-if-not-resolved=\"false\"></xref>. Contains \nthe cluster aggregated health state and the cluster application and node health states.</p>\n"
  example: []
  syntax:
    content: 'public sealed class ClusterHealth : EntityHealth'
    content.vb: >-
      Public NotInheritable Class ClusterHealth
          Inherits EntityHealth
  inheritance:
  - System.Object
  - System.Fabric.Health.EntityHealth
  inheritedMembers:
  - System.Fabric.Health.EntityHealth.AggregatedHealthState
  - System.Fabric.Health.EntityHealth.HealthEvents
  - System.Fabric.Health.EntityHealth.UnhealthyEvaluations
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.ClusterHealth.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.ClusterHealth.NodeHealthStates
  commentId: P:System.Fabric.Health.ClusterHealth.NodeHealthStates
  id: NodeHealthStates
  parent: System.Fabric.Health.ClusterHealth
  langs:
  - csharp
  - vb
  name: NodeHealthStates
  nameWithType: ClusterHealth.NodeHealthStates
  fullName: System.Fabric.Health.ClusterHealth.NodeHealthStates
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealth.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeHealthStates
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealth.cs
    startLine: 31
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the cluster node health states as found in the health store.</p>\n"
  example: []
  syntax:
    content: public IList<NodeHealthState> NodeHealthStates { get; }
    content.vb: Public ReadOnly Property NodeHealthStates As IList(Of NodeHealthState)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Health.NodeHealthState}
      description: "\n<p>The cluster nodes as found in the health store.</p>\n"
  overload: System.Fabric.Health.ClusterHealth.NodeHealthStates*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ClusterHealth.ApplicationHealthStates
  commentId: P:System.Fabric.Health.ClusterHealth.ApplicationHealthStates
  id: ApplicationHealthStates
  parent: System.Fabric.Health.ClusterHealth
  langs:
  - csharp
  - vb
  name: ApplicationHealthStates
  nameWithType: ClusterHealth.ApplicationHealthStates
  fullName: System.Fabric.Health.ClusterHealth.ApplicationHealthStates
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealth.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationHealthStates
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealth.cs
    startLine: 46
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the cluster application health states as found in the health store.</p>\n"
  example: []
  syntax:
    content: public IList<ApplicationHealthState> ApplicationHealthStates { get; }
    content.vb: Public ReadOnly Property ApplicationHealthStates As IList(Of ApplicationHealthState)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Health.ApplicationHealthState}
      description: "\n<p>The cluster applications as found in the health store.</p>\n"
  overload: System.Fabric.Health.ClusterHealth.ApplicationHealthStates*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription)
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Health.EntityHealth
  commentId: T:System.Fabric.Health.EntityHealth
  parent: System.Fabric.Health
  isExternal: false
  name: EntityHealth
  nameWithType: EntityHealth
  fullName: System.Fabric.Health.EntityHealth
- uid: System.Fabric.Health.EntityHealth.AggregatedHealthState
  commentId: P:System.Fabric.Health.EntityHealth.AggregatedHealthState
  parent: System.Fabric.Health.EntityHealth
  isExternal: false
  name: AggregatedHealthState
  nameWithType: EntityHealth.AggregatedHealthState
  fullName: System.Fabric.Health.EntityHealth.AggregatedHealthState
- uid: System.Fabric.Health.EntityHealth.HealthEvents
  commentId: P:System.Fabric.Health.EntityHealth.HealthEvents
  parent: System.Fabric.Health.EntityHealth
  isExternal: false
  name: HealthEvents
  nameWithType: EntityHealth.HealthEvents
  fullName: System.Fabric.Health.EntityHealth.HealthEvents
- uid: System.Fabric.Health.EntityHealth.UnhealthyEvaluations
  commentId: P:System.Fabric.Health.EntityHealth.UnhealthyEvaluations
  parent: System.Fabric.Health.EntityHealth
  isExternal: false
  name: UnhealthyEvaluations
  nameWithType: EntityHealth.UnhealthyEvaluations
  fullName: System.Fabric.Health.EntityHealth.UnhealthyEvaluations
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ClusterHealth.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ClusterHealth>()
  nameWithType: ByteArraySerializer.Serialize<ClusterHealth>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ClusterHealth>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ClusterHealth)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ClusterHealth)()
  name.vb: Serialize(Of ClusterHealth)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ClusterHealth>
    nameWithType: ByteArraySerializer.Serialize<ClusterHealth>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ClusterHealth>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ClusterHealth)
    nameWithType: ByteArraySerializer.Serialize(Of ClusterHealth)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ClusterHealth)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.ClusterHealthQueryDescription.NodesFilter
  commentId: P:System.Fabric.Description.ClusterHealthQueryDescription.NodesFilter
- uid: System.Fabric.Health.ClusterHealth.NodeHealthStates*
  commentId: Overload:System.Fabric.Health.ClusterHealth.NodeHealthStates
  isExternal: false
  name: NodeHealthStates
  nameWithType: ClusterHealth.NodeHealthStates
  fullName: System.Fabric.Health.ClusterHealth.NodeHealthStates
- uid: System.Collections.Generic.IList{System.Fabric.Health.NodeHealthState}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Health.NodeHealthState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<NodeHealthState>
  nameWithType: IList<NodeHealthState>
  fullName: System.Collections.Generic.IList<System.Fabric.Health.NodeHealthState>
  nameWithType.vb: IList(Of NodeHealthState)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Health.NodeHealthState)
  name.vb: IList(Of NodeHealthState)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Health.NodeHealthState
    name: NodeHealthState
    nameWithType: NodeHealthState
    fullName: System.Fabric.Health.NodeHealthState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Health.NodeHealthState
    name: NodeHealthState
    nameWithType: NodeHealthState
    fullName: System.Fabric.Health.NodeHealthState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.Description.ClusterHealthQueryDescription.ApplicationsFilter
  commentId: P:System.Fabric.Description.ClusterHealthQueryDescription.ApplicationsFilter
- uid: System.Fabric.Health.ClusterHealth.ApplicationHealthStates*
  commentId: Overload:System.Fabric.Health.ClusterHealth.ApplicationHealthStates
  isExternal: false
  name: ApplicationHealthStates
  nameWithType: ClusterHealth.ApplicationHealthStates
  fullName: System.Fabric.Health.ClusterHealth.ApplicationHealthStates
- uid: System.Collections.Generic.IList{System.Fabric.Health.ApplicationHealthState}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Health.ApplicationHealthState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApplicationHealthState>
  nameWithType: IList<ApplicationHealthState>
  fullName: System.Collections.Generic.IList<System.Fabric.Health.ApplicationHealthState>
  nameWithType.vb: IList(Of ApplicationHealthState)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Health.ApplicationHealthState)
  name.vb: IList(Of ApplicationHealthState)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Health.ApplicationHealthState
    name: ApplicationHealthState
    nameWithType: ApplicationHealthState
    fullName: System.Fabric.Health.ApplicationHealthState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Health.ApplicationHealthState
    name: ApplicationHealthState
    nameWithType: ApplicationHealthState
    fullName: System.Fabric.Health.ApplicationHealthState
  - name: )
    nameWithType: )
    fullName: )
