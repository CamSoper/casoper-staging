### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Replicator.Transaction
  commentId: T:Microsoft.ServiceFabric.Replicator.Transaction
  id: Transaction
  parent: Microsoft.ServiceFabric.Replicator
  children:
  - Microsoft.ServiceFabric.Replicator.Transaction.Abort
  - Microsoft.ServiceFabric.Replicator.Transaction.AbortAsync
  - Microsoft.ServiceFabric.Replicator.Transaction.AddOperation(System.Fabric.OperationData,System.Fabric.OperationData,System.Fabric.OperationData,System.Object,System.Uri)
  - Microsoft.ServiceFabric.Replicator.Transaction.CommitAsync
  - Microsoft.ServiceFabric.Replicator.Transaction.GetVisibilitySequenceNumberAsync
  - Microsoft.ServiceFabric.Replicator.Transaction.TransactionId
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: Transaction
  fullName: Microsoft.ServiceFabric.Replicator.Transaction
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Transaction
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nAn abstraction for a set of 'operations' that can be all be committed or reverted atomically \n"
  example: []
  syntax:
    content: 'public class Transaction : TransactionBase, ITransaction, IDisposable'
    content.vb: >-
      Public Class Transaction
          Inherits TransactionBase
          Implements ITransaction, IDisposable
  inheritance:
  - System.Object
  - Microsoft.ServiceFabric.Replicator.TransactionBase
  implements:
  - Microsoft.ServiceFabric.Data.ITransaction
  - System.IDisposable
  inheritedMembers:
  - Microsoft.ServiceFabric.Replicator.TransactionBase.DefaultCommitAcceptanceTimeout
  - Microsoft.ServiceFabric.Replicator.TransactionBase.CommitSequenceNumber
  - Microsoft.ServiceFabric.Replicator.TransactionBase.Id
  - Microsoft.ServiceFabric.Replicator.TransactionBase.LockContexts
  - Microsoft.ServiceFabric.Replicator.TransactionBase.State
  - Microsoft.ServiceFabric.Replicator.TransactionBase.MaxRetryDelay
  - Microsoft.ServiceFabric.Replicator.TransactionBase.RetryBackoffFactor
  - Microsoft.ServiceFabric.Replicator.TransactionBase.LastTransactionId
  - Microsoft.ServiceFabric.Replicator.TransactionBase.TransactionLock
  - Microsoft.ServiceFabric.Replicator.TransactionBase.IsWriteTransaction
  - Microsoft.ServiceFabric.Replicator.TransactionBase.TransactionRetryDelay
  - Microsoft.ServiceFabric.Replicator.TransactionBase.AddLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
  - Microsoft.ServiceFabric.Replicator.TransactionBase.Dispose
  - Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(System.Object)
  - Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(Microsoft.ServiceFabric.Replicator.TransactionBase)
  - Microsoft.ServiceFabric.Replicator.TransactionBase.GetHashCode
  - Microsoft.ServiceFabric.Replicator.TransactionBase.LookupLockContext(Microsoft.ServiceFabric.Replicator.ILockManager,System.Object)
  - Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.ILockManager,System.Object)
  - Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
  - Microsoft.ServiceFabric.Replicator.TransactionBase.ToString
  - Microsoft.ServiceFabric.Replicator.TransactionBase.ProcessException(System.Exception)
  - Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimary(System.Fabric.ReplicaRole)
  - Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimaryTransaction(System.Boolean)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Replicator.Transaction.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Replicator.Transaction.TransactionId
  commentId: P:Microsoft.ServiceFabric.Replicator.Transaction.TransactionId
  id: TransactionId
  parent: Microsoft.ServiceFabric.Replicator.Transaction
  langs:
  - csharp
  - vb
  name: TransactionId
  nameWithType: Transaction.TransactionId
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.TransactionId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TransactionId
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
    startLine: 59
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nGets the transaction id.\n"
  example: []
  syntax:
    content: public long TransactionId { get; }
    content.vb: Public ReadOnly Property TransactionId As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.ServiceFabric.Replicator.Transaction.TransactionId*
  implements:
  - Microsoft.ServiceFabric.Data.ITransaction.TransactionId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Replicator.Transaction.Abort
  commentId: M:Microsoft.ServiceFabric.Replicator.Transaction.Abort
  id: Abort
  parent: Microsoft.ServiceFabric.Replicator.Transaction
  langs:
  - csharp
  - vb
  name: Abort()
  nameWithType: Transaction.Abort()
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.Abort()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Abort
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
    startLine: 77
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nAborts the transaction.\n"
  example: []
  syntax:
    content: public void Abort()
    content.vb: Public Sub Abort
  overload: Microsoft.ServiceFabric.Replicator.Transaction.Abort*
  implements:
  - Microsoft.ServiceFabric.Data.ITransaction.Abort
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Replicator.Transaction.AbortAsync
  commentId: M:Microsoft.ServiceFabric.Replicator.Transaction.AbortAsync
  id: AbortAsync
  parent: Microsoft.ServiceFabric.Replicator.Transaction
  langs:
  - csharp
  - vb
  name: AbortAsync()
  nameWithType: Transaction.AbortAsync()
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.AbortAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AbortAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
    startLine: 92
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nRolls back this transaction\n"
  example: []
  syntax:
    content: public Task<long> AbortAsync()
    content.vb: Public Function AbortAsync As Task(Of Long)
    return:
      type: System.Threading.Tasks.Task{System.Int64}
      description: A sequence number associated with the abort operation
  overload: Microsoft.ServiceFabric.Replicator.Transaction.AbortAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf Transaction is not active (Already committed or aborted)\n"
  - type: System.Fabric.FabricNotPrimaryException
    commentId: T:System.Fabric.FabricNotPrimaryException
    description: "\nIf role is not primary\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Replicator.Transaction.AddOperation(System.Fabric.OperationData,System.Fabric.OperationData,System.Fabric.OperationData,System.Object,System.Uri)
  commentId: M:Microsoft.ServiceFabric.Replicator.Transaction.AddOperation(System.Fabric.OperationData,System.Fabric.OperationData,System.Fabric.OperationData,System.Object,System.Uri)
  id: AddOperation(System.Fabric.OperationData,System.Fabric.OperationData,System.Fabric.OperationData,System.Object,System.Uri)
  parent: Microsoft.ServiceFabric.Replicator.Transaction
  langs:
  - csharp
  - vb
  name: AddOperation(OperationData, OperationData, OperationData, Object, Uri)
  nameWithType: Transaction.AddOperation(OperationData, OperationData, OperationData, Object, Uri)
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.AddOperation(System.Fabric.OperationData, System.Fabric.OperationData, System.Fabric.OperationData, System.Object, System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AddOperation
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
    startLine: 120
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nAdds an operation to the state of the transaction\n"
  example: []
  syntax:
    content: public void AddOperation(OperationData metaData, OperationData undo, OperationData redo, object operationContext, Uri stateProviderName)
    content.vb: Public Sub AddOperation(metaData As OperationData, undo As OperationData, redo As OperationData, operationContext As Object, stateProviderName As Uri)
    parameters:
    - id: metaData
      type: System.Fabric.OperationData
      description: metadata bytes pertaining to the operation.
    - id: undo
      type: System.Fabric.OperationData
      description: Byte stream that contains the 'undo' data if this transaction is to be aborted and the effects of this operation are to be undone
    - id: redo
      type: System.Fabric.OperationData
      description: Byte stream that contains the 'redo' data if this transaction is to be committed and the effects of this operation are to be applied
    - id: operationContext
      type: System.Object
      description: A user defined context
    - id: stateProviderName
      type: System.Uri
      description: Name of the state provider
  overload: Microsoft.ServiceFabric.Replicator.Transaction.AddOperation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf Transaction is not active (Already committed or aborted)\n"
  - type: System.Fabric.FabricNotPrimaryException
    commentId: T:System.Fabric.FabricNotPrimaryException
    description: "\nIf replica role is not primary\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Replicator.Transaction.CommitAsync
  commentId: M:Microsoft.ServiceFabric.Replicator.Transaction.CommitAsync
  id: CommitAsync
  parent: Microsoft.ServiceFabric.Replicator.Transaction
  langs:
  - csharp
  - vb
  name: CommitAsync()
  nameWithType: Transaction.CommitAsync()
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.CommitAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CommitAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
    startLine: 147
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nCommits the transaction\n"
  example: []
  syntax:
    content: public Task CommitAsync()
    content.vb: Public Function CommitAsync As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Replicator.Transaction.CommitAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nIf Transaction is not active (Already committed or aborted)\n"
  - type: System.Fabric.FabricNotPrimaryException
    commentId: T:System.Fabric.FabricNotPrimaryException
    description: "\nIf replica role is not primary\n"
  implements:
  - Microsoft.ServiceFabric.Data.ITransaction.CommitAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Replicator.Transaction.GetVisibilitySequenceNumberAsync
  commentId: M:Microsoft.ServiceFabric.Replicator.Transaction.GetVisibilitySequenceNumberAsync
  id: GetVisibilitySequenceNumberAsync
  parent: Microsoft.ServiceFabric.Replicator.Transaction
  langs:
  - csharp
  - vb
  name: GetVisibilitySequenceNumberAsync()
  nameWithType: Transaction.GetVisibilitySequenceNumberAsync()
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.GetVisibilitySequenceNumberAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetVisibilitySequenceNumberAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/Transaction.cs
    startLine: 167
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nReturns the current visibility sequence number.\n"
  example: []
  syntax:
    content: public Task<long> GetVisibilitySequenceNumberAsync()
    content.vb: Public Function GetVisibilitySequenceNumberAsync As Task(Of Long)
    return:
      type: System.Threading.Tasks.Task{System.Int64}
      description: "\nTask that represents the asynchronous operation.\nResult is the visibility sequence number.\n"
  overload: Microsoft.ServiceFabric.Replicator.Transaction.GetVisibilitySequenceNumberAsync*
  implements:
  - Microsoft.ServiceFabric.Data.ITransaction.GetVisibilitySequenceNumberAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceFabric.Replicator
  commentId: N:Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: Microsoft.ServiceFabric.Replicator
  nameWithType: Microsoft.ServiceFabric.Replicator
  fullName: Microsoft.ServiceFabric.Replicator
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase
  commentId: T:Microsoft.ServiceFabric.Replicator.TransactionBase
  parent: Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: TransactionBase
  nameWithType: TransactionBase
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase
- uid: Microsoft.ServiceFabric.Data.ITransaction
  commentId: T:Microsoft.ServiceFabric.Data.ITransaction
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: Microsoft.ServiceFabric.Data.ITransaction
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.DefaultCommitAcceptanceTimeout
  commentId: F:Microsoft.ServiceFabric.Replicator.TransactionBase.DefaultCommitAcceptanceTimeout
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: DefaultCommitAcceptanceTimeout
  nameWithType: TransactionBase.DefaultCommitAcceptanceTimeout
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.DefaultCommitAcceptanceTimeout
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.CommitSequenceNumber
  commentId: P:Microsoft.ServiceFabric.Replicator.TransactionBase.CommitSequenceNumber
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: CommitSequenceNumber
  nameWithType: TransactionBase.CommitSequenceNumber
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.CommitSequenceNumber
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.Id
  commentId: P:Microsoft.ServiceFabric.Replicator.TransactionBase.Id
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: Id
  nameWithType: TransactionBase.Id
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.Id
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.LockContexts
  commentId: P:Microsoft.ServiceFabric.Replicator.TransactionBase.LockContexts
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: LockContexts
  nameWithType: TransactionBase.LockContexts
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.LockContexts
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.State
  commentId: P:Microsoft.ServiceFabric.Replicator.TransactionBase.State
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: State
  nameWithType: TransactionBase.State
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.State
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.MaxRetryDelay
  commentId: P:Microsoft.ServiceFabric.Replicator.TransactionBase.MaxRetryDelay
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: MaxRetryDelay
  nameWithType: TransactionBase.MaxRetryDelay
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.MaxRetryDelay
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.RetryBackoffFactor
  commentId: P:Microsoft.ServiceFabric.Replicator.TransactionBase.RetryBackoffFactor
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: RetryBackoffFactor
  nameWithType: TransactionBase.RetryBackoffFactor
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.RetryBackoffFactor
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.LastTransactionId
  commentId: P:Microsoft.ServiceFabric.Replicator.TransactionBase.LastTransactionId
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: LastTransactionId
  nameWithType: TransactionBase.LastTransactionId
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.LastTransactionId
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.TransactionLock
  commentId: P:Microsoft.ServiceFabric.Replicator.TransactionBase.TransactionLock
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: TransactionLock
  nameWithType: TransactionBase.TransactionLock
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.TransactionLock
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.IsWriteTransaction
  commentId: P:Microsoft.ServiceFabric.Replicator.TransactionBase.IsWriteTransaction
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: IsWriteTransaction
  nameWithType: TransactionBase.IsWriteTransaction
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.IsWriteTransaction
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.TransactionRetryDelay
  commentId: P:Microsoft.ServiceFabric.Replicator.TransactionBase.TransactionRetryDelay
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: TransactionRetryDelay
  nameWithType: TransactionBase.TransactionRetryDelay
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.TransactionRetryDelay
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.AddLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.AddLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: AddLockContext(LockContext)
  nameWithType: TransactionBase.AddLockContext(LockContext)
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.AddLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.AddLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
    name: AddLockContext
    nameWithType: TransactionBase.AddLockContext
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.AddLockContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.LockContext
    name: LockContext
    nameWithType: LockContext
    fullName: Microsoft.ServiceFabric.Replicator.LockContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.AddLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
    name: AddLockContext
    nameWithType: TransactionBase.AddLockContext
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.AddLockContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.LockContext
    name: LockContext
    nameWithType: LockContext
    fullName: Microsoft.ServiceFabric.Replicator.LockContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.Dispose
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.Dispose
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: Dispose()
  nameWithType: TransactionBase.Dispose()
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.Dispose()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.Dispose
    name: Dispose
    nameWithType: TransactionBase.Dispose
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.Dispose
    name: Dispose
    nameWithType: TransactionBase.Dispose
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(System.Object)
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(System.Object)
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: true
  name: Equals(Object)
  nameWithType: TransactionBase.Equals(Object)
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(System.Object)
    name: Equals
    nameWithType: TransactionBase.Equals
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(System.Object)
    name: Equals
    nameWithType: TransactionBase.Equals
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(Microsoft.ServiceFabric.Replicator.TransactionBase)
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(Microsoft.ServiceFabric.Replicator.TransactionBase)
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: Equals(TransactionBase)
  nameWithType: TransactionBase.Equals(TransactionBase)
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(Microsoft.ServiceFabric.Replicator.TransactionBase)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(Microsoft.ServiceFabric.Replicator.TransactionBase)
    name: Equals
    nameWithType: TransactionBase.Equals
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase
    name: TransactionBase
    nameWithType: TransactionBase
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals(Microsoft.ServiceFabric.Replicator.TransactionBase)
    name: Equals
    nameWithType: TransactionBase.Equals
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase
    name: TransactionBase
    nameWithType: TransactionBase
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.GetHashCode
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.GetHashCode
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: GetHashCode()
  nameWithType: TransactionBase.GetHashCode()
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.GetHashCode()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.GetHashCode
    name: GetHashCode
    nameWithType: TransactionBase.GetHashCode
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.GetHashCode
    name: GetHashCode
    nameWithType: TransactionBase.GetHashCode
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.LookupLockContext(Microsoft.ServiceFabric.Replicator.ILockManager,System.Object)
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.LookupLockContext(Microsoft.ServiceFabric.Replicator.ILockManager,System.Object)
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: true
  name: LookupLockContext(ILockManager, Object)
  nameWithType: TransactionBase.LookupLockContext(ILockManager, Object)
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.LookupLockContext(Microsoft.ServiceFabric.Replicator.ILockManager, System.Object)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.LookupLockContext(Microsoft.ServiceFabric.Replicator.ILockManager,System.Object)
    name: LookupLockContext
    nameWithType: TransactionBase.LookupLockContext
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.LookupLockContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.ILockManager
    name: ILockManager
    nameWithType: ILockManager
    fullName: Microsoft.ServiceFabric.Replicator.ILockManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.LookupLockContext(Microsoft.ServiceFabric.Replicator.ILockManager,System.Object)
    name: LookupLockContext
    nameWithType: TransactionBase.LookupLockContext
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.LookupLockContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.ILockManager
    name: ILockManager
    nameWithType: ILockManager
    fullName: Microsoft.ServiceFabric.Replicator.ILockManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.ILockManager,System.Object)
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.ILockManager,System.Object)
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: true
  name: RemoveLockContext(ILockManager, Object)
  nameWithType: TransactionBase.RemoveLockContext(ILockManager, Object)
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.ILockManager, System.Object)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.ILockManager,System.Object)
    name: RemoveLockContext
    nameWithType: TransactionBase.RemoveLockContext
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.ILockManager
    name: ILockManager
    nameWithType: ILockManager
    fullName: Microsoft.ServiceFabric.Replicator.ILockManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.ILockManager,System.Object)
    name: RemoveLockContext
    nameWithType: TransactionBase.RemoveLockContext
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.ILockManager
    name: ILockManager
    nameWithType: ILockManager
    fullName: Microsoft.ServiceFabric.Replicator.ILockManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: RemoveLockContext(LockContext)
  nameWithType: TransactionBase.RemoveLockContext(LockContext)
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
    name: RemoveLockContext
    nameWithType: TransactionBase.RemoveLockContext
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.LockContext
    name: LockContext
    nameWithType: LockContext
    fullName: Microsoft.ServiceFabric.Replicator.LockContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext(Microsoft.ServiceFabric.Replicator.LockContext)
    name: RemoveLockContext
    nameWithType: TransactionBase.RemoveLockContext
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.RemoveLockContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.LockContext
    name: LockContext
    nameWithType: LockContext
    fullName: Microsoft.ServiceFabric.Replicator.LockContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ToString
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.ToString
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: ToString()
  nameWithType: TransactionBase.ToString()
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ToString()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ToString
    name: ToString
    nameWithType: TransactionBase.ToString
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ToString
    name: ToString
    nameWithType: TransactionBase.ToString
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ProcessException(System.Exception)
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.ProcessException(System.Exception)
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: true
  name: ProcessException(Exception)
  nameWithType: TransactionBase.ProcessException(Exception)
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ProcessException(System.Exception)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ProcessException(System.Exception)
    name: ProcessException
    nameWithType: TransactionBase.ProcessException
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ProcessException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ProcessException(System.Exception)
    name: ProcessException
    nameWithType: TransactionBase.ProcessException
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ProcessException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimary(System.Fabric.ReplicaRole)
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimary(System.Fabric.ReplicaRole)
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: false
  name: ThrowIfNotPrimary(ReplicaRole)
  nameWithType: TransactionBase.ThrowIfNotPrimary(ReplicaRole)
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimary(System.Fabric.ReplicaRole)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimary(System.Fabric.ReplicaRole)
    name: ThrowIfNotPrimary
    nameWithType: TransactionBase.ThrowIfNotPrimary
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimary(System.Fabric.ReplicaRole)
    name: ThrowIfNotPrimary
    nameWithType: TransactionBase.ThrowIfNotPrimary
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimaryTransaction(System.Boolean)
  commentId: M:Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimaryTransaction(System.Boolean)
  parent: Microsoft.ServiceFabric.Replicator.TransactionBase
  isExternal: true
  name: ThrowIfNotPrimaryTransaction(Boolean)
  nameWithType: TransactionBase.ThrowIfNotPrimaryTransaction(Boolean)
  fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimaryTransaction(System.Boolean)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimaryTransaction(System.Boolean)
    name: ThrowIfNotPrimaryTransaction
    nameWithType: TransactionBase.ThrowIfNotPrimaryTransaction
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimaryTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimaryTransaction(System.Boolean)
    name: ThrowIfNotPrimaryTransaction
    nameWithType: TransactionBase.ThrowIfNotPrimaryTransaction
    fullName: Microsoft.ServiceFabric.Replicator.TransactionBase.ThrowIfNotPrimaryTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.Transaction.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<Transaction>()
  nameWithType: ByteArraySerializer.Serialize<Transaction>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Replicator.Transaction>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of Transaction)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Replicator.Transaction)()
  name.vb: Serialize(Of Transaction)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<Transaction>
    nameWithType: ByteArraySerializer.Serialize<Transaction>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Replicator.Transaction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of Transaction)
    nameWithType: ByteArraySerializer.Serialize(Of Transaction)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Replicator.Transaction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Replicator.Transaction.TransactionId*
  commentId: Overload:Microsoft.ServiceFabric.Replicator.Transaction.TransactionId
  isExternal: false
  name: TransactionId
  nameWithType: Transaction.TransactionId
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.TransactionId
- uid: Microsoft.ServiceFabric.Data.ITransaction.TransactionId
  commentId: P:Microsoft.ServiceFabric.Data.ITransaction.TransactionId
  parent: Microsoft.ServiceFabric.Data.ITransaction
  isExternal: false
  name: TransactionId
  nameWithType: ITransaction.TransactionId
  fullName: Microsoft.ServiceFabric.Data.ITransaction.TransactionId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.ServiceFabric.Replicator.Transaction.Abort*
  commentId: Overload:Microsoft.ServiceFabric.Replicator.Transaction.Abort
  isExternal: false
  name: Abort
  nameWithType: Transaction.Abort
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.Abort
- uid: Microsoft.ServiceFabric.Data.ITransaction.Abort
  commentId: M:Microsoft.ServiceFabric.Data.ITransaction.Abort
  parent: Microsoft.ServiceFabric.Data.ITransaction
  isExternal: false
  name: Abort()
  nameWithType: ITransaction.Abort()
  fullName: Microsoft.ServiceFabric.Data.ITransaction.Abort()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.ITransaction.Abort
    name: Abort
    nameWithType: ITransaction.Abort
    fullName: Microsoft.ServiceFabric.Data.ITransaction.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.ITransaction.Abort
    name: Abort
    nameWithType: ITransaction.Abort
    fullName: Microsoft.ServiceFabric.Data.ITransaction.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.Transaction.AbortAsync*
  commentId: Overload:Microsoft.ServiceFabric.Replicator.Transaction.AbortAsync
  isExternal: false
  name: AbortAsync
  nameWithType: Transaction.AbortAsync
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.AbortAsync
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Fabric.FabricNotPrimaryException
  commentId: T:System.Fabric.FabricNotPrimaryException
  isExternal: false
  name: FabricNotPrimaryException
  nameWithType: FabricNotPrimaryException
  fullName: System.Fabric.FabricNotPrimaryException
- uid: System.Threading.Tasks.Task{System.Int64}
  commentId: T:System.Threading.Tasks.Task{System.Int64}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int64>
  nameWithType: Task<Int64>
  fullName: System.Threading.Tasks.Task<System.Int64>
  nameWithType.vb: Task(Of Int64)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int64)
  name.vb: Task(Of Int64)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceFabric.Replicator.Transaction.AddOperation*
  commentId: Overload:Microsoft.ServiceFabric.Replicator.Transaction.AddOperation
  isExternal: false
  name: AddOperation
  nameWithType: Transaction.AddOperation
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.AddOperation
- uid: System.Fabric.OperationData
  commentId: T:System.Fabric.OperationData
  parent: System.Fabric
  isExternal: false
  name: OperationData
  nameWithType: OperationData
  fullName: System.Fabric.OperationData
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Replicator.Transaction.CommitAsync*
  commentId: Overload:Microsoft.ServiceFabric.Replicator.Transaction.CommitAsync
  isExternal: false
  name: CommitAsync
  nameWithType: Transaction.CommitAsync
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.CommitAsync
- uid: Microsoft.ServiceFabric.Data.ITransaction.CommitAsync
  commentId: M:Microsoft.ServiceFabric.Data.ITransaction.CommitAsync
  parent: Microsoft.ServiceFabric.Data.ITransaction
  isExternal: false
  name: CommitAsync()
  nameWithType: ITransaction.CommitAsync()
  fullName: Microsoft.ServiceFabric.Data.ITransaction.CommitAsync()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.ITransaction.CommitAsync
    name: CommitAsync
    nameWithType: ITransaction.CommitAsync
    fullName: Microsoft.ServiceFabric.Data.ITransaction.CommitAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.ITransaction.CommitAsync
    name: CommitAsync
    nameWithType: ITransaction.CommitAsync
    fullName: Microsoft.ServiceFabric.Data.ITransaction.CommitAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Replicator.Transaction.GetVisibilitySequenceNumberAsync*
  commentId: Overload:Microsoft.ServiceFabric.Replicator.Transaction.GetVisibilitySequenceNumberAsync
  isExternal: false
  name: GetVisibilitySequenceNumberAsync
  nameWithType: Transaction.GetVisibilitySequenceNumberAsync
  fullName: Microsoft.ServiceFabric.Replicator.Transaction.GetVisibilitySequenceNumberAsync
- uid: Microsoft.ServiceFabric.Data.ITransaction.GetVisibilitySequenceNumberAsync
  commentId: M:Microsoft.ServiceFabric.Data.ITransaction.GetVisibilitySequenceNumberAsync
  parent: Microsoft.ServiceFabric.Data.ITransaction
  isExternal: false
  name: GetVisibilitySequenceNumberAsync()
  nameWithType: ITransaction.GetVisibilitySequenceNumberAsync()
  fullName: Microsoft.ServiceFabric.Data.ITransaction.GetVisibilitySequenceNumberAsync()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.ITransaction.GetVisibilitySequenceNumberAsync
    name: GetVisibilitySequenceNumberAsync
    nameWithType: ITransaction.GetVisibilitySequenceNumberAsync
    fullName: Microsoft.ServiceFabric.Data.ITransaction.GetVisibilitySequenceNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.ITransaction.GetVisibilitySequenceNumberAsync
    name: GetVisibilitySequenceNumberAsync
    nameWithType: ITransaction.GetVisibilitySequenceNumberAsync
    fullName: Microsoft.ServiceFabric.Data.ITransaction.GetVisibilitySequenceNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
