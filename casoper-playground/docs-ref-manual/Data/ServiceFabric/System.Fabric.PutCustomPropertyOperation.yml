### YamlMime:ManagedReference
items:
- uid: System.Fabric.PutCustomPropertyOperation
  commentId: T:System.Fabric.PutCustomPropertyOperation
  id: PutCustomPropertyOperation
  parent: System.Fabric
  children:
  - System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Byte[],System.String)
  - System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Double,System.String)
  - System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Guid,System.String)
  - System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Int64,System.String)
  - System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.String,System.String)
  - System.Fabric.PutCustomPropertyOperation.CustomTypeId
  - System.Fabric.PutCustomPropertyOperation.PropertyType
  - System.Fabric.PutCustomPropertyOperation.PropertyValue
  langs:
  - csharp
  - vb
  name: PutCustomPropertyOperation
  nameWithType: PutCustomPropertyOperation
  fullName: System.Fabric.PutCustomPropertyOperation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PutCustomPropertyOperation
    path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Represents the specified property under the specified name and sets the custom type information for custom interpretation of the property value.</p>\n"
  remarks: "\nThe custom type is information that is not processed by Service Fabric, \nbut can be used by user to serialize/deserialize custom type objects."
  example: []
  syntax:
    content: 'public sealed class PutCustomPropertyOperation : PropertyBatchOperation'
    content.vb: >-
      Public NotInheritable Class PutCustomPropertyOperation
          Inherits PropertyBatchOperation
  inheritance:
  - System.Object
  - System.Fabric.PropertyBatchOperation
  inheritedMembers:
  - System.Fabric.PropertyBatchOperation.PropertyName
  - System.Fabric.PropertyBatchOperation.Kind
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.PutCustomPropertyOperation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Byte[],System.String)
  commentId: M:System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Byte[],System.String)
  id: '#ctor(System.String,System.Byte[],System.String)'
  parent: System.Fabric.PutCustomPropertyOperation
  langs:
  - csharp
  - vb
  name: PutCustomPropertyOperation(String, Byte[], String)
  nameWithType: PutCustomPropertyOperation.PutCustomPropertyOperation(String, Byte[], String)
  fullName: System.Fabric.PutCustomPropertyOperation.PutCustomPropertyOperation(System.String, System.Byte[], System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
    startLine: 32
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.PutCustomPropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> class with the specified property name \nand byte[] value, and sets the custom type accordingly.</p>\n"
  example: []
  syntax:
    content: public PutCustomPropertyOperation(string propertyName, byte[] value, string customTypeId)
    content.vb: Public Sub New(propertyName As String, value As Byte(), customTypeId As String)
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
    - id: value
      type: System.Byte[]
      description: "\n<p>The value for the property.</p>\n"
    - id: customTypeId
      type: System.String
      description: "\n<p>The user defined custom type.</p>\n"
  overload: System.Fabric.PutCustomPropertyOperation.#ctor*
  nameWithType.vb: PutCustomPropertyOperation.PutCustomPropertyOperation(String, Byte(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.PutCustomPropertyOperation.PutCustomPropertyOperation(System.String, System.Byte(), System.String)
  name.vb: PutCustomPropertyOperation(String, Byte(), String)
- uid: System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Int64,System.String)
  commentId: M:System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Int64,System.String)
  id: '#ctor(System.String,System.Int64,System.String)'
  parent: System.Fabric.PutCustomPropertyOperation
  langs:
  - csharp
  - vb
  name: PutCustomPropertyOperation(String, Int64, String)
  nameWithType: PutCustomPropertyOperation.PutCustomPropertyOperation(String, Int64, String)
  fullName: System.Fabric.PutCustomPropertyOperation.PutCustomPropertyOperation(System.String, System.Int64, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
    startLine: 51
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.PutCustomPropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> class with the specified property name \nand Int64 value, and sets the custom type accordingly.</p>\n"
  example: []
  syntax:
    content: public PutCustomPropertyOperation(string propertyName, long value, string customTypeId)
    content.vb: Public Sub New(propertyName As String, value As Long, customTypeId As String)
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
    - id: value
      type: System.Int64
      description: "\n<p>The value for the property.</p>\n"
    - id: customTypeId
      type: System.String
      description: "\n<p>The user defined custom type.</p>\n"
  overload: System.Fabric.PutCustomPropertyOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Guid,System.String)
  commentId: M:System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Guid,System.String)
  id: '#ctor(System.String,System.Guid,System.String)'
  parent: System.Fabric.PutCustomPropertyOperation
  langs:
  - csharp
  - vb
  name: PutCustomPropertyOperation(String, Guid, String)
  nameWithType: PutCustomPropertyOperation.PutCustomPropertyOperation(String, Guid, String)
  fullName: System.Fabric.PutCustomPropertyOperation.PutCustomPropertyOperation(System.String, System.Guid, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
    startLine: 69
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.PutCustomPropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> class with the specified property name and GUID \nvalue, and sets the custom type accordingly.</p>\n"
  example: []
  syntax:
    content: public PutCustomPropertyOperation(string propertyName, Guid value, string customTypeId)
    content.vb: Public Sub New(propertyName As String, value As Guid, customTypeId As String)
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
    - id: value
      type: System.Guid
      description: "\n<p>The value for the property.</p>\n"
    - id: customTypeId
      type: System.String
      description: "\n<p>The user defined custom type.</p>\n"
  overload: System.Fabric.PutCustomPropertyOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.String,System.String)
  commentId: M:System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Fabric.PutCustomPropertyOperation
  langs:
  - csharp
  - vb
  name: PutCustomPropertyOperation(String, String, String)
  nameWithType: PutCustomPropertyOperation.PutCustomPropertyOperation(String, String, String)
  fullName: System.Fabric.PutCustomPropertyOperation.PutCustomPropertyOperation(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
    startLine: 87
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.PutCustomPropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> class with the specified property name and \nstring value, and sets the custom type accordingly.</p>\n"
  example: []
  syntax:
    content: public PutCustomPropertyOperation(string propertyName, string value, string customTypeId)
    content.vb: Public Sub New(propertyName As String, value As String, customTypeId As String)
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
    - id: value
      type: System.String
      description: "\n<p>The value for the property.</p>\n"
    - id: customTypeId
      type: System.String
      description: "\n<p>The user defined custom type.</p>\n"
  overload: System.Fabric.PutCustomPropertyOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Double,System.String)
  commentId: M:System.Fabric.PutCustomPropertyOperation.#ctor(System.String,System.Double,System.String)
  id: '#ctor(System.String,System.Double,System.String)'
  parent: System.Fabric.PutCustomPropertyOperation
  langs:
  - csharp
  - vb
  name: PutCustomPropertyOperation(String, Double, String)
  nameWithType: PutCustomPropertyOperation.PutCustomPropertyOperation(String, Double, String)
  fullName: System.Fabric.PutCustomPropertyOperation.PutCustomPropertyOperation(System.String, System.Double, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
    startLine: 106
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.PutCustomPropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> class with the specified property name and \ndouble value, and sets the custom type accordingly.</p>\n"
  example: []
  syntax:
    content: public PutCustomPropertyOperation(string propertyName, double value, string customTypeId)
    content.vb: Public Sub New(propertyName As String, value As Double, customTypeId As String)
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
    - id: value
      type: System.Double
      description: "\n<p>The value for the property.</p>\n"
    - id: customTypeId
      type: System.String
      description: "\n<p>The user defined custom type.</p>\n"
  overload: System.Fabric.PutCustomPropertyOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.PutCustomPropertyOperation.PropertyValue
  commentId: P:System.Fabric.PutCustomPropertyOperation.PropertyValue
  id: PropertyValue
  parent: System.Fabric.PutCustomPropertyOperation
  langs:
  - csharp
  - vb
  name: PropertyValue
  nameWithType: PutCustomPropertyOperation.PropertyValue
  fullName: System.Fabric.PutCustomPropertyOperation.PropertyValue
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PropertyValue
    path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
    startLine: 131
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the property value.</p>\n"
  example: []
  syntax:
    content: public object PropertyValue { get; }
    content.vb: Public ReadOnly Property PropertyValue As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>The property value.</p>\n"
  overload: System.Fabric.PutCustomPropertyOperation.PropertyValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.PutCustomPropertyOperation.PropertyType
  commentId: P:System.Fabric.PutCustomPropertyOperation.PropertyType
  id: PropertyType
  parent: System.Fabric.PutCustomPropertyOperation
  langs:
  - csharp
  - vb
  name: PropertyType
  nameWithType: PutCustomPropertyOperation.PropertyType
  fullName: System.Fabric.PutCustomPropertyOperation.PropertyType
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PropertyType
    path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
    startLine: 139
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the property type.</p>\n"
  example: []
  syntax:
    content: public PropertyTypeId PropertyType { get; }
    content.vb: Public ReadOnly Property PropertyType As PropertyTypeId
    parameters: []
    return:
      type: System.Fabric.PropertyTypeId
      description: "\n<p>The property type.</p>\n"
  overload: System.Fabric.PutCustomPropertyOperation.PropertyType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.PutCustomPropertyOperation.CustomTypeId
  commentId: P:System.Fabric.PutCustomPropertyOperation.CustomTypeId
  id: CustomTypeId
  parent: System.Fabric.PutCustomPropertyOperation
  langs:
  - csharp
  - vb
  name: CustomTypeId
  nameWithType: PutCustomPropertyOperation.CustomTypeId
  fullName: System.Fabric.PutCustomPropertyOperation.CustomTypeId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CustomTypeId
    path: src/prod/src/managed/Api/src/System/Fabric/PutCustomPropertyOperation.cs
    startLine: 147
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the custom type information. This information can be used by users to serialize/de-serialize custom type objects.</p>\n"
  example: []
  syntax:
    content: public string CustomTypeId { get; }
    content.vb: Public ReadOnly Property CustomTypeId As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The custom type information.</p>\n"
  overload: System.Fabric.PutCustomPropertyOperation.CustomTypeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.PropertyBatchOperation
  commentId: T:System.Fabric.PropertyBatchOperation
  parent: System.Fabric
  isExternal: false
  name: PropertyBatchOperation
  nameWithType: PropertyBatchOperation
  fullName: System.Fabric.PropertyBatchOperation
- uid: System.Fabric.PropertyBatchOperation.PropertyName
  commentId: P:System.Fabric.PropertyBatchOperation.PropertyName
  parent: System.Fabric.PropertyBatchOperation
  isExternal: false
  name: PropertyName
  nameWithType: PropertyBatchOperation.PropertyName
  fullName: System.Fabric.PropertyBatchOperation.PropertyName
- uid: System.Fabric.PropertyBatchOperation.Kind
  commentId: P:System.Fabric.PropertyBatchOperation.Kind
  parent: System.Fabric.PropertyBatchOperation
  isExternal: false
  name: Kind
  nameWithType: PropertyBatchOperation.Kind
  fullName: System.Fabric.PropertyBatchOperation.Kind
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.PutCustomPropertyOperation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<PutCustomPropertyOperation>()
  nameWithType: ByteArraySerializer.Serialize<PutCustomPropertyOperation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.PutCustomPropertyOperation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of PutCustomPropertyOperation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.PutCustomPropertyOperation)()
  name.vb: Serialize(Of PutCustomPropertyOperation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<PutCustomPropertyOperation>
    nameWithType: ByteArraySerializer.Serialize<PutCustomPropertyOperation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.PutCustomPropertyOperation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of PutCustomPropertyOperation)
    nameWithType: ByteArraySerializer.Serialize(Of PutCustomPropertyOperation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.PutCustomPropertyOperation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.PutCustomPropertyOperation
  commentId: T:System.Fabric.PutCustomPropertyOperation
  parent: System.Fabric
  isExternal: false
  name: PutCustomPropertyOperation
  nameWithType: PutCustomPropertyOperation
  fullName: System.Fabric.PutCustomPropertyOperation
- uid: System.Fabric.PutCustomPropertyOperation.#ctor*
  commentId: Overload:System.Fabric.PutCustomPropertyOperation.#ctor
  isExternal: false
  name: PutCustomPropertyOperation
  nameWithType: PutCustomPropertyOperation.PutCustomPropertyOperation
  fullName: System.Fabric.PutCustomPropertyOperation.PutCustomPropertyOperation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Fabric.PutCustomPropertyOperation.PropertyValue*
  commentId: Overload:System.Fabric.PutCustomPropertyOperation.PropertyValue
  isExternal: false
  name: PropertyValue
  nameWithType: PutCustomPropertyOperation.PropertyValue
  fullName: System.Fabric.PutCustomPropertyOperation.PropertyValue
- uid: System.Fabric.PutCustomPropertyOperation.PropertyType*
  commentId: Overload:System.Fabric.PutCustomPropertyOperation.PropertyType
  isExternal: false
  name: PropertyType
  nameWithType: PutCustomPropertyOperation.PropertyType
  fullName: System.Fabric.PutCustomPropertyOperation.PropertyType
- uid: System.Fabric.PropertyTypeId
  commentId: T:System.Fabric.PropertyTypeId
  parent: System.Fabric
  isExternal: false
  name: PropertyTypeId
  nameWithType: PropertyTypeId
  fullName: System.Fabric.PropertyTypeId
- uid: System.Fabric.PutCustomPropertyOperation.CustomTypeId*
  commentId: Overload:System.Fabric.PutCustomPropertyOperation.CustomTypeId
  isExternal: false
  name: CustomTypeId
  nameWithType: PutCustomPropertyOperation.CustomTypeId
  fullName: System.Fabric.PutCustomPropertyOperation.CustomTypeId
