### YamlMime:ManagedReference
items:
- uid: System.Fabric.CheckValuePropertyOperation
  commentId: T:System.Fabric.CheckValuePropertyOperation
  id: CheckValuePropertyOperation
  parent: System.Fabric
  children:
  - System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Byte[])
  - System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Double)
  - System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Guid)
  - System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Int64)
  - System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.String)
  - System.Fabric.CheckValuePropertyOperation.PropertyType
  - System.Fabric.CheckValuePropertyOperation.PropertyValue
  langs:
  - csharp
  - vb
  name: CheckValuePropertyOperation
  nameWithType: CheckValuePropertyOperation
  fullName: System.Fabric.CheckValuePropertyOperation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CheckValuePropertyOperation
    path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
    startLine: 20
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Represents a <xref href=\"System.Fabric.PropertyBatchOperation\" data-throw-if-not-resolved=\"false\"></xref> that compares the value of the property\nwith the expected value.  </p>\n"
  remarks: "\n<p>The comparison fails if the value of the property and the expected value are not equal. \nThe <xref href=\"System.Fabric.CheckValuePropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> is generally used as a precondition for the write operations in the batch. \nNote that if one <xref href=\"System.Fabric.PropertyBatchOperation\" data-throw-if-not-resolved=\"false\"></xref> fails, the entire batch fails and cannot be committed.</p>\n"
  example: []
  syntax:
    content: 'public sealed class CheckValuePropertyOperation : PropertyBatchOperation'
    content.vb: >-
      Public NotInheritable Class CheckValuePropertyOperation
          Inherits PropertyBatchOperation
  inheritance:
  - System.Object
  - System.Fabric.PropertyBatchOperation
  inheritedMembers:
  - System.Fabric.PropertyBatchOperation.PropertyName
  - System.Fabric.PropertyBatchOperation.Kind
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.CheckValuePropertyOperation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Byte[])
  commentId: M:System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.Fabric.CheckValuePropertyOperation
  langs:
  - csharp
  - vb
  name: CheckValuePropertyOperation(String, Byte[])
  nameWithType: CheckValuePropertyOperation.CheckValuePropertyOperation(String, Byte[])
  fullName: System.Fabric.CheckValuePropertyOperation.CheckValuePropertyOperation(System.String, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
    startLine: 31
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.CheckValuePropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> class with specified <em>propertyName</em> and <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>[] value.</p>\n"
  example: []
  syntax:
    content: public CheckValuePropertyOperation(string propertyName, byte[] value)
    content.vb: Public Sub New(propertyName As String, value As Byte())
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
    - id: value
      type: System.Byte[]
      description: "\n<p>The value of the property.</p>\n"
  overload: System.Fabric.CheckValuePropertyOperation.#ctor*
  nameWithType.vb: CheckValuePropertyOperation.CheckValuePropertyOperation(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.CheckValuePropertyOperation.CheckValuePropertyOperation(System.String, System.Byte())
  name.vb: CheckValuePropertyOperation(String, Byte())
- uid: System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Int64)
  commentId: M:System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Int64)
  id: '#ctor(System.String,System.Int64)'
  parent: System.Fabric.CheckValuePropertyOperation
  langs:
  - csharp
  - vb
  name: CheckValuePropertyOperation(String, Int64)
  nameWithType: CheckValuePropertyOperation.CheckValuePropertyOperation(String, Int64)
  fullName: System.Fabric.CheckValuePropertyOperation.CheckValuePropertyOperation(System.String, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
    startLine: 47
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.CheckValuePropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> class \nwith specified <em>propertyName</em> and <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  example: []
  syntax:
    content: public CheckValuePropertyOperation(string propertyName, long value)
    content.vb: Public Sub New(propertyName As String, value As Long)
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
    - id: value
      type: System.Int64
      description: "\n<p>The value of the property.</p>\n"
  overload: System.Fabric.CheckValuePropertyOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Guid)
  commentId: M:System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Guid)
  id: '#ctor(System.String,System.Guid)'
  parent: System.Fabric.CheckValuePropertyOperation
  langs:
  - csharp
  - vb
  name: CheckValuePropertyOperation(String, Guid)
  nameWithType: CheckValuePropertyOperation.CheckValuePropertyOperation(String, Guid)
  fullName: System.Fabric.CheckValuePropertyOperation.CheckValuePropertyOperation(System.String, System.Guid)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
    startLine: 62
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.CheckValuePropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> class\nwith specified <em>propertyName</em> and <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  example: []
  syntax:
    content: public CheckValuePropertyOperation(string propertyName, Guid value)
    content.vb: Public Sub New(propertyName As String, value As Guid)
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
    - id: value
      type: System.Guid
      description: "\n<p>The value of the property.</p>\n"
  overload: System.Fabric.CheckValuePropertyOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.String)
  commentId: M:System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Fabric.CheckValuePropertyOperation
  langs:
  - csharp
  - vb
  name: CheckValuePropertyOperation(String, String)
  nameWithType: CheckValuePropertyOperation.CheckValuePropertyOperation(String, String)
  fullName: System.Fabric.CheckValuePropertyOperation.CheckValuePropertyOperation(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
    startLine: 77
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.CheckValuePropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> class\nwith specified <em>propertyName</em> and <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  example: []
  syntax:
    content: public CheckValuePropertyOperation(string propertyName, string value)
    content.vb: Public Sub New(propertyName As String, value As String)
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
    - id: value
      type: System.String
      description: "\n<p>The value of the property.</p>\n"
  overload: System.Fabric.CheckValuePropertyOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Double)
  commentId: M:System.Fabric.CheckValuePropertyOperation.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: System.Fabric.CheckValuePropertyOperation
  langs:
  - csharp
  - vb
  name: CheckValuePropertyOperation(String, Double)
  nameWithType: CheckValuePropertyOperation.CheckValuePropertyOperation(String, Double)
  fullName: System.Fabric.CheckValuePropertyOperation.CheckValuePropertyOperation(System.String, System.Double)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
    startLine: 93
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.CheckValuePropertyOperation\" data-throw-if-not-resolved=\"false\"></xref> class\nwith specified <em>propertyName</em> and <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  example: []
  syntax:
    content: public CheckValuePropertyOperation(string propertyName, double value)
    content.vb: Public Sub New(propertyName As String, value As Double)
    parameters:
    - id: propertyName
      type: System.String
      description: "\n<p>The name of the property.</p>\n"
    - id: value
      type: System.Double
      description: "\n<p>The value of the property.</p>\n"
  overload: System.Fabric.CheckValuePropertyOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.CheckValuePropertyOperation.PropertyValue
  commentId: P:System.Fabric.CheckValuePropertyOperation.PropertyValue
  id: PropertyValue
  parent: System.Fabric.CheckValuePropertyOperation
  langs:
  - csharp
  - vb
  name: PropertyValue
  nameWithType: CheckValuePropertyOperation.PropertyValue
  fullName: System.Fabric.CheckValuePropertyOperation.PropertyValue
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PropertyValue
    path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
    startLine: 115
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the value of the property.</p>\n"
  example: []
  syntax:
    content: public object PropertyValue { get; }
    content.vb: Public ReadOnly Property PropertyValue As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>The value of the property.</p>\n"
  overload: System.Fabric.CheckValuePropertyOperation.PropertyValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.CheckValuePropertyOperation.PropertyType
  commentId: P:System.Fabric.CheckValuePropertyOperation.PropertyType
  id: PropertyType
  parent: System.Fabric.CheckValuePropertyOperation
  langs:
  - csharp
  - vb
  name: PropertyType
  nameWithType: CheckValuePropertyOperation.PropertyType
  fullName: System.Fabric.CheckValuePropertyOperation.PropertyType
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PropertyType
    path: src/prod/src/managed/Api/src/System/Fabric/CheckValuePropertyOperation.cs
    startLine: 123
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the type of the property.</p>\n"
  example: []
  syntax:
    content: public PropertyTypeId PropertyType { get; }
    content.vb: Public ReadOnly Property PropertyType As PropertyTypeId
    parameters: []
    return:
      type: System.Fabric.PropertyTypeId
      description: "\n<p>The type of the property.</p>\n"
  overload: System.Fabric.CheckValuePropertyOperation.PropertyType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.PropertyBatchOperation
  commentId: T:System.Fabric.PropertyBatchOperation
  parent: System.Fabric
  isExternal: false
  name: PropertyBatchOperation
  nameWithType: PropertyBatchOperation
  fullName: System.Fabric.PropertyBatchOperation
- uid: System.Fabric.CheckValuePropertyOperation
  commentId: T:System.Fabric.CheckValuePropertyOperation
  parent: System.Fabric
  isExternal: false
  name: CheckValuePropertyOperation
  nameWithType: CheckValuePropertyOperation
  fullName: System.Fabric.CheckValuePropertyOperation
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.PropertyBatchOperation.PropertyName
  commentId: P:System.Fabric.PropertyBatchOperation.PropertyName
  parent: System.Fabric.PropertyBatchOperation
  isExternal: false
  name: PropertyName
  nameWithType: PropertyBatchOperation.PropertyName
  fullName: System.Fabric.PropertyBatchOperation.PropertyName
- uid: System.Fabric.PropertyBatchOperation.Kind
  commentId: P:System.Fabric.PropertyBatchOperation.Kind
  parent: System.Fabric.PropertyBatchOperation
  isExternal: false
  name: Kind
  nameWithType: PropertyBatchOperation.Kind
  fullName: System.Fabric.PropertyBatchOperation.Kind
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.CheckValuePropertyOperation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<CheckValuePropertyOperation>()
  nameWithType: ByteArraySerializer.Serialize<CheckValuePropertyOperation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.CheckValuePropertyOperation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of CheckValuePropertyOperation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.CheckValuePropertyOperation)()
  name.vb: Serialize(Of CheckValuePropertyOperation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<CheckValuePropertyOperation>
    nameWithType: ByteArraySerializer.Serialize<CheckValuePropertyOperation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.CheckValuePropertyOperation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of CheckValuePropertyOperation)
    nameWithType: ByteArraySerializer.Serialize(Of CheckValuePropertyOperation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.CheckValuePropertyOperation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Fabric.CheckValuePropertyOperation.#ctor*
  commentId: Overload:System.Fabric.CheckValuePropertyOperation.#ctor
  isExternal: false
  name: CheckValuePropertyOperation
  nameWithType: CheckValuePropertyOperation.CheckValuePropertyOperation
  fullName: System.Fabric.CheckValuePropertyOperation.CheckValuePropertyOperation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Fabric.CheckValuePropertyOperation.PropertyValue*
  commentId: Overload:System.Fabric.CheckValuePropertyOperation.PropertyValue
  isExternal: false
  name: PropertyValue
  nameWithType: CheckValuePropertyOperation.PropertyValue
  fullName: System.Fabric.CheckValuePropertyOperation.PropertyValue
- uid: System.Fabric.CheckValuePropertyOperation.PropertyType*
  commentId: Overload:System.Fabric.CheckValuePropertyOperation.PropertyType
  isExternal: false
  name: PropertyType
  nameWithType: CheckValuePropertyOperation.PropertyType
  fullName: System.Fabric.CheckValuePropertyOperation.PropertyType
- uid: System.Fabric.PropertyTypeId
  commentId: T:System.Fabric.PropertyTypeId
  parent: System.Fabric
  isExternal: false
  name: PropertyTypeId
  nameWithType: PropertyTypeId
  fullName: System.Fabric.PropertyTypeId
