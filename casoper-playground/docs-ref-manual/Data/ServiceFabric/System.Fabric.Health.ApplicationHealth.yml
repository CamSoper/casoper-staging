### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.ApplicationHealth
  commentId: T:System.Fabric.Health.ApplicationHealth
  id: ApplicationHealth
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.ApplicationHealth.ApplicationName
  - System.Fabric.Health.ApplicationHealth.DeployedApplicationHealthStates
  - System.Fabric.Health.ApplicationHealth.ServiceHealthStates
  langs:
  - csharp
  - vb
  name: ApplicationHealth
  nameWithType: ApplicationHealth
  fullName: System.Fabric.Health.ApplicationHealth
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealth.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationHealth
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealth.cs
    startLine: 16
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Describes the health of an application as returned by <xref href=\"System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Fabric.Description.ApplicationHealthQueryDescription)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: 'public sealed class ApplicationHealth : EntityHealth'
    content.vb: >-
      Public NotInheritable Class ApplicationHealth
          Inherits EntityHealth
  inheritance:
  - System.Object
  - System.Fabric.Health.EntityHealth
  inheritedMembers:
  - System.Fabric.Health.EntityHealth.AggregatedHealthState
  - System.Fabric.Health.EntityHealth.HealthEvents
  - System.Fabric.Health.EntityHealth.UnhealthyEvaluations
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.ApplicationHealth.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.ApplicationHealth.ApplicationName
  commentId: P:System.Fabric.Health.ApplicationHealth.ApplicationName
  id: ApplicationName
  parent: System.Fabric.Health.ApplicationHealth
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: ApplicationHealth.ApplicationName
  fullName: System.Fabric.Health.ApplicationHealth.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealth.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealth.cs
    startLine: 28
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the application name, which uniquely identifies the application . </p>\n"
  example: []
  syntax:
    content: public Uri ApplicationName { get; }
    content.vb: Public ReadOnly Property ApplicationName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The application name.</p>\n"
  overload: System.Fabric.Health.ApplicationHealth.ApplicationName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ApplicationHealth.ServiceHealthStates
  commentId: P:System.Fabric.Health.ApplicationHealth.ServiceHealthStates
  id: ServiceHealthStates
  parent: System.Fabric.Health.ApplicationHealth
  langs:
  - csharp
  - vb
  name: ServiceHealthStates
  nameWithType: ApplicationHealth.ServiceHealthStates
  fullName: System.Fabric.Health.ApplicationHealth.ServiceHealthStates
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealth.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceHealthStates
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealth.cs
    startLine: 44
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the service health states for the current application as found in the health store.</p>\n"
  example: []
  syntax:
    content: public IList<ServiceHealthState> ServiceHealthStates { get; }
    content.vb: Public ReadOnly Property ServiceHealthStates As IList(Of ServiceHealthState)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Health.ServiceHealthState}
      description: "\n<p>The services of the current application as found in the health store.</p>\n"
  overload: System.Fabric.Health.ApplicationHealth.ServiceHealthStates*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ApplicationHealth.DeployedApplicationHealthStates
  commentId: P:System.Fabric.Health.ApplicationHealth.DeployedApplicationHealthStates
  id: DeployedApplicationHealthStates
  parent: System.Fabric.Health.ApplicationHealth
  langs:
  - csharp
  - vb
  name: DeployedApplicationHealthStates
  nameWithType: ApplicationHealth.DeployedApplicationHealthStates
  fullName: System.Fabric.Health.ApplicationHealth.DeployedApplicationHealthStates
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealth.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DeployedApplicationHealthStates
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ApplicationHealth.cs
    startLine: 59
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the deployed application health states for the current application as found in the health store.</p>\n"
  example: []
  syntax:
    content: public IList<DeployedApplicationHealthState> DeployedApplicationHealthStates { get; }
    content.vb: Public ReadOnly Property DeployedApplicationHealthStates As IList(Of DeployedApplicationHealthState)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Health.DeployedApplicationHealthState}
      description: "\n<p>deployed applications for the current application as found in the health store.</p>\n"
  overload: System.Fabric.Health.ApplicationHealth.DeployedApplicationHealthStates*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Fabric.Description.ApplicationHealthQueryDescription)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Fabric.Description.ApplicationHealthQueryDescription)
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Health.EntityHealth
  commentId: T:System.Fabric.Health.EntityHealth
  parent: System.Fabric.Health
  isExternal: false
  name: EntityHealth
  nameWithType: EntityHealth
  fullName: System.Fabric.Health.EntityHealth
- uid: System.Fabric.Health.EntityHealth.AggregatedHealthState
  commentId: P:System.Fabric.Health.EntityHealth.AggregatedHealthState
  parent: System.Fabric.Health.EntityHealth
  isExternal: false
  name: AggregatedHealthState
  nameWithType: EntityHealth.AggregatedHealthState
  fullName: System.Fabric.Health.EntityHealth.AggregatedHealthState
- uid: System.Fabric.Health.EntityHealth.HealthEvents
  commentId: P:System.Fabric.Health.EntityHealth.HealthEvents
  parent: System.Fabric.Health.EntityHealth
  isExternal: false
  name: HealthEvents
  nameWithType: EntityHealth.HealthEvents
  fullName: System.Fabric.Health.EntityHealth.HealthEvents
- uid: System.Fabric.Health.EntityHealth.UnhealthyEvaluations
  commentId: P:System.Fabric.Health.EntityHealth.UnhealthyEvaluations
  parent: System.Fabric.Health.EntityHealth
  isExternal: false
  name: UnhealthyEvaluations
  nameWithType: EntityHealth.UnhealthyEvaluations
  fullName: System.Fabric.Health.EntityHealth.UnhealthyEvaluations
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ApplicationHealth.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ApplicationHealth>()
  nameWithType: ByteArraySerializer.Serialize<ApplicationHealth>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ApplicationHealth>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ApplicationHealth)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ApplicationHealth)()
  name.vb: Serialize(Of ApplicationHealth)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ApplicationHealth>
    nameWithType: ByteArraySerializer.Serialize<ApplicationHealth>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ApplicationHealth>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ApplicationHealth)
    nameWithType: ByteArraySerializer.Serialize(Of ApplicationHealth)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ApplicationHealth)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.ApplicationHealth.ApplicationName*
  commentId: Overload:System.Fabric.Health.ApplicationHealth.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: ApplicationHealth.ApplicationName
  fullName: System.Fabric.Health.ApplicationHealth.ApplicationName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.ServicesFilter
  commentId: P:System.Fabric.Description.ApplicationHealthQueryDescription.ServicesFilter
- uid: System.Fabric.Health.ApplicationHealth.ServiceHealthStates*
  commentId: Overload:System.Fabric.Health.ApplicationHealth.ServiceHealthStates
  isExternal: false
  name: ServiceHealthStates
  nameWithType: ApplicationHealth.ServiceHealthStates
  fullName: System.Fabric.Health.ApplicationHealth.ServiceHealthStates
- uid: System.Collections.Generic.IList{System.Fabric.Health.ServiceHealthState}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Health.ServiceHealthState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ServiceHealthState>
  nameWithType: IList<ServiceHealthState>
  fullName: System.Collections.Generic.IList<System.Fabric.Health.ServiceHealthState>
  nameWithType.vb: IList(Of ServiceHealthState)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Health.ServiceHealthState)
  name.vb: IList(Of ServiceHealthState)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Health.ServiceHealthState
    name: ServiceHealthState
    nameWithType: ServiceHealthState
    fullName: System.Fabric.Health.ServiceHealthState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Health.ServiceHealthState
    name: ServiceHealthState
    nameWithType: ServiceHealthState
    fullName: System.Fabric.Health.ServiceHealthState
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.DeployedApplicationsFilter
  commentId: P:System.Fabric.Description.ApplicationHealthQueryDescription.DeployedApplicationsFilter
- uid: System.Fabric.Health.ApplicationHealth.DeployedApplicationHealthStates*
  commentId: Overload:System.Fabric.Health.ApplicationHealth.DeployedApplicationHealthStates
  isExternal: false
  name: DeployedApplicationHealthStates
  nameWithType: ApplicationHealth.DeployedApplicationHealthStates
  fullName: System.Fabric.Health.ApplicationHealth.DeployedApplicationHealthStates
- uid: System.Collections.Generic.IList{System.Fabric.Health.DeployedApplicationHealthState}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Health.DeployedApplicationHealthState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<DeployedApplicationHealthState>
  nameWithType: IList<DeployedApplicationHealthState>
  fullName: System.Collections.Generic.IList<System.Fabric.Health.DeployedApplicationHealthState>
  nameWithType.vb: IList(Of DeployedApplicationHealthState)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Health.DeployedApplicationHealthState)
  name.vb: IList(Of DeployedApplicationHealthState)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Health.DeployedApplicationHealthState
    name: DeployedApplicationHealthState
    nameWithType: DeployedApplicationHealthState
    fullName: System.Fabric.Health.DeployedApplicationHealthState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Health.DeployedApplicationHealthState
    name: DeployedApplicationHealthState
    nameWithType: DeployedApplicationHealthState
    fullName: System.Fabric.Health.DeployedApplicationHealthState
  - name: )
    nameWithType: )
    fullName: )
