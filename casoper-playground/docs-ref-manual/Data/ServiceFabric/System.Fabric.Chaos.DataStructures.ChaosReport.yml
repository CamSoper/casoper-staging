### YamlMime:ManagedReference
items:
- uid: System.Fabric.Chaos.DataStructures.ChaosReport
  commentId: T:System.Fabric.Chaos.DataStructures.ChaosReport
  id: ChaosReport
  parent: System.Fabric.Chaos.DataStructures
  children:
  - System.Fabric.Chaos.DataStructures.ChaosReport.ChaosParameters
  - System.Fabric.Chaos.DataStructures.ChaosReport.ContinuationToken
  - System.Fabric.Chaos.DataStructures.ChaosReport.History
  - System.Fabric.Chaos.DataStructures.ChaosReport.Status
  - System.Fabric.Chaos.DataStructures.ChaosReport.ToString
  langs:
  - csharp
  - vb
  name: ChaosReport
  nameWithType: ChaosReport
  fullName: System.Fabric.Chaos.DataStructures.ChaosReport
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ChaosReport
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\n<p>Represents the status of running Chaos, possibly within a time range, as returned by <xref href=\"System.Fabric.FabricClient.TestManagementClient.GetChaosReportAsync(System.Fabric.Chaos.DataStructures.ChaosReportFilter%2cSystem.TimeSpan%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public sealed class ChaosReport
    content.vb: Public NotInheritable Class ChaosReport
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Chaos.DataStructures.ChaosReport.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Chaos.DataStructures.ChaosReport.ChaosParameters
  commentId: P:System.Fabric.Chaos.DataStructures.ChaosReport.ChaosParameters
  id: ChaosParameters
  parent: System.Fabric.Chaos.DataStructures.ChaosReport
  langs:
  - csharp
  - vb
  name: ChaosParameters
  nameWithType: ChaosReport.ChaosParameters
  fullName: System.Fabric.Chaos.DataStructures.ChaosReport.ChaosParameters
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ChaosParameters
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
    startLine: 36
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\n<p>Gets the parameters that was passed into <xref href=\"System.Fabric.FabricClient.TestManagementClient.StartChaosAsync(System.Fabric.Chaos.DataStructures.ChaosParameters%2cSystem.TimeSpan%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> and with which Chaos was started.</p>\n"
  example: []
  syntax:
    content: public ChaosParameters ChaosParameters { get; }
    content.vb: Public ReadOnly Property ChaosParameters As ChaosParameters
    parameters: []
    return:
      type: System.Fabric.Chaos.DataStructures.ChaosParameters
  overload: System.Fabric.Chaos.DataStructures.ChaosReport.ChaosParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Chaos.DataStructures.ChaosReport.Status
  commentId: P:System.Fabric.Chaos.DataStructures.ChaosReport.Status
  id: Status
  parent: System.Fabric.Chaos.DataStructures.ChaosReport
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ChaosReport.Status
  fullName: System.Fabric.Chaos.DataStructures.ChaosReport.Status
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Status
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
    startLine: 45
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\n<p>Gets the current task (one of the enumerators in CurrentChaosTask <code>enum</code>) that Chaos is performing.</p>\n"
  example: []
  syntax:
    content: public ChaosStatus Status { get; }
    content.vb: Public ReadOnly Property Status As ChaosStatus
    parameters: []
    return:
      type: System.Fabric.Chaos.DataStructures.ChaosStatus
  overload: System.Fabric.Chaos.DataStructures.ChaosReport.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Chaos.DataStructures.ChaosReport.History
  commentId: P:System.Fabric.Chaos.DataStructures.ChaosReport.History
  id: History
  parent: System.Fabric.Chaos.DataStructures.ChaosReport
  langs:
  - csharp
  - vb
  name: History
  nameWithType: ChaosReport.History
  fullName: System.Fabric.Chaos.DataStructures.ChaosReport.History
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: History
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
    startLine: 50
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nGets the list of Chaos events that were produced during the time of interest specified in <xref href=\"System.Fabric.FabricClient.TestManagementClient.GetChaosReportAsync(System.Fabric.Chaos.DataStructures.ChaosReportFilter%2cSystem.TimeSpan%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public List<ChaosEvent> History { get; }
    content.vb: Public ReadOnly Property History As List(Of ChaosEvent)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Fabric.Chaos.DataStructures.ChaosEvent}
  overload: System.Fabric.Chaos.DataStructures.ChaosReport.History*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Chaos.DataStructures.ChaosReport.ContinuationToken
  commentId: P:System.Fabric.Chaos.DataStructures.ChaosReport.ContinuationToken
  id: ContinuationToken
  parent: System.Fabric.Chaos.DataStructures.ChaosReport
  langs:
  - csharp
  - vb
  name: ContinuationToken
  nameWithType: ChaosReport.ContinuationToken
  fullName: System.Fabric.Chaos.DataStructures.ChaosReport.ContinuationToken
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ContinuationToken
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
    startLine: 56
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nIf the number of Chaos events is too large, then those will be returned in batches; so, to get the\nnext batch of events the ContinuationToken must be passed in the API call, <xref href=\"System.Fabric.FabricClient.TestManagementClient.GetChaosReportAsync(System.String%2cSystem.TimeSpan%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string ContinuationToken { get; }
    content.vb: Public ReadOnly Property ContinuationToken As String
    parameters: []
    return:
      type: System.String
  overload: System.Fabric.Chaos.DataStructures.ChaosReport.ContinuationToken*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Chaos.DataStructures.ChaosReport.ToString
  commentId: M:System.Fabric.Chaos.DataStructures.ChaosReport.ToString
  id: ToString
  parent: System.Fabric.Chaos.DataStructures.ChaosReport
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ChaosReport.ToString()
  fullName: System.Fabric.Chaos.DataStructures.ChaosReport.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Chaos/DataStructures/ChaosReport.cs
    startLine: 62
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Chaos.DataStructures
  summary: "\nGets a string representation of the chaos status object.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the chaos status object.
  overridden: System.Object.ToString
  overload: System.Fabric.Chaos.DataStructures.ChaosReport.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.FabricClient.TestManagementClient.GetChaosReportAsync(System.Fabric.Chaos.DataStructures.ChaosReportFilter,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.TestManagementClient.GetChaosReportAsync(System.Fabric.Chaos.DataStructures.ChaosReportFilter,System.TimeSpan,System.Threading.CancellationToken)
- uid: System.Fabric.Chaos.DataStructures
  commentId: N:System.Fabric.Chaos.DataStructures
  isExternal: false
  name: System.Fabric.Chaos.DataStructures
  nameWithType: System.Fabric.Chaos.DataStructures
  fullName: System.Fabric.Chaos.DataStructures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Chaos.DataStructures.ChaosReport.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ChaosReport>()
  nameWithType: ByteArraySerializer.Serialize<ChaosReport>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Chaos.DataStructures.ChaosReport>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ChaosReport)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Chaos.DataStructures.ChaosReport)()
  name.vb: Serialize(Of ChaosReport)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ChaosReport>
    nameWithType: ByteArraySerializer.Serialize<ChaosReport>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Chaos.DataStructures.ChaosReport>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ChaosReport)
    nameWithType: ByteArraySerializer.Serialize(Of ChaosReport)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Chaos.DataStructures.ChaosReport)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.FabricClient.TestManagementClient.StartChaosAsync(System.Fabric.Chaos.DataStructures.ChaosParameters,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.TestManagementClient.StartChaosAsync(System.Fabric.Chaos.DataStructures.ChaosParameters,System.TimeSpan,System.Threading.CancellationToken)
- uid: System.Fabric.Chaos.DataStructures.ChaosReport.ChaosParameters*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosReport.ChaosParameters
  isExternal: false
  name: ChaosParameters
  nameWithType: ChaosReport.ChaosParameters
  fullName: System.Fabric.Chaos.DataStructures.ChaosReport.ChaosParameters
- uid: System.Fabric.Chaos.DataStructures.ChaosParameters
  commentId: T:System.Fabric.Chaos.DataStructures.ChaosParameters
  parent: System.Fabric.Chaos.DataStructures
  isExternal: false
  name: ChaosParameters
  nameWithType: ChaosParameters
  fullName: System.Fabric.Chaos.DataStructures.ChaosParameters
- uid: System.Fabric.Chaos.DataStructures.ChaosReport.Status*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosReport.Status
  isExternal: false
  name: Status
  nameWithType: ChaosReport.Status
  fullName: System.Fabric.Chaos.DataStructures.ChaosReport.Status
- uid: System.Fabric.Chaos.DataStructures.ChaosStatus
  commentId: T:System.Fabric.Chaos.DataStructures.ChaosStatus
  parent: System.Fabric.Chaos.DataStructures
  isExternal: false
  name: ChaosStatus
  nameWithType: ChaosStatus
  fullName: System.Fabric.Chaos.DataStructures.ChaosStatus
- uid: System.Fabric.Chaos.DataStructures.ChaosReport.History*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosReport.History
  isExternal: false
  name: History
  nameWithType: ChaosReport.History
  fullName: System.Fabric.Chaos.DataStructures.ChaosReport.History
- uid: System.Collections.Generic.List{System.Fabric.Chaos.DataStructures.ChaosEvent}
  commentId: T:System.Collections.Generic.List{System.Fabric.Chaos.DataStructures.ChaosEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ChaosEvent>
  nameWithType: List<ChaosEvent>
  fullName: System.Collections.Generic.List<System.Fabric.Chaos.DataStructures.ChaosEvent>
  nameWithType.vb: List(Of ChaosEvent)
  fullname.vb: System.Collections.Generic.List(Of System.Fabric.Chaos.DataStructures.ChaosEvent)
  name.vb: List(Of ChaosEvent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Chaos.DataStructures.ChaosEvent
    name: ChaosEvent
    nameWithType: ChaosEvent
    fullName: System.Fabric.Chaos.DataStructures.ChaosEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Chaos.DataStructures.ChaosEvent
    name: ChaosEvent
    nameWithType: ChaosEvent
    fullName: System.Fabric.Chaos.DataStructures.ChaosEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.FabricClient.TestManagementClient.GetChaosReportAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.TestManagementClient.GetChaosReportAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
- uid: System.Fabric.Chaos.DataStructures.ChaosReport.ContinuationToken*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosReport.ContinuationToken
  isExternal: false
  name: ContinuationToken
  nameWithType: ChaosReport.ContinuationToken
  fullName: System.Fabric.Chaos.DataStructures.ChaosReport.ContinuationToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Chaos.DataStructures.ChaosReport.ToString*
  commentId: Overload:System.Fabric.Chaos.DataStructures.ChaosReport.ToString
  isExternal: false
  name: ToString
  nameWithType: ChaosReport.ToString
  fullName: System.Fabric.Chaos.DataStructures.ChaosReport.ToString
