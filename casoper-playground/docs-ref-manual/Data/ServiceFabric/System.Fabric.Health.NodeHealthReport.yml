### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.NodeHealthReport
  commentId: T:System.Fabric.Health.NodeHealthReport
  id: NodeHealthReport
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.NodeHealthReport.#ctor(System.String,System.Fabric.Health.HealthInformation)
  - System.Fabric.Health.NodeHealthReport.NodeName
  langs:
  - csharp
  - vb
  name: NodeHealthReport
  nameWithType: NodeHealthReport
  fullName: System.Fabric.Health.NodeHealthReport
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeHealthReport
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthReport.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Represents a health report to be applied on the node health entity. \nThe report is sent to health store with \n<xref href=\"System.Fabric.FabricClient.HealthClient.ReportHealth(System.Fabric.Health.HealthReport)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: 'public class NodeHealthReport : HealthReport'
    content.vb: >-
      Public Class NodeHealthReport
          Inherits HealthReport
  inheritance:
  - System.Object
  - System.Fabric.Health.HealthReport
  inheritedMembers:
  - System.Fabric.Health.HealthReport.Kind
  - System.Fabric.Health.HealthReport.HealthInformation
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.NodeHealthReport.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Health.NodeHealthReport.#ctor(System.String,System.Fabric.Health.HealthInformation)
  commentId: M:System.Fabric.Health.NodeHealthReport.#ctor(System.String,System.Fabric.Health.HealthInformation)
  id: '#ctor(System.String,System.Fabric.Health.HealthInformation)'
  parent: System.Fabric.Health.NodeHealthReport
  langs:
  - csharp
  - vb
  name: NodeHealthReport(String, HealthInformation)
  nameWithType: NodeHealthReport.NodeHealthReport(String, HealthInformation)
  fullName: System.Fabric.Health.NodeHealthReport.NodeHealthReport(System.String, System.Fabric.Health.HealthInformation)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthReport.cs
    startLine: 36
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Health.NodeHealthReport\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public NodeHealthReport(string nodeName, HealthInformation healthInformation)
    content.vb: Public Sub New(nodeName As String, healthInformation As HealthInformation)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The node name. Can’t be null or empty.</p>\n"
    - id: healthInformation
      type: System.Fabric.Health.HealthInformation
      description: "\n<p>The <xref href=\"System.Fabric.Health.HealthInformation\" data-throw-if-not-resolved=\"false\"></xref> which describes the report fields, like sourceId, \nproperty, health state. Required.</p>\n"
  overload: System.Fabric.Health.NodeHealthReport.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>Node name can’t be null.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>Health information can’t be null.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Node name can’t be empty.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.NodeHealthReport.NodeName
  commentId: P:System.Fabric.Health.NodeHealthReport.NodeName
  id: NodeName
  parent: System.Fabric.Health.NodeHealthReport
  langs:
  - csharp
  - vb
  name: NodeName
  nameWithType: NodeHealthReport.NodeName
  fullName: System.Fabric.Health.NodeHealthReport.NodeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeName
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthReport.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the node name.</p>\n"
  example: []
  syntax:
    content: public string NodeName { get; }
    content.vb: Public ReadOnly Property NodeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The node name.</p>\n"
  overload: System.Fabric.Health.NodeHealthReport.NodeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.FabricClient.HealthClient.ReportHealth(System.Fabric.Health.HealthReport)
  commentId: M:System.Fabric.FabricClient.HealthClient.ReportHealth(System.Fabric.Health.HealthReport)
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Health.HealthReport
  commentId: T:System.Fabric.Health.HealthReport
  parent: System.Fabric.Health
  isExternal: false
  name: HealthReport
  nameWithType: HealthReport
  fullName: System.Fabric.Health.HealthReport
- uid: System.Fabric.Health.HealthReport.Kind
  commentId: P:System.Fabric.Health.HealthReport.Kind
  parent: System.Fabric.Health.HealthReport
  isExternal: false
  name: Kind
  nameWithType: HealthReport.Kind
  fullName: System.Fabric.Health.HealthReport.Kind
- uid: System.Fabric.Health.HealthReport.HealthInformation
  commentId: P:System.Fabric.Health.HealthReport.HealthInformation
  parent: System.Fabric.Health.HealthReport
  isExternal: false
  name: HealthInformation
  nameWithType: HealthReport.HealthInformation
  fullName: System.Fabric.Health.HealthReport.HealthInformation
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.NodeHealthReport.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NodeHealthReport>()
  nameWithType: ByteArraySerializer.Serialize<NodeHealthReport>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.NodeHealthReport>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NodeHealthReport)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.NodeHealthReport)()
  name.vb: Serialize(Of NodeHealthReport)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NodeHealthReport>
    nameWithType: ByteArraySerializer.Serialize<NodeHealthReport>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.NodeHealthReport>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NodeHealthReport)
    nameWithType: ByteArraySerializer.Serialize(Of NodeHealthReport)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.NodeHealthReport)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.NodeHealthReport
  commentId: T:System.Fabric.Health.NodeHealthReport
  parent: System.Fabric.Health
  isExternal: false
  name: NodeHealthReport
  nameWithType: NodeHealthReport
  fullName: System.Fabric.Health.NodeHealthReport
- uid: System.Fabric.Health.HealthInformation
  commentId: T:System.Fabric.Health.HealthInformation
  parent: System.Fabric.Health
  isExternal: false
  name: HealthInformation
  nameWithType: HealthInformation
  fullName: System.Fabric.Health.HealthInformation
- uid: System.Fabric.Health.NodeHealthReport.#ctor*
  commentId: Overload:System.Fabric.Health.NodeHealthReport.#ctor
  isExternal: false
  name: NodeHealthReport
  nameWithType: NodeHealthReport.NodeHealthReport
  fullName: System.Fabric.Health.NodeHealthReport.NodeHealthReport
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Health.NodeHealthReport.NodeName*
  commentId: Overload:System.Fabric.Health.NodeHealthReport.NodeName
  isExternal: false
  name: NodeName
  nameWithType: NodeHealthReport.NodeName
  fullName: System.Fabric.Health.NodeHealthReport.NodeName
