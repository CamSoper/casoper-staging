### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.LoadMetricInformation
  commentId: T:System.Fabric.Query.LoadMetricInformation
  id: LoadMetricInformation
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.LoadMetricInformation.#ctor
  - System.Fabric.Query.LoadMetricInformation.Action
  - System.Fabric.Query.LoadMetricInformation.ActivityThreshold
  - System.Fabric.Query.LoadMetricInformation.BalancingThreshold
  - System.Fabric.Query.LoadMetricInformation.ClusterBufferedCapacity
  - System.Fabric.Query.LoadMetricInformation.ClusterCapacity
  - System.Fabric.Query.LoadMetricInformation.ClusterLoad
  - System.Fabric.Query.LoadMetricInformation.ClusterRemainingBufferedCapacity
  - System.Fabric.Query.LoadMetricInformation.ClusterRemainingCapacity
  - System.Fabric.Query.LoadMetricInformation.DeviationAfter
  - System.Fabric.Query.LoadMetricInformation.DeviationBefore
  - System.Fabric.Query.LoadMetricInformation.IsBalancedAfter
  - System.Fabric.Query.LoadMetricInformation.IsBalancedBefore
  - System.Fabric.Query.LoadMetricInformation.IsClusterCapacityViolation
  - System.Fabric.Query.LoadMetricInformation.MaxNodeLoadNodeId
  - System.Fabric.Query.LoadMetricInformation.MaxNodeLoadValue
  - System.Fabric.Query.LoadMetricInformation.MinNodeLoadNodeId
  - System.Fabric.Query.LoadMetricInformation.MinNodeLoadValue
  - System.Fabric.Query.LoadMetricInformation.Name
  - System.Fabric.Query.LoadMetricInformation.NodeBufferPercentage
  - System.Fabric.Query.LoadMetricInformation.ToString
  langs:
  - csharp
  - vb
  name: LoadMetricInformation
  nameWithType: LoadMetricInformation
  fullName: System.Fabric.Query.LoadMetricInformation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LoadMetricInformation
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Represents the load metric information.</p>\n"
  example: []
  syntax:
    content: public sealed class LoadMetricInformation
    content.vb: Public NotInheritable Class LoadMetricInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.LoadMetricInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.LoadMetricInformation.#ctor
  commentId: M:System.Fabric.Query.LoadMetricInformation.#ctor
  id: '#ctor'
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: LoadMetricInformation()
  nameWithType: LoadMetricInformation.LoadMetricInformation()
  fullName: System.Fabric.Query.LoadMetricInformation.LoadMetricInformation()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Fabric.Query.LoadMetricInformation\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public LoadMetricInformation()
    content.vb: Public Sub New
  overload: System.Fabric.Query.LoadMetricInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Query.LoadMetricInformation.Name
  commentId: P:System.Fabric.Query.LoadMetricInformation.Name
  id: Name
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: LoadMetricInformation.Name
  fullName: System.Fabric.Query.LoadMetricInformation.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 29
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the name of the metric.</p>\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the metric.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.IsBalancedBefore
  commentId: P:System.Fabric.Query.LoadMetricInformation.IsBalancedBefore
  id: IsBalancedBefore
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: IsBalancedBefore
  nameWithType: LoadMetricInformation.IsBalancedBefore
  fullName: System.Fabric.Query.LoadMetricInformation.IsBalancedBefore
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsBalancedBefore
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 39
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets a value that indicates whether the metrics is balanced or not before resource balancer run.</p>\n"
  example: []
  syntax:
    content: public bool IsBalancedBefore { get; }
    content.vb: Public ReadOnly Property IsBalancedBefore As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the metrics is balanced or not before resource balancer run; \notherwise, <strong>false</strong>.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.IsBalancedBefore*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.IsBalancedAfter
  commentId: P:System.Fabric.Query.LoadMetricInformation.IsBalancedAfter
  id: IsBalancedAfter
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: IsBalancedAfter
  nameWithType: LoadMetricInformation.IsBalancedAfter
  fullName: System.Fabric.Query.LoadMetricInformation.IsBalancedAfter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsBalancedAfter
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets a value that indicates whether the metrics is balanced or not after resource balancer run.</p>\n"
  example: []
  syntax:
    content: public bool IsBalancedAfter { get; }
    content.vb: Public ReadOnly Property IsBalancedAfter As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the metrics is balanced or not after resource balancer run; \notherwise, <strong>false</strong>.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.IsBalancedAfter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.DeviationBefore
  commentId: P:System.Fabric.Query.LoadMetricInformation.DeviationBefore
  id: DeviationBefore
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: DeviationBefore
  nameWithType: LoadMetricInformation.DeviationBefore
  fullName: System.Fabric.Query.LoadMetricInformation.DeviationBefore
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DeviationBefore
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 57
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the standard average deviation of the metrics before resource balancer run.</p>\n"
  example: []
  syntax:
    content: public double DeviationBefore { get; }
    content.vb: Public ReadOnly Property DeviationBefore As Double
    parameters: []
    return:
      type: System.Double
      description: "\n<p>The standard average deviation of the metrics before resource balancer run.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.DeviationBefore*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.DeviationAfter
  commentId: P:System.Fabric.Query.LoadMetricInformation.DeviationAfter
  id: DeviationAfter
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: DeviationAfter
  nameWithType: LoadMetricInformation.DeviationAfter
  fullName: System.Fabric.Query.LoadMetricInformation.DeviationAfter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DeviationAfter
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 65
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the standard average deviation of the metrics after resource balancer run.</p>\n"
  example: []
  syntax:
    content: public double DeviationAfter { get; }
    content.vb: Public ReadOnly Property DeviationAfter As Double
    parameters: []
    return:
      type: System.Double
      description: "\n<p>The standard average deviation of the metrics after resource balancer run.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.DeviationAfter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.BalancingThreshold
  commentId: P:System.Fabric.Query.LoadMetricInformation.BalancingThreshold
  id: BalancingThreshold
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: BalancingThreshold
  nameWithType: LoadMetricInformation.BalancingThreshold
  fullName: System.Fabric.Query.LoadMetricInformation.BalancingThreshold
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BalancingThreshold
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 73
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets he balancing threshold for a certain metric.</p>\n"
  example: []
  syntax:
    content: public double BalancingThreshold { get; }
    content.vb: Public ReadOnly Property BalancingThreshold As Double
    parameters: []
    return:
      type: System.Double
      description: "\n<p>The balancing threshold for a certain metric.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.BalancingThreshold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.Action
  commentId: P:System.Fabric.Query.LoadMetricInformation.Action
  id: Action
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: LoadMetricInformation.Action
  fullName: System.Fabric.Query.LoadMetricInformation.Action
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Action
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 81
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the current action being taken with regard to this metric. Examples could be placement, balancing, and constraint checks.</p>\n"
  example: []
  syntax:
    content: public string Action { get; }
    content.vb: Public ReadOnly Property Action As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The current action being taken with regard to this metric.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.Action*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.ActivityThreshold
  commentId: P:System.Fabric.Query.LoadMetricInformation.ActivityThreshold
  id: ActivityThreshold
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: ActivityThreshold
  nameWithType: LoadMetricInformation.ActivityThreshold
  fullName: System.Fabric.Query.LoadMetricInformation.ActivityThreshold
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActivityThreshold
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 89
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the Activity Threshold specified for this metric in the system Cluster Manifest.</p>\n"
  example: []
  syntax:
    content: public long ActivityThreshold { get; }
    content.vb: Public ReadOnly Property ActivityThreshold As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The Activity Threshold specified for this metric in the system Cluster Manifest.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.ActivityThreshold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.ClusterCapacity
  commentId: P:System.Fabric.Query.LoadMetricInformation.ClusterCapacity
  id: ClusterCapacity
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: ClusterCapacity
  nameWithType: LoadMetricInformation.ClusterCapacity
  fullName: System.Fabric.Query.LoadMetricInformation.ClusterCapacity
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClusterCapacity
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 97
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the total cluster capacity for a given metric, determined by summing the capacity for the metric across all nodes.</p>\n"
  example: []
  syntax:
    content: public long ClusterCapacity { get; }
    content.vb: Public ReadOnly Property ClusterCapacity As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The total cluster capacity for a given metric.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.ClusterCapacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.ClusterLoad
  commentId: P:System.Fabric.Query.LoadMetricInformation.ClusterLoad
  id: ClusterLoad
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: ClusterLoad
  nameWithType: LoadMetricInformation.ClusterLoad
  fullName: System.Fabric.Query.LoadMetricInformation.ClusterLoad
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClusterLoad
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 105
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the total cluster load for a specific metric within the cluster</p>\n"
  example: []
  syntax:
    content: public long ClusterLoad { get; }
    content.vb: Public ReadOnly Property ClusterLoad As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The total cluster load.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.ClusterLoad*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.ClusterRemainingCapacity
  commentId: P:System.Fabric.Query.LoadMetricInformation.ClusterRemainingCapacity
  id: ClusterRemainingCapacity
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: ClusterRemainingCapacity
  nameWithType: LoadMetricInformation.ClusterRemainingCapacity
  fullName: System.Fabric.Query.LoadMetricInformation.ClusterRemainingCapacity
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClusterRemainingCapacity
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 114
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets remaining capacity for the metric in the cluster. Remaining capacity is defined as the current Cluster Capacity \nminus the current Cluster Load.</p>\n"
  example: []
  syntax:
    content: public long ClusterRemainingCapacity { get; }
    content.vb: Public ReadOnly Property ClusterRemainingCapacity As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The remaining capacity for the metric in the cluster.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.ClusterRemainingCapacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.IsClusterCapacityViolation
  commentId: P:System.Fabric.Query.LoadMetricInformation.IsClusterCapacityViolation
  id: IsClusterCapacityViolation
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: IsClusterCapacityViolation
  nameWithType: LoadMetricInformation.IsClusterCapacityViolation
  fullName: System.Fabric.Query.LoadMetricInformation.IsClusterCapacityViolation
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsClusterCapacityViolation
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 125
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets whether the metric is currently over capacity in the cluster.</p>\n"
  example: []
  syntax:
    content: public bool IsClusterCapacityViolation { get; }
    content.vb: Public ReadOnly Property IsClusterCapacityViolation As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the metric is currently over capacity in the cluster; \notherwise, <strong>false</strong>.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.IsClusterCapacityViolation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.NodeBufferPercentage
  commentId: P:System.Fabric.Query.LoadMetricInformation.NodeBufferPercentage
  id: NodeBufferPercentage
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: NodeBufferPercentage
  nameWithType: LoadMetricInformation.NodeBufferPercentage
  fullName: System.Fabric.Query.LoadMetricInformation.NodeBufferPercentage
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeBufferPercentage
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 135
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nGets the reserved percentage of total node capacity for this metric\n</p>\n"
  example: []
  syntax:
    content: public double NodeBufferPercentage { get; }
    content.vb: Public ReadOnly Property NodeBufferPercentage As Double
    parameters: []
    return:
      type: System.Double
      description: "\n<p>The reserved percentage of total node capacity for this metric</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.NodeBufferPercentage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.ClusterBufferedCapacity
  commentId: P:System.Fabric.Query.LoadMetricInformation.ClusterBufferedCapacity
  id: ClusterBufferedCapacity
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: ClusterBufferedCapacity
  nameWithType: LoadMetricInformation.ClusterBufferedCapacity
  fullName: System.Fabric.Query.LoadMetricInformation.ClusterBufferedCapacity
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClusterBufferedCapacity
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 145
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nThe reserved percentage of cluster total capacity for this metric\n</p>\n"
  example: []
  syntax:
    content: public long ClusterBufferedCapacity { get; }
    content.vb: Public ReadOnly Property ClusterBufferedCapacity As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>ClusterBufferedCapacity property gets/sets the value of the long field, _clusterBufferedCapacity.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.ClusterBufferedCapacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.ClusterRemainingBufferedCapacity
  commentId: P:System.Fabric.Query.LoadMetricInformation.ClusterRemainingBufferedCapacity
  id: ClusterRemainingBufferedCapacity
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: ClusterRemainingBufferedCapacity
  nameWithType: LoadMetricInformation.ClusterRemainingBufferedCapacity
  fullName: System.Fabric.Query.LoadMetricInformation.ClusterRemainingBufferedCapacity
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClusterRemainingBufferedCapacity
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 156
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nGets the remaining percentage of cluster total capacity for this metric\n</p>\n"
  example: []
  syntax:
    content: public long ClusterRemainingBufferedCapacity { get; }
    content.vb: Public ReadOnly Property ClusterRemainingBufferedCapacity As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The remaining percentage of cluster total capacity for this metric.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.ClusterRemainingBufferedCapacity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.MinNodeLoadValue
  commentId: P:System.Fabric.Query.LoadMetricInformation.MinNodeLoadValue
  id: MinNodeLoadValue
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: MinNodeLoadValue
  nameWithType: LoadMetricInformation.MinNodeLoadValue
  fullName: System.Fabric.Query.LoadMetricInformation.MinNodeLoadValue
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MinNodeLoadValue
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 167
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nGets the minimum load on any node for this metric.\n</p>\n"
  example: []
  syntax:
    content: public long MinNodeLoadValue { get; }
    content.vb: Public ReadOnly Property MinNodeLoadValue As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The minimum load on any node for this metric.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.MinNodeLoadValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.MinNodeLoadNodeId
  commentId: P:System.Fabric.Query.LoadMetricInformation.MinNodeLoadNodeId
  id: MinNodeLoadNodeId
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: MinNodeLoadNodeId
  nameWithType: LoadMetricInformation.MinNodeLoadNodeId
  fullName: System.Fabric.Query.LoadMetricInformation.MinNodeLoadNodeId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MinNodeLoadNodeId
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 177
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nGets the node id of the node with the minimum load for this metric\n</p>\n"
  example: []
  syntax:
    content: public NodeId MinNodeLoadNodeId { get; }
    content.vb: Public ReadOnly Property MinNodeLoadNodeId As NodeId
    parameters: []
    return:
      type: System.Fabric.NodeId
      description: "\n<p>The node id of the node with the minimum load for this metric.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.MinNodeLoadNodeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.MaxNodeLoadValue
  commentId: P:System.Fabric.Query.LoadMetricInformation.MaxNodeLoadValue
  id: MaxNodeLoadValue
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: MaxNodeLoadValue
  nameWithType: LoadMetricInformation.MaxNodeLoadValue
  fullName: System.Fabric.Query.LoadMetricInformation.MaxNodeLoadValue
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxNodeLoadValue
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 188
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nGets the maximum load on any node for this metric.\n</p>\n"
  example: []
  syntax:
    content: public long MaxNodeLoadValue { get; }
    content.vb: Public ReadOnly Property MaxNodeLoadValue As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The maximum load on any node for this metric.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.MaxNodeLoadValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.MaxNodeLoadNodeId
  commentId: P:System.Fabric.Query.LoadMetricInformation.MaxNodeLoadNodeId
  id: MaxNodeLoadNodeId
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: MaxNodeLoadNodeId
  nameWithType: LoadMetricInformation.MaxNodeLoadNodeId
  fullName: System.Fabric.Query.LoadMetricInformation.MaxNodeLoadNodeId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaxNodeLoadNodeId
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 198
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nGets the node id of the node with the maximum load for this metric\n</p>\n"
  example: []
  syntax:
    content: public NodeId MaxNodeLoadNodeId { get; }
    content.vb: Public ReadOnly Property MaxNodeLoadNodeId As NodeId
    parameters: []
    return:
      type: System.Fabric.NodeId
      description: "\n<p>The node id of the node with the maximum load for this metric.</p>\n"
  overload: System.Fabric.Query.LoadMetricInformation.MaxNodeLoadNodeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.LoadMetricInformation.ToString
  commentId: M:System.Fabric.Query.LoadMetricInformation.ToString
  id: ToString
  parent: System.Fabric.Query.LoadMetricInformation
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LoadMetricInformation.ToString()
  fullName: System.Fabric.Query.LoadMetricInformation.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Query/LoadMetricInformation.cs
    startLine: 320
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nPretty print out each field of <xref href=\"System.Fabric.Query.LoadMetricInformation\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example:
  - "\nLoadMetricName        : Metric1\nIsBalancedBefore      : True\nIsBalancedAfter       : True\nDeviationBefore       : 2\nDeviationAfter        : 2\nBalancingThreshold    : 1\nAction    : NoActionNeeded\nActivityThreshold     : 3\nClusterCapacity       : 100\nClusterLoad           : 1\nClusterRemainingCapacity : 0\nNodeBufferPercentage  : 0\nClusterBufferedCapacity : 0\nClusterRemainingBufferedCapacity : 0\nClusterCapacityViolation : True\nMinNodeLoadValue      : 0\nMinNodeLoadNodeId     : 1ca9521d70301383417536df0c96f671\nMaxNodeLoadValue      : 1\nMaxNodeLoadNodeId     : cf68563e16a44f808e86197a9cf83de5\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string representing the load metric information.</p>\n"
  overridden: System.Object.ToString
  overload: System.Fabric.Query.LoadMetricInformation.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.LoadMetricInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<LoadMetricInformation>()
  nameWithType: ByteArraySerializer.Serialize<LoadMetricInformation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.LoadMetricInformation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of LoadMetricInformation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.LoadMetricInformation)()
  name.vb: Serialize(Of LoadMetricInformation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<LoadMetricInformation>
    nameWithType: ByteArraySerializer.Serialize<LoadMetricInformation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.LoadMetricInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of LoadMetricInformation)
    nameWithType: ByteArraySerializer.Serialize(Of LoadMetricInformation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.LoadMetricInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.LoadMetricInformation
  commentId: T:System.Fabric.Query.LoadMetricInformation
  isExternal: false
  name: LoadMetricInformation
  nameWithType: LoadMetricInformation
  fullName: System.Fabric.Query.LoadMetricInformation
- uid: System.Fabric.Query.LoadMetricInformation.#ctor*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.#ctor
  isExternal: false
  name: LoadMetricInformation
  nameWithType: LoadMetricInformation.LoadMetricInformation
  fullName: System.Fabric.Query.LoadMetricInformation.LoadMetricInformation
- uid: System.Fabric.Query.LoadMetricInformation.Name*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.Name
  isExternal: false
  name: Name
  nameWithType: LoadMetricInformation.Name
  fullName: System.Fabric.Query.LoadMetricInformation.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Query.LoadMetricInformation.IsBalancedBefore*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.IsBalancedBefore
  isExternal: false
  name: IsBalancedBefore
  nameWithType: LoadMetricInformation.IsBalancedBefore
  fullName: System.Fabric.Query.LoadMetricInformation.IsBalancedBefore
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Query.LoadMetricInformation.IsBalancedAfter*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.IsBalancedAfter
  isExternal: false
  name: IsBalancedAfter
  nameWithType: LoadMetricInformation.IsBalancedAfter
  fullName: System.Fabric.Query.LoadMetricInformation.IsBalancedAfter
- uid: System.Fabric.Query.LoadMetricInformation.DeviationBefore*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.DeviationBefore
  isExternal: false
  name: DeviationBefore
  nameWithType: LoadMetricInformation.DeviationBefore
  fullName: System.Fabric.Query.LoadMetricInformation.DeviationBefore
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Fabric.Query.LoadMetricInformation.DeviationAfter*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.DeviationAfter
  isExternal: false
  name: DeviationAfter
  nameWithType: LoadMetricInformation.DeviationAfter
  fullName: System.Fabric.Query.LoadMetricInformation.DeviationAfter
- uid: System.Fabric.Query.LoadMetricInformation.BalancingThreshold*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.BalancingThreshold
  isExternal: false
  name: BalancingThreshold
  nameWithType: LoadMetricInformation.BalancingThreshold
  fullName: System.Fabric.Query.LoadMetricInformation.BalancingThreshold
- uid: System.Fabric.Query.LoadMetricInformation.Action*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.Action
  isExternal: false
  name: Action
  nameWithType: LoadMetricInformation.Action
  fullName: System.Fabric.Query.LoadMetricInformation.Action
- uid: System.Fabric.Query.LoadMetricInformation.ActivityThreshold*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.ActivityThreshold
  isExternal: false
  name: ActivityThreshold
  nameWithType: LoadMetricInformation.ActivityThreshold
  fullName: System.Fabric.Query.LoadMetricInformation.ActivityThreshold
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Query.LoadMetricInformation.ClusterCapacity*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.ClusterCapacity
  isExternal: false
  name: ClusterCapacity
  nameWithType: LoadMetricInformation.ClusterCapacity
  fullName: System.Fabric.Query.LoadMetricInformation.ClusterCapacity
- uid: System.Fabric.Query.LoadMetricInformation.ClusterLoad*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.ClusterLoad
  isExternal: false
  name: ClusterLoad
  nameWithType: LoadMetricInformation.ClusterLoad
  fullName: System.Fabric.Query.LoadMetricInformation.ClusterLoad
- uid: System.Fabric.Query.LoadMetricInformation.ClusterRemainingCapacity*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.ClusterRemainingCapacity
  isExternal: false
  name: ClusterRemainingCapacity
  nameWithType: LoadMetricInformation.ClusterRemainingCapacity
  fullName: System.Fabric.Query.LoadMetricInformation.ClusterRemainingCapacity
- uid: System.Fabric.Query.LoadMetricInformation.IsClusterCapacityViolation*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.IsClusterCapacityViolation
  isExternal: false
  name: IsClusterCapacityViolation
  nameWithType: LoadMetricInformation.IsClusterCapacityViolation
  fullName: System.Fabric.Query.LoadMetricInformation.IsClusterCapacityViolation
- uid: System.Fabric.Query.LoadMetricInformation.NodeBufferPercentage*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.NodeBufferPercentage
  isExternal: false
  name: NodeBufferPercentage
  nameWithType: LoadMetricInformation.NodeBufferPercentage
  fullName: System.Fabric.Query.LoadMetricInformation.NodeBufferPercentage
- uid: System.Fabric.Query.LoadMetricInformation.ClusterBufferedCapacity*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.ClusterBufferedCapacity
  isExternal: false
  name: ClusterBufferedCapacity
  nameWithType: LoadMetricInformation.ClusterBufferedCapacity
  fullName: System.Fabric.Query.LoadMetricInformation.ClusterBufferedCapacity
- uid: System.Fabric.Query.LoadMetricInformation.ClusterRemainingBufferedCapacity*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.ClusterRemainingBufferedCapacity
  isExternal: false
  name: ClusterRemainingBufferedCapacity
  nameWithType: LoadMetricInformation.ClusterRemainingBufferedCapacity
  fullName: System.Fabric.Query.LoadMetricInformation.ClusterRemainingBufferedCapacity
- uid: System.Fabric.Query.LoadMetricInformation.MinNodeLoadValue*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.MinNodeLoadValue
  isExternal: false
  name: MinNodeLoadValue
  nameWithType: LoadMetricInformation.MinNodeLoadValue
  fullName: System.Fabric.Query.LoadMetricInformation.MinNodeLoadValue
- uid: System.Fabric.Query.LoadMetricInformation.MinNodeLoadNodeId*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.MinNodeLoadNodeId
  isExternal: false
  name: MinNodeLoadNodeId
  nameWithType: LoadMetricInformation.MinNodeLoadNodeId
  fullName: System.Fabric.Query.LoadMetricInformation.MinNodeLoadNodeId
- uid: System.Fabric.NodeId
  commentId: T:System.Fabric.NodeId
  parent: System.Fabric
  isExternal: false
  name: NodeId
  nameWithType: NodeId
  fullName: System.Fabric.NodeId
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.Query.LoadMetricInformation.MaxNodeLoadValue*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.MaxNodeLoadValue
  isExternal: false
  name: MaxNodeLoadValue
  nameWithType: LoadMetricInformation.MaxNodeLoadValue
  fullName: System.Fabric.Query.LoadMetricInformation.MaxNodeLoadValue
- uid: System.Fabric.Query.LoadMetricInformation.MaxNodeLoadNodeId*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.MaxNodeLoadNodeId
  isExternal: false
  name: MaxNodeLoadNodeId
  nameWithType: LoadMetricInformation.MaxNodeLoadNodeId
  fullName: System.Fabric.Query.LoadMetricInformation.MaxNodeLoadNodeId
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.LoadMetricInformation.ToString*
  commentId: Overload:System.Fabric.Query.LoadMetricInformation.ToString
  isExternal: false
  name: ToString
  nameWithType: LoadMetricInformation.ToString
  fullName: System.Fabric.Query.LoadMetricInformation.ToString
