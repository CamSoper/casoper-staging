### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.Replica
  commentId: T:System.Fabric.Query.Replica
  id: Replica
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.Replica.#ctor(System.Fabric.Query.ServiceKind,System.Int64,System.Fabric.Query.ServiceReplicaStatus,System.Fabric.Health.HealthState,System.String,System.String,System.TimeSpan)
  - System.Fabric.Query.Replica.HealthState
  - System.Fabric.Query.Replica.Id
  - System.Fabric.Query.Replica.LastInBuildDuration
  - System.Fabric.Query.Replica.LastInBuildDurationInSeconds
  - System.Fabric.Query.Replica.NodeName
  - System.Fabric.Query.Replica.ReplicaAddress
  - System.Fabric.Query.Replica.ReplicaStatus
  - System.Fabric.Query.Replica.ServiceKind
  langs:
  - csharp
  - vb
  name: Replica
  nameWithType: Replica
  fullName: System.Fabric.Query.Replica
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Replica
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Represents a query replica.</p>\n"
  example: []
  syntax:
    content: >-
      [KnownType(typeof (StatelessServiceInstance))]

      [KnownType(typeof (StatefulServiceReplica))]

      public abstract class Replica
    content.vb: >-
      <KnownType(GetType(StatelessServiceInstance))>

      <KnownType(GetType(StatefulServiceReplica))>

      Public MustInherit Class Replica
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.Replica.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Query.StatelessServiceInstance
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Query.StatefulServiceReplica
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Query.Replica.#ctor(System.Fabric.Query.ServiceKind,System.Int64,System.Fabric.Query.ServiceReplicaStatus,System.Fabric.Health.HealthState,System.String,System.String,System.TimeSpan)
  commentId: M:System.Fabric.Query.Replica.#ctor(System.Fabric.Query.ServiceKind,System.Int64,System.Fabric.Query.ServiceReplicaStatus,System.Fabric.Health.HealthState,System.String,System.String,System.TimeSpan)
  id: '#ctor(System.Fabric.Query.ServiceKind,System.Int64,System.Fabric.Query.ServiceReplicaStatus,System.Fabric.Health.HealthState,System.String,System.String,System.TimeSpan)'
  parent: System.Fabric.Query.Replica
  langs:
  - csharp
  - vb
  name: Replica(ServiceKind, Int64, ServiceReplicaStatus, HealthState, String, String, TimeSpan)
  nameWithType: Replica.Replica(ServiceKind, Int64, ServiceReplicaStatus, HealthState, String, String, TimeSpan)
  fullName: System.Fabric.Query.Replica.Replica(System.Fabric.Query.ServiceKind, System.Int64, System.Fabric.Query.ServiceReplicaStatus, System.Fabric.Health.HealthState, System.String, System.String, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
    startLine: 43
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Initializes a replica</p>\n"
  example: []
  syntax:
    content: protected Replica(ServiceKind serviceKind, long id, ServiceReplicaStatus replicaStatus, HealthState healthState, string replicaAddress, string nodeName, TimeSpan lastInBuildDuration)
    content.vb: Protected Sub New(serviceKind As ServiceKind, id As Long, replicaStatus As ServiceReplicaStatus, healthState As HealthState, replicaAddress As String, nodeName As String, lastInBuildDuration As TimeSpan)
    parameters:
    - id: serviceKind
      type: System.Fabric.Query.ServiceKind
      description: "\n<p>The type of the replica</p>\n"
    - id: id
      type: System.Int64
      description: "\n<p>The replica ID</p>\n"
    - id: replicaStatus
      type: System.Fabric.Query.ServiceReplicaStatus
      description: "\n<p>The status replica will be initialized with.</p>\n"
    - id: healthState
      type: System.Fabric.Health.HealthState
      description: "\n<p>The health state replica will be initialized with</p>\n"
    - id: replicaAddress
      type: System.String
      description: "\n<p>The address replica will be initialized with.</p>\n"
    - id: nodeName
      type: System.String
      description: "\n<p>The node name replica will be initialized with</p>\n"
    - id: lastInBuildDuration
      type: System.TimeSpan
      description: "\n<p>The last in build duration replica will be initialized with.</p>\n"
  overload: System.Fabric.Query.Replica.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Query.Replica.ServiceKind
  commentId: P:System.Fabric.Query.Replica.ServiceKind
  id: ServiceKind
  parent: System.Fabric.Query.Replica
  langs:
  - csharp
  - vb
  name: ServiceKind
  nameWithType: Replica.ServiceKind
  fullName: System.Fabric.Query.Replica.ServiceKind
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceKind
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
    startLine: 65
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the service kind.\n"
  example: []
  syntax:
    content: public ServiceKind ServiceKind { get; }
    content.vb: Public ReadOnly Property ServiceKind As ServiceKind
    parameters: []
    return:
      type: System.Fabric.Query.ServiceKind
      description: The service kind.
  overload: System.Fabric.Query.Replica.ServiceKind*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Replica.Id
  commentId: P:System.Fabric.Query.Replica.Id
  id: Id
  parent: System.Fabric.Query.Replica
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Replica.Id
  fullName: System.Fabric.Query.Replica.Id
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Id
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
    startLine: 74
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the replica identifier.</p>\n"
  example: []
  syntax:
    content: public long Id { get; protected set; }
    content.vb: Public Property Id As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The replica identifier.</p>\n"
  overload: System.Fabric.Query.Replica.Id*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: System.Fabric.Query.Replica.ReplicaStatus
  commentId: P:System.Fabric.Query.Replica.ReplicaStatus
  id: ReplicaStatus
  parent: System.Fabric.Query.Replica
  langs:
  - csharp
  - vb
  name: ReplicaStatus
  nameWithType: Replica.ReplicaStatus
  fullName: System.Fabric.Query.Replica.ReplicaStatus
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
    startLine: 83
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the status of the replica.</p>\n"
  example: []
  syntax:
    content: public ServiceReplicaStatus ReplicaStatus { get; }
    content.vb: Public ReadOnly Property ReplicaStatus As ServiceReplicaStatus
    parameters: []
    return:
      type: System.Fabric.Query.ServiceReplicaStatus
      description: "\n<p>The status of the replica.</p>\n"
  overload: System.Fabric.Query.Replica.ReplicaStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Replica.HealthState
  commentId: P:System.Fabric.Query.Replica.HealthState
  id: HealthState
  parent: System.Fabric.Query.Replica
  langs:
  - csharp
  - vb
  name: HealthState
  nameWithType: Replica.HealthState
  fullName: System.Fabric.Query.Replica.HealthState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthState
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
    startLine: 91
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the health state of the replica.</p>\n"
  example: []
  syntax:
    content: public HealthState HealthState { get; }
    content.vb: Public ReadOnly Property HealthState As HealthState
    parameters: []
    return:
      type: System.Fabric.Health.HealthState
      description: "\n<p>The health state of the replica.</p>\n"
  overload: System.Fabric.Query.Replica.HealthState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Replica.ReplicaAddress
  commentId: P:System.Fabric.Query.Replica.ReplicaAddress
  id: ReplicaAddress
  parent: System.Fabric.Query.Replica
  langs:
  - csharp
  - vb
  name: ReplicaAddress
  nameWithType: Replica.ReplicaAddress
  fullName: System.Fabric.Query.Replica.ReplicaAddress
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaAddress
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
    startLine: 99
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the address the replica is listening on.</p>\n"
  example: []
  syntax:
    content: public string ReplicaAddress { get; }
    content.vb: Public ReadOnly Property ReplicaAddress As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The address the replica is listening on.</p>\n"
  overload: System.Fabric.Query.Replica.ReplicaAddress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Replica.NodeName
  commentId: P:System.Fabric.Query.Replica.NodeName
  id: NodeName
  parent: System.Fabric.Query.Replica
  langs:
  - csharp
  - vb
  name: NodeName
  nameWithType: Replica.NodeName
  fullName: System.Fabric.Query.Replica.NodeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
    startLine: 108
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the node name the replica is running on.</p>\n"
  example: []
  syntax:
    content: public string NodeName { get; }
    content.vb: Public ReadOnly Property NodeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The node name the replica is running on.</p>\n"
  overload: System.Fabric.Query.Replica.NodeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Replica.LastInBuildDuration
  commentId: P:System.Fabric.Query.Replica.LastInBuildDuration
  id: LastInBuildDuration
  parent: System.Fabric.Query.Replica
  langs:
  - csharp
  - vb
  name: LastInBuildDuration
  nameWithType: Replica.LastInBuildDuration
  fullName: System.Fabric.Query.Replica.LastInBuildDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastInBuildDuration
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
    startLine: 116
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets last in build duration.</p>\n"
  example: []
  syntax:
    content: public TimeSpan LastInBuildDuration { get; }
    content.vb: Public ReadOnly Property LastInBuildDuration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The last in build duration.</p>\n"
  overload: System.Fabric.Query.Replica.LastInBuildDuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.Replica.LastInBuildDurationInSeconds
  commentId: P:System.Fabric.Query.Replica.LastInBuildDurationInSeconds
  id: LastInBuildDurationInSeconds
  parent: System.Fabric.Query.Replica
  langs:
  - csharp
  - vb
  name: LastInBuildDurationInSeconds
  nameWithType: Replica.LastInBuildDurationInSeconds
  fullName: System.Fabric.Query.Replica.LastInBuildDurationInSeconds
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastInBuildDurationInSeconds
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ServiceReplicaResultItem.cs
    startLine: 123
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets last in build duration in seconds.\n"
  example: []
  syntax:
    content: protected long LastInBuildDurationInSeconds { get; }
    content.vb: Protected ReadOnly Property LastInBuildDurationInSeconds As Long
    parameters: []
    return:
      type: System.Int64
      description: Last in build duration in seconds.
  overload: System.Fabric.Query.Replica.LastInBuildDurationInSeconds*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.Replica.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<Replica>()
  nameWithType: ByteArraySerializer.Serialize<Replica>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.Replica>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of Replica)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.Replica)()
  name.vb: Serialize(Of Replica)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<Replica>
    nameWithType: ByteArraySerializer.Serialize<Replica>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.Replica>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of Replica)
    nameWithType: ByteArraySerializer.Serialize(Of Replica)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.Replica)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.Replica.#ctor*
  commentId: Overload:System.Fabric.Query.Replica.#ctor
  isExternal: false
  name: Replica
  nameWithType: Replica.Replica
  fullName: System.Fabric.Query.Replica.Replica
- uid: System.Fabric.Query.ServiceKind
  commentId: T:System.Fabric.Query.ServiceKind
  parent: System.Fabric.Query
  isExternal: false
  name: ServiceKind
  nameWithType: ServiceKind
  fullName: System.Fabric.Query.ServiceKind
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Query.ServiceReplicaStatus
  commentId: T:System.Fabric.Query.ServiceReplicaStatus
  parent: System.Fabric.Query
  isExternal: false
  name: ServiceReplicaStatus
  nameWithType: ServiceReplicaStatus
  fullName: System.Fabric.Query.ServiceReplicaStatus
- uid: System.Fabric.Health.HealthState
  commentId: T:System.Fabric.Health.HealthState
  parent: System.Fabric.Health
  isExternal: false
  name: HealthState
  nameWithType: HealthState
  fullName: System.Fabric.Health.HealthState
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.Query.Replica.ServiceKind*
  commentId: Overload:System.Fabric.Query.Replica.ServiceKind
  isExternal: false
  name: ServiceKind
  nameWithType: Replica.ServiceKind
  fullName: System.Fabric.Query.Replica.ServiceKind
- uid: System.Fabric.Query.Replica.Id*
  commentId: Overload:System.Fabric.Query.Replica.Id
  isExternal: false
  name: Id
  nameWithType: Replica.Id
  fullName: System.Fabric.Query.Replica.Id
- uid: System.Fabric.Query.Replica.ReplicaStatus*
  commentId: Overload:System.Fabric.Query.Replica.ReplicaStatus
  isExternal: false
  name: ReplicaStatus
  nameWithType: Replica.ReplicaStatus
  fullName: System.Fabric.Query.Replica.ReplicaStatus
- uid: System.Fabric.Query.Replica.HealthState*
  commentId: Overload:System.Fabric.Query.Replica.HealthState
  isExternal: false
  name: HealthState
  nameWithType: Replica.HealthState
  fullName: System.Fabric.Query.Replica.HealthState
- uid: System.Fabric.Query.Replica.ReplicaAddress*
  commentId: Overload:System.Fabric.Query.Replica.ReplicaAddress
  isExternal: false
  name: ReplicaAddress
  nameWithType: Replica.ReplicaAddress
  fullName: System.Fabric.Query.Replica.ReplicaAddress
- uid: System.Fabric.Query.Replica.NodeName*
  commentId: Overload:System.Fabric.Query.Replica.NodeName
  isExternal: false
  name: NodeName
  nameWithType: Replica.NodeName
  fullName: System.Fabric.Query.Replica.NodeName
- uid: System.Fabric.Query.Replica.LastInBuildDuration*
  commentId: Overload:System.Fabric.Query.Replica.LastInBuildDuration
  isExternal: false
  name: LastInBuildDuration
  nameWithType: Replica.LastInBuildDuration
  fullName: System.Fabric.Query.Replica.LastInBuildDuration
- uid: System.Fabric.Query.Replica.LastInBuildDurationInSeconds*
  commentId: Overload:System.Fabric.Query.Replica.LastInBuildDurationInSeconds
  isExternal: false
  name: LastInBuildDurationInSeconds
  nameWithType: Replica.LastInBuildDurationInSeconds
  fullName: System.Fabric.Query.Replica.LastInBuildDurationInSeconds
