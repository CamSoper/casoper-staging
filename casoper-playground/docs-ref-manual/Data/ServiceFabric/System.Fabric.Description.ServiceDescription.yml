### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.ServiceDescription
  commentId: T:System.Fabric.Description.ServiceDescription
  id: ServiceDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.ServiceDescription.#ctor(System.Fabric.Description.ServiceDescription)
  - System.Fabric.Description.ServiceDescription.#ctor(System.Fabric.Description.ServiceDescriptionKind)
  - System.Fabric.Description.ServiceDescription.ApplicationName
  - System.Fabric.Description.ServiceDescription.Correlations
  - System.Fabric.Description.ServiceDescription.DefaultMoveCost
  - System.Fabric.Description.ServiceDescription.InitializationData
  - System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified
  - System.Fabric.Description.ServiceDescription.Kind
  - System.Fabric.Description.ServiceDescription.Metrics
  - System.Fabric.Description.ServiceDescription.PartitionSchemeDescription
  - System.Fabric.Description.ServiceDescription.PlacementConstraints
  - System.Fabric.Description.ServiceDescription.PlacementPolicies
  - System.Fabric.Description.ServiceDescription.ServiceName
  - System.Fabric.Description.ServiceDescription.ServiceTypeName
  langs:
  - csharp
  - vb
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.Fabric.Description.ServiceDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 20
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p> A ServiceDescription contains all of the information necessary to create a service. </p>\n"
  example: []
  syntax:
    content: >-
      [KnownType(typeof (StatelessServiceDescription))]

      [KnownType(typeof (StatefulServiceDescription))]

      public abstract class ServiceDescription
    content.vb: >-
      <KnownType(GetType(StatelessServiceDescription))>

      <KnownType(GetType(StatefulServiceDescription))>

      Public MustInherit Class ServiceDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.ServiceDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Description.StatelessServiceDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Description.StatefulServiceDescription
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Description.ServiceDescription.#ctor(System.Fabric.Description.ServiceDescriptionKind)
  commentId: M:System.Fabric.Description.ServiceDescription.#ctor(System.Fabric.Description.ServiceDescriptionKind)
  id: '#ctor(System.Fabric.Description.ServiceDescriptionKind)'
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: ServiceDescription(ServiceDescriptionKind)
  nameWithType: ServiceDescription.ServiceDescription(ServiceDescriptionKind)
  fullName: System.Fabric.Description.ServiceDescription.ServiceDescription(System.Fabric.Description.ServiceDescriptionKind)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initialize an instance of <xref href=\"System.Fabric.Description.ServiceDescription\" data-throw-if-not-resolved=\"false\"></xref> with service kind.</p>\n"
  example: []
  syntax:
    content: protected ServiceDescription(ServiceDescriptionKind kind)
    content.vb: Protected Sub New(kind As ServiceDescriptionKind)
    parameters:
    - id: kind
      type: System.Fabric.Description.ServiceDescriptionKind
      description: "\n<p>Describe the kind of service type.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Description.ServiceDescription.#ctor(System.Fabric.Description.ServiceDescription)
  commentId: M:System.Fabric.Description.ServiceDescription.#ctor(System.Fabric.Description.ServiceDescription)
  id: '#ctor(System.Fabric.Description.ServiceDescription)'
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: ServiceDescription(ServiceDescription)
  nameWithType: ServiceDescription.ServiceDescription(ServiceDescription)
  fullName: System.Fabric.Description.ServiceDescription.ServiceDescription(System.Fabric.Description.ServiceDescription)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 57
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>\nInstantiates a <xref href=\"System.Fabric.Description.ServiceDescription\" data-throw-if-not-resolved=\"false\"></xref> class with parameters from another \n<xref href=\"System.Fabric.Description.ServiceDescription\" data-throw-if-not-resolved=\"false\"></xref> object.\n</p>\n"
  example: []
  syntax:
    content: protected ServiceDescription(ServiceDescription other)
    content.vb: Protected Sub New(other As ServiceDescription)
    parameters:
    - id: other
      type: System.Fabric.Description.ServiceDescription
      description: "\n<p>The service description from which parameters are copied.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Description.ServiceDescription.Kind
  commentId: P:System.Fabric.Description.ServiceDescription.Kind
  id: Kind
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: ServiceDescription.Kind
  fullName: System.Fabric.Description.ServiceDescription.Kind
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Kind
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 69
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Describes the service type (i.e., Stateful, Stateless and etc)</p>\n"
  example: []
  syntax:
    content: public ServiceDescriptionKind Kind { get; }
    content.vb: Public ReadOnly Property Kind As ServiceDescriptionKind
    parameters: []
    return:
      type: System.Fabric.Description.ServiceDescriptionKind
      description: "\n<p>Returns <xref href=\"System.Fabric.Description.ServiceDescriptionKind\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.Kind*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ServiceDescription.PlacementConstraints
  commentId: P:System.Fabric.Description.ServiceDescription.PlacementConstraints
  id: PlacementConstraints
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: PlacementConstraints
  nameWithType: ServiceDescription.PlacementConstraints
  fullName: System.Fabric.Description.ServiceDescription.PlacementConstraints
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PlacementConstraints
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 87
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p> Gets or sets the placement constraints for this service. </p>\n"
  remarks: "\n<p>Placement Constraints are Boolean statements which allow services to select for particular node properties (and the values of \nthose properties) in order to control where it is legal to place them.  Node properties are key value pairs that define some additional \nmetadata about a node, usually related to the hardware capabilities of the node.  Examples of hardware characteristics that could be exposed \nas node properties are “HasDisk”, “MemorySize”, “StorageSize”, “NumberOfCores” etc.  When deploying a service, an administrator can define \nthe properties that the service cares about as well as simple Boolean operators which define requirements for the values of those \nproperties.  Ex: (HasDisk==true &amp;&amp; MemorySize&gt;=2048).  During runtime, Service Fabric Load Balancing will only place services \non nodes that have properties with values which match those required by the service.</p>\n"
  example: []
  syntax:
    content: public string PlacementConstraints { get; set; }
    content.vb: Public Property PlacementConstraints As String
    parameters: []
    return:
      type: System.String
      description: "\n<p> The placement constraints. </p>\n"
  overload: System.Fabric.Description.ServiceDescription.PlacementConstraints*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceDescription.ServiceTypeName
  commentId: P:System.Fabric.Description.ServiceDescription.ServiceTypeName
  id: ServiceTypeName
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: ServiceTypeName
  nameWithType: ServiceDescription.ServiceTypeName
  fullName: System.Fabric.Description.ServiceDescription.ServiceTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 96
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Name of the service type.</p>\n"
  example: []
  syntax:
    content: public string ServiceTypeName { get; set; }
    content.vb: Public Property ServiceTypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.ServiceTypeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceDescription.ApplicationName
  commentId: P:System.Fabric.Description.ServiceDescription.ApplicationName
  id: ApplicationName
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: ServiceDescription.ApplicationName
  fullName: System.Fabric.Description.ServiceDescription.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 108
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the name of the application.</p>\n"
  remarks: "\n<p>Remarks:This is the unique name of an application and is used to group services together for management. The scheme must \nbe \"fabric://\" and the application name must be a prefix of the service name.</p>\n"
  example: []
  syntax:
    content: public Uri ApplicationName { get; set; }
    content.vb: Public Property ApplicationName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>Returns <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.ApplicationName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceDescription.ServiceName
  commentId: P:System.Fabric.Description.ServiceDescription.ServiceName
  id: ServiceName
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: ServiceDescription.ServiceName
  fullName: System.Fabric.Description.ServiceDescription.ServiceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceName
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 116
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>URI name of the service.</p>\n"
  example: []
  syntax:
    content: public Uri ServiceName { get; set; }
    content.vb: Public Property ServiceName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>Returns <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.ServiceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceDescription.PartitionSchemeDescription
  commentId: P:System.Fabric.Description.ServiceDescription.PartitionSchemeDescription
  id: PartitionSchemeDescription
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: PartitionSchemeDescription
  nameWithType: ServiceDescription.PartitionSchemeDescription
  fullName: System.Fabric.Description.ServiceDescription.PartitionSchemeDescription
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionSchemeDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 124
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Describe the partition scheme to be used for the service.</p>\n"
  example: []
  syntax:
    content: public PartitionSchemeDescription PartitionSchemeDescription { get; set; }
    content.vb: Public Property PartitionSchemeDescription As PartitionSchemeDescription
    parameters: []
    return:
      type: System.Fabric.Description.PartitionSchemeDescription
      description: "\n<p>Returns <xref href=\"System.Fabric.Description.PartitionSchemeDescription\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.PartitionSchemeDescription*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceDescription.InitializationData
  commentId: P:System.Fabric.Description.ServiceDescription.InitializationData
  id: InitializationData
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: InitializationData
  nameWithType: ServiceDescription.InitializationData
  fullName: System.Fabric.Description.ServiceDescription.InitializationData
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InitializationData
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 133
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p> Gets or sets the initialization data that will be passed to service instances or replicas when they are created. </p>\n"
  example: []
  syntax:
    content: public byte[] InitializationData { get; set; }
    content.vb: Public Property InitializationData As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: "\n<p>Returns an array of <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.InitializationData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceDescription.Metrics
  commentId: P:System.Fabric.Description.ServiceDescription.Metrics
  id: Metrics
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: Metrics
  nameWithType: ServiceDescription.Metrics
  fullName: System.Fabric.Description.ServiceDescription.Metrics
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Metrics
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 143
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the ServiceLoadMetricDescriptionCollection for this service.  The LoadMetricDescriptionCollection contains the \n<xref href=\"System.Fabric.Description.ServiceLoadMetricDescription\" data-throw-if-not-resolved=\"false\"></xref>s relevant to this service</p>\n"
  example: []
  syntax:
    content: public KeyedCollection<string, ServiceLoadMetricDescription> Metrics { get; set; }
    content.vb: Public Property Metrics As KeyedCollection(Of String, ServiceLoadMetricDescription)
    parameters: []
    return:
      type: System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceLoadMetricDescription}
      description: "\n<p>Returns a collection of <xref href=\"System.Fabric.Description.ServiceLoadMetricDescription\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.Metrics*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceDescription.Correlations
  commentId: P:System.Fabric.Description.ServiceDescription.Correlations
  id: Correlations
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: Correlations
  nameWithType: ServiceDescription.Correlations
  fullName: System.Fabric.Description.ServiceDescription.Correlations
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Correlations
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 163
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>A list that describes the correlation of the service with other services.</p>\n"
  example: []
  syntax:
    content: public IList<ServiceCorrelationDescription> Correlations { get; }
    content.vb: Public ReadOnly Property Correlations As IList(Of ServiceCorrelationDescription)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Description.ServiceCorrelationDescription}
      description: "\n<p>Returns <xref href=\"System.Collections.Generic.IList%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.Correlations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ServiceDescription.PlacementPolicies
  commentId: P:System.Fabric.Description.ServiceDescription.PlacementPolicies
  id: PlacementPolicies
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: PlacementPolicies
  nameWithType: ServiceDescription.PlacementPolicies
  fullName: System.Fabric.Description.ServiceDescription.PlacementPolicies
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PlacementPolicies
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 181
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p> \n Gets the list of ServicePlacementPolicyDescriptions belonging to the ServiceDescription.\n</p>\n"
  example: []
  syntax:
    content: public IList<ServicePlacementPolicyDescription> PlacementPolicies { get; }
    content.vb: Public ReadOnly Property PlacementPolicies As IList(Of ServicePlacementPolicyDescription)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Description.ServicePlacementPolicyDescription}
      description: "\n<p>The list of ServicePlacementPolicyDescriptions belonging to the ServiceDescription.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.PlacementPolicies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified
  commentId: P:System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified
  id: IsDefaultMoveCostSpecified
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: IsDefaultMoveCostSpecified
  nameWithType: ServiceDescription.IsDefaultMoveCostSpecified
  fullName: System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsDefaultMoveCostSpecified
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 199
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p> \nGets whether a Default MoveCost is specified for a ServiceDescription.\n</p>\n"
  example: []
  syntax:
    content: public bool IsDefaultMoveCostSpecified { get; }
    content.vb: Public ReadOnly Property IsDefaultMoveCostSpecified As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>A flag indicating whether a Default MoveCost is specified for a ServiceDescription.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ServiceDescription.DefaultMoveCost
  commentId: P:System.Fabric.Description.ServiceDescription.DefaultMoveCost
  id: DefaultMoveCost
  parent: System.Fabric.Description.ServiceDescription
  langs:
  - csharp
  - vb
  name: DefaultMoveCost
  nameWithType: ServiceDescription.DefaultMoveCost
  fullName: System.Fabric.Description.ServiceDescription.DefaultMoveCost
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DefaultMoveCost
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceDescription.cs
    startLine: 217
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p> \nGets or sets the DefaultMoveCost of a service in a ServiceDescription\n</p>\n"
  example: []
  syntax:
    content: public MoveCost DefaultMoveCost { get; set; }
    content.vb: Public Property DefaultMoveCost As MoveCost
    parameters: []
    return:
      type: System.Fabric.MoveCost
      description: "\n<p> The value that the default MoveCost for the service should be set to for a service in its ServiceDescription.</p>\n"
  overload: System.Fabric.Description.ServiceDescription.DefaultMoveCost*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ServiceDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceDescription>()
  nameWithType: ByteArraySerializer.Serialize<ServiceDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ServiceDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ServiceDescription)()
  name.vb: Serialize(Of ServiceDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceDescription>
    nameWithType: ByteArraySerializer.Serialize<ServiceDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ServiceDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceDescription)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ServiceDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.ServiceDescription
  commentId: T:System.Fabric.Description.ServiceDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.Fabric.Description.ServiceDescription
- uid: System.Fabric.Description.ServiceDescription.#ctor*
  commentId: Overload:System.Fabric.Description.ServiceDescription.#ctor
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription.ServiceDescription
  fullName: System.Fabric.Description.ServiceDescription.ServiceDescription
- uid: System.Fabric.Description.ServiceDescriptionKind
  commentId: T:System.Fabric.Description.ServiceDescriptionKind
  parent: System.Fabric.Description
  isExternal: false
  name: ServiceDescriptionKind
  nameWithType: ServiceDescriptionKind
  fullName: System.Fabric.Description.ServiceDescriptionKind
- uid: System.Fabric.Description.ServiceDescription.Kind*
  commentId: Overload:System.Fabric.Description.ServiceDescription.Kind
  isExternal: false
  name: Kind
  nameWithType: ServiceDescription.Kind
  fullName: System.Fabric.Description.ServiceDescription.Kind
- uid: System.Fabric.Description.ServiceDescription.PlacementConstraints*
  commentId: Overload:System.Fabric.Description.ServiceDescription.PlacementConstraints
  isExternal: false
  name: PlacementConstraints
  nameWithType: ServiceDescription.PlacementConstraints
  fullName: System.Fabric.Description.ServiceDescription.PlacementConstraints
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Description.ServiceDescription.ServiceTypeName*
  commentId: Overload:System.Fabric.Description.ServiceDescription.ServiceTypeName
  isExternal: false
  name: ServiceTypeName
  nameWithType: ServiceDescription.ServiceTypeName
  fullName: System.Fabric.Description.ServiceDescription.ServiceTypeName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Description.ServiceDescription.ApplicationName*
  commentId: Overload:System.Fabric.Description.ServiceDescription.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: ServiceDescription.ApplicationName
  fullName: System.Fabric.Description.ServiceDescription.ApplicationName
- uid: System.Fabric.Description.ServiceDescription.ServiceName*
  commentId: Overload:System.Fabric.Description.ServiceDescription.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: ServiceDescription.ServiceName
  fullName: System.Fabric.Description.ServiceDescription.ServiceName
- uid: System.Fabric.Description.PartitionSchemeDescription
  commentId: T:System.Fabric.Description.PartitionSchemeDescription
  parent: System.Fabric.Description
  isExternal: false
  name: PartitionSchemeDescription
  nameWithType: PartitionSchemeDescription
  fullName: System.Fabric.Description.PartitionSchemeDescription
- uid: System.Fabric.Description.ServiceDescription.PartitionSchemeDescription*
  commentId: Overload:System.Fabric.Description.ServiceDescription.PartitionSchemeDescription
  isExternal: false
  name: PartitionSchemeDescription
  nameWithType: ServiceDescription.PartitionSchemeDescription
  fullName: System.Fabric.Description.ServiceDescription.PartitionSchemeDescription
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Fabric.Description.ServiceDescription.InitializationData*
  commentId: Overload:System.Fabric.Description.ServiceDescription.InitializationData
  isExternal: false
  name: InitializationData
  nameWithType: ServiceDescription.InitializationData
  fullName: System.Fabric.Description.ServiceDescription.InitializationData
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Fabric.Description.ServiceLoadMetricDescription
  commentId: T:System.Fabric.Description.ServiceLoadMetricDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ServiceLoadMetricDescription
  nameWithType: ServiceLoadMetricDescription
  fullName: System.Fabric.Description.ServiceLoadMetricDescription
- uid: System.Fabric.Description.ServiceDescription.Metrics*
  commentId: Overload:System.Fabric.Description.ServiceDescription.Metrics
  isExternal: false
  name: Metrics
  nameWithType: ServiceDescription.Metrics
  fullName: System.Fabric.Description.ServiceDescription.Metrics
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceLoadMetricDescription}
  commentId: T:System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceLoadMetricDescription}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.KeyedCollection`2
  name: KeyedCollection<String, ServiceLoadMetricDescription>
  nameWithType: KeyedCollection<String, ServiceLoadMetricDescription>
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, System.Fabric.Description.ServiceLoadMetricDescription>
  nameWithType.vb: KeyedCollection(Of String, ServiceLoadMetricDescription)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, System.Fabric.Description.ServiceLoadMetricDescription)
  name.vb: KeyedCollection(Of String, ServiceLoadMetricDescription)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Description.ServiceLoadMetricDescription
    name: ServiceLoadMetricDescription
    nameWithType: ServiceLoadMetricDescription
    fullName: System.Fabric.Description.ServiceLoadMetricDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Description.ServiceLoadMetricDescription
    name: ServiceLoadMetricDescription
    nameWithType: ServiceLoadMetricDescription
    fullName: System.Fabric.Description.ServiceLoadMetricDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2
  commentId: T:System.Collections.ObjectModel.KeyedCollection`2
  isExternal: true
  name: KeyedCollection<TKey, TItem>
  nameWithType: KeyedCollection<TKey, TItem>
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>
  nameWithType.vb: KeyedCollection(Of TKey, TItem)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem)
  name.vb: KeyedCollection(Of TKey, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ServiceDescription.Correlations*
  commentId: Overload:System.Fabric.Description.ServiceDescription.Correlations
  isExternal: false
  name: Correlations
  nameWithType: ServiceDescription.Correlations
  fullName: System.Fabric.Description.ServiceDescription.Correlations
- uid: System.Collections.Generic.IList{System.Fabric.Description.ServiceCorrelationDescription}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Description.ServiceCorrelationDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ServiceCorrelationDescription>
  nameWithType: IList<ServiceCorrelationDescription>
  fullName: System.Collections.Generic.IList<System.Fabric.Description.ServiceCorrelationDescription>
  nameWithType.vb: IList(Of ServiceCorrelationDescription)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Description.ServiceCorrelationDescription)
  name.vb: IList(Of ServiceCorrelationDescription)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Description.ServiceCorrelationDescription
    name: ServiceCorrelationDescription
    nameWithType: ServiceCorrelationDescription
    fullName: System.Fabric.Description.ServiceCorrelationDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Description.ServiceCorrelationDescription
    name: ServiceCorrelationDescription
    nameWithType: ServiceCorrelationDescription
    fullName: System.Fabric.Description.ServiceCorrelationDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.Description.ServiceDescription.PlacementPolicies*
  commentId: Overload:System.Fabric.Description.ServiceDescription.PlacementPolicies
  isExternal: false
  name: PlacementPolicies
  nameWithType: ServiceDescription.PlacementPolicies
  fullName: System.Fabric.Description.ServiceDescription.PlacementPolicies
- uid: System.Collections.Generic.IList{System.Fabric.Description.ServicePlacementPolicyDescription}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Description.ServicePlacementPolicyDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ServicePlacementPolicyDescription>
  nameWithType: IList<ServicePlacementPolicyDescription>
  fullName: System.Collections.Generic.IList<System.Fabric.Description.ServicePlacementPolicyDescription>
  nameWithType.vb: IList(Of ServicePlacementPolicyDescription)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Description.ServicePlacementPolicyDescription)
  name.vb: IList(Of ServicePlacementPolicyDescription)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Description.ServicePlacementPolicyDescription
    name: ServicePlacementPolicyDescription
    nameWithType: ServicePlacementPolicyDescription
    fullName: System.Fabric.Description.ServicePlacementPolicyDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Description.ServicePlacementPolicyDescription
    name: ServicePlacementPolicyDescription
    nameWithType: ServicePlacementPolicyDescription
    fullName: System.Fabric.Description.ServicePlacementPolicyDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified*
  commentId: Overload:System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified
  isExternal: false
  name: IsDefaultMoveCostSpecified
  nameWithType: ServiceDescription.IsDefaultMoveCostSpecified
  fullName: System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Description.ServiceDescription.DefaultMoveCost*
  commentId: Overload:System.Fabric.Description.ServiceDescription.DefaultMoveCost
  isExternal: false
  name: DefaultMoveCost
  nameWithType: ServiceDescription.DefaultMoveCost
  fullName: System.Fabric.Description.ServiceDescription.DefaultMoveCost
- uid: System.Fabric.MoveCost
  commentId: T:System.Fabric.MoveCost
  parent: System.Fabric
  isExternal: false
  name: MoveCost
  nameWithType: MoveCost
  fullName: System.Fabric.MoveCost
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
