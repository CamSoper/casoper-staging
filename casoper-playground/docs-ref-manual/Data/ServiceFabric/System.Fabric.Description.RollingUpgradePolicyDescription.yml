### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.RollingUpgradePolicyDescription
  commentId: T:System.Fabric.Description.RollingUpgradePolicyDescription
  id: RollingUpgradePolicyDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.RollingUpgradePolicyDescription.#ctor
  - System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
  - System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode
  - System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  langs:
  - csharp
  - vb
  name: RollingUpgradePolicyDescription
  nameWithType: RollingUpgradePolicyDescription
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradePolicyDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RollingUpgradePolicyDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradePolicyDescription.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Description of the rolling upgrade policy.</p>\n"
  example: []
  syntax:
    content: 'public class RollingUpgradePolicyDescription : UpgradePolicyDescription'
    content.vb: >-
      Public Class RollingUpgradePolicyDescription
          Inherits UpgradePolicyDescription
  inheritance:
  - System.Object
  - System.Fabric.Description.UpgradePolicyDescription
  inheritedMembers:
  - System.Fabric.Description.UpgradePolicyDescription.Kind
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.RollingUpgradePolicyDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.#ctor
  commentId: M:System.Fabric.Description.RollingUpgradePolicyDescription.#ctor
  id: '#ctor'
  parent: System.Fabric.Description.RollingUpgradePolicyDescription
  langs:
  - csharp
  - vb
  name: RollingUpgradePolicyDescription()
  nameWithType: RollingUpgradePolicyDescription.RollingUpgradePolicyDescription()
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.RollingUpgradePolicyDescription()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradePolicyDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradePolicyDescription.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Description.RollingUpgradePolicyDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public RollingUpgradePolicyDescription()
    content.vb: Public Sub New
  overload: System.Fabric.Description.RollingUpgradePolicyDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode
  commentId: P:System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode
  id: UpgradeMode
  parent: System.Fabric.Description.RollingUpgradePolicyDescription
  langs:
  - csharp
  - vb
  name: UpgradeMode
  nameWithType: RollingUpgradePolicyDescription.UpgradeMode
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradePolicyDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeMode
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradePolicyDescription.cs
    startLine: 34
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Type: <xref href=\"System.Fabric.RollingUpgradeMode\" data-throw-if-not-resolved=\"false\"></xref>Specifies the types of upgrade (<xref href=\"System.Fabric.RollingUpgradeMode\" data-throw-if-not-resolved=\"false\"></xref>) to be \nused for upgrading the application instance. </p>\n"
  example: []
  syntax:
    content: public RollingUpgradeMode UpgradeMode { get; set; }
    content.vb: Public Property UpgradeMode As RollingUpgradeMode
    parameters: []
    return:
      type: System.Fabric.RollingUpgradeMode
      description: "\n<p>Returns <xref href=\"System.Fabric.RollingUpgradeMode\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
  commentId: P:System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
  id: ForceRestart
  parent: System.Fabric.Description.RollingUpgradePolicyDescription
  langs:
  - csharp
  - vb
  name: ForceRestart
  nameWithType: RollingUpgradePolicyDescription.ForceRestart
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradePolicyDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ForceRestart
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradePolicyDescription.cs
    startLine: 44
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies if the service host should be restarted even when there are no code package changes as part of the upgrade. Set this flag to \ntrue if the service cannot dynamically accept config or data package changes.</p>\n"
  example: []
  syntax:
    content: public bool ForceRestart { get; set; }
    content.vb: Public Property ForceRestart As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  commentId: P:System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  id: UpgradeReplicaSetCheckTimeout
  parent: System.Fabric.Description.RollingUpgradePolicyDescription
  langs:
  - csharp
  - vb
  name: UpgradeReplicaSetCheckTimeout
  nameWithType: RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradePolicyDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeReplicaSetCheckTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradePolicyDescription.cs
    startLine: 54
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies the duration Service Fabric should wait before upgrading the services of an application instance\nin an upgrade domain if the services do not have quorum.</p>\n"
  example: []
  syntax:
    content: public TimeSpan UpgradeReplicaSetCheckTimeout { get; set; }
    content.vb: Public Property UpgradeReplicaSetCheckTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The duration Service Fabric should wait before upgrading the services of an application instance\nin an upgrade domain if the services do not have quorum.</p>\n"
  overload: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Description.UpgradePolicyDescription
  commentId: T:System.Fabric.Description.UpgradePolicyDescription
  parent: System.Fabric.Description
  isExternal: false
  name: UpgradePolicyDescription
  nameWithType: UpgradePolicyDescription
  fullName: System.Fabric.Description.UpgradePolicyDescription
- uid: System.Fabric.Description.UpgradePolicyDescription.Kind
  commentId: P:System.Fabric.Description.UpgradePolicyDescription.Kind
  parent: System.Fabric.Description.UpgradePolicyDescription
  isExternal: false
  name: Kind
  nameWithType: UpgradePolicyDescription.Kind
  fullName: System.Fabric.Description.UpgradePolicyDescription.Kind
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<RollingUpgradePolicyDescription>()
  nameWithType: ByteArraySerializer.Serialize<RollingUpgradePolicyDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.RollingUpgradePolicyDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of RollingUpgradePolicyDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.RollingUpgradePolicyDescription)()
  name.vb: Serialize(Of RollingUpgradePolicyDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<RollingUpgradePolicyDescription>
    nameWithType: ByteArraySerializer.Serialize<RollingUpgradePolicyDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.RollingUpgradePolicyDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of RollingUpgradePolicyDescription)
    nameWithType: ByteArraySerializer.Serialize(Of RollingUpgradePolicyDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.RollingUpgradePolicyDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.RollingUpgradePolicyDescription
  commentId: T:System.Fabric.Description.RollingUpgradePolicyDescription
  parent: System.Fabric.Description
  isExternal: false
  name: RollingUpgradePolicyDescription
  nameWithType: RollingUpgradePolicyDescription
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.#ctor*
  commentId: Overload:System.Fabric.Description.RollingUpgradePolicyDescription.#ctor
  isExternal: false
  name: RollingUpgradePolicyDescription
  nameWithType: RollingUpgradePolicyDescription.RollingUpgradePolicyDescription
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.RollingUpgradePolicyDescription
- uid: System.Fabric.RollingUpgradeMode
  commentId: T:System.Fabric.RollingUpgradeMode
  parent: System.Fabric
  isExternal: false
  name: RollingUpgradeMode
  nameWithType: RollingUpgradeMode
  fullName: System.Fabric.RollingUpgradeMode
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode*
  commentId: Overload:System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode
  isExternal: false
  name: UpgradeMode
  nameWithType: RollingUpgradePolicyDescription.UpgradeMode
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart*
  commentId: Overload:System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
  isExternal: false
  name: ForceRestart
  nameWithType: RollingUpgradePolicyDescription.ForceRestart
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout*
  commentId: Overload:System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  isExternal: false
  name: UpgradeReplicaSetCheckTimeout
  nameWithType: RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
