### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  id: MethodDispatcherBase
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder
  children:
  - Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWith(System.Threading.Tasks.Task)
  - Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWithResult``1(System.Int32,System.Threading.Tasks.Task{``0})
  - Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.CreateResponseBody(System.Int32,System.Object)
  - Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.Dispatch(System.Object,System.Int32,System.Object)
  - Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.DispatchAsync(System.Object,System.Int32,System.Object,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.GetMethodName(System.Int32)
  - Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.InterfaceId
  - Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatch(System.Int32,System.Object,System.Object)
  - Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatchAsync(System.Int32,System.Object,System.Object,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: MethodDispatcherBase
  nameWithType: MethodDispatcherBase
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MethodDispatcherBase
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nThe base class used by remoting code generator to generate the type that dispatches requests from the client to the \nright interface and method of the remoted object.\n"
  example: []
  syntax:
    content: 'public abstract class MethodDispatcherBase : IMethodDispatcher'
    content.vb: >-
      Public MustInherit Class MethodDispatcherBase
          Implements IMethodDispatcher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.InterfaceId
  commentId: P:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.InterfaceId
  id: InterfaceId
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  langs:
  - csharp
  - vb
  name: InterfaceId
  nameWithType: MethodDispatcherBase.InterfaceId
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.InterfaceId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InterfaceId
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
    startLine: 23
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nInterface Id is used to identify remoting Interfaces.\n"
  example: []
  syntax:
    content: public int InterfaceId { get; }
    content.vb: Public ReadOnly Property InterfaceId As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.InterfaceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWithResult``1(System.Int32,System.Threading.Tasks.Task{``0})
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWithResult``1(System.Int32,System.Threading.Tasks.Task{``0})
  id: ContinueWithResult``1(System.Int32,System.Threading.Tasks.Task{``0})
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  langs:
  - csharp
  - vb
  name: ContinueWithResult<TRetval>(Int32, Task<TRetval>)
  nameWithType: MethodDispatcherBase.ContinueWithResult<TRetval>(Int32, Task<TRetval>)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWithResult<TRetval>(System.Int32, System.Threading.Tasks.Task<TRetval>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ContinueWithResult
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
    startLine: 37
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nInternal - used by Service remoting\n"
  example: []
  syntax:
    content: protected Task<object> ContinueWithResult<TRetval>(int methodId, Task<TRetval> task)
    content.vb: Protected Function ContinueWithResult(Of TRetval)(methodId As Integer, task As Task(Of TRetval)) As Task(Of Object)
    parameters:
    - id: methodId
      type: System.Int32
      description: method id
    - id: task
      type: System.Threading.Tasks.Task{{TRetval}}
      description: continuation task
    typeParameters:
    - id: TRetval
      description: Return value
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWithResult*
  nameWithType.vb: MethodDispatcherBase.ContinueWithResult(Of TRetval)(Int32, Task(Of TRetval))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWithResult(Of TRetval)(System.Int32, System.Threading.Tasks.Task(Of TRetval))
  name.vb: ContinueWithResult(Of TRetval)(Int32, Task(Of TRetval))
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWith(System.Threading.Tasks.Task)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWith(System.Threading.Tasks.Task)
  id: ContinueWith(System.Threading.Tasks.Task)
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  langs:
  - csharp
  - vb
  name: ContinueWith(Task)
  nameWithType: MethodDispatcherBase.ContinueWith(Task)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWith(System.Threading.Tasks.Task)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ContinueWith
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
    startLine: 49
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nInternal - used by Service remoting\n"
  example: []
  syntax:
    content: protected Task<object> ContinueWith(Task task)
    content.vb: Protected Function ContinueWith(task As Task) As Task(Of Object)
    parameters:
    - id: task
      type: System.Threading.Tasks.Task
      description: continuation task
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWith*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatchAsync(System.Int32,System.Object,System.Object,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatchAsync(System.Int32,System.Object,System.Object,System.Threading.CancellationToken)
  id: OnDispatchAsync(System.Int32,System.Object,System.Object,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  langs:
  - csharp
  - vb
  name: OnDispatchAsync(Int32, Object, Object, CancellationToken)
  nameWithType: MethodDispatcherBase.OnDispatchAsync(Int32, Object, Object, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatchAsync(System.Int32, System.Object, System.Object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnDispatchAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
    startLine: 72
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nThis method is implemented by the generated method dispatcher to dispatch request to the specified methodId of the \ninterface implemented by the remoted object.\n"
  example: []
  syntax:
    content: protected abstract Task<object> OnDispatchAsync(int methodId, object remotedObject, object requestBody, CancellationToken cancellationToken)
    content.vb: Protected MustOverride Function OnDispatchAsync(methodId As Integer, remotedObject As Object, requestBody As Object, cancellationToken As CancellationToken) As Task(Of Object)
    parameters:
    - id: methodId
      type: System.Int32
      description: Id of the method.
    - id: remotedObject
      type: System.Object
      description: The remoted object instance.
    - id: requestBody
      type: System.Object
      description: Request body
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. \nThe result of the task is the return value from the method.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatchAsync*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatch(System.Int32,System.Object,System.Object)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatch(System.Int32,System.Object,System.Object)
  id: OnDispatch(System.Int32,System.Object,System.Object)
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  langs:
  - csharp
  - vb
  name: OnDispatch(Int32, Object, Object)
  nameWithType: MethodDispatcherBase.OnDispatch(Int32, Object, Object)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatch(System.Int32, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnDispatch
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
    startLine: 81
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nThis method is implemented by the generated method dispatcher to dispatch one way messages to the specified methodId of the \ninterface implemented by the remoted object.\n"
  example: []
  syntax:
    content: protected abstract void OnDispatch(int methodId, object remotedObject, object messageBody)
    content.vb: Protected MustOverride Sub OnDispatch(methodId As Integer, remotedObject As Object, messageBody As Object)
    parameters:
    - id: methodId
      type: System.Int32
      description: Id of the method.
    - id: remotedObject
      type: System.Object
      description: The remoted object instance.
    - id: messageBody
      type: System.Object
      description: message body
  overload: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatch*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.CreateResponseBody(System.Int32,System.Object)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.CreateResponseBody(System.Int32,System.Object)
  id: CreateResponseBody(System.Int32,System.Object)
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  langs:
  - csharp
  - vb
  name: CreateResponseBody(Int32, Object)
  nameWithType: MethodDispatcherBase.CreateResponseBody(Int32, Object)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.CreateResponseBody(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateResponseBody
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
    startLine: 90
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nThis method is implemented by the generated method dispatcher to create the response from the specified return value \nas a result of dispatching the method to the remoted object. \n"
  example: []
  syntax:
    content: protected abstract object CreateResponseBody(int methodId, object retval)
    content.vb: Protected MustOverride Function CreateResponseBody(methodId As Integer, retval As Object) As Object
    parameters:
    - id: methodId
      type: System.Int32
      description: Id of the method.
    - id: retval
      type: System.Object
      description: The returned value from the method.
    return:
      type: System.Object
      description: A <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the response body to be sent back to the client.
  overload: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.CreateResponseBody*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.DispatchAsync(System.Object,System.Int32,System.Object,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.DispatchAsync(System.Object,System.Int32,System.Object,System.Threading.CancellationToken)
  id: DispatchAsync(System.Object,System.Int32,System.Object,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  langs:
  - csharp
  - vb
  name: DispatchAsync(Object, Int32, Object, CancellationToken)
  nameWithType: MethodDispatcherBase.DispatchAsync(Object, Int32, Object, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.DispatchAsync(System.Object, System.Int32, System.Object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DispatchAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
    startLine: 111
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nThis method is used to dispatch request to the specified methodId of the \ninterface implemented by the remoted object.\n"
  example: []
  syntax:
    content: public Task<object> DispatchAsync(object objectImplementation, int methodId, object requestBody, CancellationToken cancellationToken)
    content.vb: Public Function DispatchAsync(objectImplementation As Object, methodId As Integer, requestBody As Object, cancellationToken As CancellationToken) As Task(Of Object)
    parameters:
    - id: objectImplementation
      type: System.Object
      description: ''
    - id: methodId
      type: System.Int32
      description: ''
    - id: requestBody
      type: System.Object
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: ''
  overload: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.DispatchAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.Dispatch(System.Object,System.Int32,System.Object)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.Dispatch(System.Object,System.Int32,System.Object)
  id: Dispatch(System.Object,System.Int32,System.Object)
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  langs:
  - csharp
  - vb
  name: Dispatch(Object, Int32, Object)
  nameWithType: MethodDispatcherBase.Dispatch(Object, Int32, Object)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.Dispatch(System.Object, System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Dispatch
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
    startLine: 137
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\nThis method is used to dispatch one way messages to the specified methodId of the \ninterface implemented by the remoted object.\n"
  example: []
  syntax:
    content: public void Dispatch(object objectImplementation, int methodId, object messageBody)
    content.vb: Public Sub Dispatch(objectImplementation As Object, methodId As Integer, messageBody As Object)
    parameters:
    - id: objectImplementation
      type: System.Object
      description: ''
    - id: methodId
      type: System.Int32
      description: ''
    - id: messageBody
      type: System.Object
      description: ''
  overload: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.Dispatch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.GetMethodName(System.Int32)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.GetMethodName(System.Int32)
  id: GetMethodName(System.Int32)
  parent: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase
  langs:
  - csharp
  - vb
  name: GetMethodName(Int32)
  nameWithType: MethodDispatcherBase.GetMethodName(Int32)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.GetMethodName(System.Int32)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetMethodName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Builder/MethodDispatcherBase.cs
    startLine: 147
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Builder
  summary: "\n\n"
  example: []
  syntax:
    content: public string GetMethodName(int methodId)
    content.vb: Public Function GetMethodName(methodId As Integer) As String
    parameters:
    - id: methodId
      type: System.Int32
      description: ''
    return:
      type: System.String
      description: ''
  overload: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.GetMethodName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Builder
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Builder
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Builder
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<MethodDispatcherBase>()
  nameWithType: ByteArraySerializer.Serialize<MethodDispatcherBase>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of MethodDispatcherBase)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase)()
  name.vb: Serialize(Of MethodDispatcherBase)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<MethodDispatcherBase>
    nameWithType: ByteArraySerializer.Serialize<MethodDispatcherBase>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of MethodDispatcherBase)
    nameWithType: ByteArraySerializer.Serialize(Of MethodDispatcherBase)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.InterfaceId*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.InterfaceId
  isExternal: false
  name: InterfaceId
  nameWithType: MethodDispatcherBase.InterfaceId
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.InterfaceId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWithResult*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWithResult
  isExternal: false
  name: ContinueWithResult<TRetval>
  nameWithType: MethodDispatcherBase.ContinueWithResult<TRetval>
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWithResult<TRetval>
  nameWithType.vb: MethodDispatcherBase.ContinueWithResult(Of TRetval)
  fullname.vb: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWithResult(Of TRetval)
  name.vb: ContinueWithResult(Of TRetval)
- uid: System.Threading.Tasks.Task{{TRetval}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TRetval>
  nameWithType: Task<TRetval>
  fullName: System.Threading.Tasks.Task<TRetval>
  nameWithType.vb: Task(Of TRetval)
  fullname.vb: System.Threading.Tasks.Task(Of TRetval)
  name.vb: Task(Of TRetval)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRetval
    nameWithType: TRetval
    fullName: TRetval
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRetval
    nameWithType: TRetval
    fullName: TRetval
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Object}
  commentId: T:System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  nameWithType.vb: Task(Of Object)
  fullname.vb: System.Threading.Tasks.Task(Of System.Object)
  name.vb: Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWith*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWith
  isExternal: false
  name: ContinueWith
  nameWithType: MethodDispatcherBase.ContinueWith
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.ContinueWith
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatchAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatchAsync
  isExternal: false
  name: OnDispatchAsync
  nameWithType: MethodDispatcherBase.OnDispatchAsync
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatchAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatch*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatch
  isExternal: false
  name: OnDispatch
  nameWithType: MethodDispatcherBase.OnDispatch
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.OnDispatch
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.CreateResponseBody*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.CreateResponseBody
  isExternal: false
  name: CreateResponseBody
  nameWithType: MethodDispatcherBase.CreateResponseBody
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.CreateResponseBody
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.DispatchAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.DispatchAsync
  isExternal: false
  name: DispatchAsync
  nameWithType: MethodDispatcherBase.DispatchAsync
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.DispatchAsync
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.Dispatch*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.Dispatch
  isExternal: false
  name: Dispatch
  nameWithType: MethodDispatcherBase.Dispatch
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.Dispatch
- uid: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.GetMethodName*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.GetMethodName
  isExternal: false
  name: GetMethodName
  nameWithType: MethodDispatcherBase.GetMethodName
  fullName: Microsoft.ServiceFabric.Services.Remoting.Builder.MethodDispatcherBase.GetMethodName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
