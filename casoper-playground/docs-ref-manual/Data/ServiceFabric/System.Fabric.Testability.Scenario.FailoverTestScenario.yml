### YamlMime:ManagedReference
items:
- uid: System.Fabric.Testability.Scenario.FailoverTestScenario
  commentId: T:System.Fabric.Testability.Scenario.FailoverTestScenario
  id: FailoverTestScenario
  parent: System.Fabric.Testability.Scenario
  children:
  - System.Fabric.Testability.Scenario.FailoverTestScenario.#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.FailoverTestScenarioParameters)
  - System.Fabric.Testability.Scenario.FailoverTestScenario.OnDispose(System.Boolean)
  - System.Fabric.Testability.Scenario.FailoverTestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  - System.Fabric.Testability.Scenario.FailoverTestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: FailoverTestScenario
  nameWithType: FailoverTestScenario
  fullName: System.Fabric.Testability.Scenario.FailoverTestScenario
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/FailoverTestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FailoverTestScenario
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/FailoverTestScenario.cs
    startLine: 21
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThe FailoverTestScenario is a test which runs a series of faults against a specific partition defined by the PartitionSelector in the FailoverTestScenarioParameters.\n"
  remarks: "\nThe faults induced put the partition through some specific failover scenarios to ensure those paths are tested and exercised. Running your workload against the service\nat the same time as the test being run will increase the chances of inducing and discovering bugs with the service. The faults induced for the\nPrimary, Secondaries and stateless instances are RestartReplica(only persisted), RemoveReplica, ResartDeployedCodePackage, MovePrimary (only stateful),\nMoveSecondary (Only stateful), RestartPartition (no data loss).\n"
  example: []
  syntax:
    content: 'public sealed class FailoverTestScenario : TestScenario, IDisposable'
    content.vb: >-
      Public NotInheritable Class FailoverTestScenario
          Inherits TestScenario
          Implements IDisposable
  inheritance:
  - System.Object
  - System.Fabric.Testability.Scenario.TestScenario
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters
  - System.Fabric.Testability.Scenario.TestScenario.FabricClient
  - System.Fabric.Testability.Scenario.TestScenario.ProgressChanged
  - System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)
  - System.Fabric.Testability.Scenario.TestScenario.Dispose
  - System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
  - System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)
  - System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String,System.Object[])
  - System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task,System.String,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Testability.Scenario.FailoverTestScenario.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Testability.Scenario.FailoverTestScenario.#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.FailoverTestScenarioParameters)
  commentId: M:System.Fabric.Testability.Scenario.FailoverTestScenario.#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.FailoverTestScenarioParameters)
  id: '#ctor(System.Fabric.FabricClient,System.Fabric.Testability.Scenario.FailoverTestScenarioParameters)'
  parent: System.Fabric.Testability.Scenario.FailoverTestScenario
  langs:
  - csharp
  - vb
  name: FailoverTestScenario(FabricClient, FailoverTestScenarioParameters)
  nameWithType: FailoverTestScenario.FailoverTestScenario(FabricClient, FailoverTestScenarioParameters)
  fullName: System.Fabric.Testability.Scenario.FailoverTestScenario.FailoverTestScenario(System.Fabric.FabricClient, System.Fabric.Testability.Scenario.FailoverTestScenarioParameters)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/FailoverTestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/FailoverTestScenario.cs
    startLine: 33
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nConstructor for the FailoverTestScenario.\n"
  example: []
  syntax:
    content: public FailoverTestScenario(FabricClient fabricClient, FailoverTestScenarioParameters testScenarioParameters)
    content.vb: Public Sub New(fabricClient As FabricClient, testScenarioParameters As FailoverTestScenarioParameters)
    parameters:
    - id: fabricClient
      type: System.Fabric.FabricClient
      description: FabricClient object which will be used to connect to the cluster and induce the faults.
    - id: testScenarioParameters
      type: System.Fabric.Testability.Scenario.FailoverTestScenarioParameters
      description: FailoverTestScenarioParameters which define the configuration for the failover test.
  overload: System.Fabric.Testability.Scenario.FailoverTestScenario.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Testability.Scenario.FailoverTestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.Testability.Scenario.FailoverTestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  id: OnExecuteAsync(System.Threading.CancellationToken)
  parent: System.Fabric.Testability.Scenario.FailoverTestScenario
  langs:
  - csharp
  - vb
  name: OnExecuteAsync(CancellationToken)
  nameWithType: FailoverTestScenario.OnExecuteAsync(CancellationToken)
  fullName: System.Fabric.Testability.Scenario.FailoverTestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/FailoverTestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnExecuteAsync
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/FailoverTestScenario.cs
    startLine: 44
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected override Task OnExecuteAsync(CancellationToken token)
    content.vb: Protected Overrides Function OnExecuteAsync(token As CancellationToken) As Task
    parameters:
    - id: token
      type: System.Threading.CancellationToken
      description: This API supports the Service Fabric platform and is not meant to be called from your code
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overridden: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  overload: System.Fabric.Testability.Scenario.FailoverTestScenario.OnExecuteAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Fabric.Testability.Scenario.FailoverTestScenario.OnDispose(System.Boolean)
  commentId: M:System.Fabric.Testability.Scenario.FailoverTestScenario.OnDispose(System.Boolean)
  id: OnDispose(System.Boolean)
  parent: System.Fabric.Testability.Scenario.FailoverTestScenario
  langs:
  - csharp
  - vb
  name: OnDispose(Boolean)
  nameWithType: FailoverTestScenario.OnDispose(Boolean)
  fullName: System.Fabric.Testability.Scenario.FailoverTestScenario.OnDispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/FailoverTestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnDispose
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/FailoverTestScenario.cs
    startLine: 195
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected override void OnDispose(bool disposing)
    content.vb: Protected Overrides Sub OnDispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: This API supports the Service Fabric platform and is not meant to be called from your code
  overridden: System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)
  overload: System.Fabric.Testability.Scenario.FailoverTestScenario.OnDispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Fabric.Testability.Scenario.FailoverTestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.Testability.Scenario.FailoverTestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  id: ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  parent: System.Fabric.Testability.Scenario.FailoverTestScenario
  langs:
  - csharp
  - vb
  name: ValidateScenarioAtExitAsync(CancellationToken)
  nameWithType: FailoverTestScenario.ValidateScenarioAtExitAsync(CancellationToken)
  fullName: System.Fabric.Testability.Scenario.FailoverTestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/FailoverTestScenario.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ValidateScenarioAtExitAsync
    path: src/prod/src/managed/Api/src/System/Fabric/Testability/Scenario/FailoverTestScenario.cs
    startLine: 284
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Testability.Scenario
  summary: "\nThis API supports the Service Fabric platform and is not meant to be called from your code\n"
  example: []
  syntax:
    content: protected override Task ValidateScenarioAtExitAsync(CancellationToken token)
    content.vb: Protected Overrides Function ValidateScenarioAtExitAsync(token As CancellationToken) As Task
    parameters:
    - id: token
      type: System.Threading.CancellationToken
      description: This API supports the Service Fabric platform and is not meant to be called from your code
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overridden: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  overload: System.Fabric.Testability.Scenario.FailoverTestScenario.ValidateScenarioAtExitAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: System.Fabric.Testability.Scenario
  commentId: N:System.Fabric.Testability.Scenario
  isExternal: false
  name: System.Fabric.Testability.Scenario
  nameWithType: System.Fabric.Testability.Scenario
  fullName: System.Fabric.Testability.Scenario
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Testability.Scenario.TestScenario
  commentId: T:System.Fabric.Testability.Scenario.TestScenario
  parent: System.Fabric.Testability.Scenario
  isExternal: false
  name: TestScenario
  nameWithType: TestScenario
  fullName: System.Fabric.Testability.Scenario.TestScenario
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters
  commentId: P:System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: false
  name: ScenarioParameters
  nameWithType: TestScenario.ScenarioParameters
  fullName: System.Fabric.Testability.Scenario.TestScenario.ScenarioParameters
- uid: System.Fabric.Testability.Scenario.TestScenario.FabricClient
  commentId: P:System.Fabric.Testability.Scenario.TestScenario.FabricClient
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: false
  name: FabricClient
  nameWithType: TestScenario.FabricClient
  fullName: System.Fabric.Testability.Scenario.TestScenario.FabricClient
- uid: System.Fabric.Testability.Scenario.TestScenario.ProgressChanged
  commentId: F:System.Fabric.Testability.Scenario.TestScenario.ProgressChanged
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: false
  name: ProgressChanged
  nameWithType: TestScenario.ProgressChanged
  fullName: System.Fabric.Testability.Scenario.TestScenario.ProgressChanged
- uid: System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: true
  name: ExecuteAsync(CancellationToken)
  nameWithType: TestScenario.ExecuteAsync(CancellationToken)
  fullName: System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: TestScenario.ExecuteAsync
    fullName: System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    nameWithType: TestScenario.ExecuteAsync
    fullName: System.Fabric.Testability.Scenario.TestScenario.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.TestScenario.Dispose
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.Dispose
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: false
  name: Dispose()
  nameWithType: TestScenario.Dispose()
  fullName: System.Fabric.Testability.Scenario.TestScenario.Dispose()
  spec.csharp:
  - uid: System.Fabric.Testability.Scenario.TestScenario.Dispose
    name: Dispose
    nameWithType: TestScenario.Dispose
    fullName: System.Fabric.Testability.Scenario.TestScenario.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Testability.Scenario.TestScenario.Dispose
    name: Dispose
    nameWithType: TestScenario.Dispose
    fullName: System.Fabric.Testability.Scenario.TestScenario.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: false
  name: GetElapsedTime()
  nameWithType: TestScenario.GetElapsedTime()
  fullName: System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime()
  spec.csharp:
  - uid: System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
    name: GetElapsedTime
    nameWithType: TestScenario.GetElapsedTime
    fullName: System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
    name: GetElapsedTime
    nameWithType: TestScenario.GetElapsedTime
    fullName: System.Fabric.Testability.Scenario.TestScenario.GetElapsedTime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: true
  name: ReportProgress(String)
  nameWithType: TestScenario.ReportProgress(String)
  fullName: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)
  spec.csharp:
  - uid: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)
    name: ReportProgress
    nameWithType: TestScenario.ReportProgress
    fullName: System.Fabric.Testability.Scenario.TestScenario.ReportProgress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String)
    name: ReportProgress
    nameWithType: TestScenario.ReportProgress
    fullName: System.Fabric.Testability.Scenario.TestScenario.ReportProgress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String,System.Object[])
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String,System.Object[])
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: true
  name: ReportProgress(String, Object[])
  nameWithType: TestScenario.ReportProgress(String, Object[])
  fullName: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String, System.Object[])
  nameWithType.vb: TestScenario.ReportProgress(String, Object())
  fullname.vb: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String, System.Object())
  name.vb: ReportProgress(String, Object())
  spec.csharp:
  - uid: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String,System.Object[])
    name: ReportProgress
    nameWithType: TestScenario.ReportProgress
    fullName: System.Fabric.Testability.Scenario.TestScenario.ReportProgress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Testability.Scenario.TestScenario.ReportProgress(System.String,System.Object[])
    name: ReportProgress
    nameWithType: TestScenario.ReportProgress
    fullName: System.Fabric.Testability.Scenario.TestScenario.ReportProgress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task,System.String,System.String)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task,System.String,System.String)
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: true
  name: HandleTaskComplete(Task, String, String)
  nameWithType: TestScenario.HandleTaskComplete(Task, String, String)
  fullName: System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task, System.String, System.String)
  spec.csharp:
  - uid: System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task,System.String,System.String)
    name: HandleTaskComplete
    nameWithType: TestScenario.HandleTaskComplete
    fullName: System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete(System.Threading.Tasks.Task,System.String,System.String)
    name: HandleTaskComplete
    nameWithType: TestScenario.HandleTaskComplete
    fullName: System.Fabric.Testability.Scenario.TestScenario.HandleTaskComplete
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.FailoverTestScenario.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<FailoverTestScenario>()
  nameWithType: ByteArraySerializer.Serialize<FailoverTestScenario>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Testability.Scenario.FailoverTestScenario>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of FailoverTestScenario)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Testability.Scenario.FailoverTestScenario)()
  name.vb: Serialize(Of FailoverTestScenario)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<FailoverTestScenario>
    nameWithType: ByteArraySerializer.Serialize<FailoverTestScenario>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Testability.Scenario.FailoverTestScenario>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of FailoverTestScenario)
    nameWithType: ByteArraySerializer.Serialize(Of FailoverTestScenario)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Testability.Scenario.FailoverTestScenario)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Testability.Scenario.FailoverTestScenario.#ctor*
  commentId: Overload:System.Fabric.Testability.Scenario.FailoverTestScenario.#ctor
  isExternal: false
  name: FailoverTestScenario
  nameWithType: FailoverTestScenario.FailoverTestScenario
  fullName: System.Fabric.Testability.Scenario.FailoverTestScenario.FailoverTestScenario
- uid: System.Fabric.FabricClient
  commentId: T:System.Fabric.FabricClient
  parent: System.Fabric
  isExternal: false
  name: FabricClient
  nameWithType: FabricClient
  fullName: System.Fabric.FabricClient
- uid: System.Fabric.Testability.Scenario.FailoverTestScenarioParameters
  commentId: T:System.Fabric.Testability.Scenario.FailoverTestScenarioParameters
  parent: System.Fabric.Testability.Scenario
  isExternal: false
  name: FailoverTestScenarioParameters
  nameWithType: FailoverTestScenarioParameters
  fullName: System.Fabric.Testability.Scenario.FailoverTestScenarioParameters
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: true
  name: OnExecuteAsync(CancellationToken)
  nameWithType: TestScenario.OnExecuteAsync(CancellationToken)
  fullName: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)
    name: OnExecuteAsync
    nameWithType: TestScenario.OnExecuteAsync
    fullName: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync(System.Threading.CancellationToken)
    name: OnExecuteAsync
    nameWithType: TestScenario.OnExecuteAsync
    fullName: System.Fabric.Testability.Scenario.TestScenario.OnExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.FailoverTestScenario.OnExecuteAsync*
  commentId: Overload:System.Fabric.Testability.Scenario.FailoverTestScenario.OnExecuteAsync
  isExternal: false
  name: OnExecuteAsync
  nameWithType: FailoverTestScenario.OnExecuteAsync
  fullName: System.Fabric.Testability.Scenario.FailoverTestScenario.OnExecuteAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: true
  name: OnDispose(Boolean)
  nameWithType: TestScenario.OnDispose(Boolean)
  fullName: System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)
  spec.csharp:
  - uid: System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)
    name: OnDispose
    nameWithType: TestScenario.OnDispose
    fullName: System.Fabric.Testability.Scenario.TestScenario.OnDispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Testability.Scenario.TestScenario.OnDispose(System.Boolean)
    name: OnDispose
    nameWithType: TestScenario.OnDispose
    fullName: System.Fabric.Testability.Scenario.TestScenario.OnDispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.FailoverTestScenario.OnDispose*
  commentId: Overload:System.Fabric.Testability.Scenario.FailoverTestScenario.OnDispose
  isExternal: false
  name: OnDispose
  nameWithType: FailoverTestScenario.OnDispose
  fullName: System.Fabric.Testability.Scenario.FailoverTestScenario.OnDispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  parent: System.Fabric.Testability.Scenario.TestScenario
  isExternal: true
  name: ValidateScenarioAtExitAsync(CancellationToken)
  nameWithType: TestScenario.ValidateScenarioAtExitAsync(CancellationToken)
  fullName: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
    name: ValidateScenarioAtExitAsync
    nameWithType: TestScenario.ValidateScenarioAtExitAsync
    fullName: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync(System.Threading.CancellationToken)
    name: ValidateScenarioAtExitAsync
    nameWithType: TestScenario.ValidateScenarioAtExitAsync
    fullName: System.Fabric.Testability.Scenario.TestScenario.ValidateScenarioAtExitAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Testability.Scenario.FailoverTestScenario.ValidateScenarioAtExitAsync*
  commentId: Overload:System.Fabric.Testability.Scenario.FailoverTestScenario.ValidateScenarioAtExitAsync
  isExternal: false
  name: ValidateScenarioAtExitAsync
  nameWithType: FailoverTestScenario.ValidateScenarioAtExitAsync
  fullName: System.Fabric.Testability.Scenario.FailoverTestScenario.ValidateScenarioAtExitAsync
