### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
  id: ServiceTypeInformation
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  children:
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.Get(System.Type)
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.ImplementationType
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.InterfaceTypes
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.IsAbstract
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.TryGet(System.Type,Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation@)
  langs:
  - csharp
  - vb
  name: ServiceTypeInformation
  nameWithType: ServiceTypeInformation
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeInformation
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Runtime
  summary: "\nSpecifies the class used by the ServiceRemoting to lookup the interfaces implemented\nby the service.\n"
  example: []
  syntax:
    content: public sealed class ServiceTypeInformation
    content.vb: Public NotInheritable Class ServiceTypeInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.InterfaceTypes
  commentId: P:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.InterfaceTypes
  id: InterfaceTypes
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
  langs:
  - csharp
  - vb
  name: InterfaceTypes
  nameWithType: ServiceTypeInformation.InterfaceTypes
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.InterfaceTypes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InterfaceTypes
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Runtime
  summary: "\nThe interface types implemented\n"
  example: []
  syntax:
    content: public IEnumerable<Type> InterfaceTypes { get; }
    content.vb: Public ReadOnly Property InterfaceTypes As IEnumerable(Of Type)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: List of interface types
  overload: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.InterfaceTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.ImplementationType
  commentId: P:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.ImplementationType
  id: ImplementationType
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
  langs:
  - csharp
  - vb
  name: ImplementationType
  nameWithType: ServiceTypeInformation.ImplementationType
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.ImplementationType
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ImplementationType
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
    startLine: 34
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Runtime
  summary: "\nGets type of the class implementing the service interface.\n"
  example: []
  syntax:
    content: public Type ImplementationType { get; }
    content.vb: Public ReadOnly Property ImplementationType As Type
    parameters: []
    return:
      type: System.Type
      description: <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the class implementing the service interface.
  overload: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.ImplementationType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.IsAbstract
  commentId: P:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.IsAbstract
  id: IsAbstract
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
  langs:
  - csharp
  - vb
  name: IsAbstract
  nameWithType: ServiceTypeInformation.IsAbstract
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.IsAbstract
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsAbstract
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
    startLine: 40
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Runtime
  summary: "\nGets if class implementing service interface is abstract.\n"
  example: []
  syntax:
    content: public bool IsAbstract { get; }
    content.vb: Public ReadOnly Property IsAbstract As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if class implementing service interface is abstract, otherwise false.
  overload: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.IsAbstract*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.TryGet(System.Type,Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation@)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.TryGet(System.Type,Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation@)
  id: TryGet(System.Type,Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation@)
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
  langs:
  - csharp
  - vb
  name: TryGet(Type, out ServiceTypeInformation)
  nameWithType: ServiceTypeInformation.TryGet(Type, out ServiceTypeInformation)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.TryGet(System.Type, out Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TryGet
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
    startLine: 48
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Runtime
  summary: "\nFactory method that constructs a ServiceTypeInformation object from the given type\n"
  example: []
  syntax:
    content: public static bool TryGet(Type serviceType, out ServiceTypeInformation serviceTypeInformation)
    content.vb: Public Shared Function TryGet(serviceType As Type, ByRef serviceTypeInformation As ServiceTypeInformation) As Boolean
    parameters:
    - id: serviceType
      type: System.Type
      description: Type to examine
    - id: serviceTypeInformation
      type: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
      description: The constructed ServiceTypeInformation
    return:
      type: System.Boolean
      description: true if the specified serviceType is a service, false otherwise
  overload: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.TryGet*
  nameWithType.vb: ServiceTypeInformation.TryGet(Type, ByRef ServiceTypeInformation)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.TryGet(System.Type, ByRef Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation)
  name.vb: TryGet(Type, ByRef ServiceTypeInformation)
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.Get(System.Type)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.Get(System.Type)
  id: Get(System.Type)
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
  langs:
  - csharp
  - vb
  name: Get(Type)
  nameWithType: ServiceTypeInformation.Get(Type)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.Get(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Get
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Runtime/ServiceTypeInformation.cs
    startLine: 67
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Runtime
  summary: "\nFactory method that constructs a ServiceTypeInformation object from the given type\n"
  example: []
  syntax:
    content: public static ServiceTypeInformation Get(Type serviceType)
    content.vb: Public Shared Function Get(serviceType As Type) As ServiceTypeInformation
    parameters:
    - id: serviceType
      type: System.Type
      description: Type to examine
    return:
      type: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
      description: ServiceTypeInformation
  overload: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Runtime
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceTypeInformation>()
  nameWithType: ByteArraySerializer.Serialize<ServiceTypeInformation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceTypeInformation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation)()
  name.vb: Serialize(Of ServiceTypeInformation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceTypeInformation>
    nameWithType: ByteArraySerializer.Serialize<ServiceTypeInformation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceTypeInformation)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceTypeInformation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.InterfaceTypes*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.InterfaceTypes
  isExternal: false
  name: InterfaceTypes
  nameWithType: ServiceTypeInformation.InterfaceTypes
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.InterfaceTypes
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.ImplementationType*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.ImplementationType
  isExternal: false
  name: ImplementationType
  nameWithType: ServiceTypeInformation.ImplementationType
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.ImplementationType
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.IsAbstract*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.IsAbstract
  isExternal: false
  name: IsAbstract
  nameWithType: ServiceTypeInformation.IsAbstract
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.IsAbstract
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.TryGet*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.TryGet
  isExternal: false
  name: TryGet
  nameWithType: ServiceTypeInformation.TryGet
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.TryGet
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: ServiceTypeInformation
  nameWithType: ServiceTypeInformation
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.Get*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.Get
  isExternal: false
  name: Get
  nameWithType: ServiceTypeInformation.Get
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.ServiceTypeInformation.Get
