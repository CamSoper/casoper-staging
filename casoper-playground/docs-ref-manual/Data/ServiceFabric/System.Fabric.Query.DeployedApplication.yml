### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.DeployedApplication
  commentId: T:System.Fabric.Query.DeployedApplication
  id: DeployedApplication
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.DeployedApplication.ApplicationName
  - System.Fabric.Query.DeployedApplication.ApplicationTypeName
  - System.Fabric.Query.DeployedApplication.DeployedApplicationStatus
  - System.Fabric.Query.DeployedApplication.LogDirectory
  - System.Fabric.Query.DeployedApplication.TempDirectory
  - System.Fabric.Query.DeployedApplication.WorkDirectory
  langs:
  - csharp
  - vb
  name: DeployedApplication
  nameWithType: DeployedApplication
  fullName: System.Fabric.Query.DeployedApplication
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DeployedApplication
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
    startLine: 12
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Describes an instance of an applicationâ€™s service host running on a Service Fabric Node.</p>\n"
  example: []
  syntax:
    content: public sealed class DeployedApplication
    content.vb: Public NotInheritable Class DeployedApplication
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.DeployedApplication.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.DeployedApplication.ApplicationName
  commentId: P:System.Fabric.Query.DeployedApplication.ApplicationName
  id: ApplicationName
  parent: System.Fabric.Query.DeployedApplication
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: DeployedApplication.ApplicationName
  fullName: System.Fabric.Query.DeployedApplication.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
    startLine: 38
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the application name.</p>\n"
  example: []
  syntax:
    content: public Uri ApplicationName { get; }
    content.vb: Public ReadOnly Property ApplicationName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The application name.</p>\n"
  overload: System.Fabric.Query.DeployedApplication.ApplicationName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedApplication.ApplicationTypeName
  commentId: P:System.Fabric.Query.DeployedApplication.ApplicationTypeName
  id: ApplicationTypeName
  parent: System.Fabric.Query.DeployedApplication
  langs:
  - csharp
  - vb
  name: ApplicationTypeName
  nameWithType: DeployedApplication.ApplicationTypeName
  fullName: System.Fabric.Query.DeployedApplication.ApplicationTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
    startLine: 47
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the application type name.</p>\n"
  example: []
  syntax:
    content: public string ApplicationTypeName { get; }
    content.vb: Public ReadOnly Property ApplicationTypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The application type name.</p>\n"
  overload: System.Fabric.Query.DeployedApplication.ApplicationTypeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedApplication.DeployedApplicationStatus
  commentId: P:System.Fabric.Query.DeployedApplication.DeployedApplicationStatus
  id: DeployedApplicationStatus
  parent: System.Fabric.Query.DeployedApplication
  langs:
  - csharp
  - vb
  name: DeployedApplicationStatus
  nameWithType: DeployedApplication.DeployedApplicationStatus
  fullName: System.Fabric.Query.DeployedApplication.DeployedApplicationStatus
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DeployedApplicationStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
    startLine: 56
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the status of the deployed application instance.</p>\n"
  example: []
  syntax:
    content: public DeploymentStatus DeployedApplicationStatus { get; }
    content.vb: Public ReadOnly Property DeployedApplicationStatus As DeploymentStatus
    parameters: []
    return:
      type: System.Fabric.DeploymentStatus
      description: "\n<p>The status of the deployed application instance.</p>\n"
  overload: System.Fabric.Query.DeployedApplication.DeployedApplicationStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedApplication.WorkDirectory
  commentId: P:System.Fabric.Query.DeployedApplication.WorkDirectory
  id: WorkDirectory
  parent: System.Fabric.Query.DeployedApplication
  langs:
  - csharp
  - vb
  name: WorkDirectory
  nameWithType: DeployedApplication.WorkDirectory
  fullName: System.Fabric.Query.DeployedApplication.WorkDirectory
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WorkDirectory
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
    startLine: 65
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the work directory path used by the deployed application instance.</p>\n"
  example: []
  syntax:
    content: public string WorkDirectory { get; }
    content.vb: Public ReadOnly Property WorkDirectory As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The work directory path used by the deployed application instance.</p>\n"
  overload: System.Fabric.Query.DeployedApplication.WorkDirectory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedApplication.LogDirectory
  commentId: P:System.Fabric.Query.DeployedApplication.LogDirectory
  id: LogDirectory
  parent: System.Fabric.Query.DeployedApplication
  langs:
  - csharp
  - vb
  name: LogDirectory
  nameWithType: DeployedApplication.LogDirectory
  fullName: System.Fabric.Query.DeployedApplication.LogDirectory
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LogDirectory
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
    startLine: 73
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the log directory path used by the deployed application instance.</p>\n"
  example: []
  syntax:
    content: public string LogDirectory { get; }
    content.vb: Public ReadOnly Property LogDirectory As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The log directory path used by the deployed application instance.</p>\n"
  overload: System.Fabric.Query.DeployedApplication.LogDirectory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedApplication.TempDirectory
  commentId: P:System.Fabric.Query.DeployedApplication.TempDirectory
  id: TempDirectory
  parent: System.Fabric.Query.DeployedApplication
  langs:
  - csharp
  - vb
  name: TempDirectory
  nameWithType: DeployedApplication.TempDirectory
  fullName: System.Fabric.Query.DeployedApplication.TempDirectory
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TempDirectory
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedApplicationResultItem.cs
    startLine: 81
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the temp directory path used by the deployed application instance.</p>\n"
  example: []
  syntax:
    content: public string TempDirectory { get; }
    content.vb: Public ReadOnly Property TempDirectory As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The temp directory path used by the deployed application instance.</p>\n"
  overload: System.Fabric.Query.DeployedApplication.TempDirectory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.DeployedApplication.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<DeployedApplication>()
  nameWithType: ByteArraySerializer.Serialize<DeployedApplication>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.DeployedApplication>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of DeployedApplication)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.DeployedApplication)()
  name.vb: Serialize(Of DeployedApplication)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<DeployedApplication>
    nameWithType: ByteArraySerializer.Serialize<DeployedApplication>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.DeployedApplication>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of DeployedApplication)
    nameWithType: ByteArraySerializer.Serialize(Of DeployedApplication)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.DeployedApplication)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.DeployedApplication.ApplicationName*
  commentId: Overload:System.Fabric.Query.DeployedApplication.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: DeployedApplication.ApplicationName
  fullName: System.Fabric.Query.DeployedApplication.ApplicationName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Query.DeployedApplication.ApplicationTypeName*
  commentId: Overload:System.Fabric.Query.DeployedApplication.ApplicationTypeName
  isExternal: false
  name: ApplicationTypeName
  nameWithType: DeployedApplication.ApplicationTypeName
  fullName: System.Fabric.Query.DeployedApplication.ApplicationTypeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Query.DeployedApplication.DeployedApplicationStatus*
  commentId: Overload:System.Fabric.Query.DeployedApplication.DeployedApplicationStatus
  isExternal: false
  name: DeployedApplicationStatus
  nameWithType: DeployedApplication.DeployedApplicationStatus
  fullName: System.Fabric.Query.DeployedApplication.DeployedApplicationStatus
- uid: System.Fabric.DeploymentStatus
  commentId: T:System.Fabric.DeploymentStatus
  parent: System.Fabric
  isExternal: false
  name: DeploymentStatus
  nameWithType: DeploymentStatus
  fullName: System.Fabric.DeploymentStatus
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.Query.DeployedApplication.WorkDirectory*
  commentId: Overload:System.Fabric.Query.DeployedApplication.WorkDirectory
  isExternal: false
  name: WorkDirectory
  nameWithType: DeployedApplication.WorkDirectory
  fullName: System.Fabric.Query.DeployedApplication.WorkDirectory
- uid: System.Fabric.Query.DeployedApplication.LogDirectory*
  commentId: Overload:System.Fabric.Query.DeployedApplication.LogDirectory
  isExternal: false
  name: LogDirectory
  nameWithType: DeployedApplication.LogDirectory
  fullName: System.Fabric.Query.DeployedApplication.LogDirectory
- uid: System.Fabric.Query.DeployedApplication.TempDirectory*
  commentId: Overload:System.Fabric.Query.DeployedApplication.TempDirectory
  isExternal: false
  name: TempDirectory
  nameWithType: DeployedApplication.TempDirectory
  fullName: System.Fabric.Query.DeployedApplication.TempDirectory
