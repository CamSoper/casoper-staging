### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.ActorReference
  commentId: T:Microsoft.ServiceFabric.Actors.ActorReference
  id: ActorReference
  parent: Microsoft.ServiceFabric.Actors
  children:
  - Microsoft.ServiceFabric.Actors.ActorReference.#ctor
  - Microsoft.ServiceFabric.Actors.ActorReference.ActorId
  - Microsoft.ServiceFabric.Actors.ActorReference.Bind(System.Type)
  - Microsoft.ServiceFabric.Actors.ActorReference.Get(System.Object)
  - Microsoft.ServiceFabric.Actors.ActorReference.ListenerName
  - Microsoft.ServiceFabric.Actors.ActorReference.ServiceUri
  langs:
  - csharp
  - vb
  name: ActorReference
  nameWithType: ActorReference
  fullName: Microsoft.ServiceFabric.Actors.ActorReference
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorReference
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
    startLine: 16
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors
  summary: "\nEncapsulation of a reference to an actor for serialization.\n"
  example: []
  syntax:
    content: >-
      [DataContract(Name = "ActorReference", Namespace = "urn:actors")]

      [Serializable]

      public sealed class ActorReference : IActorReference
    content.vb: >-
      <DataContract(Name:="ActorReference", Namespace:="urn:actors")>

      <Serializable>

      Public NotInheritable Class ActorReference
          Implements IActorReference
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.ActorReference.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ActorReference
    - name: Namespace
      type: System.String
      value: urn:actors
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Actors.ActorReference.#ctor
  commentId: M:Microsoft.ServiceFabric.Actors.ActorReference.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceFabric.Actors.ActorReference
  langs:
  - csharp
  - vb
  name: ActorReference()
  nameWithType: ActorReference.ActorReference()
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.ActorReference()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
    startLine: 23
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors
  summary: "\nInitializes a new instance of the ActorReference class.\n"
  example: []
  syntax:
    content: public ActorReference()
    content.vb: Public Sub New
  overload: Microsoft.ServiceFabric.Actors.ActorReference.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.ActorReference.ServiceUri
  commentId: P:Microsoft.ServiceFabric.Actors.ActorReference.ServiceUri
  id: ServiceUri
  parent: Microsoft.ServiceFabric.Actors.ActorReference
  langs:
  - csharp
  - vb
  name: ServiceUri
  nameWithType: ActorReference.ServiceUri
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.ServiceUri
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceUri
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
    startLine: 31
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors
  summary: "\nGets Uri of the actor service that hosts the actor in service fabric cluster.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "ServiceUri", Order = 0, IsRequired = true)]

      public Uri ServiceUri { get; set; }
    content.vb: >-
      <DataMember(Name:="ServiceUri", Order:=0, IsRequired:=True)>

      Public Property ServiceUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: Service Uri which hosts the actor in service fabric cluster.
  overload: Microsoft.ServiceFabric.Actors.ActorReference.ServiceUri*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ServiceUri
    - name: Order
      type: System.Int32
      value: 0
    - name: IsRequired
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.ActorReference.ActorId
  commentId: P:Microsoft.ServiceFabric.Actors.ActorReference.ActorId
  id: ActorId
  parent: Microsoft.ServiceFabric.Actors.ActorReference
  langs:
  - csharp
  - vb
  name: ActorId
  nameWithType: ActorReference.ActorId
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.ActorId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorId
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
    startLine: 38
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors
  summary: "\nGets or sets the <xref href=\"Microsoft.ServiceFabric.Actors.ActorId\" data-throw-if-not-resolved=\"false\"></xref> of the actor.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "ActorId", Order = 1, IsRequired = true)]

      public ActorId ActorId { get; set; }
    content.vb: >-
      <DataMember(Name:="ActorId", Order:=1, IsRequired:=True)>

      Public Property ActorId As ActorId
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: <xref href="Microsoft.ServiceFabric.Actors.ActorId" data-throw-if-not-resolved="false"></xref> of the actor.
  overload: Microsoft.ServiceFabric.Actors.ActorReference.ActorId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ActorId
    - name: Order
      type: System.Int32
      value: 1
    - name: IsRequired
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.ActorReference.ListenerName
  commentId: P:Microsoft.ServiceFabric.Actors.ActorReference.ListenerName
  id: ListenerName
  parent: Microsoft.ServiceFabric.Actors.ActorReference
  langs:
  - csharp
  - vb
  name: ListenerName
  nameWithType: ActorReference.ListenerName
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.ListenerName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ListenerName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
    startLine: 45
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors
  summary: "\nGets or sets the name of the listener in the actor service to use when communicating with the actor service.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "ListenerName", Order = 2, IsRequired = false)]

      public string ListenerName { get; set; }
    content.vb: >-
      <DataMember(Name:="ListenerName", Order:=2, IsRequired:=False)>

      Public Property ListenerName As String
    parameters: []
    return:
      type: System.String
      description: The name of the listener
  overload: Microsoft.ServiceFabric.Actors.ActorReference.ListenerName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ListenerName
    - name: Order
      type: System.Int32
      value: 2
    - name: IsRequired
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.ActorReference.Bind(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.ActorReference.Bind(System.Type)
  id: Bind(System.Type)
  parent: Microsoft.ServiceFabric.Actors.ActorReference
  langs:
  - csharp
  - vb
  name: Bind(Type)
  nameWithType: ActorReference.Bind(Type)
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.Bind(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Bind
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
    startLine: 57
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors
  summary: "\nCreates an <xref href=\"Microsoft.ServiceFabric.Actors.Client.ActorProxy\" data-throw-if-not-resolved=\"false\"></xref> using \n<see>\n<cref>ActorProxy.Create{TActorInterface}(Uri,Microsoft.ServiceFabric.Actors.ActorId,System.String)</cref>\n</see>\nmethod.\n"
  example: []
  syntax:
    content: public object Bind(Type actorInterfaceType)
    content.vb: Public Function Bind(actorInterfaceType As Type) As Object
    parameters:
    - id: actorInterfaceType
      type: System.Type
      description: Interface type of actor.
    return:
      type: System.Object
      description: Object representing <xref href="Microsoft.ServiceFabric.Actors.Client.ActorProxy" data-throw-if-not-resolved="false"></xref> for the actor.
  overload: Microsoft.ServiceFabric.Actors.ActorReference.Bind*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.ActorReference.Get(System.Object)
  commentId: M:Microsoft.ServiceFabric.Actors.ActorReference.Get(System.Object)
  id: Get(System.Object)
  parent: Microsoft.ServiceFabric.Actors.ActorReference
  langs:
  - csharp
  - vb
  name: Get(Object)
  nameWithType: ActorReference.Get(Object)
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.Get(System.Object)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Get
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/ActorReference.cs
    startLine: 68
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors
  summary: "\nGets <xref href=\"Microsoft.ServiceFabric.Actors.ActorReference\" data-throw-if-not-resolved=\"false\"></xref> for the actor.\n"
  remarks: A null value is returned if actor is passed as null.
  example: []
  syntax:
    content: public static ActorReference Get(object actor)
    content.vb: Public Shared Function Get(actor As Object) As ActorReference
    parameters:
    - id: actor
      type: System.Object
      description: Actor object to get <xref href="Microsoft.ServiceFabric.Actors.ActorReference" data-throw-if-not-resolved="false"></xref> for.
    return:
      type: Microsoft.ServiceFabric.Actors.ActorReference
      description: <xref href="Microsoft.ServiceFabric.Actors.ActorReference" data-throw-if-not-resolved="false"></xref> object for the actor.
  overload: Microsoft.ServiceFabric.Actors.ActorReference.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.ServiceFabric.Actors
  commentId: N:Microsoft.ServiceFabric.Actors
  isExternal: false
  name: Microsoft.ServiceFabric.Actors
  nameWithType: Microsoft.ServiceFabric.Actors
  fullName: Microsoft.ServiceFabric.Actors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.ActorReference.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ActorReference>()
  nameWithType: ByteArraySerializer.Serialize<ActorReference>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.ActorReference>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ActorReference)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.ActorReference)()
  name.vb: Serialize(Of ActorReference)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ActorReference>
    nameWithType: ByteArraySerializer.Serialize<ActorReference>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.ActorReference>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ActorReference)
    nameWithType: ByteArraySerializer.Serialize(Of ActorReference)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.ActorReference)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.ActorReference.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.ActorReference.#ctor
  isExternal: false
  name: ActorReference
  nameWithType: ActorReference.ActorReference
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.ActorReference
- uid: Microsoft.ServiceFabric.Actors.ActorReference.ServiceUri*
  commentId: Overload:Microsoft.ServiceFabric.Actors.ActorReference.ServiceUri
  isExternal: false
  name: ServiceUri
  nameWithType: ActorReference.ServiceUri
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.ServiceUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.ServiceFabric.Actors.ActorId
  commentId: T:Microsoft.ServiceFabric.Actors.ActorId
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: ActorId
  nameWithType: ActorId
  fullName: Microsoft.ServiceFabric.Actors.ActorId
- uid: Microsoft.ServiceFabric.Actors.ActorReference.ActorId*
  commentId: Overload:Microsoft.ServiceFabric.Actors.ActorReference.ActorId
  isExternal: false
  name: ActorId
  nameWithType: ActorReference.ActorId
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.ActorId
- uid: Microsoft.ServiceFabric.Actors.ActorReference.ListenerName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.ActorReference.ListenerName
  isExternal: false
  name: ListenerName
  nameWithType: ActorReference.ListenerName
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.ListenerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Actors.Client.ActorProxy
  commentId: T:Microsoft.ServiceFabric.Actors.Client.ActorProxy
  isExternal: false
  name: ActorProxy
  nameWithType: ActorProxy
  fullName: Microsoft.ServiceFabric.Actors.Client.ActorProxy
- uid: Microsoft.ServiceFabric.Actors.ActorReference.Bind*
  commentId: Overload:Microsoft.ServiceFabric.Actors.ActorReference.Bind
  isExternal: false
  name: Bind
  nameWithType: ActorReference.Bind
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.Bind
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.ServiceFabric.Actors.ActorReference
  commentId: T:Microsoft.ServiceFabric.Actors.ActorReference
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: ActorReference
  nameWithType: ActorReference
  fullName: Microsoft.ServiceFabric.Actors.ActorReference
- uid: Microsoft.ServiceFabric.Actors.ActorReference.Get*
  commentId: Overload:Microsoft.ServiceFabric.Actors.ActorReference.Get
  isExternal: false
  name: Get
  nameWithType: ActorReference.Get
  fullName: Microsoft.ServiceFabric.Actors.ActorReference.Get
