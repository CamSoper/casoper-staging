### YamlMime:ManagedReference
items:
- uid: System.Fabric.Messaging.Stream.StreamManager
  commentId: T:System.Fabric.Messaging.Stream.StreamManager
  id: StreamManager
  parent: System.Fabric.Messaging.Stream
  children:
  - System.Fabric.Messaging.Stream.StreamManager.#ctor
  - System.Fabric.Messaging.Stream.StreamManager.CompleteCheckpointAsync(System.Threading.CancellationToken)
  - System.Fabric.Messaging.Stream.StreamManager.CreateInboundStreamsEnumerableAsync
  - System.Fabric.Messaging.Stream.StreamManager.CreateOutboundStreamsEnumerableAsync
  - System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
  - System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
  - System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
  - System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
  - System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
  - System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(System.Guid)
  - System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  - System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  - System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(System.Guid)
  - System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  - System.Fabric.Messaging.Stream.StreamManager.Name
  - System.Fabric.Messaging.Stream.StreamManager.PartitionIdentity
  - System.Fabric.Messaging.Stream.StreamManager.PerformCheckpointAsync(System.Threading.CancellationToken)
  - System.Fabric.Messaging.Stream.StreamManager.PrepareCheckpointAsync(System.Int64,System.Threading.CancellationToken)
  - System.Fabric.Messaging.Stream.StreamManager.PrepareForRemoveAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.Messaging.Stream.StreamManager.RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
  langs:
  - csharp
  - vb
  name: StreamManager
  nameWithType: StreamManager
  fullName: System.Fabric.Messaging.Stream.StreamManager
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StreamManager
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 51
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nThe Stream Manager class is the primary entry point to Reliable messaging.\nThe stream manager(singleton) is registered as a State Provider in State Manager and manages states(streams, sessions) using the \nthe power of WinFab to provide the reliability and consistency guarantees for reliable messaging.\n"
  example: []
  syntax:
    content: 'public class StreamManager : IMessageStreamManager, IStateProvider2, IReliableState'
    content.vb: >-
      Public Class StreamManager
          Implements IMessageStreamManager, IStateProvider2, IReliableState
  inheritance:
  - System.Object
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager
  - Microsoft.ServiceFabric.Data.IReliableState
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Messaging.Stream.StreamManager.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Messaging.Stream.StreamManager.PartitionIdentity
  commentId: P:System.Fabric.Messaging.Stream.StreamManager.PartitionIdentity
  id: PartitionIdentity
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: PartitionIdentity
  nameWithType: StreamManager.PartitionIdentity
  fullName: System.Fabric.Messaging.Stream.StreamManager.PartitionIdentity
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionIdentity
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 105
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nStream Manager instance maintains streams for this Partition\n"
  example: []
  syntax:
    content: public PartitionKey PartitionIdentity { get; }
    content.vb: Public ReadOnly Property PartitionIdentity As PartitionKey
    parameters: []
    return:
      type: System.Fabric.Messaging.Stream.PartitionKey
  overload: System.Fabric.Messaging.Stream.StreamManager.PartitionIdentity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Messaging.Stream.StreamManager.Name
  commentId: P:System.Fabric.Messaging.Stream.StreamManager.Name
  id: Name
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: StreamManager.Name
  fullName: System.Fabric.Messaging.Stream.StreamManager.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 110
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nThe stream manager is registered as a state provider with this name\n"
  example: []
  syntax:
    content: public Uri Name { get; }
    content.vb: Public ReadOnly Property Name As Uri
    parameters: []
    return:
      type: System.Uri
  overload: System.Fabric.Messaging.Stream.StreamManager.Name*
  implements:
  - Microsoft.ServiceFabric.Data.IReliableState.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Messaging.Stream.StreamManager.#ctor
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.#ctor
  id: '#ctor'
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: StreamManager()
  nameWithType: StreamManager.StreamManager()
  fullName: System.Fabric.Messaging.Stream.StreamManager.StreamManager()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 157
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nInitialize and creates the stream manager. \n"
  example: []
  syntax:
    content: public StreamManager()
    content.vb: Public Sub New
  overload: System.Fabric.Messaging.Stream.StreamManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.PrepareForRemoveAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.PrepareForRemoveAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan,System.Threading.CancellationToken)
  id: PrepareForRemoveAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: PrepareForRemoveAsync(Transaction, TimeSpan, CancellationToken)
  nameWithType: StreamManager.PrepareForRemoveAsync(Transaction, TimeSpan, CancellationToken)
  fullName: System.Fabric.Messaging.Stream.StreamManager.PrepareForRemoveAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PrepareForRemoveAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 426
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nPrepares for removing state provider.\n"
  example: []
  syntax:
    content: public Task PrepareForRemoveAsync(Transaction transaction, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function PrepareForRemoveAsync(transaction As Transaction, timeout As TimeSpan, cancellationToken As CancellationToken) As Task
    parameters:
    - id: transaction
      type: Microsoft.ServiceFabric.Replicator.Transaction
      description: transaction that this operation is a part of.
    - id: timeout
      type: System.TimeSpan
      description: Specifies the duration this operation has to complete before timing out.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Propagates notification that operations should be canceled.
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous operation.
  overload: System.Fabric.Messaging.Stream.StreamManager.PrepareForRemoveAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.PrepareCheckpointAsync(System.Int64,System.Threading.CancellationToken)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.PrepareCheckpointAsync(System.Int64,System.Threading.CancellationToken)
  id: PrepareCheckpointAsync(System.Int64,System.Threading.CancellationToken)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: PrepareCheckpointAsync(Int64, CancellationToken)
  nameWithType: StreamManager.PrepareCheckpointAsync(Int64, CancellationToken)
  fullName: System.Fabric.Messaging.Stream.StreamManager.PrepareCheckpointAsync(System.Int64, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PrepareCheckpointAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 437
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nPrepares for checkpoint by snapping the state to be checkpointed.\n"
  example: []
  syntax:
    content: public Task PrepareCheckpointAsync(long checkpointLSN, CancellationToken cancellationToken)
    content.vb: Public Function PrepareCheckpointAsync(checkpointLSN As Long, cancellationToken As CancellationToken) As Task
    parameters:
    - id: checkpointLSN
      type: System.Int64
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous operation.
  overload: System.Fabric.Messaging.Stream.StreamManager.PrepareCheckpointAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.PerformCheckpointAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.PerformCheckpointAsync(System.Threading.CancellationToken)
  id: PerformCheckpointAsync(System.Threading.CancellationToken)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: PerformCheckpointAsync(CancellationToken)
  nameWithType: StreamManager.PerformCheckpointAsync(CancellationToken)
  fullName: System.Fabric.Messaging.Stream.StreamManager.PerformCheckpointAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PerformCheckpointAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 448
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCheckpoints state to local disk.\n"
  example: []
  syntax:
    content: public Task PerformCheckpointAsync(CancellationToken cancellationToken)
    content.vb: Public Function PerformCheckpointAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous operation.
  overload: System.Fabric.Messaging.Stream.StreamManager.PerformCheckpointAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.CompleteCheckpointAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.CompleteCheckpointAsync(System.Threading.CancellationToken)
  id: CompleteCheckpointAsync(System.Threading.CancellationToken)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: CompleteCheckpointAsync(CancellationToken)
  nameWithType: StreamManager.CompleteCheckpointAsync(CancellationToken)
  fullName: System.Fabric.Messaging.Stream.StreamManager.CompleteCheckpointAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CompleteCheckpointAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 459
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCompletes checkpoint.\n"
  example: []
  syntax:
    content: public Task CompleteCheckpointAsync(CancellationToken cancellationToken)
    content.vb: Public Function CompleteCheckpointAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: Task that represents the asynchronous operation.
  overload: System.Fabric.Messaging.Stream.StreamManager.CompleteCheckpointAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.CreateOutboundStreamsEnumerableAsync
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.CreateOutboundStreamsEnumerableAsync
  id: CreateOutboundStreamsEnumerableAsync
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: CreateOutboundStreamsEnumerableAsync()
  nameWithType: StreamManager.CreateOutboundStreamsEnumerableAsync()
  fullName: System.Fabric.Messaging.Stream.StreamManager.CreateOutboundStreamsEnumerableAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateOutboundStreamsEnumerableAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1117
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreates an enumerable of currently active outbound streams\n"
  example: []
  syntax:
    content: public Task<IEnumerable<IMessageStream>> CreateOutboundStreamsEnumerableAsync()
    content.vb: Public Function CreateOutboundStreamsEnumerableAsync As Task(Of IEnumerable(Of IMessageStream))
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.Fabric.Messaging.Stream.IMessageStream}}
      description: an enumerable collection of stream objects
  overload: System.Fabric.Messaging.Stream.StreamManager.CreateOutboundStreamsEnumerableAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.CreateInboundStreamsEnumerableAsync
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.CreateInboundStreamsEnumerableAsync
  id: CreateInboundStreamsEnumerableAsync
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: CreateInboundStreamsEnumerableAsync()
  nameWithType: StreamManager.CreateInboundStreamsEnumerableAsync()
  fullName: System.Fabric.Messaging.Stream.StreamManager.CreateInboundStreamsEnumerableAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateInboundStreamsEnumerableAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1134
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreates an enumerable of currently active inbound streams\n"
  example: []
  syntax:
    content: public Task<IEnumerable<IMessageStream>> CreateInboundStreamsEnumerableAsync()
    content.vb: Public Function CreateInboundStreamsEnumerableAsync As Task(Of IEnumerable(Of IMessageStream))
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.Fabric.Messaging.Stream.IMessageStream}}
      description: an enumerable collection of stream objects
  overload: System.Fabric.Messaging.Stream.StreamManager.CreateInboundStreamsEnumerableAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(System.Guid)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(System.Guid)
  id: GetInboundStreamAsync(System.Guid)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: GetInboundStreamAsync(Guid)
  nameWithType: StreamManager.GetInboundStreamAsync(Guid)
  fullName: System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetInboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1151
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific inbound stream given its StreamId\n"
  example: []
  syntax:
    content: public Task<Tuple<bool, IMessageStream>> GetInboundStreamAsync(Guid streamId)
    content.vb: Public Function GetInboundStreamAsync(streamId As Guid) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: streamId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  id: GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: GetInboundStreamAsync(Uri, PartitionKey)
  nameWithType: StreamManager.GetInboundStreamAsync(Uri, PartitionKey)
  fullName: System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(System.Uri, System.Fabric.Messaging.Stream.PartitionKey)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetInboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1170
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific inbound stream given  its Stream Name and Partition Key\n"
  example: []
  syntax:
    content: public Task<Tuple<bool, IMessageStream>> GetInboundStreamAsync(Uri streamName, PartitionKey partitionKey)
    content.vb: Public Function GetInboundStreamAsync(streamName As Uri, partitionKey As PartitionKey) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: streamName
      type: System.Uri
    - id: partitionKey
      type: System.Fabric.Messaging.Stream.PartitionKey
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(System.Guid)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(System.Guid)
  id: GetOutboundStreamAsync(System.Guid)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: GetOutboundStreamAsync(Guid)
  nameWithType: StreamManager.GetOutboundStreamAsync(Guid)
  fullName: System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetOutboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1190
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific outbound stream given its StreamId\n"
  example: []
  syntax:
    content: public Task<Tuple<bool, IMessageStream>> GetOutboundStreamAsync(Guid streamId)
    content.vb: Public Function GetOutboundStreamAsync(streamId As Guid) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: streamId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
  id: GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: GetInboundStreamAsync(Transaction, Guid)
  nameWithType: StreamManager.GetInboundStreamAsync(Transaction, Guid)
  fullName: System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Guid)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetInboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1210
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific inbound stream given its StreamId, This also verifies if the stream actually exists in the statefull consolidated store \nby ensuring the stream is fetched under a store transaction with isolation level of read repeatable.\n"
  example: []
  syntax:
    content: public Task<Tuple<bool, IMessageStream>> GetInboundStreamAsync(Transaction txn, Guid streamId)
    content.vb: Public Function GetInboundStreamAsync(txn As Transaction, streamId As Guid) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: txn
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: streamId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  id: GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: GetOutboundStreamAsync(Uri, PartitionKey)
  nameWithType: StreamManager.GetOutboundStreamAsync(Uri, PartitionKey)
  fullName: System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(System.Uri, System.Fabric.Messaging.Stream.PartitionKey)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetOutboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1228
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific outbound stream given its Stream Name and Partition Key\n"
  example: []
  syntax:
    content: public Task<Tuple<bool, IMessageStream>> GetOutboundStreamAsync(Uri streamName, PartitionKey partitionKey)
    content.vb: Public Function GetOutboundStreamAsync(streamName As Uri, partitionKey As PartitionKey) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: streamName
      type: System.Uri
    - id: partitionKey
      type: System.Fabric.Messaging.Stream.PartitionKey
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  id: GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: GetOutboundStreamAsync(Transaction, Uri, PartitionKey)
  nameWithType: StreamManager.GetOutboundStreamAsync(Transaction, Uri, PartitionKey)
  fullName: System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.Fabric.Messaging.Stream.PartitionKey)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetOutboundStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1253
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGet a specific outbound stream given its Stream Name and Partition Key, This also verifies if the stream actually exists in the statefull consolidated store \nby ensuring the stream is fetched under a store transaction with isolation level of repeatable read.\nThe reason to confirm for stream existence in the statefull store is due to a quirk in the create outbound stream () process, where in the stream\nis created in memory during the create stream process and it does not get removed if the application transaction during create stream is aborted. \n"
  example: []
  syntax:
    content: public Task<Tuple<bool, IMessageStream>> GetOutboundStreamAsync(Transaction txn, Uri streamName, PartitionKey partitionKey)
    content.vb: Public Function GetOutboundStreamAsync(txn As Transaction, streamName As Uri, partitionKey As PartitionKey) As Task(Of Tuple(Of Boolean, IMessageStream))
    parameters:
    - id: txn
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: streamName
      type: System.Uri
    - id: partitionKey
      type: System.Fabric.Messaging.Stream.PartitionKey
    return:
      type: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
      description: 'Tuple(true,stream) if the stream exists, or Tuple(false,null) if it does not '
  overload: System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
  id: CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: CreateStreamAsync(Transaction, Uri, Uri, Int32)
  nameWithType: StreamManager.CreateStreamAsync(Transaction, Uri, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.Uri, System.Int32)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1700
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreate the stream: singleton target partition; will be collapsed to a single method instead of three, using IPartitionKey\n"
  example: []
  syntax:
    content: public Task<IMessageStream> CreateStreamAsync(Transaction streamTransaction, Uri serviceInstanceName, Uri streamName, int sendQuota)
    content.vb: Public Function CreateStreamAsync(streamTransaction As Transaction, serviceInstanceName As Uri, streamName As Uri, sendQuota As Integer) As Task(Of IMessageStream)
    parameters:
    - id: streamTransaction
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: serviceInstanceName
      type: System.Uri
    - id: streamName
      type: System.Uri
    - id: sendQuota
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
      description: The created stream
  overload: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
  id: CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: CreateStreamAsync(Transaction, Uri, String, Uri, Int32)
  nameWithType: StreamManager.CreateStreamAsync(Transaction, Uri, String, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.String, System.Uri, System.Int32)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1710
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreate the stream: named target partition\n"
  example: []
  syntax:
    content: public Task<IMessageStream> CreateStreamAsync(Transaction streamTransaction, Uri serviceInstanceName, string partitionName, Uri streamName, int sendQuota)
    content.vb: Public Function CreateStreamAsync(streamTransaction As Transaction, serviceInstanceName As Uri, partitionName As String, streamName As Uri, sendQuota As Integer) As Task(Of IMessageStream)
    parameters:
    - id: streamTransaction
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: serviceInstanceName
      type: System.Uri
    - id: partitionName
      type: System.String
    - id: streamName
      type: System.Uri
    - id: sendQuota
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
      description: The created stream
  overload: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
  id: CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: CreateStreamAsync(Transaction, Uri, Int64, Uri, Int32)
  nameWithType: StreamManager.CreateStreamAsync(Transaction, Uri, Int64, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.Int64, System.Uri, System.Int32)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1721
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreate the stream: numbered target partition\n"
  example: []
  syntax:
    content: public Task<IMessageStream> CreateStreamAsync(Transaction streamTransaction, Uri serviceInstanceName, long partitionNumber, Uri streamName, int sendQuota)
    content.vb: Public Function CreateStreamAsync(streamTransaction As Transaction, serviceInstanceName As Uri, partitionNumber As Long, streamName As Uri, sendQuota As Integer) As Task(Of IMessageStream)
    parameters:
    - id: streamTransaction
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: serviceInstanceName
      type: System.Uri
    - id: partitionNumber
      type: System.Int64
    - id: streamName
      type: System.Uri
    - id: sendQuota
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
      description: The created stream
  overload: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
  id: RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: RegisterCallbackByPrefixAsync(Uri, IInboundStreamCallback)
  nameWithType: StreamManager.RegisterCallbackByPrefixAsync(Uri, IInboundStreamCallback)
  fullName: System.Fabric.Messaging.Stream.StreamManager.RegisterCallbackByPrefixAsync(System.Uri, System.Fabric.Messaging.Stream.IInboundStreamCallback)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RegisterCallbackByPrefixAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1738
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nRegister the call back for a stream name prefix. \nInbound stream callbacks are routed to this callback when streams matches the prefix.\nIn case of conflicts, the longest prefix match is selected first. \n"
  example: []
  syntax:
    content: public Task RegisterCallbackByPrefixAsync(Uri streamNamePrefix, IInboundStreamCallback streamCallback)
    content.vb: Public Function RegisterCallbackByPrefixAsync(streamNamePrefix As Uri, streamCallback As IInboundStreamCallback) As Task
    parameters:
    - id: streamNamePrefix
      type: System.Uri
      description: Stream Name Prefix - Absolute Uri
    - id: streamCallback
      type: System.Fabric.Messaging.Stream.IInboundStreamCallback
      description: Callback when stream matches the prefix
    return:
      type: System.Threading.Tasks.Task
      description: void
  overload: System.Fabric.Messaging.Stream.StreamManager.RegisterCallbackByPrefixAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      When stream name prefix is not a valid Absolute Uri, or

      when an attempt is made to register a duplicate prefix.
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
  id: CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.StreamManager
  langs:
  - csharp
  - vb
  name: CreateStreamAsync(Transaction, PartitionKey, Uri, Int32)
  nameWithType: StreamManager.CreateStreamAsync(Transaction, PartitionKey, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Fabric.Messaging.Stream.PartitionKey, System.Uri, System.Int32)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateStreamAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/StreamManager.cs
    startLine: 1765
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCreate a durable message stream: target partition encapsulated as PartitionKey object\nA durable message stream consists of storage of the following state info\n1. StreamName\n2. StreamMetaData (Quota)\n3. StreamMetaData (Send Seq. Number)\n4. StreamMetaData (Delete (Receive) Seq. Number).\n\nand creation of an instance of the inmemory message stream.\n"
  example: []
  syntax:
    content: public Task<IMessageStream> CreateStreamAsync(Transaction txn, PartitionKey targetPartition, Uri streamName, int sendQuota)
    content.vb: Public Function CreateStreamAsync(txn As Transaction, targetPartition As PartitionKey, streamName As Uri, sendQuota As Integer) As Task(Of IMessageStream)
    parameters:
    - id: txn
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: targetPartition
      type: System.Fabric.Messaging.Stream.PartitionKey
    - id: streamName
      type: System.Uri
    - id: sendQuota
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
      description: The created stream
  overload: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync*
  implements:
  - System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager
  commentId: T:System.Fabric.Messaging.Stream.IMessageStreamManager
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: IMessageStreamManager
  nameWithType: IMessageStreamManager
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager
- uid: Microsoft.ServiceFabric.Data.IReliableState
  commentId: T:Microsoft.ServiceFabric.Data.IReliableState
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: IReliableState
  nameWithType: IReliableState
  fullName: Microsoft.ServiceFabric.Data.IReliableState
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.StreamManager.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<StreamManager>()
  nameWithType: ByteArraySerializer.Serialize<StreamManager>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Messaging.Stream.StreamManager>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of StreamManager)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Messaging.Stream.StreamManager)()
  name.vb: Serialize(Of StreamManager)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<StreamManager>
    nameWithType: ByteArraySerializer.Serialize<StreamManager>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Messaging.Stream.StreamManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of StreamManager)
    nameWithType: ByteArraySerializer.Serialize(Of StreamManager)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Messaging.Stream.StreamManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream.StreamManager.PartitionIdentity*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.PartitionIdentity
  isExternal: false
  name: PartitionIdentity
  nameWithType: StreamManager.PartitionIdentity
  fullName: System.Fabric.Messaging.Stream.StreamManager.PartitionIdentity
- uid: System.Fabric.Messaging.Stream.PartitionKey
  commentId: T:System.Fabric.Messaging.Stream.PartitionKey
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: PartitionKey
  nameWithType: PartitionKey
  fullName: System.Fabric.Messaging.Stream.PartitionKey
- uid: System.Fabric.Messaging.Stream.StreamManager.Name*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.Name
  isExternal: false
  name: Name
  nameWithType: StreamManager.Name
  fullName: System.Fabric.Messaging.Stream.StreamManager.Name
- uid: Microsoft.ServiceFabric.Data.IReliableState.Name
  commentId: P:Microsoft.ServiceFabric.Data.IReliableState.Name
  parent: Microsoft.ServiceFabric.Data.IReliableState
  isExternal: false
  name: Name
  nameWithType: IReliableState.Name
  fullName: Microsoft.ServiceFabric.Data.IReliableState.Name
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Messaging.Stream.StreamManager.#ctor*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.#ctor
  isExternal: false
  name: StreamManager
  nameWithType: StreamManager.StreamManager
  fullName: System.Fabric.Messaging.Stream.StreamManager.StreamManager
- uid: System.Fabric.Messaging.Stream.StreamManager.PrepareForRemoveAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.PrepareForRemoveAsync
  isExternal: false
  name: PrepareForRemoveAsync
  nameWithType: StreamManager.PrepareForRemoveAsync
  fullName: System.Fabric.Messaging.Stream.StreamManager.PrepareForRemoveAsync
- uid: Microsoft.ServiceFabric.Replicator.Transaction
  commentId: T:Microsoft.ServiceFabric.Replicator.Transaction
  parent: Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: Microsoft.ServiceFabric.Replicator.Transaction
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Replicator
  commentId: N:Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: Microsoft.ServiceFabric.Replicator
  nameWithType: Microsoft.ServiceFabric.Replicator
  fullName: Microsoft.ServiceFabric.Replicator
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Fabric.Messaging.Stream.StreamManager.PrepareCheckpointAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.PrepareCheckpointAsync
  isExternal: false
  name: PrepareCheckpointAsync
  nameWithType: StreamManager.PrepareCheckpointAsync
  fullName: System.Fabric.Messaging.Stream.StreamManager.PrepareCheckpointAsync
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Messaging.Stream.StreamManager.PerformCheckpointAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.PerformCheckpointAsync
  isExternal: false
  name: PerformCheckpointAsync
  nameWithType: StreamManager.PerformCheckpointAsync
  fullName: System.Fabric.Messaging.Stream.StreamManager.PerformCheckpointAsync
- uid: System.Fabric.Messaging.Stream.StreamManager.CompleteCheckpointAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.CompleteCheckpointAsync
  isExternal: false
  name: CompleteCheckpointAsync
  nameWithType: StreamManager.CompleteCheckpointAsync
  fullName: System.Fabric.Messaging.Stream.StreamManager.CompleteCheckpointAsync
- uid: System.Fabric.Messaging.Stream.StreamManager.CreateOutboundStreamsEnumerableAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.CreateOutboundStreamsEnumerableAsync
  isExternal: false
  name: CreateOutboundStreamsEnumerableAsync
  nameWithType: StreamManager.CreateOutboundStreamsEnumerableAsync
  fullName: System.Fabric.Messaging.Stream.StreamManager.CreateOutboundStreamsEnumerableAsync
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: false
  name: CreateOutboundStreamsEnumerableAsync()
  nameWithType: IMessageStreamManager.CreateOutboundStreamsEnumerableAsync()
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
    name: CreateOutboundStreamsEnumerableAsync
    nameWithType: IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
    name: CreateOutboundStreamsEnumerableAsync
    nameWithType: IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateOutboundStreamsEnumerableAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.Fabric.Messaging.Stream.IMessageStream}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.Fabric.Messaging.Stream.IMessageStream}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<IMessageStream>>
  nameWithType: Task<IEnumerable<IMessageStream>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<System.Fabric.Messaging.Stream.IMessageStream>>
  nameWithType.vb: Task(Of IEnumerable(Of IMessageStream))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of System.Fabric.Messaging.Stream.IMessageStream))
  name.vb: Task(Of IEnumerable(Of IMessageStream))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.StreamManager.CreateInboundStreamsEnumerableAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.CreateInboundStreamsEnumerableAsync
  isExternal: false
  name: CreateInboundStreamsEnumerableAsync
  nameWithType: StreamManager.CreateInboundStreamsEnumerableAsync
  fullName: System.Fabric.Messaging.Stream.StreamManager.CreateInboundStreamsEnumerableAsync
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: false
  name: CreateInboundStreamsEnumerableAsync()
  nameWithType: IMessageStreamManager.CreateInboundStreamsEnumerableAsync()
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
    name: CreateInboundStreamsEnumerableAsync
    nameWithType: IMessageStreamManager.CreateInboundStreamsEnumerableAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
    name: CreateInboundStreamsEnumerableAsync
    nameWithType: IMessageStreamManager.CreateInboundStreamsEnumerableAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateInboundStreamsEnumerableAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync
  isExternal: false
  name: GetInboundStreamAsync
  nameWithType: StreamManager.GetInboundStreamAsync
  fullName: System.Fabric.Messaging.Stream.StreamManager.GetInboundStreamAsync
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Guid)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Guid)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: true
  name: GetInboundStreamAsync(Guid)
  nameWithType: IMessageStreamManager.GetInboundStreamAsync(Guid)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Guid)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Guid)
    name: GetInboundStreamAsync
    nameWithType: IMessageStreamManager.GetInboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Guid)
    name: GetInboundStreamAsync
    nameWithType: IMessageStreamManager.GetInboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
  commentId: T:System.Threading.Tasks.Task{System.Tuple{System.Boolean,System.Fabric.Messaging.Stream.IMessageStream}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Tuple<Boolean, IMessageStream>>
  nameWithType: Task<Tuple<Boolean, IMessageStream>>
  fullName: System.Threading.Tasks.Task<System.Tuple<System.Boolean, System.Fabric.Messaging.Stream.IMessageStream>>
  nameWithType.vb: Task(Of Tuple(Of Boolean, IMessageStream))
  fullname.vb: System.Threading.Tasks.Task(Of System.Tuple(Of System.Boolean, System.Fabric.Messaging.Stream.IMessageStream))
  name.vb: Task(Of Tuple(Of Boolean, IMessageStream))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: true
  name: GetInboundStreamAsync(Uri, PartitionKey)
  nameWithType: IMessageStreamManager.GetInboundStreamAsync(Uri, PartitionKey)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Uri, System.Fabric.Messaging.Stream.PartitionKey)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
    name: GetInboundStreamAsync
    nameWithType: IMessageStreamManager.GetInboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
    name: GetInboundStreamAsync
    nameWithType: IMessageStreamManager.GetInboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync
  isExternal: false
  name: GetOutboundStreamAsync
  nameWithType: StreamManager.GetOutboundStreamAsync
  fullName: System.Fabric.Messaging.Stream.StreamManager.GetOutboundStreamAsync
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Guid)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Guid)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: true
  name: GetOutboundStreamAsync(Guid)
  nameWithType: IMessageStreamManager.GetOutboundStreamAsync(Guid)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Guid)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Guid)
    name: GetOutboundStreamAsync
    nameWithType: IMessageStreamManager.GetOutboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Guid)
    name: GetOutboundStreamAsync
    nameWithType: IMessageStreamManager.GetOutboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: true
  name: GetInboundStreamAsync(Transaction, Guid)
  nameWithType: IMessageStreamManager.GetInboundStreamAsync(Transaction, Guid)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Guid)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
    name: GetInboundStreamAsync
    nameWithType: IMessageStreamManager.GetInboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Guid)
    name: GetInboundStreamAsync
    nameWithType: IMessageStreamManager.GetInboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetInboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: true
  name: GetOutboundStreamAsync(Uri, PartitionKey)
  nameWithType: IMessageStreamManager.GetOutboundStreamAsync(Uri, PartitionKey)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Uri, System.Fabric.Messaging.Stream.PartitionKey)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
    name: GetOutboundStreamAsync
    nameWithType: IMessageStreamManager.GetOutboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
    name: GetOutboundStreamAsync
    nameWithType: IMessageStreamManager.GetOutboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: true
  name: GetOutboundStreamAsync(Transaction, Uri, PartitionKey)
  nameWithType: IMessageStreamManager.GetOutboundStreamAsync(Transaction, Uri, PartitionKey)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.Fabric.Messaging.Stream.PartitionKey)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
    name: GetOutboundStreamAsync
    nameWithType: IMessageStreamManager.GetOutboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Fabric.Messaging.Stream.PartitionKey)
    name: GetOutboundStreamAsync
    nameWithType: IMessageStreamManager.GetOutboundStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.GetOutboundStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync
  isExternal: false
  name: CreateStreamAsync
  nameWithType: StreamManager.CreateStreamAsync
  fullName: System.Fabric.Messaging.Stream.StreamManager.CreateStreamAsync
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: true
  name: CreateStreamAsync(Transaction, Uri, Uri, Int32)
  nameWithType: IMessageStreamManager.CreateStreamAsync(Transaction, Uri, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.Uri, System.Int32)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
    name: CreateStreamAsync
    nameWithType: IMessageStreamManager.CreateStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Uri,System.Int32)
    name: CreateStreamAsync
    nameWithType: IMessageStreamManager.CreateStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IMessageStream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IMessageStream>
  nameWithType: Task<IMessageStream>
  fullName: System.Threading.Tasks.Task<System.Fabric.Messaging.Stream.IMessageStream>
  nameWithType.vb: Task(Of IMessageStream)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Messaging.Stream.IMessageStream)
  name.vb: Task(Of IMessageStream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Messaging.Stream.IMessageStream
    name: IMessageStream
    nameWithType: IMessageStream
    fullName: System.Fabric.Messaging.Stream.IMessageStream
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: true
  name: CreateStreamAsync(Transaction, Uri, String, Uri, Int32)
  nameWithType: IMessageStreamManager.CreateStreamAsync(Transaction, Uri, String, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.String, System.Uri, System.Int32)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
    name: CreateStreamAsync
    nameWithType: IMessageStreamManager.CreateStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.String,System.Uri,System.Int32)
    name: CreateStreamAsync
    nameWithType: IMessageStreamManager.CreateStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: true
  name: CreateStreamAsync(Transaction, Uri, Int64, Uri, Int32)
  nameWithType: IMessageStreamManager.CreateStreamAsync(Transaction, Uri, Int64, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Uri, System.Int64, System.Uri, System.Int32)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
    name: CreateStreamAsync
    nameWithType: IMessageStreamManager.CreateStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Uri,System.Int64,System.Uri,System.Int32)
    name: CreateStreamAsync
    nameWithType: IMessageStreamManager.CreateStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.StreamManager.RegisterCallbackByPrefixAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.StreamManager.RegisterCallbackByPrefixAsync
  isExternal: false
  name: RegisterCallbackByPrefixAsync
  nameWithType: StreamManager.RegisterCallbackByPrefixAsync
  fullName: System.Fabric.Messaging.Stream.StreamManager.RegisterCallbackByPrefixAsync
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: true
  name: RegisterCallbackByPrefixAsync(Uri, IInboundStreamCallback)
  nameWithType: IMessageStreamManager.RegisterCallbackByPrefixAsync(Uri, IInboundStreamCallback)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync(System.Uri, System.Fabric.Messaging.Stream.IInboundStreamCallback)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
    name: RegisterCallbackByPrefixAsync
    nameWithType: IMessageStreamManager.RegisterCallbackByPrefixAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.IInboundStreamCallback
    name: IInboundStreamCallback
    nameWithType: IInboundStreamCallback
    fullName: System.Fabric.Messaging.Stream.IInboundStreamCallback
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync(System.Uri,System.Fabric.Messaging.Stream.IInboundStreamCallback)
    name: RegisterCallbackByPrefixAsync
    nameWithType: IMessageStreamManager.RegisterCallbackByPrefixAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.RegisterCallbackByPrefixAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.IInboundStreamCallback
    name: IInboundStreamCallback
    nameWithType: IInboundStreamCallback
    fullName: System.Fabric.Messaging.Stream.IInboundStreamCallback
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Fabric.Messaging.Stream.IInboundStreamCallback
  commentId: T:System.Fabric.Messaging.Stream.IInboundStreamCallback
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: IInboundStreamCallback
  nameWithType: IInboundStreamCallback
  fullName: System.Fabric.Messaging.Stream.IInboundStreamCallback
- uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
  parent: System.Fabric.Messaging.Stream.IMessageStreamManager
  isExternal: true
  name: CreateStreamAsync(Transaction, PartitionKey, Uri, Int32)
  nameWithType: IMessageStreamManager.CreateStreamAsync(Transaction, PartitionKey, Uri, Int32)
  fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Fabric.Messaging.Stream.PartitionKey, System.Uri, System.Int32)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
    name: CreateStreamAsync
    nameWithType: IMessageStreamManager.CreateStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Fabric.Messaging.Stream.PartitionKey,System.Uri,System.Int32)
    name: CreateStreamAsync
    nameWithType: IMessageStreamManager.CreateStreamAsync
    fullName: System.Fabric.Messaging.Stream.IMessageStreamManager.CreateStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.ServiceFabric.Replicator.Transaction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Messaging.Stream.PartitionKey
    name: PartitionKey
    nameWithType: PartitionKey
    fullName: System.Fabric.Messaging.Stream.PartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
