### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.ClusterHealthQueryDescription
  commentId: T:System.Fabric.Description.ClusterHealthQueryDescription
  id: ClusterHealthQueryDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.ClusterHealthQueryDescription.#ctor
  - System.Fabric.Description.ClusterHealthQueryDescription.ApplicationHealthPolicyMap
  - System.Fabric.Description.ClusterHealthQueryDescription.ApplicationsFilter
  - System.Fabric.Description.ClusterHealthQueryDescription.EventsFilter
  - System.Fabric.Description.ClusterHealthQueryDescription.HealthPolicy
  - System.Fabric.Description.ClusterHealthQueryDescription.NodesFilter
  - System.Fabric.Description.ClusterHealthQueryDescription.ToString
  langs:
  - csharp
  - vb
  name: ClusterHealthQueryDescription
  nameWithType: ClusterHealthQueryDescription
  fullName: System.Fabric.Description.ClusterHealthQueryDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClusterHealthQueryDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
    startLine: 16
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Provides query input for getting <xref href=\"System.Fabric.Health.ClusterHealth\" data-throw-if-not-resolved=\"false\"></xref>. Used by \n<xref href=\"System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public sealed class ClusterHealthQueryDescription
    content.vb: Public NotInheritable Class ClusterHealthQueryDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.ClusterHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.ClusterHealthQueryDescription.#ctor
  commentId: M:System.Fabric.Description.ClusterHealthQueryDescription.#ctor
  id: '#ctor'
  parent: System.Fabric.Description.ClusterHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ClusterHealthQueryDescription()
  nameWithType: ClusterHealthQueryDescription.ClusterHealthQueryDescription()
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.ClusterHealthQueryDescription()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
    startLine: 21
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Description.ClusterHealthQueryDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ClusterHealthQueryDescription()
    content.vb: Public Sub New
  overload: System.Fabric.Description.ClusterHealthQueryDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ClusterHealthQueryDescription.HealthPolicy
  commentId: P:System.Fabric.Description.ClusterHealthQueryDescription.HealthPolicy
  id: HealthPolicy
  parent: System.Fabric.Description.ClusterHealthQueryDescription
  langs:
  - csharp
  - vb
  name: HealthPolicy
  nameWithType: ClusterHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.HealthPolicy
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthPolicy
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
    startLine: 33
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the <xref href=\"System.Fabric.Health.ClusterHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate the cluster health. The policy \nwill be used to evaluate the aggregated health state of the events reported on cluster as well as the aggregated health states of the nodes.</p>\n"
  example: []
  syntax:
    content: public ClusterHealthPolicy HealthPolicy { get; set; }
    content.vb: Public Property HealthPolicy As ClusterHealthPolicy
    parameters: []
    return:
      type: System.Fabric.Health.ClusterHealthPolicy
      description: "\n<p>The <xref href=\"System.Fabric.Health.ClusterHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate the cluster health.</p>\n"
  overload: System.Fabric.Description.ClusterHealthQueryDescription.HealthPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ClusterHealthQueryDescription.EventsFilter
  commentId: P:System.Fabric.Description.ClusterHealthQueryDescription.EventsFilter
  id: EventsFilter
  parent: System.Fabric.Description.ClusterHealthQueryDescription
  langs:
  - csharp
  - vb
  name: EventsFilter
  nameWithType: ClusterHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.EventsFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EventsFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
    startLine: 48
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for the collection of <xref href=\"System.Fabric.Health.HealthEvent\" data-throw-if-not-resolved=\"false\"></xref> reported on the cluster.</p>\n"
  remarks: "<p> Only events that match \n    the filter will be returned. All events will be used to evaluate the cluster aggregated health state.\n    If the filter is not specified, all events are returned.</p>"
  example: []
  syntax:
    content: public HealthEventsFilter EventsFilter { get; set; }
    content.vb: Public Property EventsFilter As HealthEventsFilter
    parameters: []
    return:
      type: System.Fabric.Health.HealthEventsFilter
      description: "\n<p>The filter for the collection of <xref href=\"System.Fabric.Health.HealthEvent\" data-throw-if-not-resolved=\"false\"></xref> reported on the cluster.</p>\n"
  overload: System.Fabric.Description.ClusterHealthQueryDescription.EventsFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ClusterHealthQueryDescription.NodesFilter
  commentId: P:System.Fabric.Description.ClusterHealthQueryDescription.NodesFilter
  id: NodesFilter
  parent: System.Fabric.Description.ClusterHealthQueryDescription
  langs:
  - csharp
  - vb
  name: NodesFilter
  nameWithType: ClusterHealthQueryDescription.NodesFilter
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.NodesFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodesFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
    startLine: 64
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for <xref href=\"System.Fabric.Health.NodeHealthState\" data-throw-if-not-resolved=\"false\"></xref> children. Only children that match the filter \nwill be returned.</p>\n"
  remarks: "<p> Only nodes that match the filter will be returned. \n    All nodes will be used to evaluate the cluster aggregated health state.\n    If the filter is not specified, all cluster nodes are returned.</p>"
  example: []
  syntax:
    content: public NodeHealthStatesFilter NodesFilter { get; set; }
    content.vb: Public Property NodesFilter As NodeHealthStatesFilter
    parameters: []
    return:
      type: System.Fabric.Health.NodeHealthStatesFilter
      description: "\n<p>The filter for <xref href=\"System.Fabric.Health.NodeHealthState\" data-throw-if-not-resolved=\"false\"></xref> children.</p>\n"
  overload: System.Fabric.Description.ClusterHealthQueryDescription.NodesFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ClusterHealthQueryDescription.ApplicationsFilter
  commentId: P:System.Fabric.Description.ClusterHealthQueryDescription.ApplicationsFilter
  id: ApplicationsFilter
  parent: System.Fabric.Description.ClusterHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ApplicationsFilter
  nameWithType: ClusterHealthQueryDescription.ApplicationsFilter
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.ApplicationsFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationsFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
    startLine: 80
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for <xref href=\"System.Fabric.Health.ApplicationHealthState\" data-throw-if-not-resolved=\"false\"></xref> children. Only children that match the \nfilter will be returned.</p>\n"
  remarks: "<p> Only applications that match the filter will be returned. \n    All applications will be used to evaluate the cluster aggregated health state.\n    If the filter is not specified, all cluster applications are returned.</p>"
  example: []
  syntax:
    content: public ApplicationHealthStatesFilter ApplicationsFilter { get; set; }
    content.vb: Public Property ApplicationsFilter As ApplicationHealthStatesFilter
    parameters: []
    return:
      type: System.Fabric.Health.ApplicationHealthStatesFilter
      description: "\n<p>The filter for <xref href=\"System.Fabric.Health.ApplicationHealthState\" data-throw-if-not-resolved=\"false\"></xref> children.</p>\n"
  overload: System.Fabric.Description.ClusterHealthQueryDescription.ApplicationsFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ClusterHealthQueryDescription.ApplicationHealthPolicyMap
  commentId: P:System.Fabric.Description.ClusterHealthQueryDescription.ApplicationHealthPolicyMap
  id: ApplicationHealthPolicyMap
  parent: System.Fabric.Description.ClusterHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ApplicationHealthPolicyMap
  nameWithType: ClusterHealthQueryDescription.ApplicationHealthPolicyMap
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.ApplicationHealthPolicyMap
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationHealthPolicyMap
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
    startLine: 96
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the application health policies used to evaluate the health of the applications from the cluster. Each entry specifies \nas key the application name and as value an <xref href=\"System.Fabric.Health.ApplicationHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate the \napplication health.</p>\n"
  remarks: "<p>If an application is not specified in the map, the <xref href=\"System.Fabric.Health.ApplicationHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> found \n    in its application manifest will be used for evaluation. The map is empty by default.</p>"
  example: []
  syntax:
    content: public ApplicationHealthPolicyMap ApplicationHealthPolicyMap { get; }
    content.vb: Public ReadOnly Property ApplicationHealthPolicyMap As ApplicationHealthPolicyMap
    parameters: []
    return:
      type: System.Fabric.Health.ApplicationHealthPolicyMap
      description: "\n<p>The application health policies used to evaluate the health of the applications from the cluster.</p>\n"
  overload: System.Fabric.Description.ClusterHealthQueryDescription.ApplicationHealthPolicyMap*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ClusterHealthQueryDescription.ToString
  commentId: M:System.Fabric.Description.ClusterHealthQueryDescription.ToString
  id: ToString
  parent: System.Fabric.Description.ClusterHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ClusterHealthQueryDescription.ToString()
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ClusterHealthQueryDescription.cs
    startLine: 106
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\nGets a string representation of the health query description.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the health query description.
  overridden: System.Object.ToString
  overload: System.Fabric.Description.ClusterHealthQueryDescription.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health.ClusterHealth
  commentId: T:System.Fabric.Health.ClusterHealth
  isExternal: false
  name: ClusterHealth
  nameWithType: ClusterHealth
  fullName: System.Fabric.Health.ClusterHealth
- uid: System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription)
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ClusterHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ClusterHealthQueryDescription>()
  nameWithType: ByteArraySerializer.Serialize<ClusterHealthQueryDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ClusterHealthQueryDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ClusterHealthQueryDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ClusterHealthQueryDescription)()
  name.vb: Serialize(Of ClusterHealthQueryDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ClusterHealthQueryDescription>
    nameWithType: ByteArraySerializer.Serialize<ClusterHealthQueryDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ClusterHealthQueryDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ClusterHealthQueryDescription)
    nameWithType: ByteArraySerializer.Serialize(Of ClusterHealthQueryDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ClusterHealthQueryDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.ClusterHealthQueryDescription
  commentId: T:System.Fabric.Description.ClusterHealthQueryDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ClusterHealthQueryDescription
  nameWithType: ClusterHealthQueryDescription
  fullName: System.Fabric.Description.ClusterHealthQueryDescription
- uid: System.Fabric.Description.ClusterHealthQueryDescription.#ctor*
  commentId: Overload:System.Fabric.Description.ClusterHealthQueryDescription.#ctor
  isExternal: false
  name: ClusterHealthQueryDescription
  nameWithType: ClusterHealthQueryDescription.ClusterHealthQueryDescription
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.ClusterHealthQueryDescription
- uid: System.Fabric.Health.ClusterHealthPolicy
  commentId: T:System.Fabric.Health.ClusterHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ClusterHealthPolicy
  nameWithType: ClusterHealthPolicy
  fullName: System.Fabric.Health.ClusterHealthPolicy
- uid: System.Fabric.Description.ClusterHealthQueryDescription.HealthPolicy*
  commentId: Overload:System.Fabric.Description.ClusterHealthQueryDescription.HealthPolicy
  isExternal: false
  name: HealthPolicy
  nameWithType: ClusterHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.HealthPolicy
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.Health.HealthEvent
  commentId: T:System.Fabric.Health.HealthEvent
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: System.Fabric.Health.HealthEvent
- uid: System.Fabric.Description.ClusterHealthQueryDescription.EventsFilter*
  commentId: Overload:System.Fabric.Description.ClusterHealthQueryDescription.EventsFilter
  isExternal: false
  name: EventsFilter
  nameWithType: ClusterHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.EventsFilter
- uid: System.Fabric.Health.HealthEventsFilter
  commentId: T:System.Fabric.Health.HealthEventsFilter
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEventsFilter
  nameWithType: HealthEventsFilter
  fullName: System.Fabric.Health.HealthEventsFilter
- uid: System.Fabric.Health.NodeHealthState
  commentId: T:System.Fabric.Health.NodeHealthState
  parent: System.Fabric.Health
  isExternal: false
  name: NodeHealthState
  nameWithType: NodeHealthState
  fullName: System.Fabric.Health.NodeHealthState
- uid: System.Fabric.Description.ClusterHealthQueryDescription.NodesFilter*
  commentId: Overload:System.Fabric.Description.ClusterHealthQueryDescription.NodesFilter
  isExternal: false
  name: NodesFilter
  nameWithType: ClusterHealthQueryDescription.NodesFilter
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.NodesFilter
- uid: System.Fabric.Health.NodeHealthStatesFilter
  commentId: T:System.Fabric.Health.NodeHealthStatesFilter
  parent: System.Fabric.Health
  isExternal: false
  name: NodeHealthStatesFilter
  nameWithType: NodeHealthStatesFilter
  fullName: System.Fabric.Health.NodeHealthStatesFilter
- uid: System.Fabric.Health.ApplicationHealthState
  commentId: T:System.Fabric.Health.ApplicationHealthState
  parent: System.Fabric.Health
  isExternal: false
  name: ApplicationHealthState
  nameWithType: ApplicationHealthState
  fullName: System.Fabric.Health.ApplicationHealthState
- uid: System.Fabric.Description.ClusterHealthQueryDescription.ApplicationsFilter*
  commentId: Overload:System.Fabric.Description.ClusterHealthQueryDescription.ApplicationsFilter
  isExternal: false
  name: ApplicationsFilter
  nameWithType: ClusterHealthQueryDescription.ApplicationsFilter
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.ApplicationsFilter
- uid: System.Fabric.Health.ApplicationHealthStatesFilter
  commentId: T:System.Fabric.Health.ApplicationHealthStatesFilter
  parent: System.Fabric.Health
  isExternal: false
  name: ApplicationHealthStatesFilter
  nameWithType: ApplicationHealthStatesFilter
  fullName: System.Fabric.Health.ApplicationHealthStatesFilter
- uid: System.Fabric.Health.ApplicationHealthPolicy
  commentId: T:System.Fabric.Health.ApplicationHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ApplicationHealthPolicy
  nameWithType: ApplicationHealthPolicy
  fullName: System.Fabric.Health.ApplicationHealthPolicy
- uid: System.Fabric.Description.ClusterHealthQueryDescription.ApplicationHealthPolicyMap*
  commentId: Overload:System.Fabric.Description.ClusterHealthQueryDescription.ApplicationHealthPolicyMap
  isExternal: false
  name: ApplicationHealthPolicyMap
  nameWithType: ClusterHealthQueryDescription.ApplicationHealthPolicyMap
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.ApplicationHealthPolicyMap
- uid: System.Fabric.Health.ApplicationHealthPolicyMap
  commentId: T:System.Fabric.Health.ApplicationHealthPolicyMap
  parent: System.Fabric.Health
  isExternal: false
  name: ApplicationHealthPolicyMap
  nameWithType: ApplicationHealthPolicyMap
  fullName: System.Fabric.Health.ApplicationHealthPolicyMap
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ClusterHealthQueryDescription.ToString*
  commentId: Overload:System.Fabric.Description.ClusterHealthQueryDescription.ToString
  isExternal: false
  name: ToString
  nameWithType: ClusterHealthQueryDescription.ToString
  fullName: System.Fabric.Description.ClusterHealthQueryDescription.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
