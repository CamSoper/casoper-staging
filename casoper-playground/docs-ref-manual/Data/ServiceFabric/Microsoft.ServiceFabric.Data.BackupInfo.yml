### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.BackupInfo
  commentId: T:Microsoft.ServiceFabric.Data.BackupInfo
  id: BackupInfo
  parent: Microsoft.ServiceFabric.Data
  children:
  - Microsoft.ServiceFabric.Data.BackupInfo.#ctor(System.String,Microsoft.ServiceFabric.Data.BackupOption,Microsoft.ServiceFabric.Data.BackupInfo.BackupVersion)
  - Microsoft.ServiceFabric.Data.BackupInfo.Directory
  - Microsoft.ServiceFabric.Data.BackupInfo.Option
  - Microsoft.ServiceFabric.Data.BackupInfo.ToString
  - Microsoft.ServiceFabric.Data.BackupInfo.Version
  langs:
  - csharp
  - vb
  name: BackupInfo
  nameWithType: BackupInfo
  fullName: Microsoft.ServiceFabric.Data.BackupInfo
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BackupInfo
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
    startLine: 16
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nProvides information about the backup.\n"
  example: []
  syntax:
    content: public class BackupInfo
    content.vb: Public Class BackupInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Data.BackupInfo.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Data.BackupInfo.#ctor(System.String,Microsoft.ServiceFabric.Data.BackupOption,Microsoft.ServiceFabric.Data.BackupInfo.BackupVersion)
  commentId: M:Microsoft.ServiceFabric.Data.BackupInfo.#ctor(System.String,Microsoft.ServiceFabric.Data.BackupOption,Microsoft.ServiceFabric.Data.BackupInfo.BackupVersion)
  id: '#ctor(System.String,Microsoft.ServiceFabric.Data.BackupOption,Microsoft.ServiceFabric.Data.BackupInfo.BackupVersion)'
  parent: Microsoft.ServiceFabric.Data.BackupInfo
  langs:
  - csharp
  - vb
  name: BackupInfo(String, BackupOption, BackupInfo.BackupVersion)
  nameWithType: BackupInfo.BackupInfo(String, BackupOption, BackupInfo.BackupVersion)
  fullName: Microsoft.ServiceFabric.Data.BackupInfo.BackupInfo(System.String, Microsoft.ServiceFabric.Data.BackupOption, Microsoft.ServiceFabric.Data.BackupInfo.BackupVersion)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
    startLine: 24
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nInitializes a new instance of the <cref name=\"BackupInfo\"></cref> class.\n"
  example: []
  syntax:
    content: public BackupInfo(string directory, BackupOption option, BackupInfo.BackupVersion version)
    content.vb: Public Sub New(directory As String, option As BackupOption, version As BackupInfo.BackupVersion)
    parameters:
    - id: directory
      type: System.String
      description: Folder path that contains the backup.
    - id: option
      type: Microsoft.ServiceFabric.Data.BackupOption
      description: <cref name="BackupOption"></cref> that was used to take the backup.
    - id: version
      type: Microsoft.ServiceFabric.Data.BackupInfo.BackupVersion
      description: <cref name="BackupVersion"></cref> of the backup.
  overload: Microsoft.ServiceFabric.Data.BackupInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.BackupInfo.Directory
  commentId: P:Microsoft.ServiceFabric.Data.BackupInfo.Directory
  id: Directory
  parent: Microsoft.ServiceFabric.Data.BackupInfo
  langs:
  - csharp
  - vb
  name: Directory
  nameWithType: BackupInfo.Directory
  fullName: Microsoft.ServiceFabric.Data.BackupInfo.Directory
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Directory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
    startLine: 35
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets the directory where the backup was created. \n"
  example: []
  syntax:
    content: public string Directory { get; }
    content.vb: Public ReadOnly Property Directory As String
    parameters: []
    return:
      type: System.String
      description: The directory containing the backup.
  overload: Microsoft.ServiceFabric.Data.BackupInfo.Directory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Data.BackupInfo.Option
  commentId: P:Microsoft.ServiceFabric.Data.BackupInfo.Option
  id: Option
  parent: Microsoft.ServiceFabric.Data.BackupInfo
  langs:
  - csharp
  - vb
  name: Option
  nameWithType: BackupInfo.Option
  fullName: Microsoft.ServiceFabric.Data.BackupInfo.Option
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Option
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
    startLine: 41
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets the backup option used.\n"
  example: []
  syntax:
    content: public BackupOption Option { get; }
    content.vb: Public ReadOnly Property Option As BackupOption
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.BackupOption
      description: The <cref name="BackupOption"></cref> that was used to take the backup.
  overload: Microsoft.ServiceFabric.Data.BackupInfo.Option*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Data.BackupInfo.Version
  commentId: P:Microsoft.ServiceFabric.Data.BackupInfo.Version
  id: Version
  parent: Microsoft.ServiceFabric.Data.BackupInfo
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: BackupInfo.Version
  fullName: Microsoft.ServiceFabric.Data.BackupInfo.Version
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Version
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
    startLine: 47
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets the latest epoch included in the backup.\n"
  example: []
  syntax:
    content: public BackupInfo.BackupVersion Version { get; }
    content.vb: Public ReadOnly Property Version As BackupInfo.BackupVersion
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.BackupInfo.BackupVersion
      description: <cref name="BackupVersion"></cref> of the backup.
  overload: Microsoft.ServiceFabric.Data.BackupInfo.Version*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Data.BackupInfo.ToString
  commentId: M:Microsoft.ServiceFabric.Data.BackupInfo.ToString
  id: ToString
  parent: Microsoft.ServiceFabric.Data.BackupInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BackupInfo.ToString()
  fullName: Microsoft.ServiceFabric.Data.BackupInfo.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupInfo.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nReturns a string that represents this instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string that represents this instance.
  overridden: System.Object.ToString
  overload: Microsoft.ServiceFabric.Data.BackupInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.BackupInfo.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<BackupInfo>()
  nameWithType: ByteArraySerializer.Serialize<BackupInfo>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.BackupInfo>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of BackupInfo)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.BackupInfo)()
  name.vb: Serialize(Of BackupInfo)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<BackupInfo>
    nameWithType: ByteArraySerializer.Serialize<BackupInfo>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.BackupInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of BackupInfo)
    nameWithType: ByteArraySerializer.Serialize(Of BackupInfo)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.BackupInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.BackupInfo.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Data.BackupInfo.#ctor
  isExternal: false
  name: BackupInfo
  nameWithType: BackupInfo.BackupInfo
  fullName: Microsoft.ServiceFabric.Data.BackupInfo.BackupInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Data.BackupOption
  commentId: T:Microsoft.ServiceFabric.Data.BackupOption
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: BackupOption
  nameWithType: BackupOption
  fullName: Microsoft.ServiceFabric.Data.BackupOption
- uid: Microsoft.ServiceFabric.Data.BackupInfo.BackupVersion
  commentId: T:Microsoft.ServiceFabric.Data.BackupInfo.BackupVersion
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: BackupInfo.BackupVersion
  nameWithType: BackupInfo.BackupVersion
  fullName: Microsoft.ServiceFabric.Data.BackupInfo.BackupVersion
- uid: Microsoft.ServiceFabric.Data.BackupInfo.Directory*
  commentId: Overload:Microsoft.ServiceFabric.Data.BackupInfo.Directory
  isExternal: false
  name: Directory
  nameWithType: BackupInfo.Directory
  fullName: Microsoft.ServiceFabric.Data.BackupInfo.Directory
- uid: Microsoft.ServiceFabric.Data.BackupInfo.Option*
  commentId: Overload:Microsoft.ServiceFabric.Data.BackupInfo.Option
  isExternal: false
  name: Option
  nameWithType: BackupInfo.Option
  fullName: Microsoft.ServiceFabric.Data.BackupInfo.Option
- uid: Microsoft.ServiceFabric.Data.BackupInfo.Version*
  commentId: Overload:Microsoft.ServiceFabric.Data.BackupInfo.Version
  isExternal: false
  name: Version
  nameWithType: BackupInfo.Version
  fullName: Microsoft.ServiceFabric.Data.BackupInfo.Version
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.BackupInfo.ToString*
  commentId: Overload:Microsoft.ServiceFabric.Data.BackupInfo.ToString
  isExternal: false
  name: ToString
  nameWithType: BackupInfo.ToString
  fullName: Microsoft.ServiceFabric.Data.BackupInfo.ToString
