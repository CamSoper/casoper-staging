### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.ServiceHealthStateChunk
  commentId: T:System.Fabric.Health.ServiceHealthStateChunk
  id: ServiceHealthStateChunk
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.ServiceHealthStateChunk.HealthState
  - System.Fabric.Health.ServiceHealthStateChunk.PartitionHealthStateChunks
  - System.Fabric.Health.ServiceHealthStateChunk.ServiceName
  - System.Fabric.Health.ServiceHealthStateChunk.ToString
  langs:
  - csharp
  - vb
  name: ServiceHealthStateChunk
  nameWithType: ServiceHealthStateChunk
  fullName: System.Fabric.Health.ServiceHealthStateChunk
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceHealthStateChunk
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateChunk.cs
    startLine: 13
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nRepresents a service health state chunk, which contains basic health information about the service.\n"
  example: []
  syntax:
    content: public sealed class ServiceHealthStateChunk
    content.vb: Public NotInheritable Class ServiceHealthStateChunk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.ServiceHealthStateChunk.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.ServiceHealthStateChunk.ServiceName
  commentId: P:System.Fabric.Health.ServiceHealthStateChunk.ServiceName
  id: ServiceName
  parent: System.Fabric.Health.ServiceHealthStateChunk
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: ServiceHealthStateChunk.ServiceName
  fullName: System.Fabric.Health.ServiceHealthStateChunk.ServiceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceName
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateChunk.cs
    startLine: 26
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the service name, which uniquely identifies the service.\n"
  example: []
  syntax:
    content: public Uri ServiceName { get; }
    content.vb: Public ReadOnly Property ServiceName As Uri
    parameters: []
    return:
      type: System.Uri
      description: The service name.
  overload: System.Fabric.Health.ServiceHealthStateChunk.ServiceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ServiceHealthStateChunk.HealthState
  commentId: P:System.Fabric.Health.ServiceHealthStateChunk.HealthState
  id: HealthState
  parent: System.Fabric.Health.ServiceHealthStateChunk
  langs:
  - csharp
  - vb
  name: HealthState
  nameWithType: ServiceHealthStateChunk.HealthState
  fullName: System.Fabric.Health.ServiceHealthStateChunk.HealthState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthState
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateChunk.cs
    startLine: 36
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the aggregated health state of the service, computed based on all reported health events, its children and the application health policy.\n"
  example: []
  syntax:
    content: public HealthState HealthState { get; }
    content.vb: Public ReadOnly Property HealthState As HealthState
    parameters: []
    return:
      type: System.Fabric.Health.HealthState
      description: The aggregated health state of the service.
  overload: System.Fabric.Health.ServiceHealthStateChunk.HealthState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ServiceHealthStateChunk.PartitionHealthStateChunks
  commentId: P:System.Fabric.Health.ServiceHealthStateChunk.PartitionHealthStateChunks
  id: PartitionHealthStateChunks
  parent: System.Fabric.Health.ServiceHealthStateChunk
  langs:
  - csharp
  - vb
  name: PartitionHealthStateChunks
  nameWithType: ServiceHealthStateChunk.PartitionHealthStateChunks
  fullName: System.Fabric.Health.ServiceHealthStateChunk.PartitionHealthStateChunks
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionHealthStateChunks
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateChunk.cs
    startLine: 52
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the list of the service partition health state chunks that respect the input filters.\n"
  remarks: "\n<p>By default, no children are included in results. Users can request to include\nsome children based on desired health or other information. \nFor example, users can request to include all partitions that have health state error.\nRegardless of filter value, all children are used to compute service aggregated health.</p>\n"
  example: []
  syntax:
    content: public PartitionHealthStateChunkList PartitionHealthStateChunks { get; }
    content.vb: Public ReadOnly Property PartitionHealthStateChunks As PartitionHealthStateChunkList
    parameters: []
    return:
      type: System.Fabric.Health.PartitionHealthStateChunkList
      description: The list of the partition health state chunks that respect the input filters.
  overload: System.Fabric.Health.ServiceHealthStateChunk.PartitionHealthStateChunks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ServiceHealthStateChunk.ToString
  commentId: M:System.Fabric.Health.ServiceHealthStateChunk.ToString
  id: ToString
  parent: System.Fabric.Health.ServiceHealthStateChunk
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ServiceHealthStateChunk.ToString()
  fullName: System.Fabric.Health.ServiceHealthStateChunk.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateChunk.cs
    startLine: 62
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nCreates a string description of the service health state chunk.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: String description of the health state chunk.
  overridden: System.Object.ToString
  overload: System.Fabric.Health.ServiceHealthStateChunk.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ServiceHealthStateChunk.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceHealthStateChunk>()
  nameWithType: ByteArraySerializer.Serialize<ServiceHealthStateChunk>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ServiceHealthStateChunk>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceHealthStateChunk)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ServiceHealthStateChunk)()
  name.vb: Serialize(Of ServiceHealthStateChunk)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceHealthStateChunk>
    nameWithType: ByteArraySerializer.Serialize<ServiceHealthStateChunk>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ServiceHealthStateChunk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceHealthStateChunk)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceHealthStateChunk)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ServiceHealthStateChunk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.ServiceHealthStateChunk.ServiceName*
  commentId: Overload:System.Fabric.Health.ServiceHealthStateChunk.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: ServiceHealthStateChunk.ServiceName
  fullName: System.Fabric.Health.ServiceHealthStateChunk.ServiceName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Health.ServiceHealthStateChunk.HealthState*
  commentId: Overload:System.Fabric.Health.ServiceHealthStateChunk.HealthState
  isExternal: false
  name: HealthState
  nameWithType: ServiceHealthStateChunk.HealthState
  fullName: System.Fabric.Health.ServiceHealthStateChunk.HealthState
- uid: System.Fabric.Health.HealthState
  commentId: T:System.Fabric.Health.HealthState
  parent: System.Fabric.Health
  isExternal: false
  name: HealthState
  nameWithType: HealthState
  fullName: System.Fabric.Health.HealthState
- uid: System.Fabric.Health.ServiceHealthStateChunk.PartitionHealthStateChunks*
  commentId: Overload:System.Fabric.Health.ServiceHealthStateChunk.PartitionHealthStateChunks
  isExternal: false
  name: PartitionHealthStateChunks
  nameWithType: ServiceHealthStateChunk.PartitionHealthStateChunks
  fullName: System.Fabric.Health.ServiceHealthStateChunk.PartitionHealthStateChunks
- uid: System.Fabric.Health.PartitionHealthStateChunkList
  commentId: T:System.Fabric.Health.PartitionHealthStateChunkList
  parent: System.Fabric.Health
  isExternal: false
  name: PartitionHealthStateChunkList
  nameWithType: PartitionHealthStateChunkList
  fullName: System.Fabric.Health.PartitionHealthStateChunkList
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ServiceHealthStateChunk.ToString*
  commentId: Overload:System.Fabric.Health.ServiceHealthStateChunk.ToString
  isExternal: false
  name: ToString
  nameWithType: ServiceHealthStateChunk.ToString
  fullName: System.Fabric.Health.ServiceHealthStateChunk.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
