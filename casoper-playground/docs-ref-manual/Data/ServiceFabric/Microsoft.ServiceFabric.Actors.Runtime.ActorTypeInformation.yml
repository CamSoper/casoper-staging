### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  id: ActorTypeInformation
  parent: Microsoft.ServiceFabric.Actors.Runtime
  children:
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.#ctor
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.EventInterfaceTypes
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.Get(System.Type)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ImplementationType
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.InterfaceTypes
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsAbstract
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsRemindable
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ServiceName
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.StatePersistence
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.TryGet(System.Type,Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation@)
  langs:
  - csharp
  - vb
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorTypeInformation
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nContains information about the type implementing an actor.\n"
  example: []
  syntax:
    content: public sealed class ActorTypeInformation
    content.vb: Public NotInheritable Class ActorTypeInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.#ctor
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  langs:
  - csharp
  - vb
  name: ActorTypeInformation()
  nameWithType: ActorTypeInformation.ActorTypeInformation()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ActorTypeInformation()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
    startLine: 20
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nInitializes a new instance of the ActorTypeInformation class.\n"
  example: []
  syntax:
    content: public ActorTypeInformation()
    content.vb: Public Sub New
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ImplementationType
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ImplementationType
  id: ImplementationType
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  langs:
  - csharp
  - vb
  name: ImplementationType
  nameWithType: ActorTypeInformation.ImplementationType
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ImplementationType
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ImplementationType
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets type of the class implementing the actor.\n"
  example: []
  syntax:
    content: public Type ImplementationType { get; }
    content.vb: Public ReadOnly Property ImplementationType As Type
    parameters: []
    return:
      type: System.Type
      description: <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the class implementing the actor.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ImplementationType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.InterfaceTypes
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.InterfaceTypes
  id: InterfaceTypes
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  langs:
  - csharp
  - vb
  name: InterfaceTypes
  nameWithType: ActorTypeInformation.InterfaceTypes
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.InterfaceTypes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InterfaceTypes
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
    startLine: 34
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets the actor interface types which derive from <xref href=\"Microsoft.ServiceFabric.Actors.IActor\" data-throw-if-not-resolved=\"false\"></xref> and implemented by actor class.\n"
  example: []
  syntax:
    content: public IEnumerable<Type> InterfaceTypes { get; }
    content.vb: Public ReadOnly Property InterfaceTypes As IEnumerable(Of Type)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: An enumerator that can be used to iterate through the actor interface type.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.InterfaceTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.EventInterfaceTypes
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.EventInterfaceTypes
  id: EventInterfaceTypes
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  langs:
  - csharp
  - vb
  name: EventInterfaceTypes
  nameWithType: ActorTypeInformation.EventInterfaceTypes
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.EventInterfaceTypes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EventInterfaceTypes
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
    startLine: 40
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets actor event interface which the actor class implements.\n"
  example: []
  syntax:
    content: public IEnumerable<Type> EventInterfaceTypes { get; }
    content.vb: Public ReadOnly Property EventInterfaceTypes As IEnumerable(Of Type)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: An enumerator hat can be used to iterate through the actor event interface which the actor class implements.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.EventInterfaceTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ServiceName
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ServiceName
  id: ServiceName
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: ActorTypeInformation.ServiceName
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ServiceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
    startLine: 46
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets service name if specified using <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute\" data-throw-if-not-resolved=\"false\"></xref> for actor class.\n"
  example: []
  syntax:
    content: public string ServiceName { get; }
    content.vb: Public ReadOnly Property ServiceName As String
    parameters: []
    return:
      type: System.String
      description: Service name if specified using <xref href="Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute" data-throw-if-not-resolved="false"></xref> for actor class, null if attribute is not used.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ServiceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsAbstract
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsAbstract
  id: IsAbstract
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  langs:
  - csharp
  - vb
  name: IsAbstract
  nameWithType: ActorTypeInformation.IsAbstract
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsAbstract
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsAbstract
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
    startLine: 52
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets if class implementing actor is abstract.\n"
  example: []
  syntax:
    content: public bool IsAbstract { get; }
    content.vb: Public ReadOnly Property IsAbstract As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if class implementing actor is abstract, otherwise false.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsAbstract*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsRemindable
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsRemindable
  id: IsRemindable
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  langs:
  - csharp
  - vb
  name: IsRemindable
  nameWithType: ActorTypeInformation.IsRemindable
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsRemindable
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsRemindable
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
    startLine: 58
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets if the actor class implements <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.IRemindable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool IsRemindable { get; }
    content.vb: Public ReadOnly Property IsRemindable As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if actor class implements <xref href="Microsoft.ServiceFabric.Actors.Runtime.IRemindable" data-throw-if-not-resolved="false"></xref>, otherwise false.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsRemindable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.StatePersistence
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.StatePersistence
  id: StatePersistence
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  langs:
  - csharp
  - vb
  name: StatePersistence
  nameWithType: ActorTypeInformation.StatePersistence
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.StatePersistence
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StatePersistence
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
    startLine: 64
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGet the <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.StatePersistence\" data-throw-if-not-resolved=\"false\"></xref> enum representing type of state persistence for the actor.\n"
  example: []
  syntax:
    content: public StatePersistence StatePersistence { get; }
    content.vb: Public ReadOnly Property StatePersistence As StatePersistence
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Actors.Runtime.StatePersistence
      description: <xref href="Microsoft.ServiceFabric.Actors.Runtime.StatePersistence" data-throw-if-not-resolved="false"></xref> representing type of state persistence for the actor.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.StatePersistence*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.TryGet(System.Type,Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation@)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.TryGet(System.Type,Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation@)
  id: TryGet(System.Type,Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation@)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  langs:
  - csharp
  - vb
  name: TryGet(Type, out ActorTypeInformation)
  nameWithType: ActorTypeInformation.TryGet(Type, out ActorTypeInformation)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.TryGet(System.Type, out Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TryGet
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
    startLine: 81
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nCreates <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation\" data-throw-if-not-resolved=\"false\"></xref> from actorType.\n"
  remarks: "\n<p>Creation of ActorTypeInformation from actorType will fail when </p> \n<p>1. <xref href=\"System.Type.BaseType\" data-throw-if-not-resolved=\"false\"></xref> for actorType is not of type <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.Actor\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>2. actorType does not implement an interface deriving from <xref href=\"Microsoft.ServiceFabric.Actors.IActor\" data-throw-if-not-resolved=\"false\"></xref> and is not marked as abstract.</p>\n<p>3. actorType implements more than one interface which derives from <xref href=\"Microsoft.ServiceFabric.Actors.IActor\" data-throw-if-not-resolved=\"false\"></xref> \nbut doesn't have <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public static bool TryGet(Type actorType, out ActorTypeInformation actorTypeInformation)
    content.vb: Public Shared Function TryGet(actorType As Type, ByRef actorTypeInformation As ActorTypeInformation) As Boolean
    parameters:
    - id: actorType
      type: System.Type
      description: Type of class implementing the actor to create ActorTypeInforamtion for.
    - id: actorTypeInformation
      type: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
      description: >-
        When this method returns, contains ActorTypeInformation, if the creation of

        ActorTypeInformation from actorType succeeded, or null if the creation failed.

        The creation fails if the actorType parameter is null or it does not implement an actor.
    return:
      type: System.Boolean
      description: true if ActorTypeInformation was successfully created for actorType; otherwise, false.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.TryGet*
  nameWithType.vb: ActorTypeInformation.TryGet(Type, ByRef ActorTypeInformation)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.TryGet(System.Type, ByRef Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  name.vb: TryGet(Type, ByRef ActorTypeInformation)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.Get(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.Get(System.Type)
  id: Get(System.Type)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  langs:
  - csharp
  - vb
  name: Get(Type)
  nameWithType: ActorTypeInformation.Get(Type)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.Get(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Get
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeInformation.cs
    startLine: 107
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nCreates <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation\" data-throw-if-not-resolved=\"false\"></xref> from actorType.\n"
  example: []
  syntax:
    content: public static ActorTypeInformation Get(Type actorType)
    content.vb: Public Shared Function Get(actorType As Type) As ActorTypeInformation
    parameters:
    - id: actorType
      type: System.Type
      description: Type of class implementing the actor to create ActorTypeInforamtion for.
    return:
      type: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
      description: <xref href="Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation" data-throw-if-not-resolved="false"></xref> created from actorType.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.Get*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>When <xref href=\"System.Type.BaseType\" data-throw-if-not-resolved=\"false\"></xref> for actorType is not of type <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.Actor\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>When actorType does not implement an interface deriving from <xref href=\"Microsoft.ServiceFabric.Actors.IActor\" data-throw-if-not-resolved=\"false\"></xref> \nand is not marked as abstract.</p>\n<p>When actorType implements more than one interface which derives from <xref href=\"Microsoft.ServiceFabric.Actors.IActor\" data-throw-if-not-resolved=\"false\"></xref> \nbut doesn't have <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.ServiceFabric.Actors.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ActorTypeInformation>()
  nameWithType: ByteArraySerializer.Serialize<ActorTypeInformation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ActorTypeInformation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)()
  name.vb: Serialize(Of ActorTypeInformation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ActorTypeInformation>
    nameWithType: ByteArraySerializer.Serialize<ActorTypeInformation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ActorTypeInformation)
    nameWithType: ByteArraySerializer.Serialize(Of ActorTypeInformation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.#ctor
  isExternal: false
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation.ActorTypeInformation
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ActorTypeInformation
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ImplementationType*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ImplementationType
  isExternal: false
  name: ImplementationType
  nameWithType: ActorTypeInformation.ImplementationType
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ImplementationType
- uid: Microsoft.ServiceFabric.Actors.IActor
  commentId: T:Microsoft.ServiceFabric.Actors.IActor
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: IActor
  nameWithType: IActor
  fullName: Microsoft.ServiceFabric.Actors.IActor
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.InterfaceTypes*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.InterfaceTypes
  isExternal: false
  name: InterfaceTypes
  nameWithType: ActorTypeInformation.InterfaceTypes
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.InterfaceTypes
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors
  commentId: N:Microsoft.ServiceFabric.Actors
  isExternal: false
  name: Microsoft.ServiceFabric.Actors
  nameWithType: Microsoft.ServiceFabric.Actors
  fullName: Microsoft.ServiceFabric.Actors
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.EventInterfaceTypes*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.EventInterfaceTypes
  isExternal: false
  name: EventInterfaceTypes
  nameWithType: ActorTypeInformation.EventInterfaceTypes
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.EventInterfaceTypes
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute
  isExternal: false
  name: ActorServiceAttribute
  nameWithType: ActorServiceAttribute
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorServiceAttribute
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ServiceName*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: ActorTypeInformation.ServiceName
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.ServiceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsAbstract*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsAbstract
  isExternal: false
  name: IsAbstract
  nameWithType: ActorTypeInformation.IsAbstract
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsAbstract
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceFabric.Actors.Runtime.IRemindable
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IRemindable
  isExternal: false
  name: IRemindable
  nameWithType: IRemindable
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IRemindable
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsRemindable*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsRemindable
  isExternal: false
  name: IsRemindable
  nameWithType: ActorTypeInformation.IsRemindable
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.IsRemindable
- uid: Microsoft.ServiceFabric.Actors.Runtime.StatePersistence
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.StatePersistence
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: StatePersistence
  nameWithType: StatePersistence
  fullName: Microsoft.ServiceFabric.Actors.Runtime.StatePersistence
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.StatePersistence*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.StatePersistence
  isExternal: false
  name: StatePersistence
  nameWithType: ActorTypeInformation.StatePersistence
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.StatePersistence
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
- uid: System.Type.BaseType
  commentId: P:System.Type.BaseType
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.Actor
  isExternal: false
  name: Actor
  nameWithType: Actor
  fullName: Microsoft.ServiceFabric.Actors.Runtime.Actor
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.TryGet*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.TryGet
  isExternal: false
  name: TryGet
  nameWithType: ActorTypeInformation.TryGet
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.TryGet
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.Get*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.Get
  isExternal: false
  name: Get
  nameWithType: ActorTypeInformation.Get
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation.Get
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
