### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.ServiceNotificationFilterDescription
  commentId: T:System.Fabric.Description.ServiceNotificationFilterDescription
  id: ServiceNotificationFilterDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.ServiceNotificationFilterDescription.#ctor
  - System.Fabric.Description.ServiceNotificationFilterDescription.#ctor(System.Uri,System.Boolean,System.Boolean)
  - System.Fabric.Description.ServiceNotificationFilterDescription.MatchNamePrefix
  - System.Fabric.Description.ServiceNotificationFilterDescription.MatchPrimaryChangeOnly
  - System.Fabric.Description.ServiceNotificationFilterDescription.Name
  langs:
  - csharp
  - vb
  name: ServiceNotificationFilterDescription
  nameWithType: ServiceNotificationFilterDescription
  fullName: System.Fabric.Description.ServiceNotificationFilterDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceNotificationFilterDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
    startLine: 9
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Represents a class that is used to describe a filter for service notification delivery, registered \nvia <xref href=\"System.Fabric.FabricClient.ServiceManagementClient.RegisterServiceNotificationFilterAsync(System.Fabric.Description.ServiceNotificationFilterDescription)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public class ServiceNotificationFilterDescription
    content.vb: Public Class ServiceNotificationFilterDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.ServiceNotificationFilterDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Description.ServiceNotificationFilterDescription.#ctor
  commentId: M:System.Fabric.Description.ServiceNotificationFilterDescription.#ctor
  id: '#ctor'
  parent: System.Fabric.Description.ServiceNotificationFilterDescription
  langs:
  - csharp
  - vb
  name: ServiceNotificationFilterDescription()
  nameWithType: ServiceNotificationFilterDescription.ServiceNotificationFilterDescription()
  fullName: System.Fabric.Description.ServiceNotificationFilterDescription.ServiceNotificationFilterDescription()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Description.ServiceNotificationFilterDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ServiceNotificationFilterDescription()
    content.vb: Public Sub New
  overload: System.Fabric.Description.ServiceNotificationFilterDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceNotificationFilterDescription.#ctor(System.Uri,System.Boolean,System.Boolean)
  commentId: M:System.Fabric.Description.ServiceNotificationFilterDescription.#ctor(System.Uri,System.Boolean,System.Boolean)
  id: '#ctor(System.Uri,System.Boolean,System.Boolean)'
  parent: System.Fabric.Description.ServiceNotificationFilterDescription
  langs:
  - csharp
  - vb
  name: ServiceNotificationFilterDescription(Uri, Boolean, Boolean)
  nameWithType: ServiceNotificationFilterDescription.ServiceNotificationFilterDescription(Uri, Boolean, Boolean)
  fullName: System.Fabric.Description.ServiceNotificationFilterDescription.ServiceNotificationFilterDescription(System.Uri, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
    startLine: 27
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Description.ServiceNotificationFilterDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ServiceNotificationFilterDescription(Uri name, bool matchNamePrefix, bool matchPrimaryChangeOnly)
    content.vb: Public Sub New(name As Uri, matchNamePrefix As Boolean, matchPrimaryChangeOnly As Boolean)
    parameters:
    - id: name
      type: System.Uri
      description: <p>The name for which service notifications should be delivered.</p>
    - id: matchNamePrefix
      type: System.Boolean
      description: <p>Flag that indicates whether all service notifications for which Name is a prefix will be delivered.</p>
    - id: matchPrimaryChangeOnly
      type: System.Boolean
      description: <p>Flag that indicates whether to match the service notification delivery by filtering out notifications in which the primary replica endpoint has not changed. This flag has no effect for stateless services.</p>
  overload: System.Fabric.Description.ServiceNotificationFilterDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceNotificationFilterDescription.Name
  commentId: P:System.Fabric.Description.ServiceNotificationFilterDescription.Name
  id: Name
  parent: System.Fabric.Description.ServiceNotificationFilterDescription
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ServiceNotificationFilterDescription.Name
  fullName: System.Fabric.Description.ServiceNotificationFilterDescription.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the name for which service notifications should be delivered. The name must be in the fabric:/ scheme. The root name (fabric:/) is allowed.</p>\n"
  example: []
  syntax:
    content: public Uri Name { get; set; }
    content.vb: Public Property Name As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The name for which service notifications should be delivered.</p>\n"
  overload: System.Fabric.Description.ServiceNotificationFilterDescription.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceNotificationFilterDescription.MatchNamePrefix
  commentId: P:System.Fabric.Description.ServiceNotificationFilterDescription.MatchNamePrefix
  id: MatchNamePrefix
  parent: System.Fabric.Description.ServiceNotificationFilterDescription
  langs:
  - csharp
  - vb
  name: MatchNamePrefix
  nameWithType: ServiceNotificationFilterDescription.MatchNamePrefix
  fullName: System.Fabric.Description.ServiceNotificationFilterDescription.MatchNamePrefix
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MatchNamePrefix
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
    startLine: 53
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets a value that indicates whether all service notifications for which Name is a prefix will be delivered.</p>\n"
  remarks: "\nThe prefix match occurs as a URI segment prefix match rather than a string prefix match against service names. A filter with the name \"fabric:/abc\" will prefix match services named \"fabric:/abc\" and \"fabric:/abc/def\", but not a service named \"fabric:/abc_def\".\n"
  example: []
  syntax:
    content: public bool MatchNamePrefix { get; set; }
    content.vb: Public Property MatchNamePrefix As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if all service notification for which Name is a prefix will be delivered; otherwise, \n<strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  overload: System.Fabric.Description.ServiceNotificationFilterDescription.MatchNamePrefix*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceNotificationFilterDescription.MatchPrimaryChangeOnly
  commentId: P:System.Fabric.Description.ServiceNotificationFilterDescription.MatchPrimaryChangeOnly
  id: MatchPrimaryChangeOnly
  parent: System.Fabric.Description.ServiceNotificationFilterDescription
  langs:
  - csharp
  - vb
  name: MatchPrimaryChangeOnly
  nameWithType: ServiceNotificationFilterDescription.MatchPrimaryChangeOnly
  fullName: System.Fabric.Description.ServiceNotificationFilterDescription.MatchPrimaryChangeOnly
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MatchPrimaryChangeOnly
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceNotificationFilterDescription.cs
    startLine: 64
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets a value that indicates whether to match the service notification delivery by filtering out notifications in which the primary \nreplica endpoint has not changed. This flag has no effect for stateless services.</p>\n"
  example: []
  syntax:
    content: public bool MatchPrimaryChangeOnly { get; set; }
    content.vb: Public Property MatchPrimaryChangeOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the filtering matches primary change only; otherwise, <strong>false</strong>. \nThe default is <strong>false</strong>.</p>\n"
  overload: System.Fabric.Description.ServiceNotificationFilterDescription.MatchPrimaryChangeOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.FabricClient.ServiceManagementClient.RegisterServiceNotificationFilterAsync(System.Fabric.Description.ServiceNotificationFilterDescription)
  commentId: M:System.Fabric.FabricClient.ServiceManagementClient.RegisterServiceNotificationFilterAsync(System.Fabric.Description.ServiceNotificationFilterDescription)
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ServiceNotificationFilterDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceNotificationFilterDescription>()
  nameWithType: ByteArraySerializer.Serialize<ServiceNotificationFilterDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ServiceNotificationFilterDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceNotificationFilterDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ServiceNotificationFilterDescription)()
  name.vb: Serialize(Of ServiceNotificationFilterDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceNotificationFilterDescription>
    nameWithType: ByteArraySerializer.Serialize<ServiceNotificationFilterDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ServiceNotificationFilterDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceNotificationFilterDescription)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceNotificationFilterDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ServiceNotificationFilterDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.ServiceNotificationFilterDescription
  commentId: T:System.Fabric.Description.ServiceNotificationFilterDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ServiceNotificationFilterDescription
  nameWithType: ServiceNotificationFilterDescription
  fullName: System.Fabric.Description.ServiceNotificationFilterDescription
- uid: System.Fabric.Description.ServiceNotificationFilterDescription.#ctor*
  commentId: Overload:System.Fabric.Description.ServiceNotificationFilterDescription.#ctor
  isExternal: false
  name: ServiceNotificationFilterDescription
  nameWithType: ServiceNotificationFilterDescription.ServiceNotificationFilterDescription
  fullName: System.Fabric.Description.ServiceNotificationFilterDescription.ServiceNotificationFilterDescription
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Description.ServiceNotificationFilterDescription.Name*
  commentId: Overload:System.Fabric.Description.ServiceNotificationFilterDescription.Name
  isExternal: false
  name: Name
  nameWithType: ServiceNotificationFilterDescription.Name
  fullName: System.Fabric.Description.ServiceNotificationFilterDescription.Name
- uid: System.Fabric.Description.ServiceNotificationFilterDescription.MatchNamePrefix*
  commentId: Overload:System.Fabric.Description.ServiceNotificationFilterDescription.MatchNamePrefix
  isExternal: false
  name: MatchNamePrefix
  nameWithType: ServiceNotificationFilterDescription.MatchNamePrefix
  fullName: System.Fabric.Description.ServiceNotificationFilterDescription.MatchNamePrefix
- uid: System.Fabric.Description.ServiceNotificationFilterDescription.MatchPrimaryChangeOnly*
  commentId: Overload:System.Fabric.Description.ServiceNotificationFilterDescription.MatchPrimaryChangeOnly
  isExternal: false
  name: MatchPrimaryChangeOnly
  nameWithType: ServiceNotificationFilterDescription.MatchPrimaryChangeOnly
  fullName: System.Fabric.Description.ServiceNotificationFilterDescription.MatchPrimaryChangeOnly
