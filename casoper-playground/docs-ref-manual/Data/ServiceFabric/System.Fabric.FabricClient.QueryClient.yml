### YamlMime:ManagedReference
items:
- uid: System.Fabric.FabricClient.QueryClient
  commentId: T:System.Fabric.FabricClient.QueryClient
  id: FabricClient.QueryClient
  parent: System.Fabric
  children:
  - System.Fabric.FabricClient.QueryClient.GetApplicationListAsync
  - System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri)
  - System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.String)
  - System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String)
  - System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetApplicationNameAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync
  - System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String)
  - System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync
  - System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync(System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String)
  - System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String,System.Uri)
  - System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri)
  - System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String)
  - System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)
  - System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)
  - System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.Nullable{System.Guid})
  - System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid})
  - System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri)
  - System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri,System.String)
  - System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri)
  - System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String)
  - System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetNodeListAsync
  - System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String)
  - System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.Fabric.Query.NodeStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.String)
  - System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String)
  - System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid)
  - System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri)
  - System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid})
  - System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.String)
  - System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid)
  - System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync
  - System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String)
  - System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync
  - System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String)
  - System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)
  - System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64)
  - System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.String)
  - System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid,System.Int64)
  - System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri)
  - System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri,System.Uri)
  - System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String)
  - System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String)
  - System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri)
  - System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri)
  - System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.String)
  - System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetServiceNameAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String)
  - System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String,System.String)
  - System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  - System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean)
  - System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: FabricClient.QueryClient
  nameWithType: FabricClient.QueryClient
  fullName: System.Fabric.FabricClient.QueryClient
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: QueryClient
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 18
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Represents the fabric client that can be used to issue queries.</p>\n"
  example: []
  syntax:
    content: public sealed class QueryClient
    content.vb: Public NotInheritable Class QueryClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.FabricClient.QueryClient.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.FabricClient.QueryClient.GetNodeListAsync
  commentId: M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync
  id: GetNodeListAsync
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetNodeListAsync()
  nameWithType: FabricClient.QueryClient.GetNodeListAsync()
  fullName: System.Fabric.FabricClient.QueryClient.GetNodeListAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetNodeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 56
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of nodes.</p>\n"
  example: []
  syntax:
    content: public Task<NodeList> GetNodeListAsync()
    content.vb: Public Function GetNodeListAsync As Task(Of NodeList)
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.NodeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetNodeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String)
  id: GetNodeListAsync(System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetNodeListAsync(String)
  nameWithType: FabricClient.QueryClient.GetNodeListAsync(String)
  fullName: System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetNodeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 83
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of nodes.</p>\n"
  example: []
  syntax:
    content: public Task<NodeList> GetNodeListAsync(string nodeNameFilter)
    content.vb: Public Function GetNodeListAsync(nodeNameFilter As String) As Task(Of NodeList)
    parameters:
    - id: nodeNameFilter
      type: System.String
      description: "\n<p>The filter for the node name.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.NodeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetNodeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.String)
  id: GetNodeListAsync(System.String,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetNodeListAsync(String, String)
  nameWithType: FabricClient.QueryClient.GetNodeListAsync(String, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetNodeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 112
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for all nodes in the cluster or the specified node.\n</p>\n"
  example: []
  syntax:
    content: public Task<NodeList> GetNodeListAsync(string nodeNameFilter, string continuationToken)
    content.vb: Public Function GetNodeListAsync(nodeNameFilter As String, continuationToken As String) As Task(Of NodeList)
    parameters:
    - id: nodeNameFilter
      type: System.String
      description: "\n<p>The filter for the node name.</p>\n"
    - id: continuationToken
      type: System.String
      description: "\n<p>The continuation token obtained from a previous query.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.NodeList}
  overload: System.Fabric.FabricClient.QueryClient.GetNodeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetNodeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetNodeListAsync(String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetNodeListAsync(String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetNodeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 145
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of nodes.</p>\n"
  example: []
  syntax:
    content: public Task<NodeList> GetNodeListAsync(string nodeNameFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetNodeListAsync(nodeNameFilter As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of NodeList)
    parameters:
    - id: nodeNameFilter
      type: System.String
      description: "\n<p>The filter for the node name.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.NodeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetNodeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetNodeListAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetNodeListAsync(String, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetNodeListAsync(String, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetNodeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 182
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for all nodes in the cluster or the specified node.\n</p>\n"
  example: []
  syntax:
    content: public Task<NodeList> GetNodeListAsync(string nodeNameFilter, string continuationToken, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetNodeListAsync(nodeNameFilter As String, continuationToken As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of NodeList)
    parameters:
    - id: nodeNameFilter
      type: System.String
      description: "\n<p>The filter for the node name.</p>\n"
    - id: continuationToken
      type: System.String
      description: "\n<p>The continuation token obtained from a previous query.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operation should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.NodeList}
      description: "\n<p>A task that represents the asynchronous operation. It contains the list of nodes as <xref href=\"System.Fabric.Query.NodeList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetNodeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.Fabric.Query.NodeStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String,System.Fabric.Query.NodeStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetNodeListAsync(System.String,System.Fabric.Query.NodeStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetNodeListAsync(String, NodeStatusFilter, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetNodeListAsync(String, NodeStatusFilter, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetNodeListAsync(System.String, System.Fabric.Query.NodeStatusFilter, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetNodeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 208
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the details for all nodes in the cluster or the specified node.\n"
  example: []
  syntax:
    content: public Task<NodeList> GetNodeListAsync(string nodeNameFilter, NodeStatusFilter nodeStatusFilter, string continuationToken, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetNodeListAsync(nodeNameFilter As String, nodeStatusFilter As NodeStatusFilter, continuationToken As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of NodeList)
    parameters:
    - id: nodeNameFilter
      type: System.String
      description: The filter for the node name.
    - id: nodeStatusFilter
      type: System.Fabric.Query.NodeStatusFilter
      description: The filter for the node status.
    - id: continuationToken
      type: System.String
      description: The continuation token obtained from a previous query.
    - id: timeout
      type: System.TimeSpan
      description: Specifies the duration this operation has to complete before timing out.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Propagates notification that operation should be canceled.
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.NodeList}
      description: A task that represents the asynchronous operation. It contains the list of nodes as <xref href="System.Fabric.Query.NodeList" data-throw-if-not-resolved="false"></xref>.
  overload: System.Fabric.FabricClient.QueryClient.GetNodeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync
  id: GetApplicationTypeListAsync
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetApplicationTypeListAsync()
  nameWithType: FabricClient.QueryClient.GetApplicationTypeListAsync()
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 232
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the details for all application types provisioned in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ApplicationTypeList> GetApplicationTypeListAsync()
    content.vb: Public Function GetApplicationTypeListAsync As Task(Of ApplicationTypeList)
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationTypeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String)
  id: GetApplicationTypeListAsync(System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetApplicationTypeListAsync(String)
  nameWithType: FabricClient.QueryClient.GetApplicationTypeListAsync(String)
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 258
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the details for a particular application type provisioned in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ApplicationTypeList> GetApplicationTypeListAsync(string applicationTypeNameFilter)
    content.vb: Public Function GetApplicationTypeListAsync(applicationTypeNameFilter As String) As Task(Of ApplicationTypeList)
    parameters:
    - id: applicationTypeNameFilter
      type: System.String
      description: "\n<p>The application type to get details for.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationTypeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetApplicationTypeListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetApplicationTypeListAsync(String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetApplicationTypeListAsync(String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync(System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 290
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets details for a particular application type provisioned in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ApplicationTypeList> GetApplicationTypeListAsync(string applicationTypeNameFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetApplicationTypeListAsync(applicationTypeNameFilter As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ApplicationTypeList)
    parameters:
    - id: applicationTypeNameFilter
      type: System.String
      description: "\n<p>The application type to get details for.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationTypeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String)
  id: GetServiceTypeListAsync(System.String,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceTypeListAsync(String, String)
  nameWithType: FabricClient.QueryClient.GetServiceTypeListAsync(String, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 320
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of service type.</p>\n"
  example: []
  syntax:
    content: public Task<ServiceTypeList> GetServiceTypeListAsync(string applicationTypeName, string applicationTypeVersion)
    content.vb: Public Function GetServiceTypeListAsync(applicationTypeName As String, applicationTypeVersion As String) As Task(Of ServiceTypeList)
    parameters:
    - id: applicationTypeName
      type: System.String
      description: "\n<p>The type name of the application.</p>\n"
    - id: applicationTypeVersion
      type: System.String
      description: "\n<p>The application type version.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceTypeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String,System.String)
  id: GetServiceTypeListAsync(System.String,System.String,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceTypeListAsync(String, String, String)
  nameWithType: FabricClient.QueryClient.GetServiceTypeListAsync(String, String, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 352
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of service type.</p>\n"
  example: []
  syntax:
    content: public Task<ServiceTypeList> GetServiceTypeListAsync(string applicationTypeName, string applicationTypeVersion, string serviceTypeNameFilter)
    content.vb: Public Function GetServiceTypeListAsync(applicationTypeName As String, applicationTypeVersion As String, serviceTypeNameFilter As String) As Task(Of ServiceTypeList)
    parameters:
    - id: applicationTypeName
      type: System.String
      description: "\n<p>The type name of the application.</p>\n"
    - id: applicationTypeVersion
      type: System.String
      description: "\n<p>The application type version.</p>\n"
    - id: serviceTypeNameFilter
      type: System.String
      description: "\n<p>The filter for the service type name.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceTypeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetServiceTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceTypeListAsync(String, String, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetServiceTypeListAsync(String, String, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync(System.String, System.String, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 390
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of service type.</p>\n"
  example: []
  syntax:
    content: public Task<ServiceTypeList> GetServiceTypeListAsync(string applicationTypeName, string applicationTypeVersion, string serviceTypeNameFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetServiceTypeListAsync(applicationTypeName As String, applicationTypeVersion As String, serviceTypeNameFilter As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServiceTypeList)
    parameters:
    - id: applicationTypeName
      type: System.String
      description: "\n<p>The type name of the application.</p>\n"
    - id: applicationTypeVersion
      type: System.String
      description: "\n<p>The application type version.</p>\n"
    - id: serviceTypeNameFilter
      type: System.String
      description: "\n<p>The filter for the service type name.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceTypeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String)
  id: GetServiceGroupMemberTypeListAsync(System.String,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceGroupMemberTypeListAsync(String, String)
  nameWithType: FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(String, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceGroupMemberTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 423
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Get service group members types of service group(s).</p>\n"
  example: []
  syntax:
    content: public Task<ServiceGroupMemberTypeList> GetServiceGroupMemberTypeListAsync(string applicationTypeName, string applicationTypeVersion)
    content.vb: Public Function GetServiceGroupMemberTypeListAsync(applicationTypeName As String, applicationTypeVersion As String) As Task(Of ServiceGroupMemberTypeList)
    parameters:
    - id: applicationTypeName
      type: System.String
      description: "\n<p>The application type name of the service group.</p>\n"
    - id: applicationTypeVersion
      type: System.String
      description: "\n<p>The application type version of the service group.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceGroupMemberTypeList}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String)
  id: GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceGroupMemberTypeListAsync(String, String, String)
  nameWithType: FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(String, String, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceGroupMemberTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 455
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Get service group members types of service group(s).</p>\n"
  example: []
  syntax:
    content: public Task<ServiceGroupMemberTypeList> GetServiceGroupMemberTypeListAsync(string applicationTypeName, string applicationTypeVersion, string serviceGroupTypeNameFilter)
    content.vb: Public Function GetServiceGroupMemberTypeListAsync(applicationTypeName As String, applicationTypeVersion As String, serviceGroupTypeNameFilter As String) As Task(Of ServiceGroupMemberTypeList)
    parameters:
    - id: applicationTypeName
      type: System.String
      description: "\n<p>The application type name of the service group.</p>\n"
    - id: applicationTypeVersion
      type: System.String
      description: "\n<p>The application type version of the service group.</p>\n"
    - id: serviceGroupTypeNameFilter
      type: System.String
      description: "\n<p>The service group type name filter.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceGroupMemberTypeList}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetServiceGroupMemberTypeListAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceGroupMemberTypeListAsync(String, String, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(String, String, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync(System.String, System.String, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceGroupMemberTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 493
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p></p>\n"
  example: []
  syntax:
    content: public Task<ServiceGroupMemberTypeList> GetServiceGroupMemberTypeListAsync(string applicationTypeName, string applicationTypeVersion, string serviceGroupTypeNameFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetServiceGroupMemberTypeListAsync(applicationTypeName As String, applicationTypeVersion As String, serviceGroupTypeNameFilter As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServiceGroupMemberTypeList)
    parameters:
    - id: applicationTypeName
      type: System.String
      description: "\n<p>The application type name of the service group.</p>\n"
    - id: applicationTypeVersion
      type: System.String
      description: "\n<p>The application type version of the service group.</p>\n"
    - id: serviceGroupTypeNameFilter
      type: System.String
      description: "\n<p>The service group type name filter.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The timeout to the operation.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Notifies the operation should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceGroupMemberTypeList}
      description: "\n<p>Returns the list of service group member types.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync
  id: GetApplicationListAsync
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetApplicationListAsync()
  nameWithType: FabricClient.QueryClient.GetApplicationListAsync()
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 523
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the details for all applications created in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ApplicationList> GetApplicationListAsync()
    content.vb: Public Function GetApplicationListAsync As Task(Of ApplicationList)
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationList}
      description: "\n<p>A task that represents the asynchronous query operation. The value of TResult parameter is an <xref href=\"System.Fabric.Query.ApplicationList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri)
  id: GetApplicationListAsync(System.Uri)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetApplicationListAsync(Uri)
  nameWithType: FabricClient.QueryClient.GetApplicationListAsync(Uri)
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 549
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the details for a specific application created in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ApplicationList> GetApplicationListAsync(Uri applicationNameFilter)
    content.vb: Public Function GetApplicationListAsync(applicationNameFilter As Uri) As Task(Of ApplicationList)
    parameters:
    - id: applicationNameFilter
      type: System.Uri
      description: "\n<p>The application name to get details for.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationList}
      description: "\n<p>A task that represents the asynchronous query operation. The value of TResult parameter is an <xref href=\"System.Fabric.Query.ApplicationList\" data-throw-if-not-resolved=\"false\"></xref>. If the provided application name has no matching applications, it will return a list of 0 entries.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.String)
  id: GetApplicationListAsync(System.Uri,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetApplicationListAsync(Uri, String)
  nameWithType: FabricClient.QueryClient.GetApplicationListAsync(Uri, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 580
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for all or a specific application created in the system.\n</p>\n"
  example: []
  syntax:
    content: public Task<ApplicationList> GetApplicationListAsync(Uri applicationNameFilter, string continuationToken)
    content.vb: Public Function GetApplicationListAsync(applicationNameFilter As Uri, continuationToken As String) As Task(Of ApplicationList)
    parameters:
    - id: applicationNameFilter
      type: System.Uri
      description: "\n<p>The application name to get details for.</p>\n"
    - id: continuationToken
      type: System.String
      description: "\n<p>The continuation token obtained from a previous query.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationList}
      description: "\n<p>A task that represents the asynchronous query operation. The value of TResult parameter is an <xref href=\"System.Fabric.Query.ApplicationList\" data-throw-if-not-resolved=\"false\"></xref>. If the provided application name has no matching applications, it will return a list of 0 entries.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  id: GetApplicationListAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetApplicationListAsync(Uri, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetApplicationListAsync(Uri, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 612
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the details for a specific application created in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ApplicationList> GetApplicationListAsync(Uri applicationNameFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetApplicationListAsync(applicationNameFilter As Uri, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ApplicationList)
    parameters:
    - id: applicationNameFilter
      type: System.Uri
      description: "\n<p>The application name to get details for.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationList}
      description: "\n<p>A task that represents the asynchronous query operation. The value of TResult parameter is an <xref href=\"System.Fabric.Query.ApplicationList\" data-throw-if-not-resolved=\"false\"></xref>. If the provided application name has no matching applications, it will return a list of 0 entries.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetApplicationListAsync(System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetApplicationListAsync(Uri, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetApplicationListAsync(Uri, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync(System.Uri, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 649
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for all or a specific application created in the system.\n</p>\n"
  example: []
  syntax:
    content: public Task<ApplicationList> GetApplicationListAsync(Uri applicationNameFilter, string continuationToken, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetApplicationListAsync(applicationNameFilter As Uri, continuationToken As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ApplicationList)
    parameters:
    - id: applicationNameFilter
      type: System.Uri
      description: "\n<p>The application name to get details for.</p>\n"
    - id: continuationToken
      type: System.String
      description: "\n<p>The continuation token obtained from a previous query.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operation should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationList}
      description: "\n<p>A task that represents the asynchronous query operation. The value of TResult parameter is an <xref href=\"System.Fabric.Query.ApplicationList\" data-throw-if-not-resolved=\"false\"></xref>. If the provided application name has no matching applications, it will return a list of 0 entries.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri)
  id: GetServiceListAsync(System.Uri)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceListAsync(Uri)
  nameWithType: FabricClient.QueryClient.GetServiceListAsync(Uri)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 676
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the information about all services belonging to the application specified by the application name URI.</p>\n"
  example: []
  syntax:
    content: public Task<ServiceList> GetServiceListAsync(Uri applicationName)
    content.vb: Public Function GetServiceListAsync(applicationName As Uri) As Task(Of ServiceList)
    parameters:
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri)
  id: GetServiceListAsync(System.Uri,System.Uri)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceListAsync(Uri, Uri)
  nameWithType: FabricClient.QueryClient.GetServiceListAsync(Uri, Uri)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri, System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 705
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of services.</p>\n"
  example: []
  syntax:
    content: public Task<ServiceList> GetServiceListAsync(Uri applicationName, Uri serviceNameFilter)
    content.vb: Public Function GetServiceListAsync(applicationName As Uri, serviceNameFilter As Uri) As Task(Of ServiceList)
    parameters:
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceNameFilter
      type: System.Uri
      description: "\n<p>The filter for the service name.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.String)
  id: GetServiceListAsync(System.Uri,System.Uri,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceListAsync(Uri, Uri, String)
  nameWithType: FabricClient.QueryClient.GetServiceListAsync(Uri, Uri, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri, System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 739
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for all application services or just the specified service.\n</p>\n"
  example: []
  syntax:
    content: public Task<ServiceList> GetServiceListAsync(Uri applicationName, Uri serviceNameFilter, string continuationToken)
    content.vb: Public Function GetServiceListAsync(applicationName As Uri, serviceNameFilter As Uri, continuationToken As String) As Task(Of ServiceList)
    parameters:
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceNameFilter
      type: System.Uri
      description: "\n<p>The filter for the service name.</p>\n"
    - id: continuationToken
      type: System.String
      description: "\n<p>The continuation token obtained from a previous query.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceList}
      description: "\n<p>A task that represents the asynchronous operation. It contains the list of services as <xref href=\"System.Fabric.Query.ServiceList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  id: GetServiceListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceListAsync(Uri, Uri, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetServiceListAsync(Uri, Uri, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri, System.Uri, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 774
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the information about the service belonging to the application name given by the ApplicationName and the Service Name given by the ServiceNameFilter.</p>\n"
  example: []
  syntax:
    content: public Task<ServiceList> GetServiceListAsync(Uri applicationName, Uri serviceNameFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetServiceListAsync(applicationName As Uri, serviceNameFilter As Uri, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServiceList)
    parameters:
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceNameFilter
      type: System.Uri
      description: "\n<p>The filter for the service name.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetServiceListAsync(System.Uri,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceListAsync(Uri, Uri, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetServiceListAsync(Uri, Uri, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceListAsync(System.Uri, System.Uri, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 814
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for all application services or just the specified service.\n</p>\n"
  example: []
  syntax:
    content: public Task<ServiceList> GetServiceListAsync(Uri applicationName, Uri serviceNameFilter, string continuationToken, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetServiceListAsync(applicationName As Uri, serviceNameFilter As Uri, continuationToken As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServiceList)
    parameters:
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceNameFilter
      type: System.Uri
      description: "\n<p>The filter for the service name.</p>\n"
    - id: continuationToken
      type: System.String
      description: "\n<p>The continuation token obtained from a previous query.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operation should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceList}
      description: "\n<p>A task that represents the asynchronous operation. It contains the list of services as <xref href=\"System.Fabric.Query.ServiceList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri)
  id: GetServiceGroupMemberListAsync(System.Uri)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceGroupMemberListAsync(Uri)
  nameWithType: FabricClient.QueryClient.GetServiceGroupMemberListAsync(Uri)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceGroupMemberListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 841
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Get service group members of service groups.</p>\n"
  example: []
  syntax:
    content: public Task<ServiceGroupMemberList> GetServiceGroupMemberListAsync(Uri applicationName)
    content.vb: Public Function GetServiceGroupMemberListAsync(applicationName As Uri) As Task(Of ServiceGroupMemberList)
    parameters:
    - id: applicationName
      type: System.Uri
      description: "\n<p>The application name of the service group,</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceGroupMemberList}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri,System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri,System.Uri)
  id: GetServiceGroupMemberListAsync(System.Uri,System.Uri)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceGroupMemberListAsync(Uri, Uri)
  nameWithType: FabricClient.QueryClient.GetServiceGroupMemberListAsync(Uri, Uri)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri, System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceGroupMemberListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 870
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Get service group members of service groups.</p>\n"
  example: []
  syntax:
    content: public Task<ServiceGroupMemberList> GetServiceGroupMemberListAsync(Uri applicationName, Uri serviceNameFilter)
    content.vb: Public Function GetServiceGroupMemberListAsync(applicationName As Uri, serviceNameFilter As Uri) As Task(Of ServiceGroupMemberList)
    parameters:
    - id: applicationName
      type: System.Uri
      description: "\n<p>The application name of the service group,</p>\n"
    - id: serviceNameFilter
      type: System.Uri
      description: "\n<p>The service name of the service group.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceGroupMemberList}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  id: GetServiceGroupMemberListAsync(System.Uri,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceGroupMemberListAsync(Uri, Uri, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetServiceGroupMemberListAsync(Uri, Uri, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync(System.Uri, System.Uri, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceGroupMemberListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 905
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Get service group members of service groups.</p>\n"
  example: []
  syntax:
    content: public Task<ServiceGroupMemberList> GetServiceGroupMemberListAsync(Uri applicationName, Uri serviceNameFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetServiceGroupMemberListAsync(applicationName As Uri, serviceNameFilter As Uri, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServiceGroupMemberList)
    parameters:
    - id: applicationName
      type: System.Uri
      description: "\n<p>The application name of the service group,</p>\n"
    - id: serviceNameFilter
      type: System.Uri
      description: "\n<p>The service name of the service group.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The timeout to the operation.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Notifies the operation should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceGroupMemberList}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri)
  id: GetPartitionListAsync(System.Uri)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetPartitionListAsync(Uri)
  nameWithType: FabricClient.QueryClient.GetPartitionListAsync(Uri)
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetPartitionListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 935
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of partition.</p>\n"
  example: []
  syntax:
    content: public Task<ServicePartitionList> GetPartitionListAsync(Uri serviceName)
    content.vb: Public Function GetPartitionListAsync(serviceName As Uri) As Task(Of ServicePartitionList)
    parameters:
    - id: serviceName
      type: System.Uri
      description: "\n<p>The name of the service.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServicePartitionList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.String)
  id: GetPartitionListAsync(System.Uri,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetPartitionListAsync(Uri, String)
  nameWithType: FabricClient.QueryClient.GetPartitionListAsync(Uri, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetPartitionListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 966
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for all service partitions.\n</p>\n"
  example: []
  syntax:
    content: public Task<ServicePartitionList> GetPartitionListAsync(Uri serviceName, string continuationToken)
    content.vb: Public Function GetPartitionListAsync(serviceName As Uri, continuationToken As String) As Task(Of ServicePartitionList)
    parameters:
    - id: serviceName
      type: System.Uri
      description: "\n<p>The name of the service.</p>\n"
    - id: continuationToken
      type: System.String
      description: "\n<p>The continuation token obtained from a previous query.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServicePartitionList}
      description: "\n<p>A task that represents the asynchronous operation. It contains the list of service partition as <xref href=\"System.Fabric.Query.ServicePartitionList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid})
  commentId: M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid})
  id: GetPartitionListAsync(System.Uri,System.Nullable{System.Guid})
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetPartitionListAsync(Uri, Nullable<Guid>)
  nameWithType: FabricClient.QueryClient.GetPartitionListAsync(Uri, Nullable<Guid>)
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri, System.Nullable<System.Guid>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetPartitionListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 995
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of partition.</p>\n"
  example: []
  syntax:
    content: public Task<ServicePartitionList> GetPartitionListAsync(Uri serviceName, Guid? partitionIdFilter)
    content.vb: Public Function GetPartitionListAsync(serviceName As Uri, partitionIdFilter As Guid?) As Task(Of ServicePartitionList)
    parameters:
    - id: serviceName
      type: System.Uri
      description: "\n<p>The name of the service.</p>\n"
    - id: partitionIdFilter
      type: System.Nullable{System.Guid}
      description: "\n<p>The filter for the partition identifier.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServicePartitionList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  nameWithType.vb: FabricClient.QueryClient.GetPartitionListAsync(Uri, Nullable(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri, System.Nullable(Of System.Guid))
  name.vb: GetPartitionListAsync(Uri, Nullable(Of Guid))
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)
  id: GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetPartitionListAsync(Uri, Nullable<Guid>, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetPartitionListAsync(Uri, Nullable<Guid>, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri, System.Nullable<System.Guid>, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetPartitionListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1030
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of partition.</p>\n"
  example: []
  syntax:
    content: public Task<ServicePartitionList> GetPartitionListAsync(Uri serviceName, Guid? partitionIdFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetPartitionListAsync(serviceName As Uri, partitionIdFilter As Guid?, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServicePartitionList)
    parameters:
    - id: serviceName
      type: System.Uri
      description: "\n<p>The name of the service.</p>\n"
    - id: partitionIdFilter
      type: System.Nullable{System.Guid}
      description: "\n<p>The filter for the partition identifier.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServicePartitionList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  nameWithType.vb: FabricClient.QueryClient.GetPartitionListAsync(Uri, Nullable(Of Guid), TimeSpan, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri, System.Nullable(Of System.Guid), System.TimeSpan, System.Threading.CancellationToken)
  name.vb: GetPartitionListAsync(Uri, Nullable(Of Guid), TimeSpan, CancellationToken)
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetPartitionListAsync(System.Uri,System.Nullable{System.Guid},System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetPartitionListAsync(Uri, Nullable<Guid>, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetPartitionListAsync(Uri, Nullable<Guid>, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri, System.Nullable<System.Guid>, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetPartitionListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1070
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for all service partition or just the specified partition.\n</p>\n"
  example: []
  syntax:
    content: public Task<ServicePartitionList> GetPartitionListAsync(Uri serviceName, Guid? partitionIdFilter, string continuationToken, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetPartitionListAsync(serviceName As Uri, partitionIdFilter As Guid?, continuationToken As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServicePartitionList)
    parameters:
    - id: serviceName
      type: System.Uri
      description: "\n<p>The name of the service.</p>\n"
    - id: partitionIdFilter
      type: System.Nullable{System.Guid}
      description: "\n<p>The filter for the partition identifier.</p>\n"
    - id: continuationToken
      type: System.String
      description: "\n<p>The continuation token obtained from a previous query.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operation should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServicePartitionList}
      description: "\n<p>A task that represents the asynchronous operation. It contains the list of service partitions as <xref href=\"System.Fabric.Query.ServicePartitionList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  nameWithType.vb: FabricClient.QueryClient.GetPartitionListAsync(Uri, Nullable(Of Guid), String, TimeSpan, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync(System.Uri, System.Nullable(Of System.Guid), System.String, System.TimeSpan, System.Threading.CancellationToken)
  name.vb: GetPartitionListAsync(Uri, Nullable(Of Guid), String, TimeSpan, CancellationToken)
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  id: GetPartitionAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetPartitionAsync(Guid, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetPartitionAsync(Guid, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetPartitionAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1112
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for the specified partition.\n</p>\n"
  example: []
  syntax:
    content: public Task<ServicePartitionList> GetPartitionAsync(Guid partitionId, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetPartitionAsync(partitionId As Guid, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServicePartitionList)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The filter for the partition identifier.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operation should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServicePartitionList}
      description: "\n<p>A task that represents the asynchronous operation. It contains the list of service partitions as <xref href=\"System.Fabric.Query.ServicePartitionList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetPartitionAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid)
  id: GetPartitionAsync(System.Guid)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetPartitionAsync(Guid)
  nameWithType: FabricClient.QueryClient.GetPartitionAsync(Guid)
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetPartitionAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1141
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for the specified partition.\n</p>\n"
  example: []
  syntax:
    content: public Task<ServicePartitionList> GetPartitionAsync(Guid partitionId)
    content.vb: Public Function GetPartitionAsync(partitionId As Guid) As Task(Of ServicePartitionList)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The filter for the partition identifier.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServicePartitionList}
      description: "\n<p>A task that represents the asynchronous operation. It contains the list of service partitions as <xref href=\"System.Fabric.Query.ServicePartitionList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetPartitionAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid)
  id: GetPartitionLoadInformationAsync(System.Guid)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetPartitionLoadInformationAsync(Guid)
  nameWithType: FabricClient.QueryClient.GetPartitionLoadInformationAsync(Guid)
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetPartitionLoadInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1169
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the information about the partition load.</p>\n"
  example: []
  syntax:
    content: public Task<PartitionLoadInformation> GetPartitionLoadInformationAsync(Guid partitionId)
    content.vb: Public Function GetPartitionLoadInformationAsync(partitionId As Guid) As Task(Of PartitionLoadInformation)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition identifier.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.PartitionLoadInformation}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  id: GetPartitionLoadInformationAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetPartitionLoadInformationAsync(Guid, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetPartitionLoadInformationAsync(Guid, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync(System.Guid, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetPartitionLoadInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1201
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the information about the partition load.</p>\n"
  example: []
  syntax:
    content: public Task<PartitionLoadInformation> GetPartitionLoadInformationAsync(Guid partitionId, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetPartitionLoadInformationAsync(partitionId As Guid, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of PartitionLoadInformation)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition identifier.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.PartitionLoadInformation}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)
  id: GetReplicaListAsync(System.Guid)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetReplicaListAsync(Guid)
  nameWithType: FabricClient.QueryClient.GetReplicaListAsync(Guid)
  fullName: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetReplicaListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1234
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of replicas for a specific partition.</p>\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String%2cSystem.Uri)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<ServiceReplicaList> GetReplicaListAsync(Guid partitionId)
    content.vb: Public Function GetReplicaListAsync(partitionId As Guid) As Task(Of ServiceReplicaList)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition identifier.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceReplicaList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.String)
  id: GetReplicaListAsync(System.Guid,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetReplicaListAsync(Guid, String)
  nameWithType: FabricClient.QueryClient.GetReplicaListAsync(Guid, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetReplicaListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1271
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for all partition replicas.\n</p>\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String%2cSystem.Uri)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<ServiceReplicaList> GetReplicaListAsync(Guid partitionId, string continuationToken)
    content.vb: Public Function GetReplicaListAsync(partitionId As Guid, continuationToken As String) As Task(Of ServiceReplicaList)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition identifier.</p>\n"
    - id: continuationToken
      type: System.String
      description: "\n<p>The continuation token obtained from a previous query.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceReplicaList}
      description: "\n<p>A task that represents the asynchronous operation. It contains the list of replicas as <xref href=\"System.Fabric.Query.ServiceReplicaList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64)
  id: GetReplicaListAsync(System.Guid,System.Int64)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetReplicaListAsync(Guid, Int64)
  nameWithType: FabricClient.QueryClient.GetReplicaListAsync(Guid, Int64)
  fullName: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid, System.Int64)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetReplicaListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1306
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of replica.</p>\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String%2cSystem.Uri)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<ServiceReplicaList> GetReplicaListAsync(Guid partitionId, long replicaIdOrInstanceIdFilter)
    content.vb: Public Function GetReplicaListAsync(partitionId As Guid, replicaIdOrInstanceIdFilter As Long) As Task(Of ServiceReplicaList)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition identifier.</p>\n"
    - id: replicaIdOrInstanceIdFilter
      type: System.Int64
      description: "\n<p>The filter for the replica identifier or instance identifier.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceReplicaList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  id: GetReplicaListAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetReplicaListAsync(Guid, Int64, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetReplicaListAsync(Guid, Int64, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid, System.Int64, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetReplicaListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1349
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of replica.</p>\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String%2cSystem.Uri)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<ServiceReplicaList> GetReplicaListAsync(Guid partitionId, long replicaIdOrInstanceIdFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetReplicaListAsync(partitionId As Guid, replicaIdOrInstanceIdFilter As Long, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServiceReplicaList)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition identifier.</p>\n"
    - id: replicaIdOrInstanceIdFilter
      type: System.Int64
      description: "\n<p>The filter for the replica identifier or instance identifier.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceReplicaList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetReplicaListAsync(System.Guid,System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetReplicaListAsync(Guid, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetReplicaListAsync(Guid, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetReplicaListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1392
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the details for all partition replicas.\n</p>\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String%2cSystem.Uri)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<ServiceReplicaList> GetReplicaListAsync(Guid partitionId, string continuationToken, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetReplicaListAsync(partitionId As Guid, continuationToken As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServiceReplicaList)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition identifier.</p>\n"
    - id: continuationToken
      type: System.String
      description: "\n<p>The continuation token obtained from a previous query.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operation should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceReplicaList}
      description: "\n<p>A task that represents the asynchronous operation. It contains the list of replicas as <xref href=\"System.Fabric.Query.ServiceReplicaList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.TimeSpan,System.Threading.CancellationToken)
  id: GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetReplicaListAsync(Guid, Int64, ServiceReplicaStatusFilter, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetReplicaListAsync(Guid, Int64, ServiceReplicaStatusFilter, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid, System.Int64, System.Fabric.Query.ServiceReplicaStatusFilter, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetReplicaListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1424
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the details for all partition replicas that match the replica or instance filter and the status filter.\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String%2cSystem.Uri)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<ServiceReplicaList> GetReplicaListAsync(Guid partitionId, long replicaIdOrInstanceIdFilter, ServiceReplicaStatusFilter replicaStatusFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetReplicaListAsync(partitionId As Guid, replicaIdOrInstanceIdFilter As Long, replicaStatusFilter As ServiceReplicaStatusFilter, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServiceReplicaList)
    parameters:
    - id: partitionId
      type: System.Guid
      description: The partition identifier.
    - id: replicaIdOrInstanceIdFilter
      type: System.Int64
      description: The replica or instance id.
    - id: replicaStatusFilter
      type: System.Fabric.Query.ServiceReplicaStatusFilter
      description: The replica status filter.
    - id: timeout
      type: System.TimeSpan
      description: Specifies the duration this operation has to complete before timing out.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Propagates notification that operation should be canceled.
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceReplicaList}
      description: A task that represents the asynchronous operation. It contains the list of replicas as <xref href="System.Fabric.Query.ServiceReplicaList" data-throw-if-not-resolved="false"></xref>.
  overload: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetReplicaListAsync(System.Guid,System.Int64,System.Fabric.Query.ServiceReplicaStatusFilter,System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetReplicaListAsync(Guid, Int64, ServiceReplicaStatusFilter, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetReplicaListAsync(Guid, Int64, ServiceReplicaStatusFilter, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid, System.Int64, System.Fabric.Query.ServiceReplicaStatusFilter, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetReplicaListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1457
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the details for all partition replicas or the specified replica.\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String%2cSystem.Uri)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<ServiceReplicaList> GetReplicaListAsync(Guid partitionId, long replicaIdOrInstanceIdFilter, ServiceReplicaStatusFilter replicaStatusFilter, string continuationToken, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetReplicaListAsync(partitionId As Guid, replicaIdOrInstanceIdFilter As Long, replicaStatusFilter As ServiceReplicaStatusFilter, continuationToken As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServiceReplicaList)
    parameters:
    - id: partitionId
      type: System.Guid
      description: The partition identifier.
    - id: replicaIdOrInstanceIdFilter
      type: System.Int64
      description: The filter for the replica identifier or instance identifier.
    - id: replicaStatusFilter
      type: System.Fabric.Query.ServiceReplicaStatusFilter
      description: The filter used for matching the replica status for replicas that should be returned by query.
    - id: continuationToken
      type: System.String
      description: The continuation token obtained from a previous query.
    - id: timeout
      type: System.TimeSpan
      description: Specifies the duration this operation has to complete before timing out.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Propagates notification that operation should be canceled.
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceReplicaList}
      description: A task that represents the asynchronous operation. It contains the list of replicas as <xref href="System.Fabric.Query.ServiceReplicaList" data-throw-if-not-resolved="false"></xref>.
  overload: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String)
  id: GetDeployedApplicationListAsync(System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedApplicationListAsync(String)
  nameWithType: FabricClient.QueryClient.GetDeployedApplicationListAsync(String)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedApplicationListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1475
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the deployed application list.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedApplicationList> GetDeployedApplicationListAsync(string nodeName)
    content.vb: Public Function GetDeployedApplicationListAsync(nodeName As String) As Task(Of DeployedApplicationList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedApplicationList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String,System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String,System.Uri)
  id: GetDeployedApplicationListAsync(System.String,System.Uri)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedApplicationListAsync(String, Uri)
  nameWithType: FabricClient.QueryClient.GetDeployedApplicationListAsync(String, Uri)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedApplicationListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1495
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the deployed application list.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedApplicationList> GetDeployedApplicationListAsync(string nodeName, Uri applicationNameFilter)
    content.vb: Public Function GetDeployedApplicationListAsync(nodeName As String, applicationNameFilter As Uri) As Task(Of DeployedApplicationList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationNameFilter
      type: System.Uri
      description: "\n<p>The filter used in the application name.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedApplicationList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  id: GetDeployedApplicationListAsync(System.String,System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedApplicationListAsync(String, Uri, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetDeployedApplicationListAsync(String, Uri, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync(System.String, System.Uri, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedApplicationListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1521
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the deployed application list.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedApplicationList> GetDeployedApplicationListAsync(string nodeName, Uri applicationNameFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetDeployedApplicationListAsync(nodeName As String, applicationNameFilter As Uri, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of DeployedApplicationList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationNameFilter
      type: System.Uri
      description: "\n<p>The filter used in the application name.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedApplicationList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri)
  id: GetDeployedServicePackageListAsync(System.String,System.Uri)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedServicePackageListAsync(String, Uri)
  nameWithType: FabricClient.QueryClient.GetDeployedServicePackageListAsync(String, Uri)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedServicePackageListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1544
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of deployed service package.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedServicePackageList> GetDeployedServicePackageListAsync(string nodeName, Uri applicationName)
    content.vb: Public Function GetDeployedServicePackageListAsync(nodeName As String, applicationName As Uri) As Task(Of DeployedServicePackageList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServicePackageList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri,System.String)
  id: GetDeployedServicePackageListAsync(System.String,System.Uri,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedServicePackageListAsync(String, Uri, String)
  nameWithType: FabricClient.QueryClient.GetDeployedServicePackageListAsync(String, Uri, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String, System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedServicePackageListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1567
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of deployed service package.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedServicePackageList> GetDeployedServicePackageListAsync(string nodeName, Uri applicationName, string serviceManifestNameFilter)
    content.vb: Public Function GetDeployedServicePackageListAsync(nodeName As String, applicationName As Uri, serviceManifestNameFilter As String) As Task(Of DeployedServicePackageList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceManifestNameFilter
      type: System.String
      description: "\n<p>The filter for the service manifest.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServicePackageList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetDeployedServicePackageListAsync(System.String,System.Uri,System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedServicePackageListAsync(String, Uri, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetDeployedServicePackageListAsync(String, Uri, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync(System.String, System.Uri, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedServicePackageListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1596
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of deployed service package.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedServicePackageList> GetDeployedServicePackageListAsync(string nodeName, Uri applicationName, string serviceManifestNameFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetDeployedServicePackageListAsync(nodeName As String, applicationName As Uri, serviceManifestNameFilter As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of DeployedServicePackageList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceManifestNameFilter
      type: System.String
      description: "\n<p>The filter for the service manifest.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServicePackageList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri)
  id: GetDeployedServiceTypeListAsync(System.String,System.Uri)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedServiceTypeListAsync(String, Uri)
  nameWithType: FabricClient.QueryClient.GetDeployedServiceTypeListAsync(String, Uri)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedServiceTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1620
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of the deployed service type.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedServiceTypeList> GetDeployedServiceTypeListAsync(string nodeName, Uri applicationName)
    content.vb: Public Function GetDeployedServiceTypeListAsync(nodeName As String, applicationName As Uri) As Task(Of DeployedServiceTypeList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceTypeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String)
  id: GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedServiceTypeListAsync(String, Uri, String, String)
  nameWithType: FabricClient.QueryClient.GetDeployedServiceTypeListAsync(String, Uri, String, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String, System.Uri, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedServiceTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1646
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of the deployed service type.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedServiceTypeList> GetDeployedServiceTypeListAsync(string nodeName, Uri applicationName, string serviceManifestNameFilter, string serviceTypeNameFilter)
    content.vb: Public Function GetDeployedServiceTypeListAsync(nodeName As String, applicationName As Uri, serviceManifestNameFilter As String, serviceTypeNameFilter As String) As Task(Of DeployedServiceTypeList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceManifestNameFilter
      type: System.String
      description: "\n<p>The filter for the service manifest.</p>\n"
    - id: serviceTypeNameFilter
      type: System.String
      description: "\n<p>The filter for the service type name.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceTypeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetDeployedServiceTypeListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedServiceTypeListAsync(String, Uri, String, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetDeployedServiceTypeListAsync(String, Uri, String, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync(System.String, System.Uri, System.String, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedServiceTypeListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1678
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of the deployed service type.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedServiceTypeList> GetDeployedServiceTypeListAsync(string nodeName, Uri applicationName, string serviceManifestNameFilter, string serviceTypeNameFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetDeployedServiceTypeListAsync(nodeName As String, applicationName As Uri, serviceManifestNameFilter As String, serviceTypeNameFilter As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of DeployedServiceTypeList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceManifestNameFilter
      type: System.String
      description: "\n<p>The filter for the service manifest.</p>\n"
    - id: serviceTypeNameFilter
      type: System.String
      description: "\n<p>The filter for the service type name.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceTypeList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri)
  id: GetDeployedCodePackageListAsync(System.String,System.Uri)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedCodePackageListAsync(String, Uri)
  nameWithType: FabricClient.QueryClient.GetDeployedCodePackageListAsync(String, Uri)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedCodePackageListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1701
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of the deployed code package.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedCodePackageList> GetDeployedCodePackageListAsync(string nodeName, Uri applicationName)
    content.vb: Public Function GetDeployedCodePackageListAsync(nodeName As String, applicationName As Uri) As Task(Of DeployedCodePackageList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedCodePackageList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String)
  id: GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedCodePackageListAsync(String, Uri, String, String)
  nameWithType: FabricClient.QueryClient.GetDeployedCodePackageListAsync(String, Uri, String, String)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String, System.Uri, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedCodePackageListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1727
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of the deployed code package.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedCodePackageList> GetDeployedCodePackageListAsync(string nodeName, Uri applicationName, string serviceManifestNameFilter, string codePackageNameFilter)
    content.vb: Public Function GetDeployedCodePackageListAsync(nodeName As String, applicationName As Uri, serviceManifestNameFilter As String, codePackageNameFilter As String) As Task(Of DeployedCodePackageList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceManifestNameFilter
      type: System.String
      description: "\n<p>The filter for the service manifest.</p>\n"
    - id: codePackageNameFilter
      type: System.String
      description: "\n<p>The filter for the code package.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedCodePackageList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetDeployedCodePackageListAsync(System.String,System.Uri,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedCodePackageListAsync(String, Uri, String, String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetDeployedCodePackageListAsync(String, Uri, String, String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync(System.String, System.Uri, System.String, System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedCodePackageListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1759
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the list of the deployed code package.</p>\n"
  example: []
  syntax:
    content: public Task<DeployedCodePackageList> GetDeployedCodePackageListAsync(string nodeName, Uri applicationName, string serviceManifestNameFilter, string codePackageNameFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetDeployedCodePackageListAsync(nodeName As String, applicationName As Uri, serviceManifestNameFilter As String, codePackageNameFilter As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of DeployedCodePackageList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceManifestNameFilter
      type: System.String
      description: "\n<p>The filter for the service manifest.</p>\n"
    - id: codePackageNameFilter
      type: System.String
      description: "\n<p>The filter for the code package.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedCodePackageList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)
  id: GetDeployedReplicaListAsync(System.String,System.Uri)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedReplicaListAsync(String, Uri)
  nameWithType: FabricClient.QueryClient.GetDeployedReplicaListAsync(String, Uri)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedReplicaListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1798
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the view of replicas from a node.</p>\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<DeployedServiceReplicaList> GetDeployedReplicaListAsync(string nodeName, Uri applicationName)
    content.vb: Public Function GetDeployedReplicaListAsync(nodeName As String, applicationName As Uri) As Task(Of DeployedServiceReplicaList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceReplicaList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.Nullable{System.Guid})
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.Nullable{System.Guid})
  id: GetDeployedReplicaListAsync(System.String,System.Uri,System.Nullable{System.Guid})
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedReplicaListAsync(String, Uri, Nullable<Guid>)
  nameWithType: FabricClient.QueryClient.GetDeployedReplicaListAsync(String, Uri, Nullable<Guid>)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String, System.Uri, System.Nullable<System.Guid>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedReplicaListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1837
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the view of replicas from a node.</p>\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<DeployedServiceReplicaList> GetDeployedReplicaListAsync(string nodeName, Uri applicationName, Guid? partitionIdFilter)
    content.vb: Public Function GetDeployedReplicaListAsync(nodeName As String, applicationName As Uri, partitionIdFilter As Guid?) As Task(Of DeployedServiceReplicaList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: partitionIdFilter
      type: System.Nullable{System.Guid}
      description: "\n<p>The filter for the partition identifier.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceReplicaList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  nameWithType.vb: FabricClient.QueryClient.GetDeployedReplicaListAsync(String, Uri, Nullable(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String, System.Uri, System.Nullable(Of System.Guid))
  name.vb: GetDeployedReplicaListAsync(String, Uri, Nullable(Of Guid))
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid})
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid})
  id: GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid})
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedReplicaListAsync(String, Uri, String, Nullable<Guid>)
  nameWithType: FabricClient.QueryClient.GetDeployedReplicaListAsync(String, Uri, String, Nullable<Guid>)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String, System.Uri, System.String, System.Nullable<System.Guid>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedReplicaListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1878
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the view of replicas from a node.</p>\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<DeployedServiceReplicaList> GetDeployedReplicaListAsync(string nodeName, Uri applicationName, string serviceManifestNameFilter, Guid? partitionIdFilter)
    content.vb: Public Function GetDeployedReplicaListAsync(nodeName As String, applicationName As Uri, serviceManifestNameFilter As String, partitionIdFilter As Guid?) As Task(Of DeployedServiceReplicaList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceManifestNameFilter
      type: System.String
      description: "\n<p>The filter for the service manifest.</p>\n"
    - id: partitionIdFilter
      type: System.Nullable{System.Guid}
      description: "\n<p>The filter for the partition identifier.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceReplicaList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  nameWithType.vb: FabricClient.QueryClient.GetDeployedReplicaListAsync(String, Uri, String, Nullable(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String, System.Uri, System.String, System.Nullable(Of System.Guid))
  name.vb: GetDeployedReplicaListAsync(String, Uri, String, Nullable(Of Guid))
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)
  id: GetDeployedReplicaListAsync(System.String,System.Uri,System.String,System.Nullable{System.Guid},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedReplicaListAsync(String, Uri, String, Nullable<Guid>, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetDeployedReplicaListAsync(String, Uri, String, Nullable<Guid>, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String, System.Uri, System.String, System.Nullable<System.Guid>, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedReplicaListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1927
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the view of replicas from a node.</p>\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<DeployedServiceReplicaList> GetDeployedReplicaListAsync(string nodeName, Uri applicationName, string serviceManifestNameFilter, Guid? partitionIdFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetDeployedReplicaListAsync(nodeName As String, applicationName As Uri, serviceManifestNameFilter As String, partitionIdFilter As Guid?, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of DeployedServiceReplicaList)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: applicationName
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
    - id: serviceManifestNameFilter
      type: System.String
      description: "\n<p>The filter for the service manifest.</p>\n"
    - id: partitionIdFilter
      type: System.Nullable{System.Guid}
      description: "\n<p>The filter for the partition identifier.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The timespan that defines the maximum amount of time  will allow this operation to continue before returning a <xref href=\"System.TimeoutException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>The optional cancellation token that the operation is observing. It can be used to send a notification that the operation should be canceled. Note that cancellation is advisory and that the operation may still be completed even if it is cancelled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceReplicaList}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  nameWithType.vb: FabricClient.QueryClient.GetDeployedReplicaListAsync(String, Uri, String, Nullable(Of Guid), TimeSpan, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String, System.Uri, System.String, System.Nullable(Of System.Guid), System.TimeSpan, System.Threading.CancellationToken)
  name.vb: GetDeployedReplicaListAsync(String, Uri, String, Nullable(Of Guid), TimeSpan, CancellationToken)
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)
  id: GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedReplicaDetailAsync(String, Guid, Int64)
  nameWithType: FabricClient.QueryClient.GetDeployedReplicaDetailAsync(String, Guid, Int64)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String, System.Guid, System.Int64)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedReplicaDetailAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 1973
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Returns details of a replica from within the service host process</p>\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String%2cSystem.Uri)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<DeployedServiceReplicaDetail> GetDeployedReplicaDetailAsync(string nodeName, Guid partitionId, long replicaId)
    content.vb: Public Function GetDeployedReplicaDetailAsync(nodeName As String, partitionId As Guid, replicaId As Long) As Task(Of DeployedServiceReplicaDetail)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The node name from which the results are desired</p>\n"
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition id for which the results are desired</p>\n"
    - id: replicaId
      type: System.Int64
      description: "\n<p>The identifier for the replica or the instance for which the results are desired</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceReplicaDetail}
      description: "\n<p>A task that represents the running async operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  id: GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetDeployedReplicaDetailAsync(String, Guid, Int64, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetDeployedReplicaDetailAsync(String, Guid, Int64, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String, System.Guid, System.Int64, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetDeployedReplicaDetailAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2017
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Returns details of a replica from within the service host process</p>\n"
  remarks: "\n<p>\n    Service Fabric is a distributed system where many components have a view of the same entity. </p>\n<p>\n    In an unstable or transient state, this view may not match <xref href=\"System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String%2cSystem.Guid%2cSystem.Int64)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n"
  example: []
  syntax:
    content: public Task<DeployedServiceReplicaDetail> GetDeployedReplicaDetailAsync(string nodeName, Guid partitionId, long replicaId, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetDeployedReplicaDetailAsync(nodeName As String, partitionId As Guid, replicaId As Long, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of DeployedServiceReplicaDetail)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The node name from which the results are desired</p>\n"
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition id for which the results are desired</p>\n"
    - id: replicaId
      type: System.Int64
      description: "\n<p>The identifier for the replica or the instance for which the results are desired</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceReplicaDetail}
      description: "\n<p>A task that represents the running async operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync
  commentId: M:System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync
  id: GetClusterLoadInformationAsync
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetClusterLoadInformationAsync()
  nameWithType: FabricClient.QueryClient.GetClusterLoadInformationAsync()
  fullName: System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetClusterLoadInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2043
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the cluster load information.</p>\n"
  example: []
  syntax:
    content: public Task<ClusterLoadInformation> GetClusterLoadInformationAsync()
    content.vb: Public Function GetClusterLoadInformationAsync As Task(Of ClusterLoadInformation)
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ClusterLoadInformation}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync(System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync(System.TimeSpan,System.Threading.CancellationToken)
  id: GetClusterLoadInformationAsync(System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetClusterLoadInformationAsync(TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetClusterLoadInformationAsync(TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync(System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetClusterLoadInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2072
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the cluster load information.</p>\n"
  example: []
  syntax:
    content: public Task<ClusterLoadInformation> GetClusterLoadInformationAsync(TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetClusterLoadInformationAsync(timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ClusterLoadInformation)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ClusterLoadInformation}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync
  commentId: M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync
  id: GetProvisionedFabricCodeVersionListAsync
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetProvisionedFabricCodeVersionListAsync()
  nameWithType: FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync()
  fullName: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetProvisionedFabricCodeVersionListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2096
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets details for all cluster code versions provisioned in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ProvisionedFabricCodeVersionList> GetProvisionedFabricCodeVersionListAsync()
    content.vb: Public Function GetProvisionedFabricCodeVersionListAsync As Task(Of ProvisionedFabricCodeVersionList)
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ProvisionedFabricCodeVersionList}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String)
  id: GetProvisionedFabricCodeVersionListAsync(System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetProvisionedFabricCodeVersionListAsync(String)
  nameWithType: FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(String)
  fullName: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetProvisionedFabricCodeVersionListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2122
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets details for the specific cluster code version provisioned in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ProvisionedFabricCodeVersionList> GetProvisionedFabricCodeVersionListAsync(string codeVersionFilter)
    content.vb: Public Function GetProvisionedFabricCodeVersionListAsync(codeVersionFilter As String) As Task(Of ProvisionedFabricCodeVersionList)
    parameters:
    - id: codeVersionFilter
      type: System.String
      description: "\n<p>Code version to get details for.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ProvisionedFabricCodeVersionList}
      description: "\n<p>Returns the list of provisioned code versions.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetProvisionedFabricCodeVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetProvisionedFabricCodeVersionListAsync(String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync(System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetProvisionedFabricCodeVersionListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2154
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets details for the specific cluster code version provisioned in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ProvisionedFabricCodeVersionList> GetProvisionedFabricCodeVersionListAsync(string codeVersionFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetProvisionedFabricCodeVersionListAsync(codeVersionFilter As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ProvisionedFabricCodeVersionList)
    parameters:
    - id: codeVersionFilter
      type: System.String
      description: "\n<p>Code version to get details for.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The maximum time allowed for the operation to complete before TimeoutException is thrown.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Reserved for future use.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ProvisionedFabricCodeVersionList}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync
  commentId: M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync
  id: GetProvisionedFabricConfigVersionListAsync
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetProvisionedFabricConfigVersionListAsync()
  nameWithType: FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync()
  fullName: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetProvisionedFabricConfigVersionListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2178
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets details for all cluster config versions provisioned in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ProvisionedFabricConfigVersionList> GetProvisionedFabricConfigVersionListAsync()
    content.vb: Public Function GetProvisionedFabricConfigVersionListAsync As Task(Of ProvisionedFabricConfigVersionList)
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ProvisionedFabricConfigVersionList}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String)
  id: GetProvisionedFabricConfigVersionListAsync(System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetProvisionedFabricConfigVersionListAsync(String)
  nameWithType: FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(String)
  fullName: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetProvisionedFabricConfigVersionListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2204
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets details for a specific cluster config version provisioned in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ProvisionedFabricConfigVersionList> GetProvisionedFabricConfigVersionListAsync(string configVersionFilter)
    content.vb: Public Function GetProvisionedFabricConfigVersionListAsync(configVersionFilter As String) As Task(Of ProvisionedFabricConfigVersionList)
    parameters:
    - id: configVersionFilter
      type: System.String
      description: "\n<p>The config version to get details for.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ProvisionedFabricConfigVersionList}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetProvisionedFabricConfigVersionListAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetProvisionedFabricConfigVersionListAsync(String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync(System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetProvisionedFabricConfigVersionListAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2236
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets details for a specific cluster config version provisioned in the system.</p>\n"
  example: []
  syntax:
    content: public Task<ProvisionedFabricConfigVersionList> GetProvisionedFabricConfigVersionListAsync(string configVersionFilter, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetProvisionedFabricConfigVersionListAsync(configVersionFilter As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ProvisionedFabricConfigVersionList)
    parameters:
    - id: configVersionFilter
      type: System.String
      description: "\n<p>The config version to get details for.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The maximum time allowed for the operation to complete before TimeoutException is thrown.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Reserved for future use.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ProvisionedFabricConfigVersionList}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String)
  id: GetNodeLoadInformationAsync(System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetNodeLoadInformationAsync(String)
  nameWithType: FabricClient.QueryClient.GetNodeLoadInformationAsync(String)
  fullName: System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetNodeLoadInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2263
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Get metrics and load information on the node.</p>\n"
  example: []
  syntax:
    content: public Task<NodeLoadInformation> GetNodeLoadInformationAsync(string nodeName)
    content.vb: Public Function GetNodeLoadInformationAsync(nodeName As String) As Task(Of NodeLoadInformation)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.NodeLoadInformation}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetNodeLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetNodeLoadInformationAsync(String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetNodeLoadInformationAsync(String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync(System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetNodeLoadInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2295
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Get metrics and load information on the node.</p>\n"
  example: []
  syntax:
    content: public Task<NodeLoadInformation> GetNodeLoadInformationAsync(string nodeName, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetNodeLoadInformationAsync(nodeName As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of NodeLoadInformation)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The name of the node.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.NodeLoadInformation}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid,System.Int64)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid,System.Int64)
  id: GetReplicaLoadInformationAsync(System.Guid,System.Int64)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetReplicaLoadInformationAsync(Guid, Int64)
  nameWithType: FabricClient.QueryClient.GetReplicaLoadInformationAsync(Guid, Int64)
  fullName: System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid, System.Int64)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetReplicaLoadInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2325
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Get a list of metric and their load on a replica.</p>\n"
  example: []
  syntax:
    content: public Task<ReplicaLoadInformation> GetReplicaLoadInformationAsync(Guid partitionId, long replicaIdOrInstanceId)
    content.vb: Public Function GetReplicaLoadInformationAsync(partitionId As Guid, replicaIdOrInstanceId As Long) As Task(Of ReplicaLoadInformation)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition Id.</p>\n"
    - id: replicaIdOrInstanceId
      type: System.Int64
      description: "\n<p>The replicaId (stateful service) or instanceId (stateless service).</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ReplicaLoadInformation}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  id: GetReplicaLoadInformationAsync(System.Guid,System.Int64,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetReplicaLoadInformationAsync(Guid, Int64, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetReplicaLoadInformationAsync(Guid, Int64, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync(System.Guid, System.Int64, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetReplicaLoadInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2360
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Get a list of metric and their load on a replica.</p>\n"
  example: []
  syntax:
    content: public Task<ReplicaLoadInformation> GetReplicaLoadInformationAsync(Guid partitionId, long replicaIdOrInstanceId, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetReplicaLoadInformationAsync(partitionId As Guid, replicaIdOrInstanceId As Long, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ReplicaLoadInformation)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition Id.</p>\n"
    - id: replicaIdOrInstanceId
      type: System.Int64
      description: "\n<p>The replicaId (stateful service) or instanceId (stateless service).</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ReplicaLoadInformation}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean)
  id: GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetUnplacedReplicaInformationAsync(String, Guid, Boolean)
  nameWithType: FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(String, Guid, Boolean)
  fullName: System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String, System.Guid, System.Boolean)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetUnplacedReplicaInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2392
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Get diagnostics information about services with unplaced replicas.</p>\n"
  example: []
  syntax:
    content: public Task<UnplacedReplicaInformation> GetUnplacedReplicaInformationAsync(string serviceName, Guid partitionId, bool onlyQueryPrimaries)
    content.vb: Public Function GetUnplacedReplicaInformationAsync(serviceName As String, partitionId As Guid, onlyQueryPrimaries As Boolean) As Task(Of UnplacedReplicaInformation)
    parameters:
    - id: serviceName
      type: System.String
      description: "\n<p>The name of the service.</p>\n"
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition Id.</p>\n"
    - id: onlyQueryPrimaries
      type: System.Boolean
      description: "\n<p>Gives the Unplaced replica diagnostics for only the attempted primary replica placements, in order to limit output.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.UnplacedReplicaInformation}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)
  id: GetUnplacedReplicaInformationAsync(System.String,System.Guid,System.Boolean,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetUnplacedReplicaInformationAsync(String, Guid, Boolean, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(String, Guid, Boolean, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync(System.String, System.Guid, System.Boolean, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetUnplacedReplicaInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2430
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Get diagnostics information about services with unplaced replicas.</p>\n"
  example: []
  syntax:
    content: public Task<UnplacedReplicaInformation> GetUnplacedReplicaInformationAsync(string serviceName, Guid partitionId, bool onlyQueryPrimaries, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetUnplacedReplicaInformationAsync(serviceName As String, partitionId As Guid, onlyQueryPrimaries As Boolean, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of UnplacedReplicaInformation)
    parameters:
    - id: serviceName
      type: System.String
      description: "\n<p>The name of the service.</p>\n"
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition Id.</p>\n"
    - id: onlyQueryPrimaries
      type: System.Boolean
      description: "\n<p>Gives the Unplaced replica diagnostics for only the attempted primary replica placements, in order to limit output.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.UnplacedReplicaInformation}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String)
  id: GetApplicationLoadInformationAsync(System.String)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetApplicationLoadInformationAsync(String)
  nameWithType: FabricClient.QueryClient.GetApplicationLoadInformationAsync(String)
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationLoadInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2455
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Retrieves the load information of the specified application instance.</p>\n"
  example: []
  syntax:
    content: public Task<ApplicationLoadInformation> GetApplicationLoadInformationAsync(string applicationName)
    content.vb: Public Function GetApplicationLoadInformationAsync(applicationName As String) As Task(Of ApplicationLoadInformation)
    parameters:
    - id: applicationName
      type: System.String
      description: "\n<p>The URI of the application instance name.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationLoadInformation}
      description: "\n<p>The load information of the specified application instance.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  - type: System.Fabric.FabricElementNotFoundException
    commentId: T:System.Fabric.FabricElementNotFoundException
    description: "\n<p>\n<xref href=\"System.Fabric.FabricErrorCode.ApplicationNotFound\" data-throw-if-not-resolved=\"false\"></xref>: The application does not exist.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>The request timed out.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  id: GetApplicationLoadInformationAsync(System.String,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetApplicationLoadInformationAsync(String, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetApplicationLoadInformationAsync(String, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationLoadInformationAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2486
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Retrieves the load information of the specified application instance.</p>\n"
  example: []
  syntax:
    content: public Task<ApplicationLoadInformation> GetApplicationLoadInformationAsync(string applicationName, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetApplicationLoadInformationAsync(applicationName As String, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ApplicationLoadInformation)
    parameters:
    - id: applicationName
      type: System.String
      description: "\n<p>The URI of the application instance name.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationLoadInformation}
      description: "\n<p>The load information of the specified application instance.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  - type: System.Fabric.FabricElementNotFoundException
    commentId: T:System.Fabric.FabricElementNotFoundException
    description: "\n<p>\n<xref href=\"System.Fabric.FabricErrorCode.ApplicationNotFound\" data-throw-if-not-resolved=\"false\"></xref>: The application does not exist.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>The request timed out.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetServiceNameAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetServiceNameAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  id: GetServiceNameAsync(System.Guid,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetServiceNameAsync(Guid, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetServiceNameAsync(Guid, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceNameAsync(System.Guid, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetServiceNameAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2522
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the service name for the specified partition.</p>\n"
  example: []
  syntax:
    content: public Task<ServiceNameResult> GetServiceNameAsync(Guid partitionId, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetServiceNameAsync(partitionId As Guid, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ServiceNameResult)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The id of the partition.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ServiceNameResult}
      description: "\n<p>The service name of the partition.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetServiceNameAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationNameAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationNameAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  id: GetApplicationNameAsync(System.Uri,System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Fabric.FabricClient.QueryClient
  langs:
  - csharp
  - vb
  name: GetApplicationNameAsync(Uri, TimeSpan, CancellationToken)
  nameWithType: FabricClient.QueryClient.GetApplicationNameAsync(Uri, TimeSpan, CancellationToken)
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationNameAsync(System.Uri, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetApplicationNameAsync
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClient.QueryClient.cs
    startLine: 2559
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the application name for the specified service.</p>\n"
  example: []
  syntax:
    content: public Task<ApplicationNameResult> GetApplicationNameAsync(Uri serviceName, TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function GetApplicationNameAsync(serviceName As Uri, timeout As TimeSpan, cancellationToken As CancellationToken) As Task(Of ApplicationNameResult)
    parameters:
    - id: serviceName
      type: System.Uri
      description: "\n<p>The name of the service.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>Specifies the duration this operation has to complete before timing out.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>Propagates notification that operations should be canceled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationNameResult}
      description: "\n<p>A task that represents the asynchronous operation.</p>\n"
  overload: System.Fabric.FabricClient.QueryClient.GetApplicationNameAsync*
  exceptions:
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>The <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object is in a closed state. Dispose of the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object you are using and instantiate a new <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  - type: System.Fabric.FabricObjectClosedException
    commentId: T:System.Fabric.FabricObjectClosedException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "\n<p>\n    See <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  - type: System.Fabric.FabricException
    commentId: T:System.Fabric.FabricException
    description: "\n<p>\n    See also <a href=\"https://azure.microsoft.com/documentation/articles/service-fabric-errors-and-exceptions/\"></a> for handling common FabricClient failures.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<FabricClient.QueryClient>()
  nameWithType: ByteArraySerializer.Serialize<FabricClient.QueryClient>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.FabricClient.QueryClient>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of FabricClient.QueryClient)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.FabricClient.QueryClient)()
  name.vb: Serialize(Of FabricClient.QueryClient)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<FabricClient.QueryClient>
    nameWithType: ByteArraySerializer.Serialize<FabricClient.QueryClient>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.FabricClient.QueryClient>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of FabricClient.QueryClient)
    nameWithType: ByteArraySerializer.Serialize(Of FabricClient.QueryClient)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.FabricClient.QueryClient)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.FabricClient.QueryClient.GetNodeListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetNodeListAsync
  isExternal: false
  name: GetNodeListAsync
  nameWithType: FabricClient.QueryClient.GetNodeListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetNodeListAsync
- uid: System.Fabric.FabricObjectClosedException
  commentId: T:System.Fabric.FabricObjectClosedException
  isExternal: false
  name: FabricObjectClosedException
  nameWithType: FabricObjectClosedException
  fullName: System.Fabric.FabricObjectClosedException
- uid: System.TimeoutException
  commentId: T:System.TimeoutException
- uid: System.Fabric.FabricException
  commentId: T:System.Fabric.FabricException
  parent: System.Fabric
  isExternal: false
  name: FabricException
  nameWithType: FabricException
  fullName: System.Fabric.FabricException
- uid: System.Threading.Tasks.Task{System.Fabric.Query.NodeList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.NodeList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<NodeList>
  nameWithType: Task<NodeList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.NodeList>
  nameWithType.vb: Task(Of NodeList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.NodeList)
  name.vb: Task(Of NodeList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.NodeList
    name: NodeList
    nameWithType: NodeList
    fullName: System.Fabric.Query.NodeList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.NodeList
    name: NodeList
    nameWithType: NodeList
    fullName: System.Fabric.Query.NodeList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Fabric.Query.NodeList
  commentId: T:System.Fabric.Query.NodeList
  isExternal: false
  name: NodeList
  nameWithType: NodeList
  fullName: System.Fabric.Query.NodeList
- uid: System.Fabric.Query.NodeStatusFilter
  commentId: T:System.Fabric.Query.NodeStatusFilter
  parent: System.Fabric.Query
  isExternal: false
  name: NodeStatusFilter
  nameWithType: NodeStatusFilter
  fullName: System.Fabric.Query.NodeStatusFilter
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync
  isExternal: false
  name: GetApplicationTypeListAsync
  nameWithType: FabricClient.QueryClient.GetApplicationTypeListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationTypeListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationTypeList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ApplicationTypeList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ApplicationTypeList>
  nameWithType: Task<ApplicationTypeList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ApplicationTypeList>
  nameWithType.vb: Task(Of ApplicationTypeList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ApplicationTypeList)
  name.vb: Task(Of ApplicationTypeList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ApplicationTypeList
    name: ApplicationTypeList
    nameWithType: ApplicationTypeList
    fullName: System.Fabric.Query.ApplicationTypeList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ApplicationTypeList
    name: ApplicationTypeList
    nameWithType: ApplicationTypeList
    fullName: System.Fabric.Query.ApplicationTypeList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync
  isExternal: false
  name: GetServiceTypeListAsync
  nameWithType: FabricClient.QueryClient.GetServiceTypeListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceTypeListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ServiceTypeList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ServiceTypeList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ServiceTypeList>
  nameWithType: Task<ServiceTypeList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ServiceTypeList>
  nameWithType.vb: Task(Of ServiceTypeList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ServiceTypeList)
  name.vb: Task(Of ServiceTypeList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ServiceTypeList
    name: ServiceTypeList
    nameWithType: ServiceTypeList
    fullName: System.Fabric.Query.ServiceTypeList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ServiceTypeList
    name: ServiceTypeList
    nameWithType: ServiceTypeList
    fullName: System.Fabric.Query.ServiceTypeList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync
  isExternal: false
  name: GetServiceGroupMemberTypeListAsync
  nameWithType: FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberTypeListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ServiceGroupMemberTypeList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ServiceGroupMemberTypeList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ServiceGroupMemberTypeList>
  nameWithType: Task<ServiceGroupMemberTypeList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ServiceGroupMemberTypeList>
  nameWithType.vb: Task(Of ServiceGroupMemberTypeList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ServiceGroupMemberTypeList)
  name.vb: Task(Of ServiceGroupMemberTypeList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ServiceGroupMemberTypeList
    name: ServiceGroupMemberTypeList
    nameWithType: ServiceGroupMemberTypeList
    fullName: System.Fabric.Query.ServiceGroupMemberTypeList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ServiceGroupMemberTypeList
    name: ServiceGroupMemberTypeList
    nameWithType: ServiceGroupMemberTypeList
    fullName: System.Fabric.Query.ServiceGroupMemberTypeList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.ApplicationList
  commentId: T:System.Fabric.Query.ApplicationList
  isExternal: false
  name: ApplicationList
  nameWithType: ApplicationList
  fullName: System.Fabric.Query.ApplicationList
- uid: System.Fabric.FabricClient
  commentId: T:System.Fabric.FabricClient
  parent: System.Fabric
  isExternal: false
  name: FabricClient
  nameWithType: FabricClient
  fullName: System.Fabric.FabricClient
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetApplicationListAsync
  isExternal: false
  name: GetApplicationListAsync
  nameWithType: FabricClient.QueryClient.GetApplicationListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ApplicationList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ApplicationList>
  nameWithType: Task<ApplicationList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ApplicationList>
  nameWithType.vb: Task(Of ApplicationList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ApplicationList)
  name.vb: Task(Of ApplicationList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ApplicationList
    name: ApplicationList
    nameWithType: ApplicationList
    fullName: System.Fabric.Query.ApplicationList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ApplicationList
    name: ApplicationList
    nameWithType: ApplicationList
    fullName: System.Fabric.Query.ApplicationList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.FabricClient.QueryClient.GetServiceListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetServiceListAsync
  isExternal: false
  name: GetServiceListAsync
  nameWithType: FabricClient.QueryClient.GetServiceListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ServiceList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ServiceList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ServiceList>
  nameWithType: Task<ServiceList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ServiceList>
  nameWithType.vb: Task(Of ServiceList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ServiceList)
  name.vb: Task(Of ServiceList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ServiceList
    name: ServiceList
    nameWithType: ServiceList
    fullName: System.Fabric.Query.ServiceList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ServiceList
    name: ServiceList
    nameWithType: ServiceList
    fullName: System.Fabric.Query.ServiceList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.ServiceList
  commentId: T:System.Fabric.Query.ServiceList
  isExternal: false
  name: ServiceList
  nameWithType: ServiceList
  fullName: System.Fabric.Query.ServiceList
- uid: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync
  isExternal: false
  name: GetServiceGroupMemberListAsync
  nameWithType: FabricClient.QueryClient.GetServiceGroupMemberListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceGroupMemberListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ServiceGroupMemberList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ServiceGroupMemberList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ServiceGroupMemberList>
  nameWithType: Task<ServiceGroupMemberList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ServiceGroupMemberList>
  nameWithType.vb: Task(Of ServiceGroupMemberList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ServiceGroupMemberList)
  name.vb: Task(Of ServiceGroupMemberList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ServiceGroupMemberList
    name: ServiceGroupMemberList
    nameWithType: ServiceGroupMemberList
    fullName: System.Fabric.Query.ServiceGroupMemberList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ServiceGroupMemberList
    name: ServiceGroupMemberList
    nameWithType: ServiceGroupMemberList
    fullName: System.Fabric.Query.ServiceGroupMemberList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetPartitionListAsync
  isExternal: false
  name: GetPartitionListAsync
  nameWithType: FabricClient.QueryClient.GetPartitionListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ServicePartitionList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ServicePartitionList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ServicePartitionList>
  nameWithType: Task<ServicePartitionList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ServicePartitionList>
  nameWithType.vb: Task(Of ServicePartitionList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ServicePartitionList)
  name.vb: Task(Of ServicePartitionList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ServicePartitionList
    name: ServicePartitionList
    nameWithType: ServicePartitionList
    fullName: System.Fabric.Query.ServicePartitionList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ServicePartitionList
    name: ServicePartitionList
    nameWithType: ServicePartitionList
    fullName: System.Fabric.Query.ServicePartitionList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.ServicePartitionList
  commentId: T:System.Fabric.Query.ServicePartitionList
  isExternal: false
  name: ServicePartitionList
  nameWithType: ServicePartitionList
  fullName: System.Fabric.Query.ServicePartitionList
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullname.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetPartitionAsync
  isExternal: false
  name: GetPartitionAsync
  nameWithType: FabricClient.QueryClient.GetPartitionAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionAsync
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync
  isExternal: false
  name: GetPartitionLoadInformationAsync
  nameWithType: FabricClient.QueryClient.GetPartitionLoadInformationAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetPartitionLoadInformationAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.PartitionLoadInformation}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.PartitionLoadInformation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PartitionLoadInformation>
  nameWithType: Task<PartitionLoadInformation>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.PartitionLoadInformation>
  nameWithType.vb: Task(Of PartitionLoadInformation)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.PartitionLoadInformation)
  name.vb: Task(Of PartitionLoadInformation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.PartitionLoadInformation
    name: PartitionLoadInformation
    nameWithType: PartitionLoadInformation
    fullName: System.Fabric.Query.PartitionLoadInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.PartitionLoadInformation
    name: PartitionLoadInformation
    nameWithType: PartitionLoadInformation
    fullName: System.Fabric.Query.PartitionLoadInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync(System.String,System.Uri)
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync(System.String,System.Guid,System.Int64)
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync
  isExternal: false
  name: GetReplicaListAsync
  nameWithType: FabricClient.QueryClient.GetReplicaListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ServiceReplicaList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ServiceReplicaList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ServiceReplicaList>
  nameWithType: Task<ServiceReplicaList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ServiceReplicaList>
  nameWithType.vb: Task(Of ServiceReplicaList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ServiceReplicaList)
  name.vb: Task(Of ServiceReplicaList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ServiceReplicaList
    name: ServiceReplicaList
    nameWithType: ServiceReplicaList
    fullName: System.Fabric.Query.ServiceReplicaList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ServiceReplicaList
    name: ServiceReplicaList
    nameWithType: ServiceReplicaList
    fullName: System.Fabric.Query.ServiceReplicaList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.ServiceReplicaList
  commentId: T:System.Fabric.Query.ServiceReplicaList
  isExternal: false
  name: ServiceReplicaList
  nameWithType: ServiceReplicaList
  fullName: System.Fabric.Query.ServiceReplicaList
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Query.ServiceReplicaStatusFilter
  commentId: T:System.Fabric.Query.ServiceReplicaStatusFilter
  parent: System.Fabric.Query
  isExternal: false
  name: ServiceReplicaStatusFilter
  nameWithType: ServiceReplicaStatusFilter
  fullName: System.Fabric.Query.ServiceReplicaStatusFilter
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync
  isExternal: false
  name: GetDeployedApplicationListAsync
  nameWithType: FabricClient.QueryClient.GetDeployedApplicationListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedApplicationListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.DeployedApplicationList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.DeployedApplicationList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DeployedApplicationList>
  nameWithType: Task<DeployedApplicationList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.DeployedApplicationList>
  nameWithType.vb: Task(Of DeployedApplicationList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.DeployedApplicationList)
  name.vb: Task(Of DeployedApplicationList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.DeployedApplicationList
    name: DeployedApplicationList
    nameWithType: DeployedApplicationList
    fullName: System.Fabric.Query.DeployedApplicationList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.DeployedApplicationList
    name: DeployedApplicationList
    nameWithType: DeployedApplicationList
    fullName: System.Fabric.Query.DeployedApplicationList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync
  isExternal: false
  name: GetDeployedServicePackageListAsync
  nameWithType: FabricClient.QueryClient.GetDeployedServicePackageListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedServicePackageListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServicePackageList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.DeployedServicePackageList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DeployedServicePackageList>
  nameWithType: Task<DeployedServicePackageList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.DeployedServicePackageList>
  nameWithType.vb: Task(Of DeployedServicePackageList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.DeployedServicePackageList)
  name.vb: Task(Of DeployedServicePackageList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.DeployedServicePackageList
    name: DeployedServicePackageList
    nameWithType: DeployedServicePackageList
    fullName: System.Fabric.Query.DeployedServicePackageList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.DeployedServicePackageList
    name: DeployedServicePackageList
    nameWithType: DeployedServicePackageList
    fullName: System.Fabric.Query.DeployedServicePackageList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync
  isExternal: false
  name: GetDeployedServiceTypeListAsync
  nameWithType: FabricClient.QueryClient.GetDeployedServiceTypeListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedServiceTypeListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceTypeList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceTypeList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DeployedServiceTypeList>
  nameWithType: Task<DeployedServiceTypeList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.DeployedServiceTypeList>
  nameWithType.vb: Task(Of DeployedServiceTypeList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.DeployedServiceTypeList)
  name.vb: Task(Of DeployedServiceTypeList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.DeployedServiceTypeList
    name: DeployedServiceTypeList
    nameWithType: DeployedServiceTypeList
    fullName: System.Fabric.Query.DeployedServiceTypeList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.DeployedServiceTypeList
    name: DeployedServiceTypeList
    nameWithType: DeployedServiceTypeList
    fullName: System.Fabric.Query.DeployedServiceTypeList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync
  isExternal: false
  name: GetDeployedCodePackageListAsync
  nameWithType: FabricClient.QueryClient.GetDeployedCodePackageListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedCodePackageListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.DeployedCodePackageList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.DeployedCodePackageList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DeployedCodePackageList>
  nameWithType: Task<DeployedCodePackageList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.DeployedCodePackageList>
  nameWithType.vb: Task(Of DeployedCodePackageList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.DeployedCodePackageList)
  name.vb: Task(Of DeployedCodePackageList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.DeployedCodePackageList
    name: DeployedCodePackageList
    nameWithType: DeployedCodePackageList
    fullName: System.Fabric.Query.DeployedCodePackageList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.DeployedCodePackageList
    name: DeployedCodePackageList
    nameWithType: DeployedCodePackageList
    fullName: System.Fabric.Query.DeployedCodePackageList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetReplicaListAsync(System.Guid)
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync
  isExternal: false
  name: GetDeployedReplicaListAsync
  nameWithType: FabricClient.QueryClient.GetDeployedReplicaListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceReplicaList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceReplicaList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DeployedServiceReplicaList>
  nameWithType: Task<DeployedServiceReplicaList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.DeployedServiceReplicaList>
  nameWithType.vb: Task(Of DeployedServiceReplicaList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.DeployedServiceReplicaList)
  name.vb: Task(Of DeployedServiceReplicaList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.DeployedServiceReplicaList
    name: DeployedServiceReplicaList
    nameWithType: DeployedServiceReplicaList
    fullName: System.Fabric.Query.DeployedServiceReplicaList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.DeployedServiceReplicaList
    name: DeployedServiceReplicaList
    nameWithType: DeployedServiceReplicaList
    fullName: System.Fabric.Query.DeployedServiceReplicaList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync
  isExternal: false
  name: GetDeployedReplicaDetailAsync
  nameWithType: FabricClient.QueryClient.GetDeployedReplicaDetailAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetDeployedReplicaDetailAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceReplicaDetail}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.DeployedServiceReplicaDetail}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DeployedServiceReplicaDetail>
  nameWithType: Task<DeployedServiceReplicaDetail>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.DeployedServiceReplicaDetail>
  nameWithType.vb: Task(Of DeployedServiceReplicaDetail)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.DeployedServiceReplicaDetail)
  name.vb: Task(Of DeployedServiceReplicaDetail)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.DeployedServiceReplicaDetail
    name: DeployedServiceReplicaDetail
    nameWithType: DeployedServiceReplicaDetail
    fullName: System.Fabric.Query.DeployedServiceReplicaDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.DeployedServiceReplicaDetail
    name: DeployedServiceReplicaDetail
    nameWithType: DeployedServiceReplicaDetail
    fullName: System.Fabric.Query.DeployedServiceReplicaDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync
  isExternal: false
  name: GetClusterLoadInformationAsync
  nameWithType: FabricClient.QueryClient.GetClusterLoadInformationAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetClusterLoadInformationAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ClusterLoadInformation}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ClusterLoadInformation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ClusterLoadInformation>
  nameWithType: Task<ClusterLoadInformation>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ClusterLoadInformation>
  nameWithType.vb: Task(Of ClusterLoadInformation)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ClusterLoadInformation)
  name.vb: Task(Of ClusterLoadInformation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ClusterLoadInformation
    name: ClusterLoadInformation
    nameWithType: ClusterLoadInformation
    fullName: System.Fabric.Query.ClusterLoadInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ClusterLoadInformation
    name: ClusterLoadInformation
    nameWithType: ClusterLoadInformation
    fullName: System.Fabric.Query.ClusterLoadInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync
  isExternal: false
  name: GetProvisionedFabricCodeVersionListAsync
  nameWithType: FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricCodeVersionListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ProvisionedFabricCodeVersionList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ProvisionedFabricCodeVersionList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ProvisionedFabricCodeVersionList>
  nameWithType: Task<ProvisionedFabricCodeVersionList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ProvisionedFabricCodeVersionList>
  nameWithType.vb: Task(Of ProvisionedFabricCodeVersionList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ProvisionedFabricCodeVersionList)
  name.vb: Task(Of ProvisionedFabricCodeVersionList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ProvisionedFabricCodeVersionList
    name: ProvisionedFabricCodeVersionList
    nameWithType: ProvisionedFabricCodeVersionList
    fullName: System.Fabric.Query.ProvisionedFabricCodeVersionList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ProvisionedFabricCodeVersionList
    name: ProvisionedFabricCodeVersionList
    nameWithType: ProvisionedFabricCodeVersionList
    fullName: System.Fabric.Query.ProvisionedFabricCodeVersionList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync
  isExternal: false
  name: GetProvisionedFabricConfigVersionListAsync
  nameWithType: FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetProvisionedFabricConfigVersionListAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ProvisionedFabricConfigVersionList}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ProvisionedFabricConfigVersionList}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ProvisionedFabricConfigVersionList>
  nameWithType: Task<ProvisionedFabricConfigVersionList>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ProvisionedFabricConfigVersionList>
  nameWithType.vb: Task(Of ProvisionedFabricConfigVersionList)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ProvisionedFabricConfigVersionList)
  name.vb: Task(Of ProvisionedFabricConfigVersionList)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ProvisionedFabricConfigVersionList
    name: ProvisionedFabricConfigVersionList
    nameWithType: ProvisionedFabricConfigVersionList
    fullName: System.Fabric.Query.ProvisionedFabricConfigVersionList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ProvisionedFabricConfigVersionList
    name: ProvisionedFabricConfigVersionList
    nameWithType: ProvisionedFabricConfigVersionList
    fullName: System.Fabric.Query.ProvisionedFabricConfigVersionList
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync
  isExternal: false
  name: GetNodeLoadInformationAsync
  nameWithType: FabricClient.QueryClient.GetNodeLoadInformationAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetNodeLoadInformationAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.NodeLoadInformation}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.NodeLoadInformation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<NodeLoadInformation>
  nameWithType: Task<NodeLoadInformation>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.NodeLoadInformation>
  nameWithType.vb: Task(Of NodeLoadInformation)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.NodeLoadInformation)
  name.vb: Task(Of NodeLoadInformation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.NodeLoadInformation
    name: NodeLoadInformation
    nameWithType: NodeLoadInformation
    fullName: System.Fabric.Query.NodeLoadInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.NodeLoadInformation
    name: NodeLoadInformation
    nameWithType: NodeLoadInformation
    fullName: System.Fabric.Query.NodeLoadInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync
  isExternal: false
  name: GetReplicaLoadInformationAsync
  nameWithType: FabricClient.QueryClient.GetReplicaLoadInformationAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetReplicaLoadInformationAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ReplicaLoadInformation}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ReplicaLoadInformation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ReplicaLoadInformation>
  nameWithType: Task<ReplicaLoadInformation>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ReplicaLoadInformation>
  nameWithType.vb: Task(Of ReplicaLoadInformation)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ReplicaLoadInformation)
  name.vb: Task(Of ReplicaLoadInformation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ReplicaLoadInformation
    name: ReplicaLoadInformation
    nameWithType: ReplicaLoadInformation
    fullName: System.Fabric.Query.ReplicaLoadInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ReplicaLoadInformation
    name: ReplicaLoadInformation
    nameWithType: ReplicaLoadInformation
    fullName: System.Fabric.Query.ReplicaLoadInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync
  isExternal: false
  name: GetUnplacedReplicaInformationAsync
  nameWithType: FabricClient.QueryClient.GetUnplacedReplicaInformationAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetUnplacedReplicaInformationAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{System.Fabric.Query.UnplacedReplicaInformation}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.UnplacedReplicaInformation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<UnplacedReplicaInformation>
  nameWithType: Task<UnplacedReplicaInformation>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.UnplacedReplicaInformation>
  nameWithType.vb: Task(Of UnplacedReplicaInformation)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.UnplacedReplicaInformation)
  name.vb: Task(Of UnplacedReplicaInformation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.UnplacedReplicaInformation
    name: UnplacedReplicaInformation
    nameWithType: UnplacedReplicaInformation
    fullName: System.Fabric.Query.UnplacedReplicaInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.UnplacedReplicaInformation
    name: UnplacedReplicaInformation
    nameWithType: UnplacedReplicaInformation
    fullName: System.Fabric.Query.UnplacedReplicaInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricErrorCode.ApplicationNotFound
  commentId: F:System.Fabric.FabricErrorCode.ApplicationNotFound
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync
  isExternal: false
  name: GetApplicationLoadInformationAsync
  nameWithType: FabricClient.QueryClient.GetApplicationLoadInformationAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync
- uid: System.Fabric.FabricElementNotFoundException
  commentId: T:System.Fabric.FabricElementNotFoundException
  parent: System.Fabric
  isExternal: false
  name: FabricElementNotFoundException
  nameWithType: FabricElementNotFoundException
  fullName: System.Fabric.FabricElementNotFoundException
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationLoadInformation}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ApplicationLoadInformation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ApplicationLoadInformation>
  nameWithType: Task<ApplicationLoadInformation>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ApplicationLoadInformation>
  nameWithType.vb: Task(Of ApplicationLoadInformation)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ApplicationLoadInformation)
  name.vb: Task(Of ApplicationLoadInformation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ApplicationLoadInformation
    name: ApplicationLoadInformation
    nameWithType: ApplicationLoadInformation
    fullName: System.Fabric.Query.ApplicationLoadInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ApplicationLoadInformation
    name: ApplicationLoadInformation
    nameWithType: ApplicationLoadInformation
    fullName: System.Fabric.Query.ApplicationLoadInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetServiceNameAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetServiceNameAsync
  isExternal: false
  name: GetServiceNameAsync
  nameWithType: FabricClient.QueryClient.GetServiceNameAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetServiceNameAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ServiceNameResult}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ServiceNameResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ServiceNameResult>
  nameWithType: Task<ServiceNameResult>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ServiceNameResult>
  nameWithType.vb: Task(Of ServiceNameResult)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ServiceNameResult)
  name.vb: Task(Of ServiceNameResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ServiceNameResult
    name: ServiceNameResult
    nameWithType: ServiceNameResult
    fullName: System.Fabric.Query.ServiceNameResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ServiceNameResult
    name: ServiceNameResult
    nameWithType: ServiceNameResult
    fullName: System.Fabric.Query.ServiceNameResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationNameAsync*
  commentId: Overload:System.Fabric.FabricClient.QueryClient.GetApplicationNameAsync
  isExternal: false
  name: GetApplicationNameAsync
  nameWithType: FabricClient.QueryClient.GetApplicationNameAsync
  fullName: System.Fabric.FabricClient.QueryClient.GetApplicationNameAsync
- uid: System.Threading.Tasks.Task{System.Fabric.Query.ApplicationNameResult}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Query.ApplicationNameResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ApplicationNameResult>
  nameWithType: Task<ApplicationNameResult>
  fullName: System.Threading.Tasks.Task<System.Fabric.Query.ApplicationNameResult>
  nameWithType.vb: Task(Of ApplicationNameResult)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Query.ApplicationNameResult)
  name.vb: Task(Of ApplicationNameResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ApplicationNameResult
    name: ApplicationNameResult
    nameWithType: ApplicationNameResult
    fullName: System.Fabric.Query.ApplicationNameResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ApplicationNameResult
    name: ApplicationNameResult
    nameWithType: ApplicationNameResult
    fullName: System.Fabric.Query.ApplicationNameResult
  - name: )
    nameWithType: )
    fullName: )
