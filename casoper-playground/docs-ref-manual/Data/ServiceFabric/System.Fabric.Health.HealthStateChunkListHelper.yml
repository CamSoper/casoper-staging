### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.HealthStateChunkListHelper
  commentId: T:System.Fabric.Health.HealthStateChunkListHelper
  id: HealthStateChunkListHelper
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.HealthStateChunkListHelper.ToArray``1(System.Fabric.Health.HealthStateChunkList{``0})
  langs:
  - csharp
  - vb
  name: HealthStateChunkListHelper
  nameWithType: HealthStateChunkListHelper
  fullName: System.Fabric.Health.HealthStateChunkListHelper
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthStateChunkList.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthStateChunkListHelper
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthStateChunkList.cs
    startLine: 187
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nExtensions for health state chunk list operations.\n"
  example: []
  syntax:
    content: public static class HealthStateChunkListHelper
    content.vb: Public Module HealthStateChunkListHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Fabric.Health.HealthStateChunkListHelper.ToArray``1(System.Fabric.Health.HealthStateChunkList{``0})
  commentId: M:System.Fabric.Health.HealthStateChunkListHelper.ToArray``1(System.Fabric.Health.HealthStateChunkList{``0})
  id: ToArray``1(System.Fabric.Health.HealthStateChunkList{``0})
  isExtensionMethod: true
  parent: System.Fabric.Health.HealthStateChunkListHelper
  langs:
  - csharp
  - vb
  name: ToArray<T>(HealthStateChunkList<T>)
  nameWithType: HealthStateChunkListHelper.ToArray<T>(HealthStateChunkList<T>)
  fullName: System.Fabric.Health.HealthStateChunkListHelper.ToArray<T>(System.Fabric.Health.HealthStateChunkList<T>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthStateChunkList.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToArray
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthStateChunkList.cs
    startLine: 195
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nReturns an array with the items in the chunk list.\n"
  example: []
  syntax:
    content: public static T[] ToArray<T>(this HealthStateChunkList<T> list)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToArray(Of T)(list As HealthStateChunkList(Of T)) As T()
    parameters:
    - id: list
      type: System.Fabric.Health.HealthStateChunkList{{T}}
      description: The health state chunk list.
    typeParameters:
    - id: T
      description: The type of the list objects.
    return:
      type: '{T}[]'
      description: The array.
  overload: System.Fabric.Health.HealthStateChunkListHelper.ToArray*
  nameWithType.vb: HealthStateChunkListHelper.ToArray(Of T)(HealthStateChunkList(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Fabric.Health.HealthStateChunkListHelper.ToArray(Of T)(System.Fabric.Health.HealthStateChunkList(Of T))
  name.vb: ToArray(Of T)(HealthStateChunkList(Of T))
references:
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Health.HealthStateChunkListHelper.ToArray*
  commentId: Overload:System.Fabric.Health.HealthStateChunkListHelper.ToArray
  isExternal: false
  name: ToArray<T>
  nameWithType: HealthStateChunkListHelper.ToArray<T>
  fullName: System.Fabric.Health.HealthStateChunkListHelper.ToArray<T>
  nameWithType.vb: HealthStateChunkListHelper.ToArray(Of T)
  fullname.vb: System.Fabric.Health.HealthStateChunkListHelper.ToArray(Of T)
  name.vb: ToArray(Of T)
- uid: System.Fabric.Health.HealthStateChunkList{{T}}
  commentId: T:System.Fabric.Health.HealthStateChunkList{``0}
  parent: System.Fabric.Health
  definition: System.Fabric.Health.HealthStateChunkList`1
  name: HealthStateChunkList<T>
  nameWithType: HealthStateChunkList<T>
  fullName: System.Fabric.Health.HealthStateChunkList<T>
  nameWithType.vb: HealthStateChunkList(Of T)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T)
  name.vb: HealthStateChunkList(Of T)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1
    name: HealthStateChunkList
    nameWithType: HealthStateChunkList
    fullName: System.Fabric.Health.HealthStateChunkList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1
    name: HealthStateChunkList
    nameWithType: HealthStateChunkList
    fullName: System.Fabric.Health.HealthStateChunkList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}[]'
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullname.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Fabric.Health.HealthStateChunkList`1
  commentId: T:System.Fabric.Health.HealthStateChunkList`1
  isExternal: false
  name: HealthStateChunkList<T>
  nameWithType: HealthStateChunkList<T>
  fullName: System.Fabric.Health.HealthStateChunkList<T>
  nameWithType.vb: HealthStateChunkList(Of T)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T)
  name.vb: HealthStateChunkList(Of T)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1
    name: HealthStateChunkList
    nameWithType: HealthStateChunkList
    fullName: System.Fabric.Health.HealthStateChunkList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1
    name: HealthStateChunkList
    nameWithType: HealthStateChunkList
    fullName: System.Fabric.Health.HealthStateChunkList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
