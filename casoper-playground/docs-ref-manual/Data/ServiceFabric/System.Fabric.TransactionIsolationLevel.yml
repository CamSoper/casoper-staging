### YamlMime:ManagedReference
items:
- uid: System.Fabric.TransactionIsolationLevel
  commentId: T:System.Fabric.TransactionIsolationLevel
  id: TransactionIsolationLevel
  parent: System.Fabric
  children:
  - System.Fabric.TransactionIsolationLevel.Default
  - System.Fabric.TransactionIsolationLevel.ReadCommitted
  - System.Fabric.TransactionIsolationLevel.ReadUncommitted
  - System.Fabric.TransactionIsolationLevel.RepeatableRead
  - System.Fabric.TransactionIsolationLevel.Serializable
  - System.Fabric.TransactionIsolationLevel.Snapshot
  langs:
  - csharp
  - vb
  name: TransactionIsolationLevel
  nameWithType: TransactionIsolationLevel
  fullName: System.Fabric.TransactionIsolationLevel
  type: Enum
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TransactionIsolationLevel
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
    startLine: 11
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Enumerates the set of possible isolation levels for a <xref href=\"System.Fabric.Transaction\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public enum TransactionIsolationLevel
    content.vb: Public Enum TransactionIsolationLevel
  extensionMethods:
  - System.Fabric.TransactionIsolationLevel.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Fabric.TransactionIsolationLevel.Default
  commentId: F:System.Fabric.TransactionIsolationLevel.Default
  id: Default
  parent: System.Fabric.TransactionIsolationLevel
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: TransactionIsolationLevel.Default
  fullName: System.Fabric.TransactionIsolationLevel.Default
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Default
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
    startLine: 16
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates the default isolation level of the store.</p>\n"
  example: []
  syntax:
    content: Default = 0
    return:
      type: System.Fabric.TransactionIsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.TransactionIsolationLevel.ReadUncommitted
  commentId: F:System.Fabric.TransactionIsolationLevel.ReadUncommitted
  id: ReadUncommitted
  parent: System.Fabric.TransactionIsolationLevel
  langs:
  - csharp
  - vb
  name: ReadUncommitted
  nameWithType: TransactionIsolationLevel.ReadUncommitted
  fullName: System.Fabric.TransactionIsolationLevel.ReadUncommitted
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReadUncommitted
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
    startLine: 23
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nIndicates that volatile data can be read during the transaction. \n</p>\n"
  example: []
  syntax:
    content: ReadUncommitted = 1
    return:
      type: System.Fabric.TransactionIsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.TransactionIsolationLevel.ReadCommitted
  commentId: F:System.Fabric.TransactionIsolationLevel.ReadCommitted
  id: ReadCommitted
  parent: System.Fabric.TransactionIsolationLevel
  langs:
  - csharp
  - vb
  name: ReadCommitted
  nameWithType: TransactionIsolationLevel.ReadCommitted
  fullName: System.Fabric.TransactionIsolationLevel.ReadCommitted
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReadCommitted
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
    startLine: 29
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates that volatile data cannot be read during the transaction, but can be modified. Shared locks are held while data is being \nread to avoid dirty reads, but data can be changed before the end of the transaction that results in non-repeatable reads or phantom data.</p>\n"
  example: []
  syntax:
    content: ReadCommitted = 2
    return:
      type: System.Fabric.TransactionIsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.TransactionIsolationLevel.RepeatableRead
  commentId: F:System.Fabric.TransactionIsolationLevel.RepeatableRead
  id: RepeatableRead
  parent: System.Fabric.TransactionIsolationLevel
  langs:
  - csharp
  - vb
  name: RepeatableRead
  nameWithType: TransactionIsolationLevel.RepeatableRead
  fullName: System.Fabric.TransactionIsolationLevel.RepeatableRead
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RepeatableRead
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
    startLine: 35
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates that volatile data can be read but not modified during the transaction. Locks are placed on all data that is used in a \nquery to prevent other users from updating data. New rows can be inserted into data sets and are included in later reads in the current transaction.</p>\n"
  example: []
  syntax:
    content: RepeatableRead = 3
    return:
      type: System.Fabric.TransactionIsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.TransactionIsolationLevel.Snapshot
  commentId: F:System.Fabric.TransactionIsolationLevel.Snapshot
  id: Snapshot
  parent: System.Fabric.TransactionIsolationLevel
  langs:
  - csharp
  - vb
  name: Snapshot
  nameWithType: TransactionIsolationLevel.Snapshot
  fullName: System.Fabric.TransactionIsolationLevel.Snapshot
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Snapshot
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
    startLine: 41
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates the snapshot level where volatile data can be read. Any data that is read will be a transaction-consistent version of the \ndata that existed at start of the transaction.</p>\n"
  example: []
  syntax:
    content: Snapshot = 4
    return:
      type: System.Fabric.TransactionIsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.TransactionIsolationLevel.Serializable
  commentId: F:System.Fabric.TransactionIsolationLevel.Serializable
  id: Serializable
  parent: System.Fabric.TransactionIsolationLevel
  langs:
  - csharp
  - vb
  name: Serializable
  nameWithType: TransactionIsolationLevel.Serializable
  fullName: System.Fabric.TransactionIsolationLevel.Serializable
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Serializable
    path: src/prod/src/managed/Api/src/System/Fabric/TransactionIsolationLevel.cs
    startLine: 47
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates that volatile data are serializable. Volatile data can be read but not modified, and no new data can be added during the \ntransaction. Indicates that range locks will be put on data sets. The locks prevent updates or inserts in data sets until the transaction finishes.</p>\n"
  example: []
  syntax:
    content: Serializable = 5
    return:
      type: System.Fabric.TransactionIsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Fabric.Transaction
  commentId: T:System.Fabric.Transaction
  parent: System.Fabric
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Fabric.Transaction
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.TransactionIsolationLevel.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<TransactionIsolationLevel>()
  nameWithType: ByteArraySerializer.Serialize<TransactionIsolationLevel>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.TransactionIsolationLevel>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of TransactionIsolationLevel)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.TransactionIsolationLevel)()
  name.vb: Serialize(Of TransactionIsolationLevel)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<TransactionIsolationLevel>
    nameWithType: ByteArraySerializer.Serialize<TransactionIsolationLevel>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.TransactionIsolationLevel>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of TransactionIsolationLevel)
    nameWithType: ByteArraySerializer.Serialize(Of TransactionIsolationLevel)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.TransactionIsolationLevel)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.TransactionIsolationLevel
  commentId: T:System.Fabric.TransactionIsolationLevel
  parent: System.Fabric
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: TransactionIsolationLevel
  fullName: System.Fabric.TransactionIsolationLevel
