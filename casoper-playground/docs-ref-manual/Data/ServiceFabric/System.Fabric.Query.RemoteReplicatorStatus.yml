### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.RemoteReplicatorStatus
  commentId: T:System.Fabric.Query.RemoteReplicatorStatus
  id: RemoteReplicatorStatus
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.RemoteReplicatorStatus.#ctor
  - System.Fabric.Query.RemoteReplicatorStatus.IsInBuild
  - System.Fabric.Query.RemoteReplicatorStatus.LastAcknowledgementProcessedTimeUtc
  - System.Fabric.Query.RemoteReplicatorStatus.LastAppliedCopySequenceNumber
  - System.Fabric.Query.RemoteReplicatorStatus.LastAppliedReplicationSequenceNumber
  - System.Fabric.Query.RemoteReplicatorStatus.LastReceivedCopySequenceNumber
  - System.Fabric.Query.RemoteReplicatorStatus.LastReceivedReplicationSequenceNumber
  - System.Fabric.Query.RemoteReplicatorStatus.RemoteReplicatorAcknowledgementStatus
  - System.Fabric.Query.RemoteReplicatorStatus.ReplicaId
  langs:
  - csharp
  - vb
  name: RemoteReplicatorStatus
  nameWithType: RemoteReplicatorStatus
  fullName: System.Fabric.Query.RemoteReplicatorStatus
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RemoteReplicatorStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
    startLine: 12
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Represents the state of the secondary replicator from the primary replicatorâ€™s point of view.</p>\n"
  example: []
  syntax:
    content: public sealed class RemoteReplicatorStatus
    content.vb: Public NotInheritable Class RemoteReplicatorStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.RemoteReplicatorStatus.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.RemoteReplicatorStatus.#ctor
  commentId: M:System.Fabric.Query.RemoteReplicatorStatus.#ctor
  id: '#ctor'
  parent: System.Fabric.Query.RemoteReplicatorStatus
  langs:
  - csharp
  - vb
  name: RemoteReplicatorStatus()
  nameWithType: RemoteReplicatorStatus.RemoteReplicatorStatus()
  fullName: System.Fabric.Query.RemoteReplicatorStatus.RemoteReplicatorStatus()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Query.RemoteReplicatorStatus\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public RemoteReplicatorStatus()
    content.vb: Public Sub New
  overload: System.Fabric.Query.RemoteReplicatorStatus.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Query.RemoteReplicatorStatus.ReplicaId
  commentId: P:System.Fabric.Query.RemoteReplicatorStatus.ReplicaId
  id: ReplicaId
  parent: System.Fabric.Query.RemoteReplicatorStatus
  langs:
  - csharp
  - vb
  name: ReplicaId
  nameWithType: RemoteReplicatorStatus.ReplicaId
  fullName: System.Fabric.Query.RemoteReplicatorStatus.ReplicaId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaId
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
    startLine: 27
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the replica ID of the secondary.</p>\n"
  example: []
  syntax:
    content: public long ReplicaId { get; }
    content.vb: Public ReadOnly Property ReplicaId As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The replica ID.</p>\n"
  overload: System.Fabric.Query.RemoteReplicatorStatus.ReplicaId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.RemoteReplicatorStatus.LastAcknowledgementProcessedTimeUtc
  commentId: P:System.Fabric.Query.RemoteReplicatorStatus.LastAcknowledgementProcessedTimeUtc
  id: LastAcknowledgementProcessedTimeUtc
  parent: System.Fabric.Query.RemoteReplicatorStatus
  langs:
  - csharp
  - vb
  name: LastAcknowledgementProcessedTimeUtc
  nameWithType: RemoteReplicatorStatus.LastAcknowledgementProcessedTimeUtc
  fullName: System.Fabric.Query.RemoteReplicatorStatus.LastAcknowledgementProcessedTimeUtc
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastAcknowledgementProcessedTimeUtc
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
    startLine: 38
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the last timestamp (in UTC) when an acknowledgement from the secondary replicator was processed in the primary.</p>\n"
  remarks: "\n<p>UTC 0 represents an invalid value, indicating that no acknowledgement messages were ever processed.</p>\n"
  example: []
  syntax:
    content: public DateTime LastAcknowledgementProcessedTimeUtc { get; }
    content.vb: Public ReadOnly Property LastAcknowledgementProcessedTimeUtc As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The last timestamp when an acknowledgement from the secondary replicator was processed in the primary.</p>\n"
  overload: System.Fabric.Query.RemoteReplicatorStatus.LastAcknowledgementProcessedTimeUtc*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.RemoteReplicatorStatus.LastReceivedReplicationSequenceNumber
  commentId: P:System.Fabric.Query.RemoteReplicatorStatus.LastReceivedReplicationSequenceNumber
  id: LastReceivedReplicationSequenceNumber
  parent: System.Fabric.Query.RemoteReplicatorStatus
  langs:
  - csharp
  - vb
  name: LastReceivedReplicationSequenceNumber
  nameWithType: RemoteReplicatorStatus.LastReceivedReplicationSequenceNumber
  fullName: System.Fabric.Query.RemoteReplicatorStatus.LastReceivedReplicationSequenceNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastReceivedReplicationSequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
    startLine: 46
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the highest replication operation sequence number that the secondary has received from the primary.</p>\n"
  example: []
  syntax:
    content: public long LastReceivedReplicationSequenceNumber { get; }
    content.vb: Public ReadOnly Property LastReceivedReplicationSequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The highest replication operation sequence number that the secondary has received from the primary.</p>\n"
  overload: System.Fabric.Query.RemoteReplicatorStatus.LastReceivedReplicationSequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.RemoteReplicatorStatus.LastAppliedReplicationSequenceNumber
  commentId: P:System.Fabric.Query.RemoteReplicatorStatus.LastAppliedReplicationSequenceNumber
  id: LastAppliedReplicationSequenceNumber
  parent: System.Fabric.Query.RemoteReplicatorStatus
  langs:
  - csharp
  - vb
  name: LastAppliedReplicationSequenceNumber
  nameWithType: RemoteReplicatorStatus.LastAppliedReplicationSequenceNumber
  fullName: System.Fabric.Query.RemoteReplicatorStatus.LastAppliedReplicationSequenceNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastAppliedReplicationSequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
    startLine: 54
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the highest replication operation sequence number that the secondary has applied to its state.</p>\n"
  example: []
  syntax:
    content: public long LastAppliedReplicationSequenceNumber { get; }
    content.vb: Public ReadOnly Property LastAppliedReplicationSequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The highest replication operation sequence number that the secondary has applied to its state.</p>\n"
  overload: System.Fabric.Query.RemoteReplicatorStatus.LastAppliedReplicationSequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.RemoteReplicatorStatus.IsInBuild
  commentId: P:System.Fabric.Query.RemoteReplicatorStatus.IsInBuild
  id: IsInBuild
  parent: System.Fabric.Query.RemoteReplicatorStatus
  langs:
  - csharp
  - vb
  name: IsInBuild
  nameWithType: RemoteReplicatorStatus.IsInBuild
  fullName: System.Fabric.Query.RemoteReplicatorStatus.IsInBuild
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsInBuild
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
    startLine: 64
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets a value that indicates whether the secondary replica is in the process of being built.</p>\n"
  example: []
  syntax:
    content: public bool IsInBuild { get; }
    content.vb: Public ReadOnly Property IsInBuild As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the secondary replica is in the process of being built; \notherwise, <strong>false</strong>.</p>\n"
  overload: System.Fabric.Query.RemoteReplicatorStatus.IsInBuild*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.RemoteReplicatorStatus.LastReceivedCopySequenceNumber
  commentId: P:System.Fabric.Query.RemoteReplicatorStatus.LastReceivedCopySequenceNumber
  id: LastReceivedCopySequenceNumber
  parent: System.Fabric.Query.RemoteReplicatorStatus
  langs:
  - csharp
  - vb
  name: LastReceivedCopySequenceNumber
  nameWithType: RemoteReplicatorStatus.LastReceivedCopySequenceNumber
  fullName: System.Fabric.Query.RemoteReplicatorStatus.LastReceivedCopySequenceNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastReceivedCopySequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
    startLine: 75
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the highest copy operation sequence number that the secondary has received from the primary.</p>\n"
  remarks: "\n<p>A value of â€˜-1â€™ can be ignored since it indicates that the copy process is complete.</p>\n"
  example: []
  syntax:
    content: public long LastReceivedCopySequenceNumber { get; }
    content.vb: Public ReadOnly Property LastReceivedCopySequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The highest copy operation sequence number that the secondary has received from the primary.</p>\n"
  overload: System.Fabric.Query.RemoteReplicatorStatus.LastReceivedCopySequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.RemoteReplicatorStatus.LastAppliedCopySequenceNumber
  commentId: P:System.Fabric.Query.RemoteReplicatorStatus.LastAppliedCopySequenceNumber
  id: LastAppliedCopySequenceNumber
  parent: System.Fabric.Query.RemoteReplicatorStatus
  langs:
  - csharp
  - vb
  name: LastAppliedCopySequenceNumber
  nameWithType: RemoteReplicatorStatus.LastAppliedCopySequenceNumber
  fullName: System.Fabric.Query.RemoteReplicatorStatus.LastAppliedCopySequenceNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastAppliedCopySequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
    startLine: 86
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the highest copy operation sequence number that the secondary has applied to its state.</p>\n"
  remarks: "\n<p>A value of â€˜-1â€™ can be ignored since it indicates that the copy process is complete.</p>\n"
  example: []
  syntax:
    content: public long LastAppliedCopySequenceNumber { get; }
    content.vb: Public ReadOnly Property LastAppliedCopySequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The highest copy operation sequence number that the secondary has applied to its state.</p>\n"
  overload: System.Fabric.Query.RemoteReplicatorStatus.LastAppliedCopySequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.RemoteReplicatorStatus.RemoteReplicatorAcknowledgementStatus
  commentId: P:System.Fabric.Query.RemoteReplicatorStatus.RemoteReplicatorAcknowledgementStatus
  id: RemoteReplicatorAcknowledgementStatus
  parent: System.Fabric.Query.RemoteReplicatorStatus
  langs:
  - csharp
  - vb
  name: RemoteReplicatorAcknowledgementStatus
  nameWithType: RemoteReplicatorStatus.RemoteReplicatorAcknowledgementStatus
  fullName: System.Fabric.Query.RemoteReplicatorStatus.RemoteReplicatorAcknowledgementStatus
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RemoteReplicatorAcknowledgementStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/RemoteReplicatorStatus.cs
    startLine: 96
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Contains acknowledgement numbers for each of the remote replicators</p>\n<p>The values are dependent on the status of the replicas. \nInbuild replicas will contain values pertaining to copy while active replias will not.</p>\n"
  example: []
  syntax:
    content: public RemoteReplicatorAcknowledgementStatus RemoteReplicatorAcknowledgementStatus { get; }
    content.vb: Public ReadOnly Property RemoteReplicatorAcknowledgementStatus As RemoteReplicatorAcknowledgementStatus
    parameters: []
    return:
      type: System.Fabric.Query.RemoteReplicatorAcknowledgementStatus
      description: "\n<p>RemoteReplicatorAcknowledgementStatus object containing details regarding replication and copy stream acknowledgement. See <xref href=\"System.Fabric.Query.RemoteReplicatorAcknowledgementStatus\" data-throw-if-not-resolved=\"false\"></xref> for more information. </p>\n"
  overload: System.Fabric.Query.RemoteReplicatorStatus.RemoteReplicatorAcknowledgementStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.RemoteReplicatorStatus.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<RemoteReplicatorStatus>()
  nameWithType: ByteArraySerializer.Serialize<RemoteReplicatorStatus>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.RemoteReplicatorStatus>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of RemoteReplicatorStatus)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.RemoteReplicatorStatus)()
  name.vb: Serialize(Of RemoteReplicatorStatus)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<RemoteReplicatorStatus>
    nameWithType: ByteArraySerializer.Serialize<RemoteReplicatorStatus>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.RemoteReplicatorStatus>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of RemoteReplicatorStatus)
    nameWithType: ByteArraySerializer.Serialize(Of RemoteReplicatorStatus)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.RemoteReplicatorStatus)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.RemoteReplicatorStatus
  commentId: T:System.Fabric.Query.RemoteReplicatorStatus
  isExternal: false
  name: RemoteReplicatorStatus
  nameWithType: RemoteReplicatorStatus
  fullName: System.Fabric.Query.RemoteReplicatorStatus
- uid: System.Fabric.Query.RemoteReplicatorStatus.#ctor*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorStatus.#ctor
  isExternal: false
  name: RemoteReplicatorStatus
  nameWithType: RemoteReplicatorStatus.RemoteReplicatorStatus
  fullName: System.Fabric.Query.RemoteReplicatorStatus.RemoteReplicatorStatus
- uid: System.Fabric.Query.RemoteReplicatorStatus.ReplicaId*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorStatus.ReplicaId
  isExternal: false
  name: ReplicaId
  nameWithType: RemoteReplicatorStatus.ReplicaId
  fullName: System.Fabric.Query.RemoteReplicatorStatus.ReplicaId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Query.RemoteReplicatorStatus.LastAcknowledgementProcessedTimeUtc*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorStatus.LastAcknowledgementProcessedTimeUtc
  isExternal: false
  name: LastAcknowledgementProcessedTimeUtc
  nameWithType: RemoteReplicatorStatus.LastAcknowledgementProcessedTimeUtc
  fullName: System.Fabric.Query.RemoteReplicatorStatus.LastAcknowledgementProcessedTimeUtc
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Fabric.Query.RemoteReplicatorStatus.LastReceivedReplicationSequenceNumber*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorStatus.LastReceivedReplicationSequenceNumber
  isExternal: false
  name: LastReceivedReplicationSequenceNumber
  nameWithType: RemoteReplicatorStatus.LastReceivedReplicationSequenceNumber
  fullName: System.Fabric.Query.RemoteReplicatorStatus.LastReceivedReplicationSequenceNumber
- uid: System.Fabric.Query.RemoteReplicatorStatus.LastAppliedReplicationSequenceNumber*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorStatus.LastAppliedReplicationSequenceNumber
  isExternal: false
  name: LastAppliedReplicationSequenceNumber
  nameWithType: RemoteReplicatorStatus.LastAppliedReplicationSequenceNumber
  fullName: System.Fabric.Query.RemoteReplicatorStatus.LastAppliedReplicationSequenceNumber
- uid: System.Fabric.Query.RemoteReplicatorStatus.IsInBuild*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorStatus.IsInBuild
  isExternal: false
  name: IsInBuild
  nameWithType: RemoteReplicatorStatus.IsInBuild
  fullName: System.Fabric.Query.RemoteReplicatorStatus.IsInBuild
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Query.RemoteReplicatorStatus.LastReceivedCopySequenceNumber*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorStatus.LastReceivedCopySequenceNumber
  isExternal: false
  name: LastReceivedCopySequenceNumber
  nameWithType: RemoteReplicatorStatus.LastReceivedCopySequenceNumber
  fullName: System.Fabric.Query.RemoteReplicatorStatus.LastReceivedCopySequenceNumber
- uid: System.Fabric.Query.RemoteReplicatorStatus.LastAppliedCopySequenceNumber*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorStatus.LastAppliedCopySequenceNumber
  isExternal: false
  name: LastAppliedCopySequenceNumber
  nameWithType: RemoteReplicatorStatus.LastAppliedCopySequenceNumber
  fullName: System.Fabric.Query.RemoteReplicatorStatus.LastAppliedCopySequenceNumber
- uid: System.Fabric.Query.RemoteReplicatorAcknowledgementStatus
  commentId: T:System.Fabric.Query.RemoteReplicatorAcknowledgementStatus
  parent: System.Fabric.Query
  isExternal: false
  name: RemoteReplicatorAcknowledgementStatus
  nameWithType: RemoteReplicatorAcknowledgementStatus
  fullName: System.Fabric.Query.RemoteReplicatorAcknowledgementStatus
- uid: System.Fabric.Query.RemoteReplicatorStatus.RemoteReplicatorAcknowledgementStatus*
  commentId: Overload:System.Fabric.Query.RemoteReplicatorStatus.RemoteReplicatorAcknowledgementStatus
  isExternal: false
  name: RemoteReplicatorAcknowledgementStatus
  nameWithType: RemoteReplicatorStatus.RemoteReplicatorAcknowledgementStatus
  fullName: System.Fabric.Query.RemoteReplicatorStatus.RemoteReplicatorAcknowledgementStatus
