### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.NodeHealthQueryDescription
  commentId: T:System.Fabric.Description.NodeHealthQueryDescription
  id: NodeHealthQueryDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.NodeHealthQueryDescription.#ctor(System.String)
  - System.Fabric.Description.NodeHealthQueryDescription.EventsFilter
  - System.Fabric.Description.NodeHealthQueryDescription.HealthPolicy
  - System.Fabric.Description.NodeHealthQueryDescription.NodeName
  - System.Fabric.Description.NodeHealthQueryDescription.ToString
  langs:
  - csharp
  - vb
  name: NodeHealthQueryDescription
  nameWithType: NodeHealthQueryDescription
  fullName: System.Fabric.Description.NodeHealthQueryDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeHealthQueryDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Describes query input for getting <xref href=\"System.Fabric.Health.NodeHealth\" data-throw-if-not-resolved=\"false\"></xref>. Used by \n<xref href=\"System.Fabric.FabricClient.HealthClient.GetNodeHealthAsync(System.Fabric.Description.NodeHealthQueryDescription)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public sealed class NodeHealthQueryDescription
    content.vb: Public NotInheritable Class NodeHealthQueryDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.NodeHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.NodeHealthQueryDescription.#ctor(System.String)
  commentId: M:System.Fabric.Description.NodeHealthQueryDescription.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Fabric.Description.NodeHealthQueryDescription
  langs:
  - csharp
  - vb
  name: NodeHealthQueryDescription(String)
  nameWithType: NodeHealthQueryDescription.NodeHealthQueryDescription(String)
  fullName: System.Fabric.Description.NodeHealthQueryDescription.NodeHealthQueryDescription(System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
    startLine: 28
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Description.NodeHealthQueryDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public NodeHealthQueryDescription(string nodeName)
    content.vb: Public Sub New(nodeName As String)
    parameters:
    - id: nodeName
      type: System.String
      description: "\n<p>The node name. Cannot be null or empty.</p>\n"
  overload: System.Fabric.Description.NodeHealthQueryDescription.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>A required parameter can't be null or empty.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.NodeHealthQueryDescription.NodeName
  commentId: P:System.Fabric.Description.NodeHealthQueryDescription.NodeName
  id: NodeName
  parent: System.Fabric.Description.NodeHealthQueryDescription
  langs:
  - csharp
  - vb
  name: NodeName
  nameWithType: NodeHealthQueryDescription.NodeName
  fullName: System.Fabric.Description.NodeHealthQueryDescription.NodeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeName
    path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the node name.</p>\n"
  example: []
  syntax:
    content: public string NodeName { get; }
    content.vb: Public ReadOnly Property NodeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The node name.</p>\n"
  overload: System.Fabric.Description.NodeHealthQueryDescription.NodeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.NodeHealthQueryDescription.HealthPolicy
  commentId: P:System.Fabric.Description.NodeHealthQueryDescription.HealthPolicy
  id: HealthPolicy
  parent: System.Fabric.Description.NodeHealthQueryDescription
  langs:
  - csharp
  - vb
  name: HealthPolicy
  nameWithType: NodeHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.NodeHealthQueryDescription.HealthPolicy
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthPolicy
    path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
    startLine: 53
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the <xref href=\"System.Fabric.Health.ClusterHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate the node health.</p>\n"
  remarks: <p>If not specified, the health store uses the cluster health policy from the manifest (if exists) or the default, strict health policy.</p>
  example: []
  syntax:
    content: public ClusterHealthPolicy HealthPolicy { get; set; }
    content.vb: Public Property HealthPolicy As ClusterHealthPolicy
    parameters: []
    return:
      type: System.Fabric.Health.ClusterHealthPolicy
      description: "\n<p>The <xref href=\"System.Fabric.Health.ClusterHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate the node health.</p>\n"
  overload: System.Fabric.Description.NodeHealthQueryDescription.HealthPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.NodeHealthQueryDescription.EventsFilter
  commentId: P:System.Fabric.Description.NodeHealthQueryDescription.EventsFilter
  id: EventsFilter
  parent: System.Fabric.Description.NodeHealthQueryDescription
  langs:
  - csharp
  - vb
  name: EventsFilter
  nameWithType: NodeHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.NodeHealthQueryDescription.EventsFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EventsFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
    startLine: 69
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for the collection of <xref href=\"System.Fabric.Health.HealthEvent\" data-throw-if-not-resolved=\"false\"></xref> reported on the node. Only events \nthat match the filter will be returned.</p>\n"
  remarks: "<p> Only events that match \n    the filter will be returned. All events will be used to evaluate the node aggregated health state.\n    If the filter is not specified, all events are returned.</p>"
  example: []
  syntax:
    content: public HealthEventsFilter EventsFilter { get; set; }
    content.vb: Public Property EventsFilter As HealthEventsFilter
    parameters: []
    return:
      type: System.Fabric.Health.HealthEventsFilter
      description: "\n<p>The filter for the health event.</p>\n"
  overload: System.Fabric.Description.NodeHealthQueryDescription.EventsFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.NodeHealthQueryDescription.ToString
  commentId: M:System.Fabric.Description.NodeHealthQueryDescription.ToString
  id: ToString
  parent: System.Fabric.Description.NodeHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NodeHealthQueryDescription.ToString()
  fullName: System.Fabric.Description.NodeHealthQueryDescription.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Description/NodeHealthQueryDescription.cs
    startLine: 79
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\nGets a string representation of the health query description.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the health query description.
  overridden: System.Object.ToString
  overload: System.Fabric.Description.NodeHealthQueryDescription.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health.NodeHealth
  commentId: T:System.Fabric.Health.NodeHealth
  isExternal: false
  name: NodeHealth
  nameWithType: NodeHealth
  fullName: System.Fabric.Health.NodeHealth
- uid: System.Fabric.FabricClient.HealthClient.GetNodeHealthAsync(System.Fabric.Description.NodeHealthQueryDescription)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetNodeHealthAsync(System.Fabric.Description.NodeHealthQueryDescription)
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.NodeHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NodeHealthQueryDescription>()
  nameWithType: ByteArraySerializer.Serialize<NodeHealthQueryDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.NodeHealthQueryDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NodeHealthQueryDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.NodeHealthQueryDescription)()
  name.vb: Serialize(Of NodeHealthQueryDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NodeHealthQueryDescription>
    nameWithType: ByteArraySerializer.Serialize<NodeHealthQueryDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.NodeHealthQueryDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NodeHealthQueryDescription)
    nameWithType: ByteArraySerializer.Serialize(Of NodeHealthQueryDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.NodeHealthQueryDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.NodeHealthQueryDescription
  commentId: T:System.Fabric.Description.NodeHealthQueryDescription
  parent: System.Fabric.Description
  isExternal: false
  name: NodeHealthQueryDescription
  nameWithType: NodeHealthQueryDescription
  fullName: System.Fabric.Description.NodeHealthQueryDescription
- uid: System.Fabric.Description.NodeHealthQueryDescription.#ctor*
  commentId: Overload:System.Fabric.Description.NodeHealthQueryDescription.#ctor
  isExternal: false
  name: NodeHealthQueryDescription
  nameWithType: NodeHealthQueryDescription.NodeHealthQueryDescription
  fullName: System.Fabric.Description.NodeHealthQueryDescription.NodeHealthQueryDescription
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Description.NodeHealthQueryDescription.NodeName*
  commentId: Overload:System.Fabric.Description.NodeHealthQueryDescription.NodeName
  isExternal: false
  name: NodeName
  nameWithType: NodeHealthQueryDescription.NodeName
  fullName: System.Fabric.Description.NodeHealthQueryDescription.NodeName
- uid: System.Fabric.Health.ClusterHealthPolicy
  commentId: T:System.Fabric.Health.ClusterHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ClusterHealthPolicy
  nameWithType: ClusterHealthPolicy
  fullName: System.Fabric.Health.ClusterHealthPolicy
- uid: System.Fabric.Description.NodeHealthQueryDescription.HealthPolicy*
  commentId: Overload:System.Fabric.Description.NodeHealthQueryDescription.HealthPolicy
  isExternal: false
  name: HealthPolicy
  nameWithType: NodeHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.NodeHealthQueryDescription.HealthPolicy
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.Health.HealthEvent
  commentId: T:System.Fabric.Health.HealthEvent
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: System.Fabric.Health.HealthEvent
- uid: System.Fabric.Description.NodeHealthQueryDescription.EventsFilter*
  commentId: Overload:System.Fabric.Description.NodeHealthQueryDescription.EventsFilter
  isExternal: false
  name: EventsFilter
  nameWithType: NodeHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.NodeHealthQueryDescription.EventsFilter
- uid: System.Fabric.Health.HealthEventsFilter
  commentId: T:System.Fabric.Health.HealthEventsFilter
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEventsFilter
  nameWithType: HealthEventsFilter
  fullName: System.Fabric.Health.HealthEventsFilter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.NodeHealthQueryDescription.ToString*
  commentId: Overload:System.Fabric.Description.NodeHealthQueryDescription.ToString
  isExternal: false
  name: ToString
  nameWithType: NodeHealthQueryDescription.ToString
  fullName: System.Fabric.Description.NodeHealthQueryDescription.ToString
