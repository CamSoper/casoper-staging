### YamlMime:ManagedReference
items:
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager
  commentId: T:System.Fabric.ReliableMessaging.Session.IReliableSessionManager
  id: IReliableSessionManager
  parent: System.Fabric.ReliableMessaging.Session
  children:
  - System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CloseAsync(System.Threading.CancellationToken)
  - System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri,System.Int64,System.String,System.Threading.CancellationToken)
  - System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri,System.String,System.String,System.Threading.CancellationToken)
  - System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri,System.String,System.Threading.CancellationToken)
  - System.Fabric.ReliableMessaging.Session.IReliableSessionManager.OpenAsync(System.Fabric.ReliableMessaging.Session.IReliableSessionAbortedCallback,System.Threading.CancellationToken)
  - System.Fabric.ReliableMessaging.Session.IReliableSessionManager.RegisterInboundSessionCallbackAsync(System.Fabric.ReliableMessaging.Session.IReliableInboundSessionCallback,System.Threading.CancellationToken)
  - System.Fabric.ReliableMessaging.Session.IReliableSessionManager.UnregisterInboundSessionCallbackAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IReliableSessionManager
  nameWithType: IReliableSessionManager
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IReliableSessionManager
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
    startLine: 247
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.ReliableMessaging.Session
  summary: "\nSession manager, used to create  and accept  messaging sessions\n"
  example: []
  syntax:
    content: public interface IReliableSessionManager
    content.vb: Public Interface IReliableSessionManager
  extensionMethods:
  - System.Fabric.ReliableMessaging.Session.IReliableSessionManager.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.OpenAsync(System.Fabric.ReliableMessaging.Session.IReliableSessionAbortedCallback,System.Threading.CancellationToken)
  commentId: M:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.OpenAsync(System.Fabric.ReliableMessaging.Session.IReliableSessionAbortedCallback,System.Threading.CancellationToken)
  id: OpenAsync(System.Fabric.ReliableMessaging.Session.IReliableSessionAbortedCallback,System.Threading.CancellationToken)
  parent: System.Fabric.ReliableMessaging.Session.IReliableSessionManager
  langs:
  - csharp
  - vb
  name: OpenAsync(IReliableSessionAbortedCallback, CancellationToken)
  nameWithType: IReliableSessionManager.OpenAsync(IReliableSessionAbortedCallback, CancellationToken)
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.OpenAsync(System.Fabric.ReliableMessaging.Session.IReliableSessionAbortedCallback, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OpenAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
    startLine: 254
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.ReliableMessaging.Session
  summary: "\nInitialize and start the session manager service with owner information as parameter(s)\nThree overloads for singleton, numbered and named partition types\n"
  example: []
  syntax:
    content: Task OpenAsync(IReliableSessionAbortedCallback sessionClosedCallback, CancellationToken cancellationToken)
    content.vb: Function OpenAsync(sessionClosedCallback As IReliableSessionAbortedCallback, cancellationToken As CancellationToken) As Task
    parameters:
    - id: sessionClosedCallback
      type: System.Fabric.ReliableMessaging.Session.IReliableSessionAbortedCallback
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: The created session
  overload: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.OpenAsync*
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri,System.String,System.Threading.CancellationToken)
  commentId: M:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri,System.String,System.Threading.CancellationToken)
  id: CreateOutboundSessionAsync(System.Uri,System.String,System.Threading.CancellationToken)
  parent: System.Fabric.ReliableMessaging.Session.IReliableSessionManager
  langs:
  - csharp
  - vb
  name: CreateOutboundSessionAsync(Uri, String, CancellationToken)
  nameWithType: IReliableSessionManager.CreateOutboundSessionAsync(Uri, String, CancellationToken)
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateOutboundSessionAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
    startLine: 261
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.ReliableMessaging.Session
  summary: "\nCreate the session\nThree overloads for singleton, numbered and named partition types\n"
  example: []
  syntax:
    content: Task<IReliableMessagingSession> CreateOutboundSessionAsync(Uri targetServiceInstanceName, string targetEndpoint, CancellationToken cancellationToken)
    content.vb: Function CreateOutboundSessionAsync(targetServiceInstanceName As Uri, targetEndpoint As String, cancellationToken As CancellationToken) As Task(Of IReliableMessagingSession)
    parameters:
    - id: targetServiceInstanceName
      type: System.Uri
    - id: targetEndpoint
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Fabric.ReliableMessaging.Session.IReliableMessagingSession}
      description: The created session
  overload: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync*
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri,System.Int64,System.String,System.Threading.CancellationToken)
  commentId: M:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri,System.Int64,System.String,System.Threading.CancellationToken)
  id: CreateOutboundSessionAsync(System.Uri,System.Int64,System.String,System.Threading.CancellationToken)
  parent: System.Fabric.ReliableMessaging.Session.IReliableSessionManager
  langs:
  - csharp
  - vb
  name: CreateOutboundSessionAsync(Uri, Int64, String, CancellationToken)
  nameWithType: IReliableSessionManager.CreateOutboundSessionAsync(Uri, Int64, String, CancellationToken)
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri, System.Int64, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateOutboundSessionAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
    startLine: 272
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.ReliableMessaging.Session
  summary: "\n\n"
  example: []
  syntax:
    content: Task<IReliableMessagingSession> CreateOutboundSessionAsync(Uri targetServiceInstanceName, long partitionKey, string targetEndpoint, CancellationToken cancellationToken)
    content.vb: Function CreateOutboundSessionAsync(targetServiceInstanceName As Uri, partitionKey As Long, targetEndpoint As String, cancellationToken As CancellationToken) As Task(Of IReliableMessagingSession)
    parameters:
    - id: targetServiceInstanceName
      type: System.Uri
      description: ''
    - id: partitionKey
      type: System.Int64
      description: ''
    - id: targetEndpoint
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Fabric.ReliableMessaging.Session.IReliableMessagingSession}
      description: ''
  overload: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync*
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri,System.String,System.String,System.Threading.CancellationToken)
  id: CreateOutboundSessionAsync(System.Uri,System.String,System.String,System.Threading.CancellationToken)
  parent: System.Fabric.ReliableMessaging.Session.IReliableSessionManager
  langs:
  - csharp
  - vb
  name: CreateOutboundSessionAsync(Uri, String, String, CancellationToken)
  nameWithType: IReliableSessionManager.CreateOutboundSessionAsync(Uri, String, String, CancellationToken)
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync(System.Uri, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateOutboundSessionAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
    startLine: 283
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.ReliableMessaging.Session
  summary: "\n\n"
  example: []
  syntax:
    content: Task<IReliableMessagingSession> CreateOutboundSessionAsync(Uri targetServiceInstanceName, string partitionKey, string targetEndpoint, CancellationToken cancellationToken)
    content.vb: Function CreateOutboundSessionAsync(targetServiceInstanceName As Uri, partitionKey As String, targetEndpoint As String, cancellationToken As CancellationToken) As Task(Of IReliableMessagingSession)
    parameters:
    - id: targetServiceInstanceName
      type: System.Uri
      description: ''
    - id: partitionKey
      type: System.String
      description: ''
    - id: targetEndpoint
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Fabric.ReliableMessaging.Session.IReliableMessagingSession}
      description: ''
  overload: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync*
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.RegisterInboundSessionCallbackAsync(System.Fabric.ReliableMessaging.Session.IReliableInboundSessionCallback,System.Threading.CancellationToken)
  commentId: M:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.RegisterInboundSessionCallbackAsync(System.Fabric.ReliableMessaging.Session.IReliableInboundSessionCallback,System.Threading.CancellationToken)
  id: RegisterInboundSessionCallbackAsync(System.Fabric.ReliableMessaging.Session.IReliableInboundSessionCallback,System.Threading.CancellationToken)
  parent: System.Fabric.ReliableMessaging.Session.IReliableSessionManager
  langs:
  - csharp
  - vb
  name: RegisterInboundSessionCallbackAsync(IReliableInboundSessionCallback, CancellationToken)
  nameWithType: IReliableSessionManager.RegisterInboundSessionCallbackAsync(IReliableInboundSessionCallback, CancellationToken)
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.RegisterInboundSessionCallbackAsync(System.Fabric.ReliableMessaging.Session.IReliableInboundSessionCallback, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RegisterInboundSessionCallbackAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
    startLine: 293
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.ReliableMessaging.Session
  summary: "\nRegister willingness to accept inbound sessions, with permission granted through\nthe IReliableInboundSessionCallback parameter supplied\nTemporarily missing the IReliableInboundSessionCallback input parameter\nuntil KTL async compatible synchronous callback pattern is figured out\n"
  example: []
  syntax:
    content: Task<string> RegisterInboundSessionCallbackAsync(IReliableInboundSessionCallback callback, CancellationToken token)
    content.vb: Function RegisterInboundSessionCallbackAsync(callback As IReliableInboundSessionCallback, token As CancellationToken) As Task(Of String)
    parameters:
    - id: callback
      type: System.Fabric.ReliableMessaging.Session.IReliableInboundSessionCallback
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: the endpoint (FQDN and port) at which the session is listening
  overload: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.RegisterInboundSessionCallbackAsync*
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.UnregisterInboundSessionCallbackAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.UnregisterInboundSessionCallbackAsync(System.Threading.CancellationToken)
  id: UnregisterInboundSessionCallbackAsync(System.Threading.CancellationToken)
  parent: System.Fabric.ReliableMessaging.Session.IReliableSessionManager
  langs:
  - csharp
  - vb
  name: UnregisterInboundSessionCallbackAsync(CancellationToken)
  nameWithType: IReliableSessionManager.UnregisterInboundSessionCallbackAsync(CancellationToken)
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.UnregisterInboundSessionCallbackAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UnregisterInboundSessionCallbackAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
    startLine: 300
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.ReliableMessaging.Session
  summary: "\nRevoke willingness to accept inbound sessions\n"
  example: []
  syntax:
    content: Task UnregisterInboundSessionCallbackAsync(CancellationToken token)
    content.vb: Function UnregisterInboundSessionCallbackAsync(token As CancellationToken) As Task
    parameters:
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.UnregisterInboundSessionCallbackAsync*
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CloseAsync(System.Threading.CancellationToken)
  commentId: M:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CloseAsync(System.Threading.CancellationToken)
  id: CloseAsync(System.Threading.CancellationToken)
  parent: System.Fabric.ReliableMessaging.Session.IReliableSessionManager
  langs:
  - csharp
  - vb
  name: CloseAsync(CancellationToken)
  nameWithType: IReliableSessionManager.CloseAsync(CancellationToken)
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CloseAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CloseAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Session/Interfaces.cs
    startLine: 311
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.ReliableMessaging.Session
  summary: "\nGraceful shutdown of the session manager and its resources\n"
  example: []
  syntax:
    content: Task CloseAsync(CancellationToken token)
    content.vb: Function CloseAsync(token As CancellationToken) As Task
    parameters:
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
  overload: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CloseAsync*
references:
- uid: System.Fabric.ReliableMessaging.Session
  commentId: N:System.Fabric.ReliableMessaging.Session
  isExternal: false
  name: System.Fabric.ReliableMessaging.Session
  nameWithType: System.Fabric.ReliableMessaging.Session
  fullName: System.Fabric.ReliableMessaging.Session
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IReliableSessionManager>()
  nameWithType: ByteArraySerializer.Serialize<IReliableSessionManager>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ReliableMessaging.Session.IReliableSessionManager>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IReliableSessionManager)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ReliableMessaging.Session.IReliableSessionManager)()
  name.vb: Serialize(Of IReliableSessionManager)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IReliableSessionManager>
    nameWithType: ByteArraySerializer.Serialize<IReliableSessionManager>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ReliableMessaging.Session.IReliableSessionManager>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IReliableSessionManager)
    nameWithType: ByteArraySerializer.Serialize(Of IReliableSessionManager)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ReliableMessaging.Session.IReliableSessionManager)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.OpenAsync*
  commentId: Overload:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.OpenAsync
  isExternal: false
  name: OpenAsync
  nameWithType: IReliableSessionManager.OpenAsync
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.OpenAsync
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionAbortedCallback
  commentId: T:System.Fabric.ReliableMessaging.Session.IReliableSessionAbortedCallback
  parent: System.Fabric.ReliableMessaging.Session
  isExternal: false
  name: IReliableSessionAbortedCallback
  nameWithType: IReliableSessionAbortedCallback
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionAbortedCallback
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync*
  commentId: Overload:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync
  isExternal: false
  name: CreateOutboundSessionAsync
  nameWithType: IReliableSessionManager.CreateOutboundSessionAsync
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CreateOutboundSessionAsync
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.Fabric.ReliableMessaging.Session.IReliableMessagingSession}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.ReliableMessaging.Session.IReliableMessagingSession}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IReliableMessagingSession>
  nameWithType: Task<IReliableMessagingSession>
  fullName: System.Threading.Tasks.Task<System.Fabric.ReliableMessaging.Session.IReliableMessagingSession>
  nameWithType.vb: Task(Of IReliableMessagingSession)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.ReliableMessaging.Session.IReliableMessagingSession)
  name.vb: Task(Of IReliableMessagingSession)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.ReliableMessaging.Session.IReliableMessagingSession
    name: IReliableMessagingSession
    nameWithType: IReliableMessagingSession
    fullName: System.Fabric.ReliableMessaging.Session.IReliableMessagingSession
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.ReliableMessaging.Session.IReliableMessagingSession
    name: IReliableMessagingSession
    nameWithType: IReliableMessagingSession
    fullName: System.Fabric.ReliableMessaging.Session.IReliableMessagingSession
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.RegisterInboundSessionCallbackAsync*
  commentId: Overload:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.RegisterInboundSessionCallbackAsync
  isExternal: false
  name: RegisterInboundSessionCallbackAsync
  nameWithType: IReliableSessionManager.RegisterInboundSessionCallbackAsync
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.RegisterInboundSessionCallbackAsync
- uid: System.Fabric.ReliableMessaging.Session.IReliableInboundSessionCallback
  commentId: T:System.Fabric.ReliableMessaging.Session.IReliableInboundSessionCallback
  parent: System.Fabric.ReliableMessaging.Session
  isExternal: false
  name: IReliableInboundSessionCallback
  nameWithType: IReliableInboundSessionCallback
  fullName: System.Fabric.ReliableMessaging.Session.IReliableInboundSessionCallback
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.UnregisterInboundSessionCallbackAsync*
  commentId: Overload:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.UnregisterInboundSessionCallbackAsync
  isExternal: false
  name: UnregisterInboundSessionCallbackAsync
  nameWithType: IReliableSessionManager.UnregisterInboundSessionCallbackAsync
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.UnregisterInboundSessionCallbackAsync
- uid: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CloseAsync*
  commentId: Overload:System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CloseAsync
  isExternal: false
  name: CloseAsync
  nameWithType: IReliableSessionManager.CloseAsync
  fullName: System.Fabric.ReliableMessaging.Session.IReliableSessionManager.CloseAsync
