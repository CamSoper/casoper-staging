### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions
  id: ActorTypeExtensions
  parent: Microsoft.ServiceFabric.Actors.Runtime
  children:
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorEventInterfaces(System.Type)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorInterfaces(System.Type)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActor(System.Type)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActorInterface(System.Type)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsRemindableActor(System.Type)
  langs:
  - csharp
  - vb
  name: ActorTypeExtensions
  nameWithType: ActorTypeExtensions
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorTypeExtensions
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nContains extension method for Actor types.\n"
  example: []
  syntax:
    content: public static class ActorTypeExtensions
    content.vb: Public Module ActorTypeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorInterfaces(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorInterfaces(System.Type)
  id: GetActorInterfaces(System.Type)
  isExtensionMethod: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions
  langs:
  - csharp
  - vb
  name: GetActorInterfaces(Type)
  nameWithType: ActorTypeExtensions.GetActorInterfaces(Type)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorInterfaces(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetActorInterfaces
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets actor interfaces implemented by the actor class.\n"
  example: []
  syntax:
    content: public static Type[] GetActorInterfaces(this Type type)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetActorInterfaces(type As Type) As Type()
    parameters:
    - id: type
      type: System.Type
      description: Type of class implementing actor.
    return:
      type: System.Type[]
      description: An array containing actor interface which the type implements.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorInterfaces*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorEventInterfaces(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorEventInterfaces(System.Type)
  id: GetActorEventInterfaces(System.Type)
  isExtensionMethod: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions
  langs:
  - csharp
  - vb
  name: GetActorEventInterfaces(Type)
  nameWithType: ActorTypeExtensions.GetActorEventInterfaces(Type)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorEventInterfaces(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetActorEventInterfaces
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
    startLine: 34
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets actor event interfaces implemented by the actor class.\n"
  example: []
  syntax:
    content: public static Type[] GetActorEventInterfaces(this Type type)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetActorEventInterfaces(type As Type) As Type()
    parameters:
    - id: type
      type: System.Type
      description: Type of class implementing actor.
    return:
      type: System.Type[]
      description: An array containing actor event interface which the type implements.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorEventInterfaces*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActorInterface(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActorInterface(System.Type)
  id: IsActorInterface(System.Type)
  isExtensionMethod: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions
  langs:
  - csharp
  - vb
  name: IsActorInterface(Type)
  nameWithType: ActorTypeExtensions.IsActorInterface(Type)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActorInterface(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsActorInterface
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
    startLine: 66
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nChecks if an interface type is an actor interface.\n"
  example: []
  syntax:
    content: public static bool IsActorInterface(this Type actorInterfaceType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsActorInterface(actorInterfaceType As Type) As Boolean
    parameters:
    - id: actorInterfaceType
      type: System.Type
      description: Interface type of the actor.
    return:
      type: System.Boolean
      description: >-
        true, if actorInterfaceType is an interface only implements <xref href="Microsoft.ServiceFabric.Actors.IActor" data-throw-if-not-resolved="false"></xref>

        or (<xref href="Microsoft.ServiceFabric.Actors.IActor" data-throw-if-not-resolved="false"></xref> and <xref href="Microsoft.ServiceFabric.Actors.IActorEventPublisher" data-throw-if-not-resolved="false"></xref>).
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActorInterface*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActor(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActor(System.Type)
  id: IsActor(System.Type)
  isExtensionMethod: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions
  langs:
  - csharp
  - vb
  name: IsActor(Type)
  nameWithType: ActorTypeExtensions.IsActor(Type)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActor(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsActor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
    startLine: 76
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nChecks if an actorType is an actor.\n"
  example: []
  syntax:
    content: public static bool IsActor(this Type actorType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsActor(actorType As Type) As Boolean
    parameters:
    - id: actorType
      type: System.Type
      description: Type implementing actor.
    return:
      type: System.Boolean
      description: true, if <xref href="System.Type.BaseType" data-throw-if-not-resolved="false"></xref> of actorType is <xref href="Microsoft.ServiceFabric.Actors.Runtime.Actor" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsRemindableActor(System.Type)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsRemindableActor(System.Type)
  id: IsRemindableActor(System.Type)
  isExtensionMethod: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions
  langs:
  - csharp
  - vb
  name: IsRemindableActor(Type)
  nameWithType: ActorTypeExtensions.IsRemindableActor(Type)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsRemindableActor(System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsRemindableActor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorTypeExtensions.cs
    startLine: 99
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nChecks if an actor type implements <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.IRemindable\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: public static bool IsRemindableActor(this Type actorType)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsRemindableActor(actorType As Type) As Boolean
    parameters:
    - id: actorType
      type: System.Type
      description: Type implementing actor.
    return:
      type: System.Boolean
      description: true, if <em>actorType</em> implements <xref href="Microsoft.ServiceFabric.Actors.Runtime.IRemindable" data-throw-if-not-resolved="false"></xref> interface.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsRemindableActor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.ServiceFabric.Actors.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorInterfaces*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorInterfaces
  isExternal: false
  name: GetActorInterfaces
  nameWithType: ActorTypeExtensions.GetActorInterfaces
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorInterfaces
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorEventInterfaces*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorEventInterfaces
  isExternal: false
  name: GetActorEventInterfaces
  nameWithType: ActorTypeExtensions.GetActorEventInterfaces
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.GetActorEventInterfaces
- uid: Microsoft.ServiceFabric.Actors.IActor
  commentId: T:Microsoft.ServiceFabric.Actors.IActor
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: IActor
  nameWithType: IActor
  fullName: Microsoft.ServiceFabric.Actors.IActor
- uid: Microsoft.ServiceFabric.Actors.IActorEventPublisher
  commentId: T:Microsoft.ServiceFabric.Actors.IActorEventPublisher
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: IActorEventPublisher
  nameWithType: IActorEventPublisher
  fullName: Microsoft.ServiceFabric.Actors.IActorEventPublisher
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActorInterface*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActorInterface
  isExternal: false
  name: IsActorInterface
  nameWithType: ActorTypeExtensions.IsActorInterface
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActorInterface
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceFabric.Actors
  commentId: N:Microsoft.ServiceFabric.Actors
  isExternal: false
  name: Microsoft.ServiceFabric.Actors
  nameWithType: Microsoft.ServiceFabric.Actors
  fullName: Microsoft.ServiceFabric.Actors
- uid: System.Type.BaseType
  commentId: P:System.Type.BaseType
- uid: Microsoft.ServiceFabric.Actors.Runtime.Actor
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.Actor
  isExternal: false
  name: Actor
  nameWithType: Actor
  fullName: Microsoft.ServiceFabric.Actors.Runtime.Actor
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActor
  isExternal: false
  name: IsActor
  nameWithType: ActorTypeExtensions.IsActor
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsActor
- uid: Microsoft.ServiceFabric.Actors.Runtime.IRemindable
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IRemindable
  isExternal: false
  name: IRemindable
  nameWithType: IRemindable
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IRemindable
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsRemindableActor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsRemindableActor
  isExternal: false
  name: IsRemindableActor
  nameWithType: ActorTypeExtensions.IsRemindableActor
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeExtensions.IsRemindableActor
