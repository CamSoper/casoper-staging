### YamlMime:ManagedReference
items:
- uid: System.Fabric.ClaimsCredentials
  commentId: T:System.Fabric.ClaimsCredentials
  id: ClaimsCredentials
  parent: System.Fabric
  children:
  - System.Fabric.ClaimsCredentials.#ctor
  - System.Fabric.ClaimsCredentials.IssuerThumbprints
  - System.Fabric.ClaimsCredentials.LocalClaims
  - System.Fabric.ClaimsCredentials.ProtectionLevel
  - System.Fabric.ClaimsCredentials.ServerCommonNames
  - System.Fabric.ClaimsCredentials.ServerThumbprints
  langs:
  - csharp
  - vb
  name: ClaimsCredentials
  nameWithType: ClaimsCredentials
  fullName: System.Fabric.ClaimsCredentials
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClaimsCredentials
    path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
    startLine: 13
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Represents the claim based security credential acquired from STS (security token service).</p>\n"
  example: []
  syntax:
    content: 'public sealed class ClaimsCredentials : SecurityCredentials'
    content.vb: >-
      Public NotInheritable Class ClaimsCredentials
          Inherits SecurityCredentials
  inheritance:
  - System.Object
  - System.Fabric.SecurityCredentials
  inheritedMembers:
  - System.Fabric.SecurityCredentials.CredentialType
  - System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.ClaimsCredentials.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.ClaimsCredentials.#ctor
  commentId: M:System.Fabric.ClaimsCredentials.#ctor
  id: '#ctor'
  parent: System.Fabric.ClaimsCredentials
  langs:
  - csharp
  - vb
  name: ClaimsCredentials()
  nameWithType: ClaimsCredentials.ClaimsCredentials()
  fullName: System.Fabric.ClaimsCredentials.ClaimsCredentials()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
    startLine: 24
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.ClaimsCredentials\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ClaimsCredentials()
    content.vb: Public Sub New
  overload: System.Fabric.ClaimsCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.ClaimsCredentials.LocalClaims
  commentId: P:System.Fabric.ClaimsCredentials.LocalClaims
  id: LocalClaims
  parent: System.Fabric.ClaimsCredentials
  langs:
  - csharp
  - vb
  name: LocalClaims
  nameWithType: ClaimsCredentials.LocalClaims
  fullName: System.Fabric.ClaimsCredentials.LocalClaims
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LocalClaims
    path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
    startLine: 39
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the string representation of claims token acquired from STS (security token service).</p>\n"
  example: []
  syntax:
    content: public string LocalClaims { get; set; }
    content.vb: Public Property LocalClaims As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string representation of claims token acquired from STS (security token service).</p>\n"
  overload: System.Fabric.ClaimsCredentials.LocalClaims*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.ClaimsCredentials.ServerCommonNames
  commentId: P:System.Fabric.ClaimsCredentials.ServerCommonNames
  id: ServerCommonNames
  parent: System.Fabric.ClaimsCredentials
  langs:
  - csharp
  - vb
  name: ServerCommonNames
  nameWithType: ClaimsCredentials.ServerCommonNames
  fullName: System.Fabric.ClaimsCredentials.ServerCommonNames
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServerCommonNames
    path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
    startLine: 55
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the expected common names of server certificate.</p>\n"
  example: []
  syntax:
    content: public IList<string> ServerCommonNames { get; }
    content.vb: Public ReadOnly Property ServerCommonNames As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "\n<p>The expected common names of server certificate.</p>\n"
  overload: System.Fabric.ClaimsCredentials.ServerCommonNames*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ClaimsCredentials.ServerThumbprints
  commentId: P:System.Fabric.ClaimsCredentials.ServerThumbprints
  id: ServerThumbprints
  parent: System.Fabric.ClaimsCredentials
  langs:
  - csharp
  - vb
  name: ServerThumbprints
  nameWithType: ClaimsCredentials.ServerThumbprints
  fullName: System.Fabric.ClaimsCredentials.ServerThumbprints
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServerThumbprints
    path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
    startLine: 68
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nFOR INTERNAL USE ONLY.\n"
  example: []
  syntax:
    content: public IList<string> ServerThumbprints { get; }
    content.vb: Public ReadOnly Property ServerThumbprints As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: FOR INTERNAL USE ONLY.
  overload: System.Fabric.ClaimsCredentials.ServerThumbprints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ClaimsCredentials.IssuerThumbprints
  commentId: P:System.Fabric.ClaimsCredentials.IssuerThumbprints
  id: IssuerThumbprints
  parent: System.Fabric.ClaimsCredentials
  langs:
  - csharp
  - vb
  name: IssuerThumbprints
  nameWithType: ClaimsCredentials.IssuerThumbprints
  fullName: System.Fabric.ClaimsCredentials.IssuerThumbprints
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IssuerThumbprints
    path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
    startLine: 83
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the certificate thumbprints of server certificate issuer.</p>\n"
  example: []
  syntax:
    content: public IList<string> IssuerThumbprints { get; }
    content.vb: Public ReadOnly Property IssuerThumbprints As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "\n<p>The certificate thumbprints of server certificate issuer.</p>\n"
  overload: System.Fabric.ClaimsCredentials.IssuerThumbprints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ClaimsCredentials.ProtectionLevel
  commentId: P:System.Fabric.ClaimsCredentials.ProtectionLevel
  id: ProtectionLevel
  parent: System.Fabric.ClaimsCredentials
  langs:
  - csharp
  - vb
  name: ProtectionLevel
  nameWithType: ClaimsCredentials.ProtectionLevel
  fullName: System.Fabric.ClaimsCredentials.ProtectionLevel
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ProtectionLevel
    path: src/prod/src/managed/Api/src/System/Fabric/Common/ClaimsCredentials.cs
    startLine: 98
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the protection level of communication with server; the default value is <xref href=\"System.Fabric.ProtectionLevel.EncryptAndSign\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public ProtectionLevel ProtectionLevel { get; set; }
    content.vb: Public Property ProtectionLevel As ProtectionLevel
    parameters: []
    return:
      type: System.Fabric.ProtectionLevel
      description: "\n<p>The protection level of communication with server.</p>\n"
  overload: System.Fabric.ClaimsCredentials.ProtectionLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.SecurityCredentials
  commentId: T:System.Fabric.SecurityCredentials
  parent: System.Fabric
  isExternal: false
  name: SecurityCredentials
  nameWithType: SecurityCredentials
  fullName: System.Fabric.SecurityCredentials
- uid: System.Fabric.SecurityCredentials.CredentialType
  commentId: P:System.Fabric.SecurityCredentials.CredentialType
  parent: System.Fabric.SecurityCredentials
  isExternal: false
  name: CredentialType
  nameWithType: SecurityCredentials.CredentialType
  fullName: System.Fabric.SecurityCredentials.CredentialType
- uid: System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
  commentId: M:System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
  parent: System.Fabric.SecurityCredentials
  isExternal: true
  name: LoadFrom(CodePackageActivationContext, String, String)
  nameWithType: SecurityCredentials.LoadFrom(CodePackageActivationContext, String, String)
  fullName: System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext, System.String, System.String)
  spec.csharp:
  - uid: System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
    name: LoadFrom
    nameWithType: SecurityCredentials.LoadFrom
    fullName: System.Fabric.SecurityCredentials.LoadFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.CodePackageActivationContext
    name: CodePackageActivationContext
    nameWithType: CodePackageActivationContext
    fullName: System.Fabric.CodePackageActivationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.SecurityCredentials.LoadFrom(System.Fabric.CodePackageActivationContext,System.String,System.String)
    name: LoadFrom
    nameWithType: SecurityCredentials.LoadFrom
    fullName: System.Fabric.SecurityCredentials.LoadFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.CodePackageActivationContext
    name: CodePackageActivationContext
    nameWithType: CodePackageActivationContext
    fullName: System.Fabric.CodePackageActivationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ClaimsCredentials.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ClaimsCredentials>()
  nameWithType: ByteArraySerializer.Serialize<ClaimsCredentials>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ClaimsCredentials>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ClaimsCredentials)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ClaimsCredentials)()
  name.vb: Serialize(Of ClaimsCredentials)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ClaimsCredentials>
    nameWithType: ByteArraySerializer.Serialize<ClaimsCredentials>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ClaimsCredentials>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ClaimsCredentials)
    nameWithType: ByteArraySerializer.Serialize(Of ClaimsCredentials)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ClaimsCredentials)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.ClaimsCredentials
  commentId: T:System.Fabric.ClaimsCredentials
  isExternal: false
  name: ClaimsCredentials
  nameWithType: ClaimsCredentials
  fullName: System.Fabric.ClaimsCredentials
- uid: System.Fabric.ClaimsCredentials.#ctor*
  commentId: Overload:System.Fabric.ClaimsCredentials.#ctor
  isExternal: false
  name: ClaimsCredentials
  nameWithType: ClaimsCredentials.ClaimsCredentials
  fullName: System.Fabric.ClaimsCredentials.ClaimsCredentials
- uid: System.Fabric.ClaimsCredentials.LocalClaims*
  commentId: Overload:System.Fabric.ClaimsCredentials.LocalClaims
  isExternal: false
  name: LocalClaims
  nameWithType: ClaimsCredentials.LocalClaims
  fullName: System.Fabric.ClaimsCredentials.LocalClaims
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.ClaimsCredentials.ServerCommonNames*
  commentId: Overload:System.Fabric.ClaimsCredentials.ServerCommonNames
  isExternal: false
  name: ServerCommonNames
  nameWithType: ClaimsCredentials.ServerCommonNames
  fullName: System.Fabric.ClaimsCredentials.ServerCommonNames
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.ClaimsCredentials.ServerThumbprints*
  commentId: Overload:System.Fabric.ClaimsCredentials.ServerThumbprints
  isExternal: false
  name: ServerThumbprints
  nameWithType: ClaimsCredentials.ServerThumbprints
  fullName: System.Fabric.ClaimsCredentials.ServerThumbprints
- uid: System.Fabric.ClaimsCredentials.IssuerThumbprints*
  commentId: Overload:System.Fabric.ClaimsCredentials.IssuerThumbprints
  isExternal: false
  name: IssuerThumbprints
  nameWithType: ClaimsCredentials.IssuerThumbprints
  fullName: System.Fabric.ClaimsCredentials.IssuerThumbprints
- uid: System.Fabric.ProtectionLevel.EncryptAndSign
  commentId: F:System.Fabric.ProtectionLevel.EncryptAndSign
- uid: System.Fabric.ClaimsCredentials.ProtectionLevel*
  commentId: Overload:System.Fabric.ClaimsCredentials.ProtectionLevel
  isExternal: false
  name: ProtectionLevel
  nameWithType: ClaimsCredentials.ProtectionLevel
  fullName: System.Fabric.ClaimsCredentials.ProtectionLevel
- uid: System.Fabric.ProtectionLevel
  commentId: T:System.Fabric.ProtectionLevel
  parent: System.Fabric
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Fabric.ProtectionLevel
