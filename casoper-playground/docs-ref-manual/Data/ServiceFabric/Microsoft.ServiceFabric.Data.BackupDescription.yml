### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.BackupDescription
  commentId: T:Microsoft.ServiceFabric.Data.BackupDescription
  id: BackupDescription
  parent: Microsoft.ServiceFabric.Data
  children:
  - Microsoft.ServiceFabric.Data.BackupDescription.#ctor(Microsoft.ServiceFabric.Data.BackupOption,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  - Microsoft.ServiceFabric.Data.BackupDescription.#ctor(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  - Microsoft.ServiceFabric.Data.BackupDescription.BackupCallback
  - Microsoft.ServiceFabric.Data.BackupDescription.Option
  langs:
  - csharp
  - vb
  name: BackupDescription
  nameWithType: BackupDescription
  fullName: Microsoft.ServiceFabric.Data.BackupDescription
  type: Struct
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BackupDescription
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupDescription.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nA BackupDescription contains all of the information necessary to backup a stateful service replica. \n"
  example: []
  syntax:
    content: public struct BackupDescription
    content.vb: Public Structure BackupDescription
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - Microsoft.ServiceFabric.Data.BackupDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.ServiceFabric.Data.BackupDescription.#ctor(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Microsoft.ServiceFabric.Data.BackupDescription.#ctor(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  id: '#ctor(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})'
  parent: Microsoft.ServiceFabric.Data.BackupDescription
  langs:
  - csharp
  - vb
  name: BackupDescription(Func<BackupInfo, CancellationToken, Task<Boolean>>)
  nameWithType: BackupDescription.BackupDescription(Func<BackupInfo, CancellationToken, Task<Boolean>>)
  fullName: Microsoft.ServiceFabric.Data.BackupDescription.BackupDescription(System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupDescription.cs
    startLine: 27
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nInitializes a new instance of the <cref name=\"BackupDescription\"></cref> structure.\n"
  example: []
  syntax:
    content: public BackupDescription(Func<BackupInfo, CancellationToken, Task<bool>> backupCallback)
    content.vb: Public Sub New(backupCallback As Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
    parameters:
    - id: backupCallback
      type: System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
      description: "\nCallback to be called when the backup folder has been created and populated locally by the system. \nThis folder is now ready to be moved out of the node.\n"
  overload: Microsoft.ServiceFabric.Data.BackupDescription.#ctor*
  nameWithType.vb: BackupDescription.BackupDescription(Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Data.BackupDescription.BackupDescription(System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)))
  name.vb: BackupDescription(Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
- uid: Microsoft.ServiceFabric.Data.BackupDescription.#ctor(Microsoft.ServiceFabric.Data.BackupOption,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Microsoft.ServiceFabric.Data.BackupDescription.#ctor(Microsoft.ServiceFabric.Data.BackupOption,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  id: '#ctor(Microsoft.ServiceFabric.Data.BackupOption,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})'
  parent: Microsoft.ServiceFabric.Data.BackupDescription
  langs:
  - csharp
  - vb
  name: BackupDescription(BackupOption, Func<BackupInfo, CancellationToken, Task<Boolean>>)
  nameWithType: BackupDescription.BackupDescription(BackupOption, Func<BackupInfo, CancellationToken, Task<Boolean>>)
  fullName: Microsoft.ServiceFabric.Data.BackupDescription.BackupDescription(Microsoft.ServiceFabric.Data.BackupOption, System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupDescription.cs
    startLine: 42
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nInitializes a new instance of the <cref name=\"BackupDescription\"></cref> structure.\n"
  example: []
  syntax:
    content: public BackupDescription(BackupOption option, Func<BackupInfo, CancellationToken, Task<bool>> backupCallback)
    content.vb: Public Sub New(option As BackupOption, backupCallback As Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
    parameters:
    - id: option
      type: Microsoft.ServiceFabric.Data.BackupOption
      description: "\nThe <cref name=\"BackupOption\"></cref> for the backup.\n"
    - id: backupCallback
      type: System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
      description: "\nCallback to be called when the backup folder has been created locally and is ready to be moved out of the node.\n"
  overload: Microsoft.ServiceFabric.Data.BackupDescription.#ctor*
  nameWithType.vb: BackupDescription.BackupDescription(BackupOption, Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Data.BackupDescription.BackupDescription(Microsoft.ServiceFabric.Data.BackupOption, System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)))
  name.vb: BackupDescription(BackupOption, Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
- uid: Microsoft.ServiceFabric.Data.BackupDescription.Option
  commentId: P:Microsoft.ServiceFabric.Data.BackupDescription.Option
  id: Option
  parent: Microsoft.ServiceFabric.Data.BackupDescription
  langs:
  - csharp
  - vb
  name: Option
  nameWithType: BackupDescription.Option
  fullName: Microsoft.ServiceFabric.Data.BackupDescription.Option
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Option
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupDescription.cs
    startLine: 54
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nThe type of backup to perform.\n"
  example: []
  syntax:
    content: public BackupOption Option { get; }
    content.vb: Public ReadOnly Property Option As BackupOption
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.BackupOption
      description: "\nThe type of the backup.\n"
  overload: Microsoft.ServiceFabric.Data.BackupDescription.Option*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Data.BackupDescription.BackupCallback
  commentId: P:Microsoft.ServiceFabric.Data.BackupDescription.BackupCallback
  id: BackupCallback
  parent: Microsoft.ServiceFabric.Data.BackupDescription
  langs:
  - csharp
  - vb
  name: BackupCallback
  nameWithType: BackupDescription.BackupCallback
  fullName: Microsoft.ServiceFabric.Data.BackupDescription.BackupCallback
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BackupCallback
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/BackupDescription.cs
    startLine: 74
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets the callback to be called when the backup folder has been created locally and is ready to be moved out of the node.\n"
  remarks: "\nBackup callback function takes in BackupInfo and Cancellation token and returns a Task that represents the processing of the backup folder.\nBoolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location.\nIf false is returned, BackupAsync throws InvalidOperationException with the relevant message indicating backupCallback returned false.\nAlso, backup will be marked as unsuccessful.\n"
  example: []
  syntax:
    content: public Func<BackupInfo, CancellationToken, Task<bool>> BackupCallback { get; }
    content.vb: Public ReadOnly Property BackupCallback As Func(Of BackupInfo, CancellationToken, Task(Of Boolean))
    parameters: []
    return:
      type: System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
      description: "\nThe backup callback function commonly used to copy the backup folder to an external location.\n"
  overload: Microsoft.ServiceFabric.Data.BackupDescription.BackupCallback*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.BackupDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<BackupDescription>()
  nameWithType: ByteArraySerializer.Serialize<BackupDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.BackupDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of BackupDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.BackupDescription)()
  name.vb: Serialize(Of BackupDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<BackupDescription>
    nameWithType: ByteArraySerializer.Serialize<BackupDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.BackupDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of BackupDescription)
    nameWithType: ByteArraySerializer.Serialize(Of BackupDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.BackupDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.BackupDescription.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Data.BackupDescription.#ctor
  isExternal: false
  name: BackupDescription
  nameWithType: BackupDescription.BackupDescription
  fullName: Microsoft.ServiceFabric.Data.BackupDescription.BackupDescription
- uid: System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
  commentId: T:System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
  parent: System
  definition: System.Func`3
  name: Func<BackupInfo, CancellationToken, Task<Boolean>>
  nameWithType: Func<BackupInfo, CancellationToken, Task<Boolean>>
  fullName: System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>
  nameWithType.vb: Func(Of BackupInfo, CancellationToken, Task(Of Boolean))
  fullname.vb: System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean))
  name.vb: Func(Of BackupInfo, CancellationToken, Task(Of Boolean))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.BackupOption
  commentId: T:Microsoft.ServiceFabric.Data.BackupOption
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: BackupOption
  nameWithType: BackupOption
  fullName: Microsoft.ServiceFabric.Data.BackupOption
- uid: Microsoft.ServiceFabric.Data.BackupDescription.Option*
  commentId: Overload:Microsoft.ServiceFabric.Data.BackupDescription.Option
  isExternal: false
  name: Option
  nameWithType: BackupDescription.Option
  fullName: Microsoft.ServiceFabric.Data.BackupDescription.Option
- uid: Microsoft.ServiceFabric.Data.BackupDescription.BackupCallback*
  commentId: Overload:Microsoft.ServiceFabric.Data.BackupDescription.BackupCallback
  isExternal: false
  name: BackupCallback
  nameWithType: BackupDescription.BackupCallback
  fullName: Microsoft.ServiceFabric.Data.BackupDescription.BackupCallback
