### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.NodeHealthStateFilter
  commentId: T:System.Fabric.Health.NodeHealthStateFilter
  id: NodeHealthStateFilter
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.NodeHealthStateFilter.#ctor
  - System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter
  - System.Fabric.Health.NodeHealthStateFilter.NodeNameFilter
  - System.Fabric.Health.NodeHealthStateFilter.ToString
  langs:
  - csharp
  - vb
  name: NodeHealthStateFilter
  nameWithType: NodeHealthStateFilter
  fullName: System.Fabric.Health.NodeHealthStateFilter
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthStateFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeHealthStateFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthStateFilter.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nFilter for <xref href=\"System.Fabric.Health.NodeHealthState\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  remarks: >-
    The cluster health state chunk queries can specify a list of node filters to fine-grain

    select the nodes that should be included in the query result.

    Note that all the nodes are used to evaluate cluster aggregated health state, regardless of the filter passed in.
  example: []
  syntax:
    content: public sealed class NodeHealthStateFilter
    content.vb: Public NotInheritable Class NodeHealthStateFilter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.NodeHealthStateFilter.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.NodeHealthStateFilter.#ctor
  commentId: M:System.Fabric.Health.NodeHealthStateFilter.#ctor
  id: '#ctor'
  parent: System.Fabric.Health.NodeHealthStateFilter
  langs:
  - csharp
  - vb
  name: NodeHealthStateFilter()
  nameWithType: NodeHealthStateFilter.NodeHealthStateFilter()
  fullName: System.Fabric.Health.NodeHealthStateFilter.NodeHealthStateFilter()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthStateFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthStateFilter.cs
    startLine: 24
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nInitializes a new instance of the <xref href=\"System.Fabric.Health.NodeHealthStateFilter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public NodeHealthStateFilter()
    content.vb: Public Sub New
  overload: System.Fabric.Health.NodeHealthStateFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter
  commentId: P:System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter
  id: HealthStateFilter
  parent: System.Fabric.Health.NodeHealthStateFilter
  langs:
  - csharp
  - vb
  name: HealthStateFilter
  nameWithType: NodeHealthStateFilter.HealthStateFilter
  fullName: System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthStateFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthStateFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthStateFilter.cs
    startLine: 34
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets or sets filter for the aggregated health state of the <xref href=\"System.Fabric.Health.NodeHealthState\" data-throw-if-not-resolved=\"false\"></xref> entries in the collection. \n"
  remarks: "The health state filter value comes from members or bitwise combination of members of <xref href=\"System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter\" data-throw-if-not-resolved=\"false\"></xref>. \nFor a node to match the filter, its aggregated health state must match the specified health state filter."
  example: []
  syntax:
    content: public HealthStateFilter HealthStateFilter { get; set; }
    content.vb: Public Property HealthStateFilter As HealthStateFilter
    parameters: []
    return:
      type: System.Fabric.Health.HealthStateFilter
      description: The filter for the aggregated health state of the <xref href="System.Fabric.Health.NodeHealthState" data-throw-if-not-resolved="false"></xref> entries in the collection.
  overload: System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.NodeHealthStateFilter.NodeNameFilter
  commentId: P:System.Fabric.Health.NodeHealthStateFilter.NodeNameFilter
  id: NodeNameFilter
  parent: System.Fabric.Health.NodeHealthStateFilter
  langs:
  - csharp
  - vb
  name: NodeNameFilter
  nameWithType: NodeHealthStateFilter.NodeNameFilter
  fullName: System.Fabric.Health.NodeHealthStateFilter.NodeNameFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthStateFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeNameFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthStateFilter.cs
    startLine: 46
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets or sets the node name filter.\n"
  remarks: >-
    If not specified, all nodes that match the parent filters (if any) are taken into consideration and matched against the other filter members, like health state filter.

    Otherwise, the filter only applies to the specfied node.
  example: []
  syntax:
    content: public string NodeNameFilter { get; set; }
    content.vb: Public Property NodeNameFilter As String
    parameters: []
    return:
      type: System.String
      description: The node name filter.
  overload: System.Fabric.Health.NodeHealthStateFilter.NodeNameFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.NodeHealthStateFilter.ToString
  commentId: M:System.Fabric.Health.NodeHealthStateFilter.ToString
  id: ToString
  parent: System.Fabric.Health.NodeHealthStateFilter
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NodeHealthStateFilter.ToString()
  fullName: System.Fabric.Health.NodeHealthStateFilter.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthStateFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Health/NodeHealthStateFilter.cs
    startLine: 57
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nReturns a string representation of the filter.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the filter.
  overridden: System.Object.ToString
  overload: System.Fabric.Health.NodeHealthStateFilter.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health.NodeHealthState
  commentId: T:System.Fabric.Health.NodeHealthState
  parent: System.Fabric.Health
  isExternal: false
  name: NodeHealthState
  nameWithType: NodeHealthState
  fullName: System.Fabric.Health.NodeHealthState
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.NodeHealthStateFilter.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NodeHealthStateFilter>()
  nameWithType: ByteArraySerializer.Serialize<NodeHealthStateFilter>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.NodeHealthStateFilter>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NodeHealthStateFilter)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.NodeHealthStateFilter)()
  name.vb: Serialize(Of NodeHealthStateFilter)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NodeHealthStateFilter>
    nameWithType: ByteArraySerializer.Serialize<NodeHealthStateFilter>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.NodeHealthStateFilter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NodeHealthStateFilter)
    nameWithType: ByteArraySerializer.Serialize(Of NodeHealthStateFilter)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.NodeHealthStateFilter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.NodeHealthStateFilter
  commentId: T:System.Fabric.Health.NodeHealthStateFilter
  isExternal: false
  name: NodeHealthStateFilter
  nameWithType: NodeHealthStateFilter
  fullName: System.Fabric.Health.NodeHealthStateFilter
- uid: System.Fabric.Health.NodeHealthStateFilter.#ctor*
  commentId: Overload:System.Fabric.Health.NodeHealthStateFilter.#ctor
  isExternal: false
  name: NodeHealthStateFilter
  nameWithType: NodeHealthStateFilter.NodeHealthStateFilter
  fullName: System.Fabric.Health.NodeHealthStateFilter.NodeHealthStateFilter
- uid: System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter
  commentId: P:System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter
- uid: System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter*
  commentId: Overload:System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter
  isExternal: false
  name: HealthStateFilter
  nameWithType: NodeHealthStateFilter.HealthStateFilter
  fullName: System.Fabric.Health.NodeHealthStateFilter.HealthStateFilter
- uid: System.Fabric.Health.HealthStateFilter
  commentId: T:System.Fabric.Health.HealthStateFilter
  parent: System.Fabric.Health
  isExternal: false
  name: HealthStateFilter
  nameWithType: HealthStateFilter
  fullName: System.Fabric.Health.HealthStateFilter
- uid: System.Fabric.Health.NodeHealthStateFilter.NodeNameFilter*
  commentId: Overload:System.Fabric.Health.NodeHealthStateFilter.NodeNameFilter
  isExternal: false
  name: NodeNameFilter
  nameWithType: NodeHealthStateFilter.NodeNameFilter
  fullName: System.Fabric.Health.NodeHealthStateFilter.NodeNameFilter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.NodeHealthStateFilter.ToString*
  commentId: Overload:System.Fabric.Health.NodeHealthStateFilter.ToString
  isExternal: false
  name: ToString
  nameWithType: NodeHealthStateFilter.ToString
  fullName: System.Fabric.Health.NodeHealthStateFilter.ToString
