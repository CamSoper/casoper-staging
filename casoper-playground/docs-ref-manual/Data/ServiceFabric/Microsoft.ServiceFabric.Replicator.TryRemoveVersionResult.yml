### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  commentId: T:Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  id: TryRemoveVersionResult
  parent: Microsoft.ServiceFabric.Replicator
  children:
  - Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.CanBeRemoved
  - Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.EnumerationCompletionNotifications
  - Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.EnumerationSet
  - Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals(Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  - Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals(System.Object)
  - Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.GetHashCode
  langs:
  - csharp
  - vb
  name: TryRemoveVersionResult
  nameWithType: TryRemoveVersionResult
  fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  type: Struct
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TryRemoveVersionResult
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nThis is for internal use only.\nEncapsulates the output of the TryRemoveVersionAsync\n"
  example: []
  syntax:
    content: 'public struct TryRemoveVersionResult : IEquatable<TryRemoveVersionResult>'
    content.vb: >-
      Public Structure TryRemoveVersionResult
          Implements IEquatable(Of TryRemoveVersionResult)
  implements:
  - System.IEquatable{Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.CanBeRemoved
  commentId: F:Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.CanBeRemoved
  id: CanBeRemoved
  parent: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  langs:
  - csharp
  - vb
  name: CanBeRemoved
  nameWithType: TryRemoveVersionResult.CanBeRemoved
  fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.CanBeRemoved
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CanBeRemoved
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
    startLine: 18
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\n\n"
  example: []
  syntax:
    content: public bool CanBeRemoved
    content.vb: Public CanBeRemoved As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.EnumerationSet
  commentId: F:Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.EnumerationSet
  id: EnumerationSet
  parent: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  langs:
  - csharp
  - vb
  name: EnumerationSet
  nameWithType: TryRemoveVersionResult.EnumerationSet
  fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.EnumerationSet
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EnumerationSet
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
    startLine: 23
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\n\n"
  example: []
  syntax:
    content: public ISet<long> EnumerationSet
    content.vb: Public EnumerationSet As ISet(Of Long)
    return:
      type: System.Collections.Generic.ISet{System.Int64}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.EnumerationCompletionNotifications
  commentId: F:Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.EnumerationCompletionNotifications
  id: EnumerationCompletionNotifications
  parent: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  langs:
  - csharp
  - vb
  name: EnumerationCompletionNotifications
  nameWithType: TryRemoveVersionResult.EnumerationCompletionNotifications
  fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.EnumerationCompletionNotifications
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EnumerationCompletionNotifications
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\n\n"
  example: []
  syntax:
    content: public ISet<EnumerationCompletionResult> EnumerationCompletionNotifications
    content.vb: Public EnumerationCompletionNotifications As ISet(Of EnumerationCompletionResult)
    return:
      type: System.Collections.Generic.ISet{Microsoft.ServiceFabric.Replicator.EnumerationCompletionResult}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals(Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  commentId: M:Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals(Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  id: Equals(Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  parent: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  langs:
  - csharp
  - vb
  name: Equals(TryRemoveVersionResult)
  nameWithType: TryRemoveVersionResult.Equals(TryRemoveVersionResult)
  fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals(Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Equals
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
    startLine: 47
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nIndicates whether the current object is equal to another object of the same type.\n"
  example: []
  syntax:
    content: public bool Equals(TryRemoveVersionResult other)
    content.vb: Public Function Equals(other As TryRemoveVersionResult) As Boolean
    parameters:
    - id: other
      type: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: "\ntrue if the current object is equal to the <em>other</em> parameter; otherwise, false.\n"
  overload: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals*
  implements:
  - System.IEquatable{Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult}.Equals(Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals(System.Object)
  commentId: M:Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: TryRemoveVersionResult.Equals(Object)
  fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Equals
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
    startLine: 104
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nIndicates whether this instance and a specified object are equal.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: 'Another object to compare to. '
    return:
      type: System.Boolean
      description: "\ntrue if <em>obj</em> and this instance are the same type and represent the same value; otherwise, false.\n"
  overridden: System.ValueType.Equals(System.Object)
  overload: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.GetHashCode
  commentId: M:Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.GetHashCode
  id: GetHashCode
  parent: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TryRemoveVersionResult.GetHashCode()
  fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.GetHashCode()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetHashCode
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/Replicator/VersionManager/TryRemoveVersionResult.cs
    startLine: 123
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: Microsoft.ServiceFabric.Replicator
  summary: "\nReturns the hash code for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\nA 32-bit signed integer that is the hash code for this instance.\n"
  overridden: System.ValueType.GetHashCode
  overload: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.ServiceFabric.Replicator
  commentId: N:Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: Microsoft.ServiceFabric.Replicator
  nameWithType: Microsoft.ServiceFabric.Replicator
  fullName: Microsoft.ServiceFabric.Replicator
- uid: System.IEquatable{Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult}
  commentId: T:System.IEquatable{Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<TryRemoveVersionResult>
  nameWithType: IEquatable<TryRemoveVersionResult>
  fullName: System.IEquatable<Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult>
  nameWithType.vb: IEquatable(Of TryRemoveVersionResult)
  fullname.vb: System.IEquatable(Of Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  name.vb: IEquatable(Of TryRemoveVersionResult)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
    name: TryRemoveVersionResult
    nameWithType: TryRemoveVersionResult
    fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
    name: TryRemoveVersionResult
    nameWithType: TryRemoveVersionResult
    fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<TryRemoveVersionResult>()
  nameWithType: ByteArraySerializer.Serialize<TryRemoveVersionResult>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of TryRemoveVersionResult)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)()
  name.vb: Serialize(Of TryRemoveVersionResult)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<TryRemoveVersionResult>
    nameWithType: ByteArraySerializer.Serialize<TryRemoveVersionResult>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of TryRemoveVersionResult)
    nameWithType: ByteArraySerializer.Serialize(Of TryRemoveVersionResult)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ISet{System.Int64}
  commentId: T:System.Collections.Generic.ISet{System.Int64}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<Int64>
  nameWithType: ISet<Int64>
  fullName: System.Collections.Generic.ISet<System.Int64>
  nameWithType.vb: ISet(Of Int64)
  fullname.vb: System.Collections.Generic.ISet(Of System.Int64)
  name.vb: ISet(Of Int64)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullname.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ISet{Microsoft.ServiceFabric.Replicator.EnumerationCompletionResult}
  commentId: T:System.Collections.Generic.ISet{Microsoft.ServiceFabric.Replicator.EnumerationCompletionResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<EnumerationCompletionResult>
  nameWithType: ISet<EnumerationCompletionResult>
  fullName: System.Collections.Generic.ISet<Microsoft.ServiceFabric.Replicator.EnumerationCompletionResult>
  nameWithType.vb: ISet(Of EnumerationCompletionResult)
  fullname.vb: System.Collections.Generic.ISet(Of Microsoft.ServiceFabric.Replicator.EnumerationCompletionResult)
  name.vb: ISet(Of EnumerationCompletionResult)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Replicator.EnumerationCompletionResult
    name: EnumerationCompletionResult
    nameWithType: EnumerationCompletionResult
    fullName: Microsoft.ServiceFabric.Replicator.EnumerationCompletionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Replicator.EnumerationCompletionResult
    name: EnumerationCompletionResult
    nameWithType: EnumerationCompletionResult
    fullName: Microsoft.ServiceFabric.Replicator.EnumerationCompletionResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals*
  commentId: Overload:Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals
  isExternal: false
  name: Equals
  nameWithType: TryRemoveVersionResult.Equals
  fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.Equals
- uid: System.IEquatable{Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult}.Equals(Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  commentId: M:System.IEquatable{Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult}.Equals(Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  parent: System.IEquatable{Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(TryRemoveVersionResult)
  nameWithType: IEquatable<TryRemoveVersionResult>.Equals(TryRemoveVersionResult)
  fullName: System.IEquatable<Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult>.Equals(Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  nameWithType.vb: IEquatable(Of TryRemoveVersionResult).Equals(TryRemoveVersionResult)
  fullname.vb: System.IEquatable(Of Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult).Equals(Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<TryRemoveVersionResult>.Equals
    fullName: System.IEquatable<Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
    name: TryRemoveVersionResult
    nameWithType: TryRemoveVersionResult
    fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of TryRemoveVersionResult).Equals
    fullName: System.IEquatable(Of Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
    name: TryRemoveVersionResult
    nameWithType: TryRemoveVersionResult
    fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  commentId: T:Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
  parent: Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: TryRemoveVersionResult
  nameWithType: TryRemoveVersionResult
  fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.GetHashCode*
  commentId: Overload:Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: TryRemoveVersionResult.GetHashCode
  fullName: Microsoft.ServiceFabric.Replicator.TryRemoveVersionResult.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
