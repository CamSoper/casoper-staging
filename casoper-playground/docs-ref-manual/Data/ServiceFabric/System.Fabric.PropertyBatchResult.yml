### YamlMime:ManagedReference
items:
- uid: System.Fabric.PropertyBatchResult
  commentId: T:System.Fabric.PropertyBatchResult
  id: PropertyBatchResult
  parent: System.Fabric
  children:
  - System.Fabric.PropertyBatchResult.FailedOperationException
  - System.Fabric.PropertyBatchResult.FailedOperationIndex
  - System.Fabric.PropertyBatchResult.GetProperty(System.Int32)
  langs:
  - csharp
  - vb
  name: PropertyBatchResult
  nameWithType: PropertyBatchResult
  fullName: System.Fabric.PropertyBatchResult
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PropertyBatchResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PropertyBatchResult
    path: src/prod/src/managed/Api/src/System/Fabric/PropertyBatchResult.cs
    startLine: 13
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies the batch that contains the results from the <xref href=\"System.Fabric.FabricClient.PropertyManagementClient.SubmitPropertyBatchAsync(System.Uri%2cSystem.Collections.Generic.ICollection%7bSystem.Fabric.PropertyBatchOperation%7d%2cSystem.TimeSpan%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> method call.</p>\n"
  example: []
  syntax:
    content: public sealed class PropertyBatchResult
    content.vb: Public NotInheritable Class PropertyBatchResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.PropertyBatchResult.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.PropertyBatchResult.FailedOperationIndex
  commentId: P:System.Fabric.PropertyBatchResult.FailedOperationIndex
  id: FailedOperationIndex
  parent: System.Fabric.PropertyBatchResult
  langs:
  - csharp
  - vb
  name: FailedOperationIndex
  nameWithType: PropertyBatchResult.FailedOperationIndex
  fullName: System.Fabric.PropertyBatchResult.FailedOperationIndex
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PropertyBatchResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FailedOperationIndex
    path: src/prod/src/managed/Api/src/System/Fabric/PropertyBatchResult.cs
    startLine: 36
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the failed operation index. This parameter contains the index of the \nunsuccessful <xref href=\"System.Fabric.PropertyBatchOperation\" data-throw-if-not-resolved=\"false\"></xref> in the batch.</p>\n"
  remarks: "\n<p>Note that if none of the operations in the batch fail, this property will be set to -1.</p>\n"
  example: []
  syntax:
    content: public int FailedOperationIndex { get; }
    content.vb: Public ReadOnly Property FailedOperationIndex As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>Returns <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.PropertyBatchResult.FailedOperationIndex*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.PropertyBatchResult.FailedOperationException
  commentId: P:System.Fabric.PropertyBatchResult.FailedOperationException
  id: FailedOperationException
  parent: System.Fabric.PropertyBatchResult
  langs:
  - csharp
  - vb
  name: FailedOperationException
  nameWithType: PropertyBatchResult.FailedOperationException
  fullName: System.Fabric.PropertyBatchResult.FailedOperationException
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PropertyBatchResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FailedOperationException
    path: src/prod/src/managed/Api/src/System/Fabric/PropertyBatchResult.cs
    startLine: 45
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the failed operation exception. This parameter contains the exception thrown due to the first \nunsuccessful <xref href=\"System.Fabric.PropertyBatchOperation\" data-throw-if-not-resolved=\"false\"></xref> object in the batch.</p>\n"
  example: []
  syntax:
    content: public Exception FailedOperationException { get; }
    content.vb: Public ReadOnly Property FailedOperationException As Exception
    parameters: []
    return:
      type: System.Exception
      description: "\n<p>Returns <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.PropertyBatchResult.FailedOperationException*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.PropertyBatchResult.GetProperty(System.Int32)
  commentId: M:System.Fabric.PropertyBatchResult.GetProperty(System.Int32)
  id: GetProperty(System.Int32)
  parent: System.Fabric.PropertyBatchResult
  langs:
  - csharp
  - vb
  name: GetProperty(Int32)
  nameWithType: PropertyBatchResult.GetProperty(Int32)
  fullName: System.Fabric.PropertyBatchResult.GetProperty(System.Int32)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PropertyBatchResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetProperty
    path: src/prod/src/managed/Api/src/System/Fabric/PropertyBatchResult.cs
    startLine: 60
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the <xref href=\"System.Fabric.NamedProperty\" data-throw-if-not-resolved=\"false\"></xref> object that is returned by the <xref href=\"System.Fabric.PropertyBatchOperation\" data-throw-if-not-resolved=\"false\"></xref> in the specified index.</p>\n"
  remarks: "\n<p>Note that whether <xref href=\"System.Fabric.NamedPropertyMetadata\" data-throw-if-not-resolved=\"false\"></xref> is returned is dependent on the <languagekeyword>includeValues</languagekeyword> \nargument to the <xref href=\"System.Fabric.GetPropertyOperation\" data-throw-if-not-resolved=\"false\"></xref>. Returns an error when the operation has a different type than specified.</p>\n"
  example: []
  syntax:
    content: public NamedProperty GetProperty(int index)
    content.vb: Public Function GetProperty(index As Integer) As NamedProperty
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>An <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> that indicates the index in the batch that was submitted.</p>\n"
    return:
      type: System.Fabric.NamedProperty
      description: "\n<p>Returns <xref href=\"System.Fabric.NamedProperty\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.PropertyBatchResult.GetProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.FabricClient.PropertyManagementClient.SubmitPropertyBatchAsync(System.Uri,System.Collections.Generic.ICollection{System.Fabric.PropertyBatchOperation},System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.PropertyManagementClient.SubmitPropertyBatchAsync(System.Uri,System.Collections.Generic.ICollection{System.Fabric.PropertyBatchOperation},System.TimeSpan,System.Threading.CancellationToken)
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.PropertyBatchResult.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<PropertyBatchResult>()
  nameWithType: ByteArraySerializer.Serialize<PropertyBatchResult>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.PropertyBatchResult>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of PropertyBatchResult)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.PropertyBatchResult)()
  name.vb: Serialize(Of PropertyBatchResult)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<PropertyBatchResult>
    nameWithType: ByteArraySerializer.Serialize<PropertyBatchResult>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.PropertyBatchResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of PropertyBatchResult)
    nameWithType: ByteArraySerializer.Serialize(Of PropertyBatchResult)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.PropertyBatchResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.PropertyBatchOperation
  commentId: T:System.Fabric.PropertyBatchOperation
  parent: System.Fabric
  isExternal: false
  name: PropertyBatchOperation
  nameWithType: PropertyBatchOperation
  fullName: System.Fabric.PropertyBatchOperation
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Fabric.PropertyBatchResult.FailedOperationIndex*
  commentId: Overload:System.Fabric.PropertyBatchResult.FailedOperationIndex
  isExternal: false
  name: FailedOperationIndex
  nameWithType: PropertyBatchResult.FailedOperationIndex
  fullName: System.Fabric.PropertyBatchResult.FailedOperationIndex
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Fabric.PropertyBatchResult.FailedOperationException*
  commentId: Overload:System.Fabric.PropertyBatchResult.FailedOperationException
  isExternal: false
  name: FailedOperationException
  nameWithType: PropertyBatchResult.FailedOperationException
  fullName: System.Fabric.PropertyBatchResult.FailedOperationException
- uid: System.Fabric.NamedProperty
  commentId: T:System.Fabric.NamedProperty
  parent: System.Fabric
  isExternal: false
  name: NamedProperty
  nameWithType: NamedProperty
  fullName: System.Fabric.NamedProperty
- uid: System.Fabric.NamedPropertyMetadata
  commentId: T:System.Fabric.NamedPropertyMetadata
  parent: System.Fabric
  isExternal: false
  name: NamedPropertyMetadata
  nameWithType: NamedPropertyMetadata
  fullName: System.Fabric.NamedPropertyMetadata
- uid: System.Fabric.GetPropertyOperation
  commentId: T:System.Fabric.GetPropertyOperation
  parent: System.Fabric
  isExternal: false
  name: GetPropertyOperation
  nameWithType: GetPropertyOperation
  fullName: System.Fabric.GetPropertyOperation
- uid: System.Fabric.PropertyBatchResult.GetProperty*
  commentId: Overload:System.Fabric.PropertyBatchResult.GetProperty
  isExternal: false
  name: GetProperty
  nameWithType: PropertyBatchResult.GetProperty
  fullName: System.Fabric.PropertyBatchResult.GetProperty
