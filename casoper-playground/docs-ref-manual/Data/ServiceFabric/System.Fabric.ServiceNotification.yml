### YamlMime:ManagedReference
items:
- uid: System.Fabric.ServiceNotification
  commentId: T:System.Fabric.ServiceNotification
  id: ServiceNotification
  parent: System.Fabric
  children:
  - System.Fabric.ServiceNotification.Endpoints
  - System.Fabric.ServiceNotification.PartitionId
  - System.Fabric.ServiceNotification.PartitionInfo
  - System.Fabric.ServiceNotification.ServiceName
  - System.Fabric.ServiceNotification.Version
  langs:
  - csharp
  - vb
  name: ServiceNotification
  nameWithType: ServiceNotification
  fullName: System.Fabric.ServiceNotification
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceNotification
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
    startLine: 12
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Represents a service notification containing details about a service whose replica or instance endpoints have changed.</p>\n"
  example: []
  syntax:
    content: public sealed class ServiceNotification
    content.vb: Public NotInheritable Class ServiceNotification
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.ServiceNotification.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.ServiceNotification.ServiceName
  commentId: P:System.Fabric.ServiceNotification.ServiceName
  id: ServiceName
  parent: System.Fabric.ServiceNotification
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: ServiceNotification.ServiceName
  fullName: System.Fabric.ServiceNotification.ServiceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceName
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
    startLine: 24
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the name of the service.</p>\n"
  example: []
  syntax:
    content: public Uri ServiceName { get; }
    content.vb: Public ReadOnly Property ServiceName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The name of the service.</p>\n"
  overload: System.Fabric.ServiceNotification.ServiceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ServiceNotification.PartitionId
  commentId: P:System.Fabric.ServiceNotification.PartitionId
  id: PartitionId
  parent: System.Fabric.ServiceNotification
  langs:
  - csharp
  - vb
  name: PartitionId
  nameWithType: ServiceNotification.PartitionId
  fullName: System.Fabric.ServiceNotification.PartitionId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionId
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
    startLine: 32
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the partition ID of the service.</p>\n"
  example: []
  syntax:
    content: public Guid PartitionId { get; }
    content.vb: Public ReadOnly Property PartitionId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>The partition ID.</p>\n"
  overload: System.Fabric.ServiceNotification.PartitionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ServiceNotification.Endpoints
  commentId: P:System.Fabric.ServiceNotification.Endpoints
  id: Endpoints
  parent: System.Fabric.ServiceNotification
  langs:
  - csharp
  - vb
  name: Endpoints
  nameWithType: ServiceNotification.Endpoints
  fullName: System.Fabric.ServiceNotification.Endpoints
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Endpoints
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the new replica or instance endpoints published by the service. The collection will be empty if the service has been deleted.</p>\n"
  example: []
  syntax:
    content: public ICollection<ResolvedServiceEndpoint> Endpoints { get; }
    content.vb: Public ReadOnly Property Endpoints As ICollection(Of ResolvedServiceEndpoint)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Fabric.ResolvedServiceEndpoint}
      description: "\n<p>A list of endpoints published by the service.</p>\n"
  overload: System.Fabric.ServiceNotification.Endpoints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ServiceNotification.Version
  commentId: P:System.Fabric.ServiceNotification.Version
  id: Version
  parent: System.Fabric.ServiceNotification
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ServiceNotification.Version
  fullName: System.Fabric.ServiceNotification.Version
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Version
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
    startLine: 48
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the version of this notification event. The version can be used to order any two notification events.</p>\n"
  example: []
  syntax:
    content: public ServiceEndpointsVersion Version { get; }
    content.vb: Public ReadOnly Property Version As ServiceEndpointsVersion
    parameters: []
    return:
      type: System.Fabric.ServiceEndpointsVersion
      description: "\n<p>The version of this notification event.</p>\n"
  overload: System.Fabric.ServiceNotification.Version*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ServiceNotification.PartitionInfo
  commentId: P:System.Fabric.ServiceNotification.PartitionInfo
  id: PartitionInfo
  parent: System.Fabric.ServiceNotification
  langs:
  - csharp
  - vb
  name: PartitionInfo
  nameWithType: ServiceNotification.PartitionInfo
  fullName: System.Fabric.ServiceNotification.PartitionInfo
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionInfo
    path: src/prod/src/managed/Api/src/System/Fabric/ServiceNotification.cs
    startLine: 57
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the detailed partition information for the service. This property can be null in certain cases where detailed partition information is \nunavailable - such as when the service notification event is for a service deletion event.</p>\n"
  example: []
  syntax:
    content: public ServicePartitionInformation PartitionInfo { get; }
    content.vb: Public ReadOnly Property PartitionInfo As ServicePartitionInformation
    parameters: []
    return:
      type: System.Fabric.ServicePartitionInformation
      description: "\n<p>The detailed partition information of the service.</p>\n"
  overload: System.Fabric.ServiceNotification.PartitionInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ServiceNotification.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceNotification>()
  nameWithType: ByteArraySerializer.Serialize<ServiceNotification>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ServiceNotification>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceNotification)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ServiceNotification)()
  name.vb: Serialize(Of ServiceNotification)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceNotification>
    nameWithType: ByteArraySerializer.Serialize<ServiceNotification>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ServiceNotification>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceNotification)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceNotification)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ServiceNotification)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.ServiceNotification.ServiceName*
  commentId: Overload:System.Fabric.ServiceNotification.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: ServiceNotification.ServiceName
  fullName: System.Fabric.ServiceNotification.ServiceName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.ServiceNotification.PartitionId*
  commentId: Overload:System.Fabric.ServiceNotification.PartitionId
  isExternal: false
  name: PartitionId
  nameWithType: ServiceNotification.PartitionId
  fullName: System.Fabric.ServiceNotification.PartitionId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.ServiceNotification.Endpoints*
  commentId: Overload:System.Fabric.ServiceNotification.Endpoints
  isExternal: false
  name: Endpoints
  nameWithType: ServiceNotification.Endpoints
  fullName: System.Fabric.ServiceNotification.Endpoints
- uid: System.Collections.Generic.ICollection{System.Fabric.ResolvedServiceEndpoint}
  commentId: T:System.Collections.Generic.ICollection{System.Fabric.ResolvedServiceEndpoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ResolvedServiceEndpoint>
  nameWithType: ICollection<ResolvedServiceEndpoint>
  fullName: System.Collections.Generic.ICollection<System.Fabric.ResolvedServiceEndpoint>
  nameWithType.vb: ICollection(Of ResolvedServiceEndpoint)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Fabric.ResolvedServiceEndpoint)
  name.vb: ICollection(Of ResolvedServiceEndpoint)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.ResolvedServiceEndpoint
    name: ResolvedServiceEndpoint
    nameWithType: ResolvedServiceEndpoint
    fullName: System.Fabric.ResolvedServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.ResolvedServiceEndpoint
    name: ResolvedServiceEndpoint
    nameWithType: ResolvedServiceEndpoint
    fullName: System.Fabric.ResolvedServiceEndpoint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.ServiceNotification.Version*
  commentId: Overload:System.Fabric.ServiceNotification.Version
  isExternal: false
  name: Version
  nameWithType: ServiceNotification.Version
  fullName: System.Fabric.ServiceNotification.Version
- uid: System.Fabric.ServiceEndpointsVersion
  commentId: T:System.Fabric.ServiceEndpointsVersion
  parent: System.Fabric
  isExternal: false
  name: ServiceEndpointsVersion
  nameWithType: ServiceEndpointsVersion
  fullName: System.Fabric.ServiceEndpointsVersion
- uid: System.Fabric.ServiceNotification.PartitionInfo*
  commentId: Overload:System.Fabric.ServiceNotification.PartitionInfo
  isExternal: false
  name: PartitionInfo
  nameWithType: ServiceNotification.PartitionInfo
  fullName: System.Fabric.ServiceNotification.PartitionInfo
- uid: System.Fabric.ServicePartitionInformation
  commentId: T:System.Fabric.ServicePartitionInformation
  parent: System.Fabric
  isExternal: false
  name: ServicePartitionInformation
  nameWithType: ServicePartitionInformation
  fullName: System.Fabric.ServicePartitionInformation
