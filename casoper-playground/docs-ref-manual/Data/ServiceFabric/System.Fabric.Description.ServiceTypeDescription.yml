### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.ServiceTypeDescription
  commentId: T:System.Fabric.Description.ServiceTypeDescription
  id: ServiceTypeDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.ServiceTypeDescription.#ctor(System.Fabric.Description.ServiceDescriptionKind)
  - System.Fabric.Description.ServiceTypeDescription.#ctor(System.Fabric.Description.ServiceTypeDescription)
  - System.Fabric.Description.ServiceTypeDescription.Extensions
  - System.Fabric.Description.ServiceTypeDescription.Extensions_
  - System.Fabric.Description.ServiceTypeDescription.IsStateful
  - System.Fabric.Description.ServiceTypeDescription.LoadMetrics
  - System.Fabric.Description.ServiceTypeDescription.PlacementConstraints
  - System.Fabric.Description.ServiceTypeDescription.Policies
  - System.Fabric.Description.ServiceTypeDescription.ReadCommonProperties(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Fabric.Description.ServiceTypeDescription.ServiceTypeKind
  - System.Fabric.Description.ServiceTypeDescription.ServiceTypeName
  langs:
  - csharp
  - vb
  name: ServiceTypeDescription
  nameWithType: ServiceTypeDescription
  fullName: System.Fabric.Description.ServiceTypeDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 21
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Describes the service type.</p>\n"
  example: []
  syntax:
    content: >-
      [KnownType(typeof (StatelessServiceTypeDescription))]

      [KnownType(typeof (StatefulServiceTypeDescription))]

      public abstract class ServiceTypeDescription
    content.vb: >-
      <KnownType(GetType(StatelessServiceTypeDescription))>

      <KnownType(GetType(StatefulServiceTypeDescription))>

      Public MustInherit Class ServiceTypeDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.ServiceTypeDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Description.StatelessServiceTypeDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Description.StatefulServiceTypeDescription
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Description.ServiceTypeDescription.#ctor(System.Fabric.Description.ServiceDescriptionKind)
  commentId: M:System.Fabric.Description.ServiceTypeDescription.#ctor(System.Fabric.Description.ServiceDescriptionKind)
  id: '#ctor(System.Fabric.Description.ServiceDescriptionKind)'
  parent: System.Fabric.Description.ServiceTypeDescription
  langs:
  - csharp
  - vb
  name: ServiceTypeDescription(ServiceDescriptionKind)
  nameWithType: ServiceTypeDescription.ServiceTypeDescription(ServiceDescriptionKind)
  fullName: System.Fabric.Description.ServiceTypeDescription.ServiceTypeDescription(System.Fabric.Description.ServiceDescriptionKind)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 37
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>\nInstantiates a <xref href=\"System.Fabric.Description.ServiceTypeDescription\" data-throw-if-not-resolved=\"false\"></xref> class with specified service description kind.\n</p>\n"
  example: []
  syntax:
    content: protected ServiceTypeDescription(ServiceDescriptionKind kind)
    content.vb: Protected Sub New(kind As ServiceDescriptionKind)
    parameters:
    - id: kind
      type: System.Fabric.Description.ServiceDescriptionKind
      description: "\n<p>The service description kind.</p>\n"
  overload: System.Fabric.Description.ServiceTypeDescription.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Description.ServiceTypeDescription.#ctor(System.Fabric.Description.ServiceTypeDescription)
  commentId: M:System.Fabric.Description.ServiceTypeDescription.#ctor(System.Fabric.Description.ServiceTypeDescription)
  id: '#ctor(System.Fabric.Description.ServiceTypeDescription)'
  parent: System.Fabric.Description.ServiceTypeDescription
  langs:
  - csharp
  - vb
  name: ServiceTypeDescription(ServiceTypeDescription)
  nameWithType: ServiceTypeDescription.ServiceTypeDescription(ServiceTypeDescription)
  fullName: System.Fabric.Description.ServiceTypeDescription.ServiceTypeDescription(System.Fabric.Description.ServiceTypeDescription)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 54
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>\nInstantiates a <xref href=\"System.Fabric.Description.ServiceTypeDescription\" data-throw-if-not-resolved=\"false\"></xref> class with parameters from another \n<xref href=\"System.Fabric.Description.ServiceTypeDescription\" data-throw-if-not-resolved=\"false\"></xref> object.\n</p>\n"
  example: []
  syntax:
    content: protected ServiceTypeDescription(ServiceTypeDescription other)
    content.vb: Protected Sub New(other As ServiceTypeDescription)
    parameters:
    - id: other
      type: System.Fabric.Description.ServiceTypeDescription
      description: "\n<p>The service type description from which parameters are copied.</p>\n"
  overload: System.Fabric.Description.ServiceTypeDescription.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Description.ServiceTypeDescription.ServiceTypeName
  commentId: P:System.Fabric.Description.ServiceTypeDescription.ServiceTypeName
  id: ServiceTypeName
  parent: System.Fabric.Description.ServiceTypeDescription
  langs:
  - csharp
  - vb
  name: ServiceTypeName
  nameWithType: ServiceTypeDescription.ServiceTypeName
  fullName: System.Fabric.Description.ServiceTypeDescription.ServiceTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 70
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the name of the service type.</p>\n"
  example: []
  syntax:
    content: public string ServiceTypeName { get; set; }
    content.vb: Public Property ServiceTypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the service type.</p>\n"
  overload: System.Fabric.Description.ServiceTypeDescription.ServiceTypeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceTypeDescription.ServiceTypeKind
  commentId: P:System.Fabric.Description.ServiceTypeDescription.ServiceTypeKind
  id: ServiceTypeKind
  parent: System.Fabric.Description.ServiceTypeDescription
  langs:
  - csharp
  - vb
  name: ServiceTypeKind
  nameWithType: ServiceTypeDescription.ServiceTypeKind
  fullName: System.Fabric.Description.ServiceTypeDescription.ServiceTypeKind
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeKind
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 82
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the kind of service type.</p>\n"
  example: []
  syntax:
    content: public ServiceDescriptionKind ServiceTypeKind { get; set; }
    content.vb: Public Property ServiceTypeKind As ServiceDescriptionKind
    parameters: []
    return:
      type: System.Fabric.Description.ServiceDescriptionKind
      description: "\n<p>The kind of service type.</p>\n"
  overload: System.Fabric.Description.ServiceTypeDescription.ServiceTypeKind*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceTypeDescription.PlacementConstraints
  commentId: P:System.Fabric.Description.ServiceTypeDescription.PlacementConstraints
  id: PlacementConstraints
  parent: System.Fabric.Description.ServiceTypeDescription
  langs:
  - csharp
  - vb
  name: PlacementConstraints
  nameWithType: ServiceTypeDescription.PlacementConstraints
  fullName: System.Fabric.Description.ServiceTypeDescription.PlacementConstraints
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PlacementConstraints
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 95
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the constraint to be used when instantiating this service in a Service Fabric cluster.</p>\n"
  example: []
  syntax:
    content: public string PlacementConstraints { get; set; }
    content.vb: Public Property PlacementConstraints As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The constraint to be used when instantiating this service in a Service Fabric cluster.</p>\n"
  overload: System.Fabric.Description.ServiceTypeDescription.PlacementConstraints*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceTypeDescription.LoadMetrics
  commentId: P:System.Fabric.Description.ServiceTypeDescription.LoadMetrics
  id: LoadMetrics
  parent: System.Fabric.Description.ServiceTypeDescription
  langs:
  - csharp
  - vb
  name: LoadMetrics
  nameWithType: ServiceTypeDescription.LoadMetrics
  fullName: System.Fabric.Description.ServiceTypeDescription.LoadMetrics
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LoadMetrics
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 107
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the type of load metric is reported by the service.</p>\n"
  example: []
  syntax:
    content: public KeyedCollection<string, ServiceLoadMetricDescription> LoadMetrics { get; }
    content.vb: Public ReadOnly Property LoadMetrics As KeyedCollection(Of String, ServiceLoadMetricDescription)
    parameters: []
    return:
      type: System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceLoadMetricDescription}
      description: "\n<p>The type of load metric is reported by the service.</p>\n"
  overload: System.Fabric.Description.ServiceTypeDescription.LoadMetrics*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ServiceTypeDescription.Extensions
  commentId: P:System.Fabric.Description.ServiceTypeDescription.Extensions
  id: Extensions
  parent: System.Fabric.Description.ServiceTypeDescription
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: ServiceTypeDescription.Extensions
  fullName: System.Fabric.Description.ServiceTypeDescription.Extensions
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Extensions
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 121
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the extensions for the service type.</p>\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Extensions { get; }
    content.vb: Public ReadOnly Property Extensions As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "\n<p>The extensions for the service type.</p>\n"
  overload: System.Fabric.Description.ServiceTypeDescription.Extensions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ServiceTypeDescription.Extensions_
  commentId: P:System.Fabric.Description.ServiceTypeDescription.Extensions_
  id: Extensions_
  parent: System.Fabric.Description.ServiceTypeDescription
  langs:
  - csharp
  - vb
  name: Extensions_
  nameWithType: ServiceTypeDescription.Extensions_
  fullName: System.Fabric.Description.ServiceTypeDescription.Extensions_
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Extensions_
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 141
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\nINTERNAL USE ONLY. Wrapper of property \"Extensions\". Needed for serialization.\n"
  example: []
  syntax:
    content: protected IList<KeyValuePair<string, string>> Extensions_ { get; set; }
    content.vb: Protected Property Extensions_ As IList(Of KeyValuePair(Of String, String))
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: "\nINTERNAL USE ONLY. Wrapper of property \"Extensions\". Needed for serialization.\n"
  overload: System.Fabric.Description.ServiceTypeDescription.Extensions_*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: System.Fabric.Description.ServiceTypeDescription.Policies
  commentId: P:System.Fabric.Description.ServiceTypeDescription.Policies
  id: Policies
  parent: System.Fabric.Description.ServiceTypeDescription
  langs:
  - csharp
  - vb
  name: Policies
  nameWithType: ServiceTypeDescription.Policies
  fullName: System.Fabric.Description.ServiceTypeDescription.Policies
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Policies
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 162
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the policies of the service type.</p>\n"
  example: []
  syntax:
    content: public List<ServicePlacementPolicyDescription> Policies { get; set; }
    content.vb: Public Property Policies As List(Of ServicePlacementPolicyDescription)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Fabric.Description.ServicePlacementPolicyDescription}
      description: "\n<p>The policies of the service type.</p>\n"
  overload: System.Fabric.Description.ServiceTypeDescription.Policies*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceTypeDescription.IsStateful
  commentId: P:System.Fabric.Description.ServiceTypeDescription.IsStateful
  id: IsStateful
  parent: System.Fabric.Description.ServiceTypeDescription
  langs:
  - csharp
  - vb
  name: IsStateful
  nameWithType: ServiceTypeDescription.IsStateful
  fullName: System.Fabric.Description.ServiceTypeDescription.IsStateful
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsStateful
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 176
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>\nIndicates whether the service is stateful.\n</p>\n"
  remarks: "\n<p>Exposed by REST API and native code.</p>\n"
  example: []
  syntax:
    content: protected bool IsStateful { get; }
    content.vb: Protected ReadOnly Property IsStateful As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Flag indicating whether the service is stateful.</p>\n"
  overload: System.Fabric.Description.ServiceTypeDescription.IsStateful*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Fabric.Description.ServiceTypeDescription.ReadCommonProperties(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:System.Fabric.Description.ServiceTypeDescription.ReadCommonProperties(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: ReadCommonProperties(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Fabric.Description.ServiceTypeDescription
  langs:
  - csharp
  - vb
  name: ReadCommonProperties(IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: ServiceTypeDescription.ReadCommonProperties(IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: System.Fabric.Description.ServiceTypeDescription.ReadCommonProperties(System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReadCommonProperties
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceTypeDescription.cs
    startLine: 252
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Reads the properties of the service type.</p>\n"
  example: []
  syntax:
    content: protected void ReadCommonProperties(IntPtr serviceTypeName, IntPtr placementConstraints, IntPtr loadMetricsList, IntPtr descriptionExtensionList)
    content.vb: Protected Sub ReadCommonProperties(serviceTypeName As IntPtr, placementConstraints As IntPtr, loadMetricsList As IntPtr, descriptionExtensionList As IntPtr)
    parameters:
    - id: serviceTypeName
      type: System.IntPtr
      description: "\n<p>The name of the service type.</p>\n"
    - id: placementConstraints
      type: System.IntPtr
      description: "\n<p>The constraints to be used.</p>\n"
    - id: loadMetricsList
      type: System.IntPtr
      description: "\n<p>The type of load metric.</p>\n"
    - id: descriptionExtensionList
      type: System.IntPtr
      description: "\n<p>The description extension list.</p>\n"
  overload: System.Fabric.Description.ServiceTypeDescription.ReadCommonProperties*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ServiceTypeDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceTypeDescription>()
  nameWithType: ByteArraySerializer.Serialize<ServiceTypeDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ServiceTypeDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceTypeDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ServiceTypeDescription)()
  name.vb: Serialize(Of ServiceTypeDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceTypeDescription>
    nameWithType: ByteArraySerializer.Serialize<ServiceTypeDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ServiceTypeDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceTypeDescription)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceTypeDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ServiceTypeDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.ServiceTypeDescription
  commentId: T:System.Fabric.Description.ServiceTypeDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ServiceTypeDescription
  nameWithType: ServiceTypeDescription
  fullName: System.Fabric.Description.ServiceTypeDescription
- uid: System.Fabric.Description.ServiceTypeDescription.#ctor*
  commentId: Overload:System.Fabric.Description.ServiceTypeDescription.#ctor
  isExternal: false
  name: ServiceTypeDescription
  nameWithType: ServiceTypeDescription.ServiceTypeDescription
  fullName: System.Fabric.Description.ServiceTypeDescription.ServiceTypeDescription
- uid: System.Fabric.Description.ServiceDescriptionKind
  commentId: T:System.Fabric.Description.ServiceDescriptionKind
  parent: System.Fabric.Description
  isExternal: false
  name: ServiceDescriptionKind
  nameWithType: ServiceDescriptionKind
  fullName: System.Fabric.Description.ServiceDescriptionKind
- uid: System.Fabric.Description.ServiceTypeDescription.ServiceTypeName*
  commentId: Overload:System.Fabric.Description.ServiceTypeDescription.ServiceTypeName
  isExternal: false
  name: ServiceTypeName
  nameWithType: ServiceTypeDescription.ServiceTypeName
  fullName: System.Fabric.Description.ServiceTypeDescription.ServiceTypeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Description.ServiceTypeDescription.ServiceTypeKind*
  commentId: Overload:System.Fabric.Description.ServiceTypeDescription.ServiceTypeKind
  isExternal: false
  name: ServiceTypeKind
  nameWithType: ServiceTypeDescription.ServiceTypeKind
  fullName: System.Fabric.Description.ServiceTypeDescription.ServiceTypeKind
- uid: System.Fabric.Description.ServiceTypeDescription.PlacementConstraints*
  commentId: Overload:System.Fabric.Description.ServiceTypeDescription.PlacementConstraints
  isExternal: false
  name: PlacementConstraints
  nameWithType: ServiceTypeDescription.PlacementConstraints
  fullName: System.Fabric.Description.ServiceTypeDescription.PlacementConstraints
- uid: System.Fabric.Description.ServiceTypeDescription.LoadMetrics*
  commentId: Overload:System.Fabric.Description.ServiceTypeDescription.LoadMetrics
  isExternal: false
  name: LoadMetrics
  nameWithType: ServiceTypeDescription.LoadMetrics
  fullName: System.Fabric.Description.ServiceTypeDescription.LoadMetrics
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceLoadMetricDescription}
  commentId: T:System.Collections.ObjectModel.KeyedCollection{System.String,System.Fabric.Description.ServiceLoadMetricDescription}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.KeyedCollection`2
  name: KeyedCollection<String, ServiceLoadMetricDescription>
  nameWithType: KeyedCollection<String, ServiceLoadMetricDescription>
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, System.Fabric.Description.ServiceLoadMetricDescription>
  nameWithType.vb: KeyedCollection(Of String, ServiceLoadMetricDescription)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, System.Fabric.Description.ServiceLoadMetricDescription)
  name.vb: KeyedCollection(Of String, ServiceLoadMetricDescription)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Description.ServiceLoadMetricDescription
    name: ServiceLoadMetricDescription
    nameWithType: ServiceLoadMetricDescription
    fullName: System.Fabric.Description.ServiceLoadMetricDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Description.ServiceLoadMetricDescription
    name: ServiceLoadMetricDescription
    nameWithType: ServiceLoadMetricDescription
    fullName: System.Fabric.Description.ServiceLoadMetricDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2
  commentId: T:System.Collections.ObjectModel.KeyedCollection`2
  isExternal: true
  name: KeyedCollection<TKey, TItem>
  nameWithType: KeyedCollection<TKey, TItem>
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>
  nameWithType.vb: KeyedCollection(Of TKey, TItem)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem)
  name.vb: KeyedCollection(Of TKey, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Fabric.Description.ServiceTypeDescription.Extensions*
  commentId: Overload:System.Fabric.Description.ServiceTypeDescription.Extensions
  isExternal: false
  name: Extensions
  nameWithType: ServiceTypeDescription.Extensions
  fullName: System.Fabric.Description.ServiceTypeDescription.Extensions
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.Description.ServiceTypeDescription.Extensions_*
  commentId: Overload:System.Fabric.Description.ServiceTypeDescription.Extensions_
  isExternal: false
  name: Extensions_
  nameWithType: ServiceTypeDescription.Extensions_
  fullName: System.Fabric.Description.ServiceTypeDescription.Extensions_
- uid: System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<KeyValuePair<String, String>>
  nameWithType: IList<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IList<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IList(Of KeyValuePair(Of String, String))
  fullname.vb: System.Collections.Generic.IList(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IList(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ServiceTypeDescription.Policies*
  commentId: Overload:System.Fabric.Description.ServiceTypeDescription.Policies
  isExternal: false
  name: Policies
  nameWithType: ServiceTypeDescription.Policies
  fullName: System.Fabric.Description.ServiceTypeDescription.Policies
- uid: System.Collections.Generic.List{System.Fabric.Description.ServicePlacementPolicyDescription}
  commentId: T:System.Collections.Generic.List{System.Fabric.Description.ServicePlacementPolicyDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ServicePlacementPolicyDescription>
  nameWithType: List<ServicePlacementPolicyDescription>
  fullName: System.Collections.Generic.List<System.Fabric.Description.ServicePlacementPolicyDescription>
  nameWithType.vb: List(Of ServicePlacementPolicyDescription)
  fullname.vb: System.Collections.Generic.List(Of System.Fabric.Description.ServicePlacementPolicyDescription)
  name.vb: List(Of ServicePlacementPolicyDescription)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Description.ServicePlacementPolicyDescription
    name: ServicePlacementPolicyDescription
    nameWithType: ServicePlacementPolicyDescription
    fullName: System.Fabric.Description.ServicePlacementPolicyDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Description.ServicePlacementPolicyDescription
    name: ServicePlacementPolicyDescription
    nameWithType: ServicePlacementPolicyDescription
    fullName: System.Fabric.Description.ServicePlacementPolicyDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ServiceTypeDescription.IsStateful*
  commentId: Overload:System.Fabric.Description.ServiceTypeDescription.IsStateful
  isExternal: false
  name: IsStateful
  nameWithType: ServiceTypeDescription.IsStateful
  fullName: System.Fabric.Description.ServiceTypeDescription.IsStateful
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Description.ServiceTypeDescription.ReadCommonProperties*
  commentId: Overload:System.Fabric.Description.ServiceTypeDescription.ReadCommonProperties
  isExternal: false
  name: ReadCommonProperties
  nameWithType: ServiceTypeDescription.ReadCommonProperties
  fullName: System.Fabric.Description.ServiceTypeDescription.ReadCommonProperties
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
