### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription
  commentId: T:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription
  id: MonitoredRollingFabricUpgradePolicyDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.#ctor
  - System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.ApplicationHealthPolicyMap
  - System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation
  - System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.HealthPolicy
  - System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.UpgradeHealthPolicy
  langs:
  - csharp
  - vb
  name: MonitoredRollingFabricUpgradePolicyDescription
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MonitoredRollingFabricUpgradePolicyDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
    startLine: 13
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Describes the behavior to use when performing a cluster upgrade.</p>\n"
  example: []
  syntax:
    content: 'public sealed class MonitoredRollingFabricUpgradePolicyDescription : MonitoredRollingUpgradePolicyDescription'
    content.vb: >-
      Public NotInheritable Class MonitoredRollingFabricUpgradePolicyDescription
          Inherits MonitoredRollingUpgradePolicyDescription
  inheritance:
  - System.Object
  - System.Fabric.Description.UpgradePolicyDescription
  - System.Fabric.Description.RollingUpgradePolicyDescription
  - System.Fabric.Description.MonitoredRollingUpgradePolicyDescription
  inheritedMembers:
  - System.Fabric.Description.MonitoredRollingUpgradePolicyDescription.MonitoringPolicy
  - System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode
  - System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
  - System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  - System.Fabric.Description.UpgradePolicyDescription.Kind
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.#ctor
  commentId: M:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.#ctor
  id: '#ctor'
  parent: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription
  langs:
  - csharp
  - vb
  name: MonitoredRollingFabricUpgradePolicyDescription()
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription.MonitoredRollingFabricUpgradePolicyDescription()
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.MonitoredRollingFabricUpgradePolicyDescription()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
    startLine: 18
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public MonitoredRollingFabricUpgradePolicyDescription()
    content.vb: Public Sub New
  overload: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.HealthPolicy
  commentId: P:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.HealthPolicy
  id: HealthPolicy
  parent: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription
  langs:
  - csharp
  - vb
  name: HealthPolicy
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription.HealthPolicy
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.HealthPolicy
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthPolicy
    path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
    startLine: 36
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the health policy to use when performing health checks against an upgrading cluster.</p>\n"
  example: []
  syntax:
    content: public ClusterHealthPolicy HealthPolicy { get; set; }
    content.vb: Public Property HealthPolicy As ClusterHealthPolicy
    parameters: []
    return:
      type: System.Fabric.Health.ClusterHealthPolicy
      description: "\n<p>The health policy to use when performing health checks against an upgrading cluster.</p>\n"
  overload: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.HealthPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation
  commentId: P:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation
  id: EnableDeltaHealthEvaluation
  parent: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription
  langs:
  - csharp
  - vb
  name: EnableDeltaHealthEvaluation
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EnableDeltaHealthEvaluation
    path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
    startLine: 50
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets a flag indicating whether delta evaluation is enabled.</p>\n"
  remarks: "\n<p>When delta evaluation is enabled, the cluster health evaluation ensures that the degradation of health respects tolerated limits,\nboth globally, across all nodes, and per each upgrade domain that is evaluated. The tolerated thresholds are specified in \n<xref href=\"System.Fabric.Health.ClusterUpgradeHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Delta evaluation is disabled by default.</p>"
  example: []
  syntax:
    content: public bool EnableDeltaHealthEvaluation { get; set; }
    content.vb: Public Property EnableDeltaHealthEvaluation As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p><strong>true</strong> when delta health evaluation is enabled; <strong>false</strong> otherwise.</p>\n"
  overload: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.UpgradeHealthPolicy
  commentId: P:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.UpgradeHealthPolicy
  id: UpgradeHealthPolicy
  parent: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription
  langs:
  - csharp
  - vb
  name: UpgradeHealthPolicy
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription.UpgradeHealthPolicy
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.UpgradeHealthPolicy
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeHealthPolicy
    path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
    startLine: 62
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the delta health policy to use when performing health checks against an upgrading cluster.</p>\n"
  remarks: "<p>\n    The upgrade health policy is used when <xref href=\"System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>true</strong>. \n    Delta evaluation is disabled by default.\n</p>"
  example: []
  syntax:
    content: public ClusterUpgradeHealthPolicy UpgradeHealthPolicy { get; set; }
    content.vb: Public Property UpgradeHealthPolicy As ClusterUpgradeHealthPolicy
    parameters: []
    return:
      type: System.Fabric.Health.ClusterUpgradeHealthPolicy
      description: "\n<p>The delta health policy to use when performing health checks against an upgrading cluster.</p>\n"
  overload: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.UpgradeHealthPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.ApplicationHealthPolicyMap
  commentId: P:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.ApplicationHealthPolicyMap
  id: ApplicationHealthPolicyMap
  parent: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription
  langs:
  - csharp
  - vb
  name: ApplicationHealthPolicyMap
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription.ApplicationHealthPolicyMap
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.ApplicationHealthPolicyMap
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationHealthPolicyMap
    path: src/prod/src/managed/Api/src/System/Fabric/Description/MonitoredRollingFabricUpgradePolicyDescription.cs
    startLine: 88
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\nGets or sets the application health policies used to evaluate the applications health as part of\nthe cluster health evaluation. \n"
  remarks: "\n<p>\nDuring cluster upgrade, the health of the cluster is evaluated to determine whether the cluster is still healthy. \nAs part of the cluster health evaluation, all applications are evaluated and aggregated in the cluster health.\nThe application health policy map is used to evaluate the applications as part of the cluster evaluation.\n</p>\n<p>\nEach entry specifies as key the application name and as value an <xref href=\"System.Fabric.Health.ApplicationHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> \nused to evaluate the application health of that application.</p>\n<p>\nIf an application is not specified in the map, the ApplicationHealthPolicy found in the application manifest will be used for evaluation. </p>\n<p>\nThe custom application health policies are also used to evaluate cluster health during upgrade, through\n<xref href=\"System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription%2cSystem.TimeSpan%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"System.Fabric.FabricClient.HealthClient.GetClusterHealthChunkAsync(System.Fabric.Description.ClusterHealthChunkQueryDescription%2cSystem.TimeSpan%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\nThe map is empty by default.\n</p>"
  example: []
  syntax:
    content: public ApplicationHealthPolicyMap ApplicationHealthPolicyMap { get; }
    content.vb: Public ReadOnly Property ApplicationHealthPolicyMap As ApplicationHealthPolicyMap
    parameters: []
    return:
      type: System.Fabric.Health.ApplicationHealthPolicyMap
      description: The application health policies used to evaluate the health of the specified applications.
  overload: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.ApplicationHealthPolicyMap*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Description.UpgradePolicyDescription
  commentId: T:System.Fabric.Description.UpgradePolicyDescription
  parent: System.Fabric.Description
  isExternal: false
  name: UpgradePolicyDescription
  nameWithType: UpgradePolicyDescription
  fullName: System.Fabric.Description.UpgradePolicyDescription
- uid: System.Fabric.Description.RollingUpgradePolicyDescription
  commentId: T:System.Fabric.Description.RollingUpgradePolicyDescription
  parent: System.Fabric.Description
  isExternal: false
  name: RollingUpgradePolicyDescription
  nameWithType: RollingUpgradePolicyDescription
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription
- uid: System.Fabric.Description.MonitoredRollingUpgradePolicyDescription
  commentId: T:System.Fabric.Description.MonitoredRollingUpgradePolicyDescription
  parent: System.Fabric.Description
  isExternal: false
  name: MonitoredRollingUpgradePolicyDescription
  nameWithType: MonitoredRollingUpgradePolicyDescription
  fullName: System.Fabric.Description.MonitoredRollingUpgradePolicyDescription
- uid: System.Fabric.Description.MonitoredRollingUpgradePolicyDescription.MonitoringPolicy
  commentId: P:System.Fabric.Description.MonitoredRollingUpgradePolicyDescription.MonitoringPolicy
  parent: System.Fabric.Description.MonitoredRollingUpgradePolicyDescription
  isExternal: false
  name: MonitoringPolicy
  nameWithType: MonitoredRollingUpgradePolicyDescription.MonitoringPolicy
  fullName: System.Fabric.Description.MonitoredRollingUpgradePolicyDescription.MonitoringPolicy
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode
  commentId: P:System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode
  parent: System.Fabric.Description.RollingUpgradePolicyDescription
  isExternal: false
  name: UpgradeMode
  nameWithType: RollingUpgradePolicyDescription.UpgradeMode
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeMode
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
  commentId: P:System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
  parent: System.Fabric.Description.RollingUpgradePolicyDescription
  isExternal: false
  name: ForceRestart
  nameWithType: RollingUpgradePolicyDescription.ForceRestart
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  commentId: P:System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  parent: System.Fabric.Description.RollingUpgradePolicyDescription
  isExternal: false
  name: UpgradeReplicaSetCheckTimeout
  nameWithType: RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
- uid: System.Fabric.Description.UpgradePolicyDescription.Kind
  commentId: P:System.Fabric.Description.UpgradePolicyDescription.Kind
  parent: System.Fabric.Description.UpgradePolicyDescription
  isExternal: false
  name: Kind
  nameWithType: UpgradePolicyDescription.Kind
  fullName: System.Fabric.Description.UpgradePolicyDescription.Kind
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<MonitoredRollingFabricUpgradePolicyDescription>()
  nameWithType: ByteArraySerializer.Serialize<MonitoredRollingFabricUpgradePolicyDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of MonitoredRollingFabricUpgradePolicyDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription)()
  name.vb: Serialize(Of MonitoredRollingFabricUpgradePolicyDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<MonitoredRollingFabricUpgradePolicyDescription>
    nameWithType: ByteArraySerializer.Serialize<MonitoredRollingFabricUpgradePolicyDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of MonitoredRollingFabricUpgradePolicyDescription)
    nameWithType: ByteArraySerializer.Serialize(Of MonitoredRollingFabricUpgradePolicyDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription
  commentId: T:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription
  parent: System.Fabric.Description
  isExternal: false
  name: MonitoredRollingFabricUpgradePolicyDescription
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.#ctor*
  commentId: Overload:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.#ctor
  isExternal: false
  name: MonitoredRollingFabricUpgradePolicyDescription
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription.MonitoredRollingFabricUpgradePolicyDescription
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.MonitoredRollingFabricUpgradePolicyDescription
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.HealthPolicy*
  commentId: Overload:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.HealthPolicy
  isExternal: false
  name: HealthPolicy
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription.HealthPolicy
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.HealthPolicy
- uid: System.Fabric.Health.ClusterHealthPolicy
  commentId: T:System.Fabric.Health.ClusterHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ClusterHealthPolicy
  nameWithType: ClusterHealthPolicy
  fullName: System.Fabric.Health.ClusterHealthPolicy
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.Health.ClusterUpgradeHealthPolicy
  commentId: T:System.Fabric.Health.ClusterUpgradeHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ClusterUpgradeHealthPolicy
  nameWithType: ClusterUpgradeHealthPolicy
  fullName: System.Fabric.Health.ClusterUpgradeHealthPolicy
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation*
  commentId: Overload:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation
  isExternal: false
  name: EnableDeltaHealthEvaluation
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation
  commentId: P:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.EnableDeltaHealthEvaluation
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.UpgradeHealthPolicy*
  commentId: Overload:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.UpgradeHealthPolicy
  isExternal: false
  name: UpgradeHealthPolicy
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription.UpgradeHealthPolicy
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.UpgradeHealthPolicy
- uid: System.Fabric.Health.ApplicationHealthPolicy
  commentId: T:System.Fabric.Health.ApplicationHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ApplicationHealthPolicy
  nameWithType: ApplicationHealthPolicy
  fullName: System.Fabric.Health.ApplicationHealthPolicy
- uid: System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription,System.TimeSpan,System.Threading.CancellationToken)
- uid: System.Fabric.FabricClient.HealthClient.GetClusterHealthChunkAsync(System.Fabric.Description.ClusterHealthChunkQueryDescription,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetClusterHealthChunkAsync(System.Fabric.Description.ClusterHealthChunkQueryDescription,System.TimeSpan,System.Threading.CancellationToken)
- uid: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.ApplicationHealthPolicyMap*
  commentId: Overload:System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.ApplicationHealthPolicyMap
  isExternal: false
  name: ApplicationHealthPolicyMap
  nameWithType: MonitoredRollingFabricUpgradePolicyDescription.ApplicationHealthPolicyMap
  fullName: System.Fabric.Description.MonitoredRollingFabricUpgradePolicyDescription.ApplicationHealthPolicyMap
- uid: System.Fabric.Health.ApplicationHealthPolicyMap
  commentId: T:System.Fabric.Health.ApplicationHealthPolicyMap
  parent: System.Fabric.Health
  isExternal: false
  name: ApplicationHealthPolicyMap
  nameWithType: ApplicationHealthPolicyMap
  fullName: System.Fabric.Health.ApplicationHealthPolicyMap
