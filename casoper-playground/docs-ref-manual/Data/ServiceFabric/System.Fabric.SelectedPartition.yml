### YamlMime:ManagedReference
items:
- uid: System.Fabric.SelectedPartition
  commentId: T:System.Fabric.SelectedPartition
  id: SelectedPartition
  parent: System.Fabric
  children:
  - System.Fabric.SelectedPartition.Equals(System.Fabric.SelectedPartition)
  - System.Fabric.SelectedPartition.None
  - System.Fabric.SelectedPartition.PartitionId
  - System.Fabric.SelectedPartition.ServiceName
  - System.Fabric.SelectedPartition.ToString
  langs:
  - csharp
  - vb
  name: SelectedPartition
  nameWithType: SelectedPartition
  fullName: System.Fabric.SelectedPartition
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SelectedPartition
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nReturns selected partition using PartitionSelector FaultManagementClient APIs. \n"
  remarks: "\nThis class returns information about the partition that was selected using PartitionSelector testability API.\nFor example if the PartitionSelector was created using the RandomOf overload this class will populate \nservice name and partition id of the for selected partition\n"
  example: []
  syntax:
    content: 'public class SelectedPartition : IEquatable<SelectedPartition>'
    content.vb: >-
      Public Class SelectedPartition
          Implements IEquatable(Of SelectedPartition)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{System.Fabric.SelectedPartition}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.SelectedPartition.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.SelectedPartition.None
  commentId: F:System.Fabric.SelectedPartition.None
  id: None
  parent: System.Fabric.SelectedPartition
  langs:
  - csharp
  - vb
  name: None
  nameWithType: SelectedPartition.None
  fullName: System.Fabric.SelectedPartition.None
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: None
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
    startLine: 27
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nReturns none partition selector.\n"
  remarks: "\nA SelectedPartition will be none for any testability API with overloads which does not take a partition\nor replica selector as an input. For example if RestartNodeAsync is called with the NodeName overload\ninstead of ReplicaSelector then PartitionSelector returned will be None\n"
  example: []
  syntax:
    content: public static readonly SelectedPartition None
    content.vb: Public Shared ReadOnly None As SelectedPartition
    return:
      type: System.Fabric.SelectedPartition
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Fabric.SelectedPartition.ServiceName
  commentId: P:System.Fabric.SelectedPartition.ServiceName
  id: ServiceName
  parent: System.Fabric.SelectedPartition
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: SelectedPartition.ServiceName
  fullName: System.Fabric.SelectedPartition.ServiceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceName
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
    startLine: 52
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the service name as URI\n"
  example: []
  syntax:
    content: public Uri ServiceName { get; }
    content.vb: Public ReadOnly Property ServiceName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\nA URI\n"
  overload: System.Fabric.SelectedPartition.ServiceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.SelectedPartition.PartitionId
  commentId: P:System.Fabric.SelectedPartition.PartitionId
  id: PartitionId
  parent: System.Fabric.SelectedPartition
  langs:
  - csharp
  - vb
  name: PartitionId
  nameWithType: SelectedPartition.PartitionId
  fullName: System.Fabric.SelectedPartition.PartitionId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionId
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
    startLine: 60
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets the partition ID as GUID\n"
  example: []
  syntax:
    content: public Guid PartitionId { get; }
    content.vb: Public ReadOnly Property PartitionId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\nA GUID\n"
  overload: System.Fabric.SelectedPartition.PartitionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.SelectedPartition.Equals(System.Fabric.SelectedPartition)
  commentId: M:System.Fabric.SelectedPartition.Equals(System.Fabric.SelectedPartition)
  id: Equals(System.Fabric.SelectedPartition)
  parent: System.Fabric.SelectedPartition
  langs:
  - csharp
  - vb
  name: Equals(SelectedPartition)
  nameWithType: SelectedPartition.Equals(SelectedPartition)
  fullName: System.Fabric.SelectedPartition.Equals(System.Fabric.SelectedPartition)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Equals
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
    startLine: 67
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nCompares this SelectedPartition with other SelectedPartition.\n"
  example: []
  syntax:
    content: public bool Equals(SelectedPartition other)
    content.vb: Public Function Equals(other As SelectedPartition) As Boolean
    parameters:
    - id: other
      type: System.Fabric.SelectedPartition
      description: A selected partition with which the current SelectedPartition is to be compared.
    return:
      type: System.Boolean
      description: True, if both service name and partition ID of the two SelectedPartition objects match; else returns false.
  overload: System.Fabric.SelectedPartition.Equals*
  implements:
  - System.IEquatable{System.Fabric.SelectedPartition}.Equals(System.Fabric.SelectedPartition)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.SelectedPartition.ToString
  commentId: M:System.Fabric.SelectedPartition.ToString
  id: ToString
  parent: System.Fabric.SelectedPartition
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SelectedPartition.ToString()
  fullName: System.Fabric.SelectedPartition.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/SelectedPartition.cs
    startLine: 76
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets a string representation of the SelectedPartition object\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: 'A string with the format: Service Name: &lt;service-name&gt;, Partition Id: &lt;partition-id&gt;'
  overridden: System.Object.ToString
  overload: System.Fabric.SelectedPartition.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{System.Fabric.SelectedPartition}
  commentId: T:System.IEquatable{System.Fabric.SelectedPartition}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<SelectedPartition>
  nameWithType: IEquatable<SelectedPartition>
  fullName: System.IEquatable<System.Fabric.SelectedPartition>
  nameWithType.vb: IEquatable(Of SelectedPartition)
  fullname.vb: System.IEquatable(Of System.Fabric.SelectedPartition)
  name.vb: IEquatable(Of SelectedPartition)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.SelectedPartition
    name: SelectedPartition
    nameWithType: SelectedPartition
    fullName: System.Fabric.SelectedPartition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.SelectedPartition
    name: SelectedPartition
    nameWithType: SelectedPartition
    fullName: System.Fabric.SelectedPartition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.SelectedPartition.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<SelectedPartition>()
  nameWithType: ByteArraySerializer.Serialize<SelectedPartition>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.SelectedPartition>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of SelectedPartition)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.SelectedPartition)()
  name.vb: Serialize(Of SelectedPartition)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<SelectedPartition>
    nameWithType: ByteArraySerializer.Serialize<SelectedPartition>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.SelectedPartition>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of SelectedPartition)
    nameWithType: ByteArraySerializer.Serialize(Of SelectedPartition)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.SelectedPartition)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.SelectedPartition
  commentId: T:System.Fabric.SelectedPartition
  parent: System.Fabric
  isExternal: false
  name: SelectedPartition
  nameWithType: SelectedPartition
  fullName: System.Fabric.SelectedPartition
- uid: System.Fabric.SelectedPartition.ServiceName*
  commentId: Overload:System.Fabric.SelectedPartition.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: SelectedPartition.ServiceName
  fullName: System.Fabric.SelectedPartition.ServiceName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.SelectedPartition.PartitionId*
  commentId: Overload:System.Fabric.SelectedPartition.PartitionId
  isExternal: false
  name: PartitionId
  nameWithType: SelectedPartition.PartitionId
  fullName: System.Fabric.SelectedPartition.PartitionId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.SelectedPartition.Equals*
  commentId: Overload:System.Fabric.SelectedPartition.Equals
  isExternal: false
  name: Equals
  nameWithType: SelectedPartition.Equals
  fullName: System.Fabric.SelectedPartition.Equals
- uid: System.IEquatable{System.Fabric.SelectedPartition}.Equals(System.Fabric.SelectedPartition)
  commentId: M:System.IEquatable{System.Fabric.SelectedPartition}.Equals(System.Fabric.SelectedPartition)
  parent: System.IEquatable{System.Fabric.SelectedPartition}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(SelectedPartition)
  nameWithType: IEquatable<SelectedPartition>.Equals(SelectedPartition)
  fullName: System.IEquatable<System.Fabric.SelectedPartition>.Equals(System.Fabric.SelectedPartition)
  nameWithType.vb: IEquatable(Of SelectedPartition).Equals(SelectedPartition)
  fullname.vb: System.IEquatable(Of System.Fabric.SelectedPartition).Equals(System.Fabric.SelectedPartition)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<SelectedPartition>.Equals
    fullName: System.IEquatable<System.Fabric.SelectedPartition>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.SelectedPartition
    name: SelectedPartition
    nameWithType: SelectedPartition
    fullName: System.Fabric.SelectedPartition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of SelectedPartition).Equals
    fullName: System.IEquatable(Of System.Fabric.SelectedPartition).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.SelectedPartition
    name: SelectedPartition
    nameWithType: SelectedPartition
    fullName: System.Fabric.SelectedPartition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.SelectedPartition.ToString*
  commentId: Overload:System.Fabric.SelectedPartition.ToString
  isExternal: false
  name: ToString
  nameWithType: SelectedPartition.ToString
  fullName: System.Fabric.SelectedPartition.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
