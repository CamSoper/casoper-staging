### YamlMime:ManagedReference
items:
- uid: System.Fabric.PackageSharingPolicy
  commentId: T:System.Fabric.PackageSharingPolicy
  id: PackageSharingPolicy
  parent: System.Fabric
  children:
  - System.Fabric.PackageSharingPolicy.#ctor(System.String,System.Fabric.PackageSharingPolicyScope)
  - System.Fabric.PackageSharingPolicy.PackageName
  - System.Fabric.PackageSharingPolicy.SharingScope
  langs:
  - csharp
  - vb
  name: PackageSharingPolicy
  nameWithType: PackageSharingPolicy
  fullName: System.Fabric.PackageSharingPolicy
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/PackageSharingPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PackageSharingPolicy
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/PackageSharingPolicy.cs
    startLine: 12
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Represents a policy for the package sharing.</p>\n"
  example: []
  syntax:
    content: public class PackageSharingPolicy
    content.vb: Public Class PackageSharingPolicy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.PackageSharingPolicy.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.PackageSharingPolicy.#ctor(System.String,System.Fabric.PackageSharingPolicyScope)
  commentId: M:System.Fabric.PackageSharingPolicy.#ctor(System.String,System.Fabric.PackageSharingPolicyScope)
  id: '#ctor(System.String,System.Fabric.PackageSharingPolicyScope)'
  parent: System.Fabric.PackageSharingPolicy
  langs:
  - csharp
  - vb
  name: PackageSharingPolicy(String, PackageSharingPolicyScope)
  nameWithType: PackageSharingPolicy.PackageSharingPolicy(String, PackageSharingPolicyScope)
  fullName: System.Fabric.PackageSharingPolicy.PackageSharingPolicy(System.String, System.Fabric.PackageSharingPolicyScope)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/PackageSharingPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/PackageSharingPolicy.cs
    startLine: 25
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nCreates PackageSharingPolicy object.\n</p>\n"
  example: []
  syntax:
    content: public PackageSharingPolicy(string packageName, PackageSharingPolicyScope sharingScope)
    content.vb: Public Sub New(packageName As String, sharingScope As PackageSharingPolicyScope)
    parameters:
    - id: packageName
      type: System.String
      description: "\n<p>Name of specific package that should be shared. </p>\n"
    - id: sharingScope
      type: System.Fabric.PackageSharingPolicyScope
      description: "\n<p>PackageSharingPolicyScope parameter to indicate whether Code, Config, Data or All packages should be shared. </p>\n"
  overload: System.Fabric.PackageSharingPolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.PackageSharingPolicy.PackageName
  commentId: P:System.Fabric.PackageSharingPolicy.PackageName
  id: PackageName
  parent: System.Fabric.PackageSharingPolicy
  langs:
  - csharp
  - vb
  name: PackageName
  nameWithType: PackageSharingPolicy.PackageName
  fullName: System.Fabric.PackageSharingPolicy.PackageName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/PackageSharingPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PackageName
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/PackageSharingPolicy.cs
    startLine: 37
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the name of code, configuration or data package that should be shared.</p>\n"
  example: []
  syntax:
    content: public string PackageName { get; }
    content.vb: Public ReadOnly Property PackageName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of code, configuration or data package that should be shared.</p>\n"
  overload: System.Fabric.PackageSharingPolicy.PackageName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.PackageSharingPolicy.SharingScope
  commentId: P:System.Fabric.PackageSharingPolicy.SharingScope
  id: SharingScope
  parent: System.Fabric.PackageSharingPolicy
  langs:
  - csharp
  - vb
  name: SharingScope
  nameWithType: PackageSharingPolicy.SharingScope
  fullName: System.Fabric.PackageSharingPolicy.SharingScope
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/PackageSharingPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SharingScope
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/PackageSharingPolicy.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the scope for package sharing policy.</p>\n"
  example: []
  syntax:
    content: public PackageSharingPolicyScope SharingScope { get; }
    content.vb: Public ReadOnly Property SharingScope As PackageSharingPolicyScope
    parameters: []
    return:
      type: System.Fabric.PackageSharingPolicyScope
      description: "\n<p>The scope for package sharing policy.</p>\n"
  overload: System.Fabric.PackageSharingPolicy.SharingScope*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.PackageSharingPolicy.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<PackageSharingPolicy>()
  nameWithType: ByteArraySerializer.Serialize<PackageSharingPolicy>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.PackageSharingPolicy>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of PackageSharingPolicy)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.PackageSharingPolicy)()
  name.vb: Serialize(Of PackageSharingPolicy)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<PackageSharingPolicy>
    nameWithType: ByteArraySerializer.Serialize<PackageSharingPolicy>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.PackageSharingPolicy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of PackageSharingPolicy)
    nameWithType: ByteArraySerializer.Serialize(Of PackageSharingPolicy)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.PackageSharingPolicy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.PackageSharingPolicy.#ctor*
  commentId: Overload:System.Fabric.PackageSharingPolicy.#ctor
  isExternal: false
  name: PackageSharingPolicy
  nameWithType: PackageSharingPolicy.PackageSharingPolicy
  fullName: System.Fabric.PackageSharingPolicy.PackageSharingPolicy
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.PackageSharingPolicyScope
  commentId: T:System.Fabric.PackageSharingPolicyScope
  parent: System.Fabric
  isExternal: false
  name: PackageSharingPolicyScope
  nameWithType: PackageSharingPolicyScope
  fullName: System.Fabric.PackageSharingPolicyScope
- uid: System.Fabric.PackageSharingPolicy.PackageName*
  commentId: Overload:System.Fabric.PackageSharingPolicy.PackageName
  isExternal: false
  name: PackageName
  nameWithType: PackageSharingPolicy.PackageName
  fullName: System.Fabric.PackageSharingPolicy.PackageName
- uid: System.Fabric.PackageSharingPolicy.SharingScope*
  commentId: Overload:System.Fabric.PackageSharingPolicy.SharingScope
  isExternal: false
  name: SharingScope
  nameWithType: PackageSharingPolicy.SharingScope
  fullName: System.Fabric.PackageSharingPolicy.SharingScope
