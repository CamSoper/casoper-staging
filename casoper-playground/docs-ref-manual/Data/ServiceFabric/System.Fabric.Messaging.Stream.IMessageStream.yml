### YamlMime:ManagedReference
items:
- uid: System.Fabric.Messaging.Stream.IMessageStream
  commentId: T:System.Fabric.Messaging.Stream.IMessageStream
  id: IMessageStream
  parent: System.Fabric.Messaging.Stream
  children:
  - System.Fabric.Messaging.Stream.IMessageStream.CloseAsync(System.TimeSpan)
  - System.Fabric.Messaging.Stream.IMessageStream.DeleteAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan)
  - System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberReceivedAsync
  - System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberSentAsync
  - System.Fabric.Messaging.Stream.IMessageStream.OpenAsync(System.TimeSpan)
  - System.Fabric.Messaging.Stream.IMessageStream.ReceiveAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan)
  - System.Fabric.Messaging.Stream.IMessageStream.SendAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Byte[],System.TimeSpan)
  langs:
  - csharp
  - vb
  name: IMessageStream
  nameWithType: IMessageStream
  fullName: System.Fabric.Messaging.Stream.IMessageStream
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IMessageStream
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 281
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nstream, used to send and receive messages to a service instance\n"
  example: []
  syntax:
    content: 'public interface IMessageStream : IMessageStreamMetadata'
    content.vb: >-
      Public Interface IMessageStream
          Inherits IMessageStreamMetadata
  inheritedMembers:
  - System.Fabric.Messaging.Stream.IMessageStreamMetadata.Direction
  - System.Fabric.Messaging.Stream.IMessageStreamMetadata.StreamIdentity
  - System.Fabric.Messaging.Stream.IMessageStreamMetadata.StreamName
  - System.Fabric.Messaging.Stream.IMessageStreamMetadata.MessageQuota
  - System.Fabric.Messaging.Stream.IMessageStreamMetadata.PartnerIdentity
  - System.Fabric.Messaging.Stream.IMessageStreamMetadata.CurrentState
  extensionMethods:
  - System.Fabric.Messaging.Stream.IMessageStream.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Fabric.Messaging.Stream.IMessageStream.OpenAsync(System.TimeSpan)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStream.OpenAsync(System.TimeSpan)
  id: OpenAsync(System.TimeSpan)
  parent: System.Fabric.Messaging.Stream.IMessageStream
  langs:
  - csharp
  - vb
  name: OpenAsync(TimeSpan)
  nameWithType: IMessageStream.OpenAsync(TimeSpan)
  fullName: System.Fabric.Messaging.Stream.IMessageStream.OpenAsync(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OpenAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 289
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nMake the stream operational by negotiating acceptance with the target partition\nThis is only meaningful for outbound streams, use with inbound streams will throw an InvalidOperationException\n"
  example: []
  syntax:
    content: Task<StreamOpenOutcome> OpenAsync(TimeSpan timeout)
    content.vb: Function OpenAsync(timeout As TimeSpan) As Task(Of StreamOpenOutcome)
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.StreamOpenOutcome}
      description: "true if Open succeeded, false if the stream cannot be started because the name cannot be resolved \nor a connection cannot be established or the stream is rejected by the target"
  overload: System.Fabric.Messaging.Stream.IMessageStream.OpenAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStream.CloseAsync(System.TimeSpan)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStream.CloseAsync(System.TimeSpan)
  id: CloseAsync(System.TimeSpan)
  parent: System.Fabric.Messaging.Stream.IMessageStream
  langs:
  - csharp
  - vb
  name: CloseAsync(TimeSpan)
  nameWithType: IMessageStream.CloseAsync(TimeSpan)
  fullName: System.Fabric.Messaging.Stream.IMessageStream.CloseAsync(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CloseAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 296
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nGracefully close the stream protocol and release connections and other resources\nThis is only meaningful for outbound streams, use with inbound streams will throw an InvalidOperationException\n"
  example: []
  syntax:
    content: Task<bool> CloseAsync(TimeSpan timeout)
    content.vb: Function CloseAsync(timeout As TimeSpan) As Task(Of Boolean)
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: returns true is Close completed successfully, false if Close did not complete gracefully
  overload: System.Fabric.Messaging.Stream.IMessageStream.CloseAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStream.ReceiveAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStream.ReceiveAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan)
  id: ReceiveAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan)
  parent: System.Fabric.Messaging.Stream.IMessageStream
  langs:
  - csharp
  - vb
  name: ReceiveAsync(Transaction, TimeSpan)
  nameWithType: IMessageStream.ReceiveAsync(Transaction, TimeSpan)
  fullName: System.Fabric.Messaging.Stream.IMessageStream.ReceiveAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReceiveAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 304
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nAsync, return to continuation when inbound message available, wait for messages to come in if necessary\nWill return a null payload once the stream is closed\nThis is only meaningful for inbound streams, use with outbound streams will throw an InvalidOperationException\n"
  example: []
  syntax:
    content: Task<IInboundStreamMessage> ReceiveAsync(Transaction txn, TimeSpan timeout)
    content.vb: Function ReceiveAsync(txn As Transaction, timeout As TimeSpan) As Task(Of IInboundStreamMessage)
    parameters:
    - id: txn
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IInboundStreamMessage}
      description: ''
  overload: System.Fabric.Messaging.Stream.IMessageStream.ReceiveAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStream.SendAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Byte[],System.TimeSpan)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStream.SendAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Byte[],System.TimeSpan)
  id: SendAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.Byte[],System.TimeSpan)
  parent: System.Fabric.Messaging.Stream.IMessageStream
  langs:
  - csharp
  - vb
  name: SendAsync(Transaction, Byte[], TimeSpan)
  nameWithType: IMessageStream.SendAsync(Transaction, Byte[], TimeSpan)
  fullName: System.Fabric.Messaging.Stream.IMessageStream.SendAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Byte[], System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SendAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 311
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nCompletion may be delayed if outbound quota is full (throttling case)\nReturns to continuation when the message has been acknowledged as received by the target\nThis is only meaningful for outbound streams, use with inbound streams will throw an InvalidOperationException\n"
  example: []
  syntax:
    content: Task SendAsync(Transaction txn, byte[] data, TimeSpan timeout)
    content.vb: Function SendAsync(txn As Transaction, data As Byte(), timeout As TimeSpan) As Task
    parameters:
    - id: txn
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: data
      type: System.Byte[]
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Threading.Tasks.Task
  overload: System.Fabric.Messaging.Stream.IMessageStream.SendAsync*
  nameWithType.vb: IMessageStream.SendAsync(Transaction, Byte(), TimeSpan)
  fullName.vb: System.Fabric.Messaging.Stream.IMessageStream.SendAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.Byte(), System.TimeSpan)
  name.vb: SendAsync(Transaction, Byte(), TimeSpan)
- uid: System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberSentAsync
  commentId: M:System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberSentAsync
  id: GetLastSequenceNumberSentAsync
  parent: System.Fabric.Messaging.Stream.IMessageStream
  langs:
  - csharp
  - vb
  name: GetLastSequenceNumberSentAsync()
  nameWithType: IMessageStream.GetLastSequenceNumberSentAsync()
  fullName: System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberSentAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetLastSequenceNumberSentAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 318
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nLast payload sequence number sent as seen in the committed state outside the context of any service transaction\nThis is only meaningful for outbound streams, use with inbound streams will throw an InvalidOperationException\n"
  example: []
  syntax:
    content: Task<long> GetLastSequenceNumberSentAsync()
    content.vb: Function GetLastSequenceNumberSentAsync As Task(Of Long)
    return:
      type: System.Threading.Tasks.Task{System.Int64}
      description: last sequence number sent
  overload: System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberSentAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberReceivedAsync
  commentId: M:System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberReceivedAsync
  id: GetLastSequenceNumberReceivedAsync
  parent: System.Fabric.Messaging.Stream.IMessageStream
  langs:
  - csharp
  - vb
  name: GetLastSequenceNumberReceivedAsync()
  nameWithType: IMessageStream.GetLastSequenceNumberReceivedAsync()
  fullName: System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberReceivedAsync()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetLastSequenceNumberReceivedAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 325
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nLast payload sequence number received as seen in the committed state outside the context of any service transaction\nThis is only meaningful for inbound streams, use with outbound streams will throw an InvalidOperationException\n"
  example: []
  syntax:
    content: Task<long> GetLastSequenceNumberReceivedAsync()
    content.vb: Function GetLastSequenceNumberReceivedAsync As Task(Of Long)
    return:
      type: System.Threading.Tasks.Task{System.Int64}
      description: last sequence number received
  overload: System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberReceivedAsync*
- uid: System.Fabric.Messaging.Stream.IMessageStream.DeleteAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan)
  commentId: M:System.Fabric.Messaging.Stream.IMessageStream.DeleteAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan)
  id: DeleteAsync(Microsoft.ServiceFabric.Replicator.Transaction,System.TimeSpan)
  parent: System.Fabric.Messaging.Stream.IMessageStream
  langs:
  - csharp
  - vb
  name: DeleteAsync(Transaction, TimeSpan)
  nameWithType: IMessageStream.DeleteAsync(Transaction, TimeSpan)
  fullName: System.Fabric.Messaging.Stream.IMessageStream.DeleteAsync(Microsoft.ServiceFabric.Replicator.Transaction, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DeleteAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Impl/ReliableMessaging/Stream/Interfaces.cs
    startLine: 332
  assemblies:
  - Microsoft.ServiceFabric.Data.Impl
  namespace: System.Fabric.Messaging.Stream
  summary: "\nDeletes the stream  by negotiating acceptance with the target partition. \nThis is only meaningful for outbound streams that are in a closed state, use with inbound streams will throw an InvalidOperationException\n"
  example: []
  syntax:
    content: Task<bool> DeleteAsync(Transaction txn, TimeSpan timeout)
    content.vb: Function DeleteAsync(txn As Transaction, timeout As TimeSpan) As Task(Of Boolean)
    parameters:
    - id: txn
      type: Microsoft.ServiceFabric.Replicator.Transaction
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Delete outcome of stream in deleting state, deleted or not found
  overload: System.Fabric.Messaging.Stream.IMessageStream.DeleteAsync*
references:
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Messaging.Stream.IMessageStreamMetadata.Direction
  commentId: P:System.Fabric.Messaging.Stream.IMessageStreamMetadata.Direction
  parent: System.Fabric.Messaging.Stream.IMessageStreamMetadata
  isExternal: false
  name: Direction
  nameWithType: IMessageStreamMetadata.Direction
  fullName: System.Fabric.Messaging.Stream.IMessageStreamMetadata.Direction
- uid: System.Fabric.Messaging.Stream.IMessageStreamMetadata.StreamIdentity
  commentId: P:System.Fabric.Messaging.Stream.IMessageStreamMetadata.StreamIdentity
  parent: System.Fabric.Messaging.Stream.IMessageStreamMetadata
  isExternal: false
  name: StreamIdentity
  nameWithType: IMessageStreamMetadata.StreamIdentity
  fullName: System.Fabric.Messaging.Stream.IMessageStreamMetadata.StreamIdentity
- uid: System.Fabric.Messaging.Stream.IMessageStreamMetadata.StreamName
  commentId: P:System.Fabric.Messaging.Stream.IMessageStreamMetadata.StreamName
  parent: System.Fabric.Messaging.Stream.IMessageStreamMetadata
  isExternal: false
  name: StreamName
  nameWithType: IMessageStreamMetadata.StreamName
  fullName: System.Fabric.Messaging.Stream.IMessageStreamMetadata.StreamName
- uid: System.Fabric.Messaging.Stream.IMessageStreamMetadata.MessageQuota
  commentId: P:System.Fabric.Messaging.Stream.IMessageStreamMetadata.MessageQuota
  parent: System.Fabric.Messaging.Stream.IMessageStreamMetadata
  isExternal: false
  name: MessageQuota
  nameWithType: IMessageStreamMetadata.MessageQuota
  fullName: System.Fabric.Messaging.Stream.IMessageStreamMetadata.MessageQuota
- uid: System.Fabric.Messaging.Stream.IMessageStreamMetadata.PartnerIdentity
  commentId: P:System.Fabric.Messaging.Stream.IMessageStreamMetadata.PartnerIdentity
  parent: System.Fabric.Messaging.Stream.IMessageStreamMetadata
  isExternal: false
  name: PartnerIdentity
  nameWithType: IMessageStreamMetadata.PartnerIdentity
  fullName: System.Fabric.Messaging.Stream.IMessageStreamMetadata.PartnerIdentity
- uid: System.Fabric.Messaging.Stream.IMessageStreamMetadata.CurrentState
  commentId: P:System.Fabric.Messaging.Stream.IMessageStreamMetadata.CurrentState
  parent: System.Fabric.Messaging.Stream.IMessageStreamMetadata
  isExternal: false
  name: CurrentState
  nameWithType: IMessageStreamMetadata.CurrentState
  fullName: System.Fabric.Messaging.Stream.IMessageStreamMetadata.CurrentState
- uid: System.Fabric.Messaging.Stream.IMessageStream.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IMessageStream>()
  nameWithType: ByteArraySerializer.Serialize<IMessageStream>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Messaging.Stream.IMessageStream>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IMessageStream)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Messaging.Stream.IMessageStream)()
  name.vb: Serialize(Of IMessageStream)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IMessageStream>
    nameWithType: ByteArraySerializer.Serialize<IMessageStream>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Messaging.Stream.IMessageStream>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IMessageStream)
    nameWithType: ByteArraySerializer.Serialize(Of IMessageStream)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Messaging.Stream.IMessageStream)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.IMessageStreamMetadata
  commentId: T:System.Fabric.Messaging.Stream.IMessageStreamMetadata
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: IMessageStreamMetadata
  nameWithType: IMessageStreamMetadata
  fullName: System.Fabric.Messaging.Stream.IMessageStreamMetadata
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream.IMessageStream.OpenAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStream.OpenAsync
  isExternal: false
  name: OpenAsync
  nameWithType: IMessageStream.OpenAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStream.OpenAsync
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.StreamOpenOutcome}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.StreamOpenOutcome}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<StreamOpenOutcome>
  nameWithType: Task<StreamOpenOutcome>
  fullName: System.Threading.Tasks.Task<System.Fabric.Messaging.Stream.StreamOpenOutcome>
  nameWithType.vb: Task(Of StreamOpenOutcome)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Messaging.Stream.StreamOpenOutcome)
  name.vb: Task(Of StreamOpenOutcome)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Messaging.Stream.StreamOpenOutcome
    name: StreamOpenOutcome
    nameWithType: StreamOpenOutcome
    fullName: System.Fabric.Messaging.Stream.StreamOpenOutcome
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Messaging.Stream.StreamOpenOutcome
    name: StreamOpenOutcome
    nameWithType: StreamOpenOutcome
    fullName: System.Fabric.Messaging.Stream.StreamOpenOutcome
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Fabric.Messaging.Stream.IMessageStream.CloseAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStream.CloseAsync
  isExternal: false
  name: CloseAsync
  nameWithType: IMessageStream.CloseAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStream.CloseAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.IMessageStream.ReceiveAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStream.ReceiveAsync
  isExternal: false
  name: ReceiveAsync
  nameWithType: IMessageStream.ReceiveAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStream.ReceiveAsync
- uid: Microsoft.ServiceFabric.Replicator.Transaction
  commentId: T:Microsoft.ServiceFabric.Replicator.Transaction
  parent: Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: Microsoft.ServiceFabric.Replicator.Transaction
- uid: System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IInboundStreamMessage}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.Messaging.Stream.IInboundStreamMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IInboundStreamMessage>
  nameWithType: Task<IInboundStreamMessage>
  fullName: System.Threading.Tasks.Task<System.Fabric.Messaging.Stream.IInboundStreamMessage>
  nameWithType.vb: Task(Of IInboundStreamMessage)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.Messaging.Stream.IInboundStreamMessage)
  name.vb: Task(Of IInboundStreamMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Messaging.Stream.IInboundStreamMessage
    name: IInboundStreamMessage
    nameWithType: IInboundStreamMessage
    fullName: System.Fabric.Messaging.Stream.IInboundStreamMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Messaging.Stream.IInboundStreamMessage
    name: IInboundStreamMessage
    nameWithType: IInboundStreamMessage
    fullName: System.Fabric.Messaging.Stream.IInboundStreamMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Replicator
  commentId: N:Microsoft.ServiceFabric.Replicator
  isExternal: false
  name: Microsoft.ServiceFabric.Replicator
  nameWithType: Microsoft.ServiceFabric.Replicator
  fullName: Microsoft.ServiceFabric.Replicator
- uid: System.Fabric.Messaging.Stream.IMessageStream.SendAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStream.SendAsync
  isExternal: false
  name: SendAsync
  nameWithType: IMessageStream.SendAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStream.SendAsync
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberSentAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberSentAsync
  isExternal: false
  name: GetLastSequenceNumberSentAsync
  nameWithType: IMessageStream.GetLastSequenceNumberSentAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberSentAsync
- uid: System.Threading.Tasks.Task{System.Int64}
  commentId: T:System.Threading.Tasks.Task{System.Int64}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int64>
  nameWithType: Task<Int64>
  fullName: System.Threading.Tasks.Task<System.Int64>
  nameWithType.vb: Task(Of Int64)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int64)
  name.vb: Task(Of Int64)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberReceivedAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberReceivedAsync
  isExternal: false
  name: GetLastSequenceNumberReceivedAsync
  nameWithType: IMessageStream.GetLastSequenceNumberReceivedAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStream.GetLastSequenceNumberReceivedAsync
- uid: System.Fabric.Messaging.Stream.IMessageStream.DeleteAsync*
  commentId: Overload:System.Fabric.Messaging.Stream.IMessageStream.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: IMessageStream.DeleteAsync
  fullName: System.Fabric.Messaging.Stream.IMessageStream.DeleteAsync
