### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2
  id: NotifyDictionaryChangedEventArgs`2
  parent: Microsoft.ServiceFabric.Data.Notifications
  children:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.#ctor(Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedAction)
  - Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.Action
  langs:
  - csharp
  - vb
  name: NotifyDictionaryChangedEventArgs<TKey, TValue>
  nameWithType: NotifyDictionaryChangedEventArgs<TKey, TValue>
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs<TKey, TValue>
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NotifyDictionaryChangedEventArgs
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
    startLine: 51
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nProvides data for the DictionaryChanged event.\n"
  remarks: "\nDictionaryChanged notifications are synchronously fired by <cref name=\"IReliableDictionary\"></cref> as part of applying the operation.\nHolding up the completion of these events can cause the replica to be blocked on the completion of the event.\nIt is recommended that the events are handled as fast as possible.\n"
  example: []
  syntax:
    content: 'public abstract class NotifyDictionaryChangedEventArgs<TKey, TValue> : EventArgs'
    content.vb: >-
      Public MustInherit Class NotifyDictionaryChangedEventArgs(Of TKey, TValue)
          Inherits EventArgs
    typeParameters:
    - id: TKey
      description: The type of the keys in the <cref name="IReliableDictionary"></cref>.
    - id: TValue
      description: The type of the values in the <cref name="IReliableDictionary"></cref>.
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  nameWithType.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs(Of TKey, TValue)
  name.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue)
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.#ctor(Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedAction)
  commentId: M:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.#ctor(Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedAction)
  id: '#ctor(Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedAction)'
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: NotifyDictionaryChangedEventArgs(NotifyDictionaryChangedAction)
  nameWithType: NotifyDictionaryChangedEventArgs<TKey, TValue>.NotifyDictionaryChangedEventArgs(NotifyDictionaryChangedAction)
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs<TKey, TValue>.NotifyDictionaryChangedEventArgs(Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedAction)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
    startLine: 59
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nInitializes a new instance of the <cref name=\"NotifyDictionaryChangedEventArgs\"></cref>\n"
  example: []
  syntax:
    content: public NotifyDictionaryChangedEventArgs(NotifyDictionaryChangedAction action)
    content.vb: Public Sub New(action As NotifyDictionaryChangedAction)
    parameters:
    - id: action
      type: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedAction
      description: The type of notification.
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.#ctor*
  nameWithType.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue).NotifyDictionaryChangedEventArgs(NotifyDictionaryChangedAction)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs(Of TKey, TValue).NotifyDictionaryChangedEventArgs(Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedAction)
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.Action
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.Action
  id: Action
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: NotifyDictionaryChangedEventArgs<TKey, TValue>.Action
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs<TKey, TValue>.Action
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Action
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyDictionaryChangedEventArgs.cs
    startLine: 68
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nGets the action that caused the event.\n"
  example: []
  syntax:
    content: public NotifyDictionaryChangedAction Action { get; }
    content.vb: Public ReadOnly Property Action As NotifyDictionaryChangedAction
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedAction
      description: The type of notification.
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.Action*
  nameWithType.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue).Action
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs(Of TKey, TValue).Action
references:
- uid: Microsoft.ServiceFabric.Data.Notifications
  commentId: N:Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: Microsoft.ServiceFabric.Data.Notifications
  nameWithType: Microsoft.ServiceFabric.Data.Notifications
  fullName: Microsoft.ServiceFabric.Data.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NotifyDictionaryChangedEventArgs<TKey, TValue>>()
  nameWithType: ByteArraySerializer.Serialize<NotifyDictionaryChangedEventArgs<TKey, TValue>>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs<TKey, TValue>>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NotifyDictionaryChangedEventArgs(Of TKey, TValue))()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs(Of TKey, TValue))()
  name.vb: Serialize(Of NotifyDictionaryChangedEventArgs(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NotifyDictionaryChangedEventArgs<TKey, TValue>>
    nameWithType: ByteArraySerializer.Serialize<NotifyDictionaryChangedEventArgs<TKey, TValue>>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs<TKey, TValue>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NotifyDictionaryChangedEventArgs(Of TKey, TValue))
    nameWithType: ByteArraySerializer.Serialize(Of NotifyDictionaryChangedEventArgs(Of TKey, TValue))
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs(Of TKey, TValue))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.#ctor
  isExternal: false
  name: NotifyDictionaryChangedEventArgs
  nameWithType: NotifyDictionaryChangedEventArgs<TKey, TValue>.NotifyDictionaryChangedEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs<TKey, TValue>.NotifyDictionaryChangedEventArgs
  nameWithType.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue).NotifyDictionaryChangedEventArgs
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs(Of TKey, TValue).NotifyDictionaryChangedEventArgs
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedAction
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedAction
  parent: Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: NotifyDictionaryChangedAction
  nameWithType: NotifyDictionaryChangedAction
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedAction
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.Action*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs`2.Action
  isExternal: false
  name: Action
  nameWithType: NotifyDictionaryChangedEventArgs<TKey, TValue>.Action
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs<TKey, TValue>.Action
  nameWithType.vb: NotifyDictionaryChangedEventArgs(Of TKey, TValue).Action
  fullname.vb: Microsoft.ServiceFabric.Data.Notifications.NotifyDictionaryChangedEventArgs(Of TKey, TValue).Action
