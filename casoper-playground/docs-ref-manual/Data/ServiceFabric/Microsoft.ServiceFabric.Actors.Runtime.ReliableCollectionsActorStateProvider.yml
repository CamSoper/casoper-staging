### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  id: ReliableCollectionsActorStateProvider
  parent: Microsoft.ServiceFabric.Actors.Runtime
  children:
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration,System.Int32,System.Int32)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize(System.Fabric.StatefulServiceInitializationParameters)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OnDataLossAsync
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String)
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ReliableCollectionsActorStateProvider
  nameWithType: ReliableCollectionsActorStateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReliableCollectionsActorStateProvider
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nProvides an implementation of <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider\" data-throw-if-not-resolved=\"false\"></xref> which \nuses <xref href=\"Microsoft.ServiceFabric.Data.IReliableStateManager\" data-throw-if-not-resolved=\"false\"></xref> to store and persist the actor state.\n"
  example: []
  syntax:
    content: 'public sealed class ReliableCollectionsActorStateProvider : IActorStateProvider, IStateProviderReplica, VolatileLogicalTimeManager.ISnapshotHandler, IActorStateProviderInternal'
    content.vb: >-
      Public NotInheritable Class ReliableCollectionsActorStateProvider
          Implements IActorStateProvider, IStateProviderReplica, VolatileLogicalTimeManager.ISnapshotHandler, IActorStateProviderInternal
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  - Microsoft.ServiceFabric.Data.IStateProviderReplica
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: ReliableCollectionsActorStateProvider()
  nameWithType: ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 78
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nInitializes a new instance of the ReliableDictionaryActorStateProvider class.\n"
  example: []
  syntax:
    content: public ReliableCollectionsActorStateProvider()
    content.vb: Public Sub New
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration)
  id: '#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration)'
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration)
  nameWithType: ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 90
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nInitializes a new instance of the ReliableDictionaryActorStateProvider class \nwith specified configuration.\n"
  example: []
  syntax:
    content: public ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration stateManagerConfig)
    content.vb: Public Sub New(stateManagerConfig As ReliableStateManagerConfiguration)
    parameters:
    - id: stateManagerConfig
      type: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
      description: "\nA <xref href=\"Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration\" data-throw-if-not-resolved=\"false\"></xref> that describes <xref href=\"Microsoft.ServiceFabric.Data.IReliableStateManager\" data-throw-if-not-resolved=\"false\"></xref> configuration. \n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration,System.Int32,System.Int32)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration,System.Int32,System.Int32)
  id: '#ctor(Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration,System.Int32,System.Int32)'
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration, Int32, Int32)
  nameWithType: ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration, Int32, Int32)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider(Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 113
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nInitializes a new instance of the ReliableDictionaryActorStateProvider class \nwith specified configuration.\n"
  remarks: "\nValues for <em>actorStateDictionaryCount</em> and <em>reminderDictionaryCount</em> can be specified\nonly once when the Actor Service is created for first time. It cannot be changed after that and \n<xref href=\"Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider\" data-throw-if-not-resolved=\"false\"></xref> will ignore any values that are different from first time.\n"
  example: []
  syntax:
    content: public ReliableCollectionsActorStateProvider(ReliableStateManagerConfiguration stateManagerConfig, int actorStateDictionaryCount, int reminderDictionaryCount)
    content.vb: Public Sub New(stateManagerConfig As ReliableStateManagerConfiguration, actorStateDictionaryCount As Integer, reminderDictionaryCount As Integer)
    parameters:
    - id: stateManagerConfig
      type: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
      description: "\nA <xref href=\"Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration\" data-throw-if-not-resolved=\"false\"></xref> that describes <xref href=\"Microsoft.ServiceFabric.Data.IReliableStateManager\" data-throw-if-not-resolved=\"false\"></xref> configuration.\n"
    - id: actorStateDictionaryCount
      type: System.Int32
      description: "\nNumber of <xref href=\"Microsoft.ServiceFabric.Data.Collections.IReliableDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> across which actor states will be partitioned and stored.\n"
    - id: reminderDictionaryCount
      type: System.Int32
      description: "\nNumber of <xref href=\"Microsoft.ServiceFabric.Data.Collections.IReliableDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> across which reminders will be partitioned and stored.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.Initialize(ActorTypeInformation)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.Initialize(ActorTypeInformation)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 145
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: void IActorStateProvider.Initialize(ActorTypeInformation actorTypeInformation)
    content.vb: Sub Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(actorTypeInformation As ActorTypeInformation) Implements IActorStateProvider.Initialize
    parameters:
    - id: actorTypeInformation
      type: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(ActorTypeInformation)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(ActorTypeInformation)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.ActorActivatedAsync(ActorId, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.ActorActivatedAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 150
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IActorStateProvider.ActorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(actorId As ActorId, cancellationToken As CancellationToken) As Task Implements IActorStateProvider.ActorActivatedAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(ActorId, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(ActorId, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.IActorReminder, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 171
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IActorStateProvider.ReminderCallbackCompletedAsync(ActorId actorId, IActorReminder reminder, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(actorId As ActorId, reminder As IActorReminder, cancellationToken As CancellationToken) As Task Implements IActorStateProvider.ReminderCallbackCompletedAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
    - id: reminder
      type: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.LoadStateAsync<T>(ActorId, String, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.LoadStateAsync<T>(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync<T>(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 191
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task<T> IActorStateProvider.LoadStateAsync<T>(ActorId actorId, string stateName, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)(actorId As ActorId, stateName As String, cancellationToken As CancellationToken) As Task(Of T) Implements IActorStateProvider.LoadStateAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
    - id: stateName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)(ActorId, String, CancellationToken)
  fullName.vb: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)(ActorId, String, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection<ActorStateChange>, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection<ActorStateChange>, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Collections.Generic.IReadOnlyCollection<Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 217
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IActorStateProvider.SaveStateAsync(ActorId actorId, IReadOnlyCollection<ActorStateChange> stateChanges, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(actorId As ActorId, stateChanges As IReadOnlyCollection(Of ActorStateChange), cancellationToken As CancellationToken) As Task Implements IActorStateProvider.SaveStateAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
    - id: stateChanges
      type: System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection(Of ActorStateChange), CancellationToken)
  fullName.vb: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Collections.Generic.IReadOnlyCollection(Of Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange), System.Threading.CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection(Of ActorStateChange), CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.ContainsStateAsync(ActorId, String, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.ContainsStateAsync(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 226
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task<bool> IActorStateProvider.ContainsStateAsync(ActorId actorId, string stateName, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(actorId As ActorId, stateName As String, cancellationToken As CancellationToken) As Task(Of Boolean) Implements IActorStateProvider.ContainsStateAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
    - id: stateName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(ActorId, String, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(ActorId, String, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.RemoveActorAsync(ActorId, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.RemoveActorAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 245
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IActorStateProvider.RemoveActorAsync(ActorId actorId, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(actorId As ActorId, cancellationToken As CancellationToken) As Task Implements IActorStateProvider.RemoveActorAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(ActorId, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(ActorId, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.EnumerateStateNamesAsync(ActorId, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.EnumerateStateNamesAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 254
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task<IEnumerable<string>> IActorStateProvider.EnumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(actorId As ActorId, cancellationToken As CancellationToken) As Task(Of IEnumerable(Of String)) Implements IActorStateProvider.EnumerateStateNamesAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(ActorId, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(ActorId, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.GetActorsAsync(Int32, ContinuationToken, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.GetActorsAsync(Int32, ContinuationToken, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32, Microsoft.ServiceFabric.Actors.Query.ContinuationToken, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 263
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task<PagedResult<ActorId>> IActorStateProvider.GetActorsAsync(int itemsCount, ContinuationToken continuationToken, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(itemsCount As Integer, continuationToken As ContinuationToken, cancellationToken As CancellationToken) As Task(Of PagedResult(Of ActorId)) Implements IActorStateProvider.GetActorsAsync
    parameters:
    - id: itemsCount
      type: System.Int32
    - id: continuationToken
      type: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Query.PagedResult{Microsoft.ServiceFabric.Actors.ActorId}}
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(Int32, ContinuationToken, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(Int32, ContinuationToken, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.IActorReminder, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 272
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IActorStateProvider.SaveReminderAsync(ActorId actorId, IActorReminder reminder, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(actorId As ActorId, reminder As IActorReminder, cancellationToken As CancellationToken) As Task Implements IActorStateProvider.SaveReminderAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
    - id: reminder
      type: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync(System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync(System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.LoadRemindersAsync(CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.LoadRemindersAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 294
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task<IActorReminderCollection> IActorStateProvider.LoadRemindersAsync(CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(cancellationToken As CancellationToken) As Task(Of IActorReminderCollection) Implements IActorStateProvider.LoadRemindersAsync
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection}
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IActorStateProvider.DeleteReminderAsync(ActorId, String, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.DeleteReminderAsync(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 303
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IActorStateProvider.DeleteReminderAsync(ActorId actorId, string reminderName, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(actorId As ActorId, reminderName As String, cancellationToken As CancellationToken) As Task Implements IActorStateProvider.DeleteReminderAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
    - id: reminderName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(ActorId, String, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(ActorId, String, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OnDataLossAsync
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OnDataLossAsync
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#OnDataLossAsync
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.OnDataLossAsync
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.OnDataLossAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 357
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Func<CancellationToken, Task<bool>> IStateProviderReplica.OnDataLossAsync { set; }
    content.vb: ReadOnly WriteOnly Property Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync As Func(Of CancellationToken, Task(Of Boolean)) Implements IStateProviderReplica.OnDataLossAsync
    parameters: []
    return:
      type: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OnDataLossAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
  modifiers.csharp:
  - set
  modifiers.vb:
  - WriteOnly
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize(System.Fabric.StatefulServiceInitializationParameters)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize(System.Fabric.StatefulServiceInitializationParameters)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize(System.Fabric.StatefulServiceInitializationParameters)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.Initialize(StatefulServiceInitializationParameters)
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.Initialize(StatefulServiceInitializationParameters)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 366
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: void IStateProviderReplica.Initialize(StatefulServiceInitializationParameters initializationParameters)
    content.vb: Sub Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(initializationParameters As StatefulServiceInitializationParameters) Implements IStateProviderReplica.Initialize
    parameters:
    - id: initializationParameters
      type: System.Fabric.StatefulServiceInitializationParameters
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(StatefulServiceInitializationParameters)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(StatefulServiceInitializationParameters)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode, System.Fabric.IStatefulServicePartition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 400
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task<IReplicator> IStateProviderReplica.OpenAsync(ReplicaOpenMode openMode, IStatefulServicePartition partition, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(openMode As ReplicaOpenMode, partition As IStatefulServicePartition, cancellationToken As CancellationToken) As Task(Of IReplicator) Implements IStateProviderReplica.OpenAsync
    parameters:
    - id: openMode
      type: System.Fabric.ReplicaOpenMode
    - id: partition
      type: System.Fabric.IStatefulServicePartition
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Fabric.IReplicator}
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 409
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IStateProviderReplica.ChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(newRole As ReplicaRole, cancellationToken As CancellationToken) As Task Implements IStateProviderReplica.ChangeRoleAsync
    parameters:
    - id: newRole
      type: System.Fabric.ReplicaRole
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync(System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync(System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.CloseAsync(CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.CloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 431
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IStateProviderReplica.CloseAsync(CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(cancellationToken As CancellationToken) As Task Implements IStateProviderReplica.CloseAsync
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(CancellationToken)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.Abort()
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.Abort()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 437
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: void IStateProviderReplica.Abort()
    content.vb: Sub Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort Implements IStateProviderReplica.Abort
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort()
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort()
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.BackupAsync(Func<BackupInfo, CancellationToken, Task<Boolean>>)
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.BackupAsync(Func<BackupInfo, CancellationToken, Task<Boolean>>)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 443
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IStateProviderReplica.BackupAsync(Func<BackupInfo, CancellationToken, Task<bool>> backupCallback)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(backupCallback As Func(Of BackupInfo, CancellationToken, Task(Of Boolean))) As Task Implements IStateProviderReplica.BackupAsync
    parameters:
    - id: backupCallback
      type: System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  fullName.vb: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)))
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func<BackupInfo, CancellationToken, Task<Boolean>>)
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func<BackupInfo, CancellationToken, Task<Boolean>>)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption, System.TimeSpan, System.Threading.CancellationToken, System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 448
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IStateProviderReplica.BackupAsync(BackupOption option, TimeSpan timeout, CancellationToken cancellationToken, Func<BackupInfo, CancellationToken, Task<bool>> backupCallback)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(option As BackupOption, timeout As TimeSpan, cancellationToken As CancellationToken, backupCallback As Func(Of BackupInfo, CancellationToken, Task(Of Boolean))) As Task Implements IStateProviderReplica.BackupAsync
    parameters:
    - id: option
      type: Microsoft.ServiceFabric.Data.BackupOption
    - id: timeout
      type: System.TimeSpan
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: backupCallback
      type: System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  fullName.vb: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption, System.TimeSpan, System.Threading.CancellationToken, System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)))
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.RestoreAsync(String)
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.RestoreAsync(String)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 457
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IStateProviderReplica.RestoreAsync(string backupFolderPath)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(backupFolderPath As String) As Task Implements IStateProviderReplica.RestoreAsync
    parameters:
    - id: backupFolderPath
      type: System.String
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(String)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(String)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  langs:
  - csharp
  - vb
  name: IStateProviderReplica.RestoreAsync(String, RestorePolicy, CancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.RestoreAsync(String, RestorePolicy, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String, Microsoft.ServiceFabric.Data.RestorePolicy, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ReliableCollectionsActorStateProvider.cs
    startLine: 462
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  syntax:
    content: Task IStateProviderReplica.RestoreAsync(string backupFolderPath, RestorePolicy restorePolicy, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(backupFolderPath As String, restorePolicy As RestorePolicy, cancellationToken As CancellationToken) As Task Implements IStateProviderReplica.RestoreAsync
    parameters:
    - id: backupFolderPath
      type: System.String
    - id: restorePolicy
      type: Microsoft.ServiceFabric.Data.RestorePolicy
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync*
  implements:
  - Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(String, RestorePolicy, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(String, RestorePolicy, CancellationToken)
references:
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: IActorStateProvider
  nameWithType: IActorStateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
- uid: Microsoft.ServiceFabric.Data.IReliableStateManager
  commentId: T:Microsoft.ServiceFabric.Data.IReliableStateManager
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: IReliableStateManager
  nameWithType: IReliableStateManager
  fullName: Microsoft.ServiceFabric.Data.IReliableStateManager
- uid: Microsoft.ServiceFabric.Actors.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica
  commentId: T:Microsoft.ServiceFabric.Data.IStateProviderReplica
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: IStateProviderReplica
  nameWithType: IStateProviderReplica
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ReliableCollectionsActorStateProvider>()
  nameWithType: ByteArraySerializer.Serialize<ReliableCollectionsActorStateProvider>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ReliableCollectionsActorStateProvider)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider)()
  name.vb: Serialize(Of ReliableCollectionsActorStateProvider)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ReliableCollectionsActorStateProvider>
    nameWithType: ByteArraySerializer.Serialize<ReliableCollectionsActorStateProvider>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ReliableCollectionsActorStateProvider)
    nameWithType: ByteArraySerializer.Serialize(Of ReliableCollectionsActorStateProvider)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.#ctor
  isExternal: false
  name: ReliableCollectionsActorStateProvider
  nameWithType: ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.ReliableCollectionsActorStateProvider
- uid: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  commentId: T:Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: ReliableStateManagerConfiguration
  nameWithType: ReliableStateManagerConfiguration
  fullName: Microsoft.ServiceFabric.Data.ReliableStateManagerConfiguration
- uid: Microsoft.ServiceFabric.Data.Collections.IReliableDictionary`2
  commentId: T:Microsoft.ServiceFabric.Data.Collections.IReliableDictionary`2
  isExternal: false
  name: IReliableDictionary<TKey, TValue>
  nameWithType: IReliableDictionary<TKey, TValue>
  fullName: Microsoft.ServiceFabric.Data.Collections.IReliableDictionary<TKey, TValue>
  nameWithType.vb: IReliableDictionary(Of TKey, TValue)
  fullname.vb: Microsoft.ServiceFabric.Data.Collections.IReliableDictionary(Of TKey, TValue)
  name.vb: IReliableDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.Collections.IReliableDictionary`2
    name: IReliableDictionary
    nameWithType: IReliableDictionary
    fullName: Microsoft.ServiceFabric.Data.Collections.IReliableDictionary
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.Collections.IReliableDictionary`2
    name: IReliableDictionary
    nameWithType: IReliableDictionary
    fullName: Microsoft.ServiceFabric.Data.Collections.IReliableDictionary
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
  isExternal: false
  name: ReliableCollectionsActorStateProvider
  nameWithType: ReliableCollectionsActorStateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#Initialize
  isExternal: false
  name: IActorStateProvider.Initialize
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.Initialize
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: false
  name: Initialize(ActorTypeInformation)
  nameWithType: IActorStateProvider.Initialize(ActorTypeInformation)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
    name: Initialize
    nameWithType: IActorStateProvider.Initialize
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize(Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation)
    name: Initialize
    nameWithType: IActorStateProvider.Initialize
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ActorActivatedAsync
  isExternal: false
  name: IActorStateProvider.ActorActivatedAsync
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.ActorActivatedAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: ActorActivatedAsync(ActorId, CancellationToken)
  nameWithType: IActorStateProvider.ActorActivatedAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: ActorActivatedAsync
    nameWithType: IActorStateProvider.ActorActivatedAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: ActorActivatedAsync
    nameWithType: IActorStateProvider.ActorActivatedAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ActorActivatedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.ActorId
  commentId: T:Microsoft.ServiceFabric.Actors.ActorId
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: ActorId
  nameWithType: ActorId
  fullName: Microsoft.ServiceFabric.Actors.ActorId
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Actors
  commentId: N:Microsoft.ServiceFabric.Actors
  isExternal: false
  name: Microsoft.ServiceFabric.Actors
  nameWithType: Microsoft.ServiceFabric.Actors
  fullName: Microsoft.ServiceFabric.Actors
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ReminderCallbackCompletedAsync
  isExternal: false
  name: IActorStateProvider.ReminderCallbackCompletedAsync
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.ReminderCallbackCompletedAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
  nameWithType: IActorStateProvider.ReminderCallbackCompletedAsync(ActorId, IActorReminder, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.IActorReminder, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
    name: ReminderCallbackCompletedAsync
    nameWithType: IActorStateProvider.ReminderCallbackCompletedAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    name: IActorReminder
    nameWithType: IActorReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
    name: ReminderCallbackCompletedAsync
    nameWithType: IActorStateProvider.ReminderCallbackCompletedAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ReminderCallbackCompletedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    name: IActorReminder
    nameWithType: IActorReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: IActorReminder
  nameWithType: IActorReminder
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadStateAsync
  isExternal: false
  name: IActorStateProvider.LoadStateAsync<T>
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.LoadStateAsync<T>
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync<T>
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)
  fullname.vb: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: LoadStateAsync<T>(ActorId, String, CancellationToken)
  nameWithType: IActorStateProvider.LoadStateAsync<T>(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync<T>(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IActorStateProvider.LoadStateAsync(Of T)(ActorId, String, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  name.vb: LoadStateAsync(Of T)(ActorId, String, CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: LoadStateAsync<T>
    nameWithType: IActorStateProvider.LoadStateAsync<T>
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync``1(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: LoadStateAsync(Of T)
    nameWithType: IActorStateProvider.LoadStateAsync(Of T)
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadStateAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullname.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveStateAsync
  isExternal: false
  name: IActorStateProvider.SaveStateAsync
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.SaveStateAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: SaveStateAsync(ActorId, IReadOnlyCollection<ActorStateChange>, CancellationToken)
  nameWithType: IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection<ActorStateChange>, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Collections.Generic.IReadOnlyCollection<Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange>, System.Threading.CancellationToken)
  nameWithType.vb: IActorStateProvider.SaveStateAsync(ActorId, IReadOnlyCollection(Of ActorStateChange), CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Collections.Generic.IReadOnlyCollection(Of Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange), System.Threading.CancellationToken)
  name.vb: SaveStateAsync(ActorId, IReadOnlyCollection(Of ActorStateChange), CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
    name: SaveStateAsync
    nameWithType: IActorStateProvider.SaveStateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
    name: ActorStateChange
    nameWithType: ActorStateChange
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange},System.Threading.CancellationToken)
    name: SaveStateAsync
    nameWithType: IActorStateProvider.SaveStateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveStateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
    name: ActorStateChange
    nameWithType: ActorStateChange
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<ActorStateChange>
  nameWithType: IReadOnlyCollection<ActorStateChange>
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange>
  nameWithType.vb: IReadOnlyCollection(Of ActorStateChange)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange)
  name.vb: IReadOnlyCollection(Of ActorStateChange)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
    name: ActorStateChange
    nameWithType: ActorStateChange
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
    name: ActorStateChange
    nameWithType: ActorStateChange
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorStateChange
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#ContainsStateAsync
  isExternal: false
  name: IActorStateProvider.ContainsStateAsync
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.ContainsStateAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: ContainsStateAsync(ActorId, String, CancellationToken)
  nameWithType: IActorStateProvider.ContainsStateAsync(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: ContainsStateAsync
    nameWithType: IActorStateProvider.ContainsStateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: ContainsStateAsync
    nameWithType: IActorStateProvider.ContainsStateAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.ContainsStateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#RemoveActorAsync
  isExternal: false
  name: IActorStateProvider.RemoveActorAsync
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.RemoveActorAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: RemoveActorAsync(ActorId, CancellationToken)
  nameWithType: IActorStateProvider.RemoveActorAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: RemoveActorAsync
    nameWithType: IActorStateProvider.RemoveActorAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: RemoveActorAsync
    nameWithType: IActorStateProvider.RemoveActorAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.RemoveActorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#EnumerateStateNamesAsync
  isExternal: false
  name: IActorStateProvider.EnumerateStateNamesAsync
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.EnumerateStateNamesAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: EnumerateStateNamesAsync(ActorId, CancellationToken)
  nameWithType: IActorStateProvider.EnumerateStateNamesAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: EnumerateStateNamesAsync
    nameWithType: IActorStateProvider.EnumerateStateNamesAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: EnumerateStateNamesAsync
    nameWithType: IActorStateProvider.EnumerateStateNamesAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.EnumerateStateNamesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<String>>
  nameWithType: Task<IEnumerable<String>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<System.String>>
  nameWithType.vb: Task(Of IEnumerable(Of String))
  fullname.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Task(Of IEnumerable(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#GetActorsAsync
  isExternal: false
  name: IActorStateProvider.GetActorsAsync
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.GetActorsAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: GetActorsAsync(Int32, ContinuationToken, CancellationToken)
  nameWithType: IActorStateProvider.GetActorsAsync(Int32, ContinuationToken, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32, Microsoft.ServiceFabric.Actors.Query.ContinuationToken, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
    name: GetActorsAsync
    nameWithType: IActorStateProvider.GetActorsAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
    name: ContinuationToken
    nameWithType: ContinuationToken
    fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync(System.Int32,Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
    name: GetActorsAsync
    nameWithType: IActorStateProvider.GetActorsAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.GetActorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
    name: ContinuationToken
    nameWithType: ContinuationToken
    fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  commentId: T:Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  parent: Microsoft.ServiceFabric.Actors.Query
  isExternal: false
  name: ContinuationToken
  nameWithType: ContinuationToken
  fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
- uid: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Query.PagedResult{Microsoft.ServiceFabric.Actors.ActorId}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Query.PagedResult{Microsoft.ServiceFabric.Actors.ActorId}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PagedResult<ActorId>>
  nameWithType: Task<PagedResult<ActorId>>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceFabric.Actors.Query.PagedResult<Microsoft.ServiceFabric.Actors.ActorId>>
  nameWithType.vb: Task(Of PagedResult(Of ActorId))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceFabric.Actors.Query.PagedResult(Of Microsoft.ServiceFabric.Actors.ActorId))
  name.vb: Task(Of PagedResult(Of ActorId))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
    name: PagedResult
    nameWithType: PagedResult
    fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
    name: PagedResult
    nameWithType: PagedResult
    fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Query
  commentId: N:Microsoft.ServiceFabric.Actors.Query
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Query
  nameWithType: Microsoft.ServiceFabric.Actors.Query
  fullName: Microsoft.ServiceFabric.Actors.Query
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#SaveReminderAsync
  isExternal: false
  name: IActorStateProvider.SaveReminderAsync
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.SaveReminderAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
  nameWithType: IActorStateProvider.SaveReminderAsync(ActorId, IActorReminder, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.IActorReminder, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
    name: SaveReminderAsync
    nameWithType: IActorStateProvider.SaveReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    name: IActorReminder
    nameWithType: IActorReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.IActorReminder,System.Threading.CancellationToken)
    name: SaveReminderAsync
    nameWithType: IActorStateProvider.SaveReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.SaveReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
    name: IActorReminder
    nameWithType: IActorReminder
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#LoadRemindersAsync
  isExternal: false
  name: IActorStateProvider.LoadRemindersAsync
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.LoadRemindersAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: LoadRemindersAsync(CancellationToken)
  nameWithType: IActorStateProvider.LoadRemindersAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
    name: LoadRemindersAsync
    nameWithType: IActorStateProvider.LoadRemindersAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync(System.Threading.CancellationToken)
    name: LoadRemindersAsync
    nameWithType: IActorStateProvider.LoadRemindersAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.LoadRemindersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IActorReminderCollection>
  nameWithType: Task<IActorReminderCollection>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection>
  nameWithType.vb: Task(Of IActorReminderCollection)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection)
  name.vb: Task(Of IActorReminderCollection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection
    name: IActorReminderCollection
    nameWithType: IActorReminderCollection
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection
    name: IActorReminderCollection
    nameWithType: IActorReminderCollection
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorReminderCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Actors#Runtime#IActorStateProvider#DeleteReminderAsync
  isExternal: false
  name: IActorStateProvider.DeleteReminderAsync
  nameWithType: ReliableCollectionsActorStateProvider.IActorStateProvider.DeleteReminderAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
  name.vb: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  isExternal: true
  name: DeleteReminderAsync(ActorId, String, CancellationToken)
  nameWithType: IActorStateProvider.DeleteReminderAsync(ActorId, String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: DeleteReminderAsync
    nameWithType: IActorStateProvider.DeleteReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync(Microsoft.ServiceFabric.Actors.ActorId,System.String,System.Threading.CancellationToken)
    name: DeleteReminderAsync
    nameWithType: IActorStateProvider.DeleteReminderAsync
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider.DeleteReminderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OnDataLossAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OnDataLossAsync
  isExternal: false
  name: IStateProviderReplica.OnDataLossAsync
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.OnDataLossAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
  commentId: P:Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: false
  name: OnDataLossAsync
  nameWithType: IStateProviderReplica.OnDataLossAsync
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.OnDataLossAsync
- uid: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
  commentId: T:System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
  parent: System
  definition: System.Func`2
  name: Func<CancellationToken, Task<Boolean>>
  nameWithType: Func<CancellationToken, Task<Boolean>>
  fullName: System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>
  nameWithType.vb: Func(Of CancellationToken, Task(Of Boolean))
  fullname.vb: System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean))
  name.vb: Func(Of CancellationToken, Task(Of Boolean))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Initialize
  isExternal: false
  name: IStateProviderReplica.Initialize
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.Initialize
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: false
  name: Initialize(StatefulServiceInitializationParameters)
  nameWithType: IStateProviderReplica.Initialize(StatefulServiceInitializationParameters)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
    name: Initialize
    nameWithType: IStateProviderReplica.Initialize
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.StatefulServiceInitializationParameters
    name: StatefulServiceInitializationParameters
    nameWithType: StatefulServiceInitializationParameters
    fullName: System.Fabric.StatefulServiceInitializationParameters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize(System.Fabric.StatefulServiceInitializationParameters)
    name: Initialize
    nameWithType: IStateProviderReplica.Initialize
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.StatefulServiceInitializationParameters
    name: StatefulServiceInitializationParameters
    nameWithType: StatefulServiceInitializationParameters
    fullName: System.Fabric.StatefulServiceInitializationParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.StatefulServiceInitializationParameters
  commentId: T:System.Fabric.StatefulServiceInitializationParameters
  parent: System.Fabric
  isExternal: false
  name: StatefulServiceInitializationParameters
  nameWithType: StatefulServiceInitializationParameters
  fullName: System.Fabric.StatefulServiceInitializationParameters
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#OpenAsync
  isExternal: false
  name: IStateProviderReplica.OpenAsync
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.OpenAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
  nameWithType: IStateProviderReplica.OpenAsync(ReplicaOpenMode, IStatefulServicePartition, CancellationToken)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode, System.Fabric.IStatefulServicePartition, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: IStateProviderReplica.OpenAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaOpenMode
    name: ReplicaOpenMode
    nameWithType: ReplicaOpenMode
    fullName: System.Fabric.ReplicaOpenMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.IStatefulServicePartition
    name: IStatefulServicePartition
    nameWithType: IStatefulServicePartition
    fullName: System.Fabric.IStatefulServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync(System.Fabric.ReplicaOpenMode,System.Fabric.IStatefulServicePartition,System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: IStateProviderReplica.OpenAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaOpenMode
    name: ReplicaOpenMode
    nameWithType: ReplicaOpenMode
    fullName: System.Fabric.ReplicaOpenMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.IStatefulServicePartition
    name: IStatefulServicePartition
    nameWithType: IStatefulServicePartition
    fullName: System.Fabric.IStatefulServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReplicaOpenMode
  commentId: T:System.Fabric.ReplicaOpenMode
  parent: System.Fabric
  isExternal: false
  name: ReplicaOpenMode
  nameWithType: ReplicaOpenMode
  fullName: System.Fabric.ReplicaOpenMode
- uid: System.Fabric.IStatefulServicePartition
  commentId: T:System.Fabric.IStatefulServicePartition
  parent: System.Fabric
  isExternal: false
  name: IStatefulServicePartition
  nameWithType: IStatefulServicePartition
  fullName: System.Fabric.IStatefulServicePartition
- uid: System.Threading.Tasks.Task{System.Fabric.IReplicator}
  commentId: T:System.Threading.Tasks.Task{System.Fabric.IReplicator}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IReplicator>
  nameWithType: Task<IReplicator>
  fullName: System.Threading.Tasks.Task<System.Fabric.IReplicator>
  nameWithType.vb: Task(Of IReplicator)
  fullname.vb: System.Threading.Tasks.Task(Of System.Fabric.IReplicator)
  name.vb: Task(Of IReplicator)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.IReplicator
    name: IReplicator
    nameWithType: IReplicator
    fullName: System.Fabric.IReplicator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.IReplicator
    name: IReplicator
    nameWithType: IReplicator
    fullName: System.Fabric.IReplicator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#ChangeRoleAsync
  isExternal: false
  name: IStateProviderReplica.ChangeRoleAsync
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.ChangeRoleAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: ChangeRoleAsync(ReplicaRole, CancellationToken)
  nameWithType: IStateProviderReplica.ChangeRoleAsync(ReplicaRole, CancellationToken)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
    name: ChangeRoleAsync
    nameWithType: IStateProviderReplica.ChangeRoleAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
    name: ChangeRoleAsync
    nameWithType: IStateProviderReplica.ChangeRoleAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.ChangeRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReplicaRole
  commentId: T:System.Fabric.ReplicaRole
  parent: System.Fabric
  isExternal: false
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: System.Fabric.ReplicaRole
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#CloseAsync
  isExternal: false
  name: IStateProviderReplica.CloseAsync
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.CloseAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: CloseAsync(CancellationToken)
  nameWithType: IStateProviderReplica.CloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: IStateProviderReplica.CloseAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: IStateProviderReplica.CloseAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#Abort
  isExternal: false
  name: IStateProviderReplica.Abort
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.Abort
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: false
  name: Abort()
  nameWithType: IStateProviderReplica.Abort()
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
    name: Abort
    nameWithType: IStateProviderReplica.Abort
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
    name: Abort
    nameWithType: IStateProviderReplica.Abort
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#BackupAsync
  isExternal: false
  name: IStateProviderReplica.BackupAsync
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.BackupAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: BackupAsync(Func<BackupInfo, CancellationToken, Task<Boolean>>)
  nameWithType: IStateProviderReplica.BackupAsync(Func<BackupInfo, CancellationToken, Task<Boolean>>)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>)
  nameWithType.vb: IStateProviderReplica.BackupAsync(Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  fullname.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)))
  name.vb: BackupAsync(Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
    name: BackupAsync
    nameWithType: IStateProviderReplica.BackupAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
    name: BackupAsync
    nameWithType: IStateProviderReplica.BackupAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
  commentId: T:System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}}
  parent: System
  definition: System.Func`3
  name: Func<BackupInfo, CancellationToken, Task<Boolean>>
  nameWithType: Func<BackupInfo, CancellationToken, Task<Boolean>>
  fullName: System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>
  nameWithType.vb: Func(Of BackupInfo, CancellationToken, Task(Of Boolean))
  fullname.vb: System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean))
  name.vb: Func(Of BackupInfo, CancellationToken, Task(Of Boolean))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: BackupAsync(BackupOption, TimeSpan, CancellationToken, Func<BackupInfo, CancellationToken, Task<Boolean>>)
  nameWithType: IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func<BackupInfo, CancellationToken, Task<Boolean>>)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption, System.TimeSpan, System.Threading.CancellationToken, System.Func<Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>)
  nameWithType.vb: IStateProviderReplica.BackupAsync(BackupOption, TimeSpan, CancellationToken, Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  fullname.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption, System.TimeSpan, System.Threading.CancellationToken, System.Func(Of Microsoft.ServiceFabric.Data.BackupInfo, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)))
  name.vb: BackupAsync(BackupOption, TimeSpan, CancellationToken, Func(Of BackupInfo, CancellationToken, Task(Of Boolean)))
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
    name: BackupAsync
    nameWithType: IStateProviderReplica.BackupAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.BackupOption
    name: BackupOption
    nameWithType: BackupOption
    fullName: Microsoft.ServiceFabric.Data.BackupOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync(Microsoft.ServiceFabric.Data.BackupOption,System.TimeSpan,System.Threading.CancellationToken,System.Func{Microsoft.ServiceFabric.Data.BackupInfo,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}})
    name: BackupAsync
    nameWithType: IStateProviderReplica.BackupAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.BackupOption
    name: BackupOption
    nameWithType: BackupOption
    fullName: Microsoft.ServiceFabric.Data.BackupOption
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Data.BackupInfo
    name: BackupInfo
    nameWithType: BackupInfo
    fullName: Microsoft.ServiceFabric.Data.BackupInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.BackupOption
  commentId: T:Microsoft.ServiceFabric.Data.BackupOption
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: BackupOption
  nameWithType: BackupOption
  fullName: Microsoft.ServiceFabric.Data.BackupOption
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft#ServiceFabric#Data#IStateProviderReplica#RestoreAsync
  isExternal: false
  name: IStateProviderReplica.RestoreAsync
  nameWithType: ReliableCollectionsActorStateProvider.IStateProviderReplica.RestoreAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  nameWithType.vb: ReliableCollectionsActorStateProvider.Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  name.vb: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: RestoreAsync(String)
  nameWithType: IStateProviderReplica.RestoreAsync(String)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
    name: RestoreAsync
    nameWithType: IStateProviderReplica.RestoreAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String)
    name: RestoreAsync
    nameWithType: IStateProviderReplica.RestoreAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Data.IStateProviderReplica
  isExternal: true
  name: RestoreAsync(String, RestorePolicy, CancellationToken)
  nameWithType: IStateProviderReplica.RestoreAsync(String, RestorePolicy, CancellationToken)
  fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String, Microsoft.ServiceFabric.Data.RestorePolicy, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
    name: RestoreAsync
    nameWithType: IStateProviderReplica.RestoreAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Data.RestorePolicy
    name: RestorePolicy
    nameWithType: RestorePolicy
    fullName: Microsoft.ServiceFabric.Data.RestorePolicy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync(System.String,Microsoft.ServiceFabric.Data.RestorePolicy,System.Threading.CancellationToken)
    name: RestoreAsync
    nameWithType: IStateProviderReplica.RestoreAsync
    fullName: Microsoft.ServiceFabric.Data.IStateProviderReplica.RestoreAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Data.RestorePolicy
    name: RestorePolicy
    nameWithType: RestorePolicy
    fullName: Microsoft.ServiceFabric.Data.RestorePolicy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.RestorePolicy
  commentId: T:Microsoft.ServiceFabric.Data.RestorePolicy
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: RestorePolicy
  nameWithType: RestorePolicy
  fullName: Microsoft.ServiceFabric.Data.RestorePolicy
