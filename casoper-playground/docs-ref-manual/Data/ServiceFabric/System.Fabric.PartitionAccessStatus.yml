### YamlMime:ManagedReference
items:
- uid: System.Fabric.PartitionAccessStatus
  commentId: T:System.Fabric.PartitionAccessStatus
  id: PartitionAccessStatus
  parent: System.Fabric
  children:
  - System.Fabric.PartitionAccessStatus.Granted
  - System.Fabric.PartitionAccessStatus.Invalid
  - System.Fabric.PartitionAccessStatus.NotPrimary
  - System.Fabric.PartitionAccessStatus.NoWriteQuorum
  - System.Fabric.PartitionAccessStatus.ReconfigurationPending
  langs:
  - csharp
  - vb
  name: PartitionAccessStatus
  nameWithType: PartitionAccessStatus
  fullName: System.Fabric.PartitionAccessStatus
  type: Enum
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionAccessStatus
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
    startLine: 21
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Enumerates the access status of the partition. </p>\n"
  remarks: "\n<p>\n<xref href=\"System.Fabric.PartitionAccessStatus\" data-throw-if-not-resolved=\"false\"></xref> is used to check that a read or write operation is allowed. When service \nreplicas handle a client request, they should verify that the system is in a state that allows processing. By checking the \n<xref href=\"System.Fabric.IStatefulServicePartition.ReadStatus\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Fabric.IStatefulServicePartition.WriteStatus\" data-throw-if-not-resolved=\"false\"></xref> as \nappropriate, the replica can be notified of conditions that prevent correct operation. Note that write operations might still see an \nexception from the replicator for one of these conditions, because the condition might change between the \n<xref href=\"System.Fabric.IStatefulServicePartition.WriteStatus\" data-throw-if-not-resolved=\"false\"></xref> check and the call \nto <xref href=\"System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData%2cSystem.Threading.CancellationToken%2cSystem.Int64%40)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  example: []
  syntax:
    content: public enum PartitionAccessStatus
    content.vb: Public Enum PartitionAccessStatus
  extensionMethods:
  - System.Fabric.PartitionAccessStatus.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Fabric.PartitionAccessStatus.Invalid
  commentId: F:System.Fabric.PartitionAccessStatus.Invalid
  id: Invalid
  parent: System.Fabric.PartitionAccessStatus
  langs:
  - csharp
  - vb
  name: Invalid
  nameWithType: PartitionAccessStatus.Invalid
  fullName: System.Fabric.PartitionAccessStatus.Invalid
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Invalid
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
    startLine: 26
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates that the read or write operation access status is not valid. This value is not returned to the caller.</p>\n"
  example: []
  syntax:
    content: Invalid = 0
    return:
      type: System.Fabric.PartitionAccessStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.PartitionAccessStatus.Granted
  commentId: F:System.Fabric.PartitionAccessStatus.Granted
  id: Granted
  parent: System.Fabric.PartitionAccessStatus
  langs:
  - csharp
  - vb
  name: Granted
  nameWithType: PartitionAccessStatus.Granted
  fullName: System.Fabric.PartitionAccessStatus.Granted
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Granted
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
    startLine: 31
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates that the read or write operation access is granted and the operation is allowed. </p>\n"
  example: []
  syntax:
    content: Granted = 1
    return:
      type: System.Fabric.PartitionAccessStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.PartitionAccessStatus.ReconfigurationPending
  commentId: F:System.Fabric.PartitionAccessStatus.ReconfigurationPending
  id: ReconfigurationPending
  parent: System.Fabric.PartitionAccessStatus
  langs:
  - csharp
  - vb
  name: ReconfigurationPending
  nameWithType: PartitionAccessStatus.ReconfigurationPending
  fullName: System.Fabric.PartitionAccessStatus.ReconfigurationPending
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReconfigurationPending
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
    startLine: 37
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates that the client should try again later, because a reconfiguration is in progress. After the reconfiguration is completed, a \nnew status is returned that gives further instructions. The client should retry the operation at this replica</p>\n"
  example: []
  syntax:
    content: ReconfigurationPending = 2
    return:
      type: System.Fabric.PartitionAccessStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.PartitionAccessStatus.NotPrimary
  commentId: F:System.Fabric.PartitionAccessStatus.NotPrimary
  id: NotPrimary
  parent: System.Fabric.PartitionAccessStatus
  langs:
  - csharp
  - vb
  name: NotPrimary
  nameWithType: PartitionAccessStatus.NotPrimary
  fullName: System.Fabric.PartitionAccessStatus.NotPrimary
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NotPrimary
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
    startLine: 43
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates that this client request was received by a replica that is not a Primary replica. The read or write operation cannot be \nperformed at this replica. The client should attempt to use the naming service to identify the correct primary replica.</p>\n"
  example: []
  syntax:
    content: NotPrimary = 3
    return:
      type: System.Fabric.PartitionAccessStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Fabric.PartitionAccessStatus.NoWriteQuorum
  commentId: F:System.Fabric.PartitionAccessStatus.NoWriteQuorum
  id: NoWriteQuorum
  parent: System.Fabric.PartitionAccessStatus
  langs:
  - csharp
  - vb
  name: NoWriteQuorum
  nameWithType: PartitionAccessStatus.NoWriteQuorum
  fullName: System.Fabric.PartitionAccessStatus.NoWriteQuorum
  type: Field
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NoWriteQuorum
    path: src/prod/src/managed/Api/src/System/Fabric/PartitionAccessStatus.cs
    startLine: 48
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates that no write quorum is available and, therefore, no write operation can be accepted. The client should retry the operation at this replica.</p>\n"
  example: []
  syntax:
    content: NoWriteQuorum = 4
    return:
      type: System.Fabric.PartitionAccessStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Fabric.PartitionAccessStatus
  commentId: T:System.Fabric.PartitionAccessStatus
  parent: System.Fabric
  isExternal: false
  name: PartitionAccessStatus
  nameWithType: PartitionAccessStatus
  fullName: System.Fabric.PartitionAccessStatus
- uid: System.Fabric.IStatefulServicePartition.ReadStatus
  commentId: P:System.Fabric.IStatefulServicePartition.ReadStatus
- uid: System.Fabric.IStatefulServicePartition.WriteStatus
  commentId: P:System.Fabric.IStatefulServicePartition.WriteStatus
- uid: System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)
  commentId: M:System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)
  parent: System.Fabric.IStateReplicator
  isExternal: true
  name: ReplicateAsync(OperationData, CancellationToken, Int64)
  nameWithType: IStateReplicator.ReplicateAsync(OperationData, CancellationToken, Int64)
  fullName: System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData, System.Threading.CancellationToken, System.Int64)
  spec.csharp:
  - uid: System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)
    name: ReplicateAsync
    nameWithType: IStateReplicator.ReplicateAsync
    fullName: System.Fabric.IStateReplicator.ReplicateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.OperationData
    name: OperationData
    nameWithType: OperationData
    fullName: System.Fabric.OperationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.IStateReplicator.ReplicateAsync(System.Fabric.OperationData,System.Threading.CancellationToken,System.Int64@)
    name: ReplicateAsync
    nameWithType: IStateReplicator.ReplicateAsync
    fullName: System.Fabric.IStateReplicator.ReplicateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.OperationData
    name: OperationData
    nameWithType: OperationData
    fullName: System.Fabric.OperationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.PartitionAccessStatus.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<PartitionAccessStatus>()
  nameWithType: ByteArraySerializer.Serialize<PartitionAccessStatus>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.PartitionAccessStatus>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of PartitionAccessStatus)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.PartitionAccessStatus)()
  name.vb: Serialize(Of PartitionAccessStatus)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<PartitionAccessStatus>
    nameWithType: ByteArraySerializer.Serialize<PartitionAccessStatus>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.PartitionAccessStatus>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of PartitionAccessStatus)
    nameWithType: ByteArraySerializer.Serialize(Of PartitionAccessStatus)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.PartitionAccessStatus)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.IStateReplicator
  commentId: T:System.Fabric.IStateReplicator
  parent: System.Fabric
  isExternal: false
  name: IStateReplicator
  nameWithType: IStateReplicator
  fullName: System.Fabric.IStateReplicator
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
