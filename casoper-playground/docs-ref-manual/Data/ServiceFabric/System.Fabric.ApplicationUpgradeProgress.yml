### YamlMime:ManagedReference
items:
- uid: System.Fabric.ApplicationUpgradeProgress
  commentId: T:System.Fabric.ApplicationUpgradeProgress
  id: ApplicationUpgradeProgress
  parent: System.Fabric
  children:
  - System.Fabric.ApplicationUpgradeProgress.ApplicationName
  - System.Fabric.ApplicationUpgradeProgress.ApplicationTypeName
  - System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainDuration
  - System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainProgress
  - System.Fabric.ApplicationUpgradeProgress.FailureReason
  - System.Fabric.ApplicationUpgradeProgress.FailureTimestampUtc
  - System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains(System.Fabric.ApplicationUpgradeProgress)
  - System.Fabric.ApplicationUpgradeProgress.NextUpgradeDomain
  - System.Fabric.ApplicationUpgradeProgress.RollingUpgradeMode
  - System.Fabric.ApplicationUpgradeProgress.StartTimestampUtc
  - System.Fabric.ApplicationUpgradeProgress.TargetApplicationTypeVersion
  - System.Fabric.ApplicationUpgradeProgress.ToString
  - System.Fabric.ApplicationUpgradeProgress.UnhealthyEvaluations
  - System.Fabric.ApplicationUpgradeProgress.UpgradeDescription
  - System.Fabric.ApplicationUpgradeProgress.UpgradeDomainProgressAtFailure
  - System.Fabric.ApplicationUpgradeProgress.UpgradeDomains
  - System.Fabric.ApplicationUpgradeProgress.UpgradeDuration
  - System.Fabric.ApplicationUpgradeProgress.UpgradeState
  langs:
  - csharp
  - vb
  name: ApplicationUpgradeProgress
  nameWithType: ApplicationUpgradeProgress
  fullName: System.Fabric.ApplicationUpgradeProgress
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationUpgradeProgress
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 18
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Represents the upgrade status of the application instance.</p>\n"
  example: []
  syntax:
    content: public sealed class ApplicationUpgradeProgress
    content.vb: Public NotInheritable Class ApplicationUpgradeProgress
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.ApplicationUpgradeProgress.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.ApplicationUpgradeProgress.UpgradeDescription
  commentId: P:System.Fabric.ApplicationUpgradeProgress.UpgradeDescription
  id: UpgradeDescription
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: UpgradeDescription
  nameWithType: ApplicationUpgradeProgress.UpgradeDescription
  fullName: System.Fabric.ApplicationUpgradeProgress.UpgradeDescription
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeDescription
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 47
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the parameters that describe the behavior of the current upgrade.</p>\n"
  example: []
  syntax:
    content: public ApplicationUpgradeDescription UpgradeDescription { get; }
    content.vb: Public ReadOnly Property UpgradeDescription As ApplicationUpgradeDescription
    parameters: []
    return:
      type: System.Fabric.Description.ApplicationUpgradeDescription
      description: "\n<p>The parameters that describe the behavior of the current upgrade.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.UpgradeDescription*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.ApplicationName
  commentId: P:System.Fabric.ApplicationUpgradeProgress.ApplicationName
  id: ApplicationName
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: ApplicationUpgradeProgress.ApplicationName
  fullName: System.Fabric.ApplicationUpgradeProgress.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 55
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the name of the application to be upgraded.</p>\n"
  example: []
  syntax:
    content: public Uri ApplicationName { get; }
    content.vb: Public ReadOnly Property ApplicationName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The name of the application to be upgraded.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.ApplicationName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.ApplicationTypeName
  commentId: P:System.Fabric.ApplicationUpgradeProgress.ApplicationTypeName
  id: ApplicationTypeName
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: ApplicationTypeName
  nameWithType: ApplicationUpgradeProgress.ApplicationTypeName
  fullName: System.Fabric.ApplicationUpgradeProgress.ApplicationTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 64
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the type name of the application to be upgraded.</p>\n"
  example: []
  syntax:
    content: public string ApplicationTypeName { get; }
    content.vb: Public ReadOnly Property ApplicationTypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The type name of the application to be upgraded.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.ApplicationTypeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.TargetApplicationTypeVersion
  commentId: P:System.Fabric.ApplicationUpgradeProgress.TargetApplicationTypeVersion
  id: TargetApplicationTypeVersion
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: TargetApplicationTypeVersion
  nameWithType: ApplicationUpgradeProgress.TargetApplicationTypeVersion
  fullName: System.Fabric.ApplicationUpgradeProgress.TargetApplicationTypeVersion
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TargetApplicationTypeVersion
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 73
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the version of the application type being upgraded.</p>\n"
  example: []
  syntax:
    content: public string TargetApplicationTypeVersion { get; }
    content.vb: Public ReadOnly Property TargetApplicationTypeVersion As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The version of the application type being upgraded.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.TargetApplicationTypeVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.UpgradeState
  commentId: P:System.Fabric.ApplicationUpgradeProgress.UpgradeState
  id: UpgradeState
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: UpgradeState
  nameWithType: ApplicationUpgradeProgress.UpgradeState
  fullName: System.Fabric.ApplicationUpgradeProgress.UpgradeState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeState
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 81
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the overall state of the application upgrade process.</p>\n"
  example: []
  syntax:
    content: public ApplicationUpgradeState UpgradeState { get; }
    content.vb: Public ReadOnly Property UpgradeState As ApplicationUpgradeState
    parameters: []
    return:
      type: System.Fabric.ApplicationUpgradeState
      description: "\n<p>The overall state of the application upgrade process.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.UpgradeState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.UpgradeDomains
  commentId: P:System.Fabric.ApplicationUpgradeProgress.UpgradeDomains
  id: UpgradeDomains
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: UpgradeDomains
  nameWithType: ApplicationUpgradeProgress.UpgradeDomains
  fullName: System.Fabric.ApplicationUpgradeProgress.UpgradeDomains
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeDomains
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 89
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the collection of upgrade domains and their upgrade status for this application upgrade.</p>\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<UpgradeDomainStatus> UpgradeDomains { get; }
    content.vb: Public ReadOnly Property UpgradeDomains As ReadOnlyCollection(Of UpgradeDomainStatus)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Fabric.UpgradeDomainStatus}
      description: "\n<p>The collection of upgrade domains and their upgrade status for this application upgrade.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.UpgradeDomains*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.RollingUpgradeMode
  commentId: P:System.Fabric.ApplicationUpgradeProgress.RollingUpgradeMode
  id: RollingUpgradeMode
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: RollingUpgradeMode
  nameWithType: ApplicationUpgradeProgress.RollingUpgradeMode
  fullName: System.Fabric.ApplicationUpgradeProgress.RollingUpgradeMode
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RollingUpgradeMode
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 97
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the rolling upgrade mode for this upgrade progress.</p>\n"
  example: []
  syntax:
    content: public RollingUpgradeMode RollingUpgradeMode { get; }
    content.vb: Public ReadOnly Property RollingUpgradeMode As RollingUpgradeMode
    parameters: []
    return:
      type: System.Fabric.RollingUpgradeMode
      description: "\n<p>The rolling upgrade mode for this upgrade progress.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.RollingUpgradeMode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.NextUpgradeDomain
  commentId: P:System.Fabric.ApplicationUpgradeProgress.NextUpgradeDomain
  id: NextUpgradeDomain
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: NextUpgradeDomain
  nameWithType: ApplicationUpgradeProgress.NextUpgradeDomain
  fullName: System.Fabric.ApplicationUpgradeProgress.NextUpgradeDomain
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NextUpgradeDomain
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 105
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the next upgrade domain for this upgrade progress.</p>\n"
  example: []
  syntax:
    content: public string NextUpgradeDomain { get; }
    content.vb: Public ReadOnly Property NextUpgradeDomain As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The next upgrade domain for this upgrade progress.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.NextUpgradeDomain*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.UpgradeDuration
  commentId: P:System.Fabric.ApplicationUpgradeProgress.UpgradeDuration
  id: UpgradeDuration
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: UpgradeDuration
  nameWithType: ApplicationUpgradeProgress.UpgradeDuration
  fullName: System.Fabric.ApplicationUpgradeProgress.UpgradeDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeDuration
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 113
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the estimated elapsed time spent processing the current overall upgrade.</p>\n"
  example: []
  syntax:
    content: public TimeSpan UpgradeDuration { get; }
    content.vb: Public ReadOnly Property UpgradeDuration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The estimated elapsed time spent processing the current overall upgrade.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.UpgradeDuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainDuration
  commentId: P:System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainDuration
  id: CurrentUpgradeDomainDuration
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: CurrentUpgradeDomainDuration
  nameWithType: ApplicationUpgradeProgress.CurrentUpgradeDomainDuration
  fullName: System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CurrentUpgradeDomainDuration
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 122
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the estimated elapsed time spent processing the current Upgrade Domain.</p>\n"
  example: []
  syntax:
    content: public TimeSpan CurrentUpgradeDomainDuration { get; }
    content.vb: Public ReadOnly Property CurrentUpgradeDomainDuration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The estimated elapsed time spent processing the current Upgrade Domain.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainDuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.UnhealthyEvaluations
  commentId: P:System.Fabric.ApplicationUpgradeProgress.UnhealthyEvaluations
  id: UnhealthyEvaluations
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: UnhealthyEvaluations
  nameWithType: ApplicationUpgradeProgress.UnhealthyEvaluations
  fullName: System.Fabric.ApplicationUpgradeProgress.UnhealthyEvaluations
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UnhealthyEvaluations
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 133
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the evaluations which describe the data and the algorithm \nused by health manager to evaluate the application health. </p>\n"
  example: []
  syntax:
    content: public IList<HealthEvaluation> UnhealthyEvaluations { get; }
    content.vb: Public ReadOnly Property UnhealthyEvaluations As IList(Of HealthEvaluation)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Health.HealthEvaluation}
      description: "\n<p>The evaluations which describe the data and the algorithm used \nby health manager to evaluate the application health.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.UnhealthyEvaluations*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainProgress
  commentId: P:System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainProgress
  id: CurrentUpgradeDomainProgress
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: CurrentUpgradeDomainProgress
  nameWithType: ApplicationUpgradeProgress.CurrentUpgradeDomainProgress
  fullName: System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainProgress
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CurrentUpgradeDomainProgress
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 142
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gives the detailed upgrade progress for nodes in the current upgrade domain.</p>\n"
  example: []
  syntax:
    content: public UpgradeDomainProgress CurrentUpgradeDomainProgress { get; }
    content.vb: Public ReadOnly Property CurrentUpgradeDomainProgress As UpgradeDomainProgress
    parameters: []
    return:
      type: System.Fabric.UpgradeDomainProgress
      description: "\n<p>Returns <xref href=\"System.Fabric.UpgradeDomainProgress\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainProgress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.StartTimestampUtc
  commentId: P:System.Fabric.ApplicationUpgradeProgress.StartTimestampUtc
  id: StartTimestampUtc
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: StartTimestampUtc
  nameWithType: ApplicationUpgradeProgress.StartTimestampUtc
  fullName: System.Fabric.ApplicationUpgradeProgress.StartTimestampUtc
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StartTimestampUtc
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 153
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the time at which the upgrade started.\n</p>\n"
  example: []
  syntax:
    content: public DateTime? StartTimestampUtc { get; }
    content.vb: Public ReadOnly Property StartTimestampUtc As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time at which the upgrade started in UTC.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.StartTimestampUtc*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.FailureTimestampUtc
  commentId: P:System.Fabric.ApplicationUpgradeProgress.FailureTimestampUtc
  id: FailureTimestampUtc
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: FailureTimestampUtc
  nameWithType: ApplicationUpgradeProgress.FailureTimestampUtc
  fullName: System.Fabric.ApplicationUpgradeProgress.FailureTimestampUtc
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FailureTimestampUtc
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 164
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the time at which the upgrade failed.\n</p>\n"
  example: []
  syntax:
    content: public DateTime? FailureTimestampUtc { get; }
    content.vb: Public ReadOnly Property FailureTimestampUtc As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The time at which the upgrade failed in UTC.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.FailureTimestampUtc*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.FailureReason
  commentId: P:System.Fabric.ApplicationUpgradeProgress.FailureReason
  id: FailureReason
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: FailureReason
  nameWithType: ApplicationUpgradeProgress.FailureReason
  fullName: System.Fabric.ApplicationUpgradeProgress.FailureReason
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FailureReason
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 175
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets the category of upgrade failure if the upgrade failed.\n</p>\n"
  example: []
  syntax:
    content: public UpgradeFailureReason? FailureReason { get; }
    content.vb: Public ReadOnly Property FailureReason As UpgradeFailureReason?
    parameters: []
    return:
      type: System.Nullable{System.Fabric.UpgradeFailureReason}
      description: "\n<p>The category of upgrade failure. <xref href=\"System.Fabric.UpgradeFailureReason\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.FailureReason*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.UpgradeDomainProgressAtFailure
  commentId: P:System.Fabric.ApplicationUpgradeProgress.UpgradeDomainProgressAtFailure
  id: UpgradeDomainProgressAtFailure
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: UpgradeDomainProgressAtFailure
  nameWithType: ApplicationUpgradeProgress.UpgradeDomainProgressAtFailure
  fullName: System.Fabric.ApplicationUpgradeProgress.UpgradeDomainProgressAtFailure
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeDomainProgressAtFailure
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 186
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>\nGets structured information about what actions were being performed by the system at the moment of upgrade failure.\n</p>\n"
  example: []
  syntax:
    content: public UpgradeDomainProgress UpgradeDomainProgressAtFailure { get; }
    content.vb: Public ReadOnly Property UpgradeDomainProgressAtFailure As UpgradeDomainProgress
    parameters: []
    return:
      type: System.Fabric.UpgradeDomainProgress
      description: "\n<p>The upgrade domain progress details. <xref href=\"System.Fabric.UpgradeDomainProgress\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.UpgradeDomainProgressAtFailure*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ApplicationUpgradeProgress.ToString
  commentId: M:System.Fabric.ApplicationUpgradeProgress.ToString
  id: ToString
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ApplicationUpgradeProgress.ToString()
  fullName: System.Fabric.ApplicationUpgradeProgress.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 193
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets a string representation of the application upgrade progress.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the <xref href="System.Fabric.ApplicationUpgradeProgress" data-throw-if-not-resolved="false"></xref>.
  overridden: System.Object.ToString
  overload: System.Fabric.ApplicationUpgradeProgress.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains(System.Fabric.ApplicationUpgradeProgress)
  commentId: M:System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains(System.Fabric.ApplicationUpgradeProgress)
  id: GetChangedUpgradeDomains(System.Fabric.ApplicationUpgradeProgress)
  parent: System.Fabric.ApplicationUpgradeProgress
  langs:
  - csharp
  - vb
  name: GetChangedUpgradeDomains(ApplicationUpgradeProgress)
  nameWithType: ApplicationUpgradeProgress.GetChangedUpgradeDomains(ApplicationUpgradeProgress)
  fullName: System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains(System.Fabric.ApplicationUpgradeProgress)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GetChangedUpgradeDomains
    path: src/prod/src/managed/Api/src/System/Fabric/ApplicationUpgradeProgress.cs
    startLine: 241
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Specifies a helper method that returns a collection of upgrade domains that have changed to the <xref href=\"System.Fabric.ApplicationUpgradeState.RollingForwardCompleted\" data-throw-if-not-resolved=\"false\"></xref> state or the <xref href=\"System.Fabric.ApplicationUpgradeState.RollingForwardInProgress\" data-throw-if-not-resolved=\"false\"></xref> state since the <xref href=\"System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains(System.Fabric.ApplicationUpgradeProgress)\" data-throw-if-not-resolved=\"false\"></xref> method was called.</p>\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<UpgradeDomainStatus> GetChangedUpgradeDomains(ApplicationUpgradeProgress previousProgress)
    content.vb: Public Function GetChangedUpgradeDomains(previousProgress As ApplicationUpgradeProgress) As ReadOnlyCollection(Of UpgradeDomainStatus)
    parameters:
    - id: previousProgress
      type: System.Fabric.ApplicationUpgradeProgress
      description: "\n<p>The previous <xref href=\"System.Fabric.ApplicationUpgradeProgress\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Fabric.UpgradeDomainStatus}
      description: "\n<p>A helper method that returns a collection of upgrade domains.</p>\n"
  overload: System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The application name or the application type of the <em>previousProgress</em> parameter does not match the application name or application type of this object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ApplicationUpgradeProgress.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ApplicationUpgradeProgress>()
  nameWithType: ByteArraySerializer.Serialize<ApplicationUpgradeProgress>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ApplicationUpgradeProgress>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ApplicationUpgradeProgress)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ApplicationUpgradeProgress)()
  name.vb: Serialize(Of ApplicationUpgradeProgress)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ApplicationUpgradeProgress>
    nameWithType: ByteArraySerializer.Serialize<ApplicationUpgradeProgress>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ApplicationUpgradeProgress>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ApplicationUpgradeProgress)
    nameWithType: ByteArraySerializer.Serialize(Of ApplicationUpgradeProgress)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ApplicationUpgradeProgress)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.ApplicationUpgradeProgress.UpgradeDescription*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.UpgradeDescription
  isExternal: false
  name: UpgradeDescription
  nameWithType: ApplicationUpgradeProgress.UpgradeDescription
  fullName: System.Fabric.ApplicationUpgradeProgress.UpgradeDescription
- uid: System.Fabric.Description.ApplicationUpgradeDescription
  commentId: T:System.Fabric.Description.ApplicationUpgradeDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ApplicationUpgradeDescription
  nameWithType: ApplicationUpgradeDescription
  fullName: System.Fabric.Description.ApplicationUpgradeDescription
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Fabric.ApplicationUpgradeProgress.ApplicationName*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: ApplicationUpgradeProgress.ApplicationName
  fullName: System.Fabric.ApplicationUpgradeProgress.ApplicationName
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.ApplicationUpgradeProgress.ApplicationTypeName*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.ApplicationTypeName
  isExternal: false
  name: ApplicationTypeName
  nameWithType: ApplicationUpgradeProgress.ApplicationTypeName
  fullName: System.Fabric.ApplicationUpgradeProgress.ApplicationTypeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.ApplicationUpgradeProgress.TargetApplicationTypeVersion*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.TargetApplicationTypeVersion
  isExternal: false
  name: TargetApplicationTypeVersion
  nameWithType: ApplicationUpgradeProgress.TargetApplicationTypeVersion
  fullName: System.Fabric.ApplicationUpgradeProgress.TargetApplicationTypeVersion
- uid: System.Fabric.ApplicationUpgradeProgress.UpgradeState*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.UpgradeState
  isExternal: false
  name: UpgradeState
  nameWithType: ApplicationUpgradeProgress.UpgradeState
  fullName: System.Fabric.ApplicationUpgradeProgress.UpgradeState
- uid: System.Fabric.ApplicationUpgradeState
  commentId: T:System.Fabric.ApplicationUpgradeState
  parent: System.Fabric
  isExternal: false
  name: ApplicationUpgradeState
  nameWithType: ApplicationUpgradeState
  fullName: System.Fabric.ApplicationUpgradeState
- uid: System.Fabric.ApplicationUpgradeProgress.UpgradeDomains*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.UpgradeDomains
  isExternal: false
  name: UpgradeDomains
  nameWithType: ApplicationUpgradeProgress.UpgradeDomains
  fullName: System.Fabric.ApplicationUpgradeProgress.UpgradeDomains
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Fabric.UpgradeDomainStatus}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Fabric.UpgradeDomainStatus}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<UpgradeDomainStatus>
  nameWithType: ReadOnlyCollection<UpgradeDomainStatus>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Fabric.UpgradeDomainStatus>
  nameWithType.vb: ReadOnlyCollection(Of UpgradeDomainStatus)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Fabric.UpgradeDomainStatus)
  name.vb: ReadOnlyCollection(Of UpgradeDomainStatus)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.UpgradeDomainStatus
    name: UpgradeDomainStatus
    nameWithType: UpgradeDomainStatus
    fullName: System.Fabric.UpgradeDomainStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.UpgradeDomainStatus
    name: UpgradeDomainStatus
    nameWithType: UpgradeDomainStatus
    fullName: System.Fabric.UpgradeDomainStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Fabric.ApplicationUpgradeProgress.RollingUpgradeMode*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.RollingUpgradeMode
  isExternal: false
  name: RollingUpgradeMode
  nameWithType: ApplicationUpgradeProgress.RollingUpgradeMode
  fullName: System.Fabric.ApplicationUpgradeProgress.RollingUpgradeMode
- uid: System.Fabric.RollingUpgradeMode
  commentId: T:System.Fabric.RollingUpgradeMode
  parent: System.Fabric
  isExternal: false
  name: RollingUpgradeMode
  nameWithType: RollingUpgradeMode
  fullName: System.Fabric.RollingUpgradeMode
- uid: System.Fabric.ApplicationUpgradeProgress.NextUpgradeDomain*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.NextUpgradeDomain
  isExternal: false
  name: NextUpgradeDomain
  nameWithType: ApplicationUpgradeProgress.NextUpgradeDomain
  fullName: System.Fabric.ApplicationUpgradeProgress.NextUpgradeDomain
- uid: System.Fabric.ApplicationUpgradeProgress.UpgradeDuration*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.UpgradeDuration
  isExternal: false
  name: UpgradeDuration
  nameWithType: ApplicationUpgradeProgress.UpgradeDuration
  fullName: System.Fabric.ApplicationUpgradeProgress.UpgradeDuration
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainDuration*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainDuration
  isExternal: false
  name: CurrentUpgradeDomainDuration
  nameWithType: ApplicationUpgradeProgress.CurrentUpgradeDomainDuration
  fullName: System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainDuration
- uid: System.Fabric.ApplicationUpgradeProgress.UnhealthyEvaluations*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.UnhealthyEvaluations
  isExternal: false
  name: UnhealthyEvaluations
  nameWithType: ApplicationUpgradeProgress.UnhealthyEvaluations
  fullName: System.Fabric.ApplicationUpgradeProgress.UnhealthyEvaluations
- uid: System.Collections.Generic.IList{System.Fabric.Health.HealthEvaluation}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Health.HealthEvaluation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<HealthEvaluation>
  nameWithType: IList<HealthEvaluation>
  fullName: System.Collections.Generic.IList<System.Fabric.Health.HealthEvaluation>
  nameWithType.vb: IList(Of HealthEvaluation)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Health.HealthEvaluation)
  name.vb: IList(Of HealthEvaluation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Health.HealthEvaluation
    name: HealthEvaluation
    nameWithType: HealthEvaluation
    fullName: System.Fabric.Health.HealthEvaluation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Health.HealthEvaluation
    name: HealthEvaluation
    nameWithType: HealthEvaluation
    fullName: System.Fabric.Health.HealthEvaluation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.UpgradeDomainProgress
  commentId: T:System.Fabric.UpgradeDomainProgress
  parent: System.Fabric
  isExternal: false
  name: UpgradeDomainProgress
  nameWithType: UpgradeDomainProgress
  fullName: System.Fabric.UpgradeDomainProgress
- uid: System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainProgress*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainProgress
  isExternal: false
  name: CurrentUpgradeDomainProgress
  nameWithType: ApplicationUpgradeProgress.CurrentUpgradeDomainProgress
  fullName: System.Fabric.ApplicationUpgradeProgress.CurrentUpgradeDomainProgress
- uid: System.Fabric.ApplicationUpgradeProgress.StartTimestampUtc*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.StartTimestampUtc
  isExternal: false
  name: StartTimestampUtc
  nameWithType: ApplicationUpgradeProgress.StartTimestampUtc
  fullName: System.Fabric.ApplicationUpgradeProgress.StartTimestampUtc
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ApplicationUpgradeProgress.FailureTimestampUtc*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.FailureTimestampUtc
  isExternal: false
  name: FailureTimestampUtc
  nameWithType: ApplicationUpgradeProgress.FailureTimestampUtc
  fullName: System.Fabric.ApplicationUpgradeProgress.FailureTimestampUtc
- uid: System.Fabric.UpgradeFailureReason
  commentId: T:System.Fabric.UpgradeFailureReason
  parent: System.Fabric
  isExternal: false
  name: UpgradeFailureReason
  nameWithType: UpgradeFailureReason
  fullName: System.Fabric.UpgradeFailureReason
- uid: System.Fabric.ApplicationUpgradeProgress.FailureReason*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.FailureReason
  isExternal: false
  name: FailureReason
  nameWithType: ApplicationUpgradeProgress.FailureReason
  fullName: System.Fabric.ApplicationUpgradeProgress.FailureReason
- uid: System.Nullable{System.Fabric.UpgradeFailureReason}
  commentId: T:System.Nullable{System.Fabric.UpgradeFailureReason}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UpgradeFailureReason>
  nameWithType: Nullable<UpgradeFailureReason>
  fullName: System.Nullable<System.Fabric.UpgradeFailureReason>
  nameWithType.vb: Nullable(Of UpgradeFailureReason)
  fullname.vb: System.Nullable(Of System.Fabric.UpgradeFailureReason)
  name.vb: Nullable(Of UpgradeFailureReason)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.UpgradeFailureReason
    name: UpgradeFailureReason
    nameWithType: UpgradeFailureReason
    fullName: System.Fabric.UpgradeFailureReason
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.UpgradeFailureReason
    name: UpgradeFailureReason
    nameWithType: UpgradeFailureReason
    fullName: System.Fabric.UpgradeFailureReason
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ApplicationUpgradeProgress.UpgradeDomainProgressAtFailure*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.UpgradeDomainProgressAtFailure
  isExternal: false
  name: UpgradeDomainProgressAtFailure
  nameWithType: ApplicationUpgradeProgress.UpgradeDomainProgressAtFailure
  fullName: System.Fabric.ApplicationUpgradeProgress.UpgradeDomainProgressAtFailure
- uid: System.Fabric.ApplicationUpgradeProgress
  commentId: T:System.Fabric.ApplicationUpgradeProgress
  parent: System.Fabric
  isExternal: false
  name: ApplicationUpgradeProgress
  nameWithType: ApplicationUpgradeProgress
  fullName: System.Fabric.ApplicationUpgradeProgress
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ApplicationUpgradeProgress.ToString*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.ToString
  isExternal: false
  name: ToString
  nameWithType: ApplicationUpgradeProgress.ToString
  fullName: System.Fabric.ApplicationUpgradeProgress.ToString
- uid: System.Fabric.ApplicationUpgradeState.RollingForwardCompleted
  commentId: F:System.Fabric.ApplicationUpgradeState.RollingForwardCompleted
- uid: System.Fabric.ApplicationUpgradeState.RollingForwardInProgress
  commentId: F:System.Fabric.ApplicationUpgradeState.RollingForwardInProgress
- uid: System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains(System.Fabric.ApplicationUpgradeProgress)
  commentId: M:System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains(System.Fabric.ApplicationUpgradeProgress)
- uid: System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains*
  commentId: Overload:System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains
  isExternal: false
  name: GetChangedUpgradeDomains
  nameWithType: ApplicationUpgradeProgress.GetChangedUpgradeDomains
  fullName: System.Fabric.ApplicationUpgradeProgress.GetChangedUpgradeDomains
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
