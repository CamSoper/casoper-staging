### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.ServiceGroupTypeDescription
  commentId: T:System.Fabric.Description.ServiceGroupTypeDescription
  id: ServiceGroupTypeDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.ServiceGroupTypeDescription.#ctor
  - System.Fabric.Description.ServiceGroupTypeDescription.Members
  - System.Fabric.Description.ServiceGroupTypeDescription.ServiceTypeDescription
  - System.Fabric.Description.ServiceGroupTypeDescription.UseImplicitFactory
  langs:
  - csharp
  - vb
  name: ServiceGroupTypeDescription
  nameWithType: ServiceGroupTypeDescription
  fullName: System.Fabric.Description.ServiceGroupTypeDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceGroupTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceGroupTypeDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceGroupTypeDescription.cs
    startLine: 16
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Represents the type description of the Fabric service group.</p>\n"
  example: []
  syntax:
    content: public sealed class ServiceGroupTypeDescription
    content.vb: Public NotInheritable Class ServiceGroupTypeDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.ServiceGroupTypeDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.ServiceGroupTypeDescription.#ctor
  commentId: M:System.Fabric.Description.ServiceGroupTypeDescription.#ctor
  id: '#ctor'
  parent: System.Fabric.Description.ServiceGroupTypeDescription
  langs:
  - csharp
  - vb
  name: ServiceGroupTypeDescription()
  nameWithType: ServiceGroupTypeDescription.ServiceGroupTypeDescription()
  fullName: System.Fabric.Description.ServiceGroupTypeDescription.ServiceGroupTypeDescription()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceGroupTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceGroupTypeDescription.cs
    startLine: 21
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initialize an instance of <xref href=\"System.Fabric.Description.ServiceGroupTypeDescription\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public ServiceGroupTypeDescription()
    content.vb: Public Sub New
  overload: System.Fabric.Description.ServiceGroupTypeDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceGroupTypeDescription.ServiceTypeDescription
  commentId: P:System.Fabric.Description.ServiceGroupTypeDescription.ServiceTypeDescription
  id: ServiceTypeDescription
  parent: System.Fabric.Description.ServiceGroupTypeDescription
  langs:
  - csharp
  - vb
  name: ServiceTypeDescription
  nameWithType: ServiceGroupTypeDescription.ServiceTypeDescription
  fullName: System.Fabric.Description.ServiceGroupTypeDescription.ServiceTypeDescription
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceGroupTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceGroupTypeDescription.cs
    startLine: 32
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the service group type.</p>\n"
  example: []
  syntax:
    content: public ServiceTypeDescription ServiceTypeDescription { get; set; }
    content.vb: Public Property ServiceTypeDescription As ServiceTypeDescription
    parameters: []
    return:
      type: System.Fabric.Description.ServiceTypeDescription
      description: "\n<p>The service group type.</p>\n"
  overload: System.Fabric.Description.ServiceGroupTypeDescription.ServiceTypeDescription*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceGroupTypeDescription.Members
  commentId: P:System.Fabric.Description.ServiceGroupTypeDescription.Members
  id: Members
  parent: System.Fabric.Description.ServiceGroupTypeDescription
  langs:
  - csharp
  - vb
  name: Members
  nameWithType: ServiceGroupTypeDescription.Members
  fullName: System.Fabric.Description.ServiceGroupTypeDescription.Members
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceGroupTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Members
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceGroupTypeDescription.cs
    startLine: 44
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the collection of members of this service group.</p>\n"
  example: []
  syntax:
    content: public ICollection<ServiceGroupTypeMemberDescription> Members { get; }
    content.vb: Public ReadOnly Property Members As ICollection(Of ServiceGroupTypeMemberDescription)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Fabric.Description.ServiceGroupTypeMemberDescription}
      description: "\n<p>The collection of members of this service group.</p>\n"
  overload: System.Fabric.Description.ServiceGroupTypeDescription.Members*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ServiceGroupTypeDescription.UseImplicitFactory
  commentId: P:System.Fabric.Description.ServiceGroupTypeDescription.UseImplicitFactory
  id: UseImplicitFactory
  parent: System.Fabric.Description.ServiceGroupTypeDescription
  langs:
  - csharp
  - vb
  name: UseImplicitFactory
  nameWithType: ServiceGroupTypeDescription.UseImplicitFactory
  fullName: System.Fabric.Description.ServiceGroupTypeDescription.UseImplicitFactory
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceGroupTypeDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UseImplicitFactory
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceGroupTypeDescription.cs
    startLine: 58
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the flag indicates whether to use implicit factory.</p>\n"
  example: []
  syntax:
    content: public bool UseImplicitFactory { get; set; }
    content.vb: Public Property UseImplicitFactory As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to use implicit factory; otherwise, <strong>false</strong>. </p>\n"
  overload: System.Fabric.Description.ServiceGroupTypeDescription.UseImplicitFactory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ServiceGroupTypeDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceGroupTypeDescription>()
  nameWithType: ByteArraySerializer.Serialize<ServiceGroupTypeDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ServiceGroupTypeDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceGroupTypeDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ServiceGroupTypeDescription)()
  name.vb: Serialize(Of ServiceGroupTypeDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceGroupTypeDescription>
    nameWithType: ByteArraySerializer.Serialize<ServiceGroupTypeDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ServiceGroupTypeDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceGroupTypeDescription)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceGroupTypeDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ServiceGroupTypeDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.ServiceGroupTypeDescription
  commentId: T:System.Fabric.Description.ServiceGroupTypeDescription
  isExternal: false
  name: ServiceGroupTypeDescription
  nameWithType: ServiceGroupTypeDescription
  fullName: System.Fabric.Description.ServiceGroupTypeDescription
- uid: System.Fabric.Description.ServiceGroupTypeDescription.#ctor*
  commentId: Overload:System.Fabric.Description.ServiceGroupTypeDescription.#ctor
  isExternal: false
  name: ServiceGroupTypeDescription
  nameWithType: ServiceGroupTypeDescription.ServiceGroupTypeDescription
  fullName: System.Fabric.Description.ServiceGroupTypeDescription.ServiceGroupTypeDescription
- uid: System.Fabric.Description.ServiceGroupTypeDescription.ServiceTypeDescription*
  commentId: Overload:System.Fabric.Description.ServiceGroupTypeDescription.ServiceTypeDescription
  isExternal: false
  name: ServiceTypeDescription
  nameWithType: ServiceGroupTypeDescription.ServiceTypeDescription
  fullName: System.Fabric.Description.ServiceGroupTypeDescription.ServiceTypeDescription
- uid: System.Fabric.Description.ServiceTypeDescription
  commentId: T:System.Fabric.Description.ServiceTypeDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ServiceTypeDescription
  nameWithType: ServiceTypeDescription
  fullName: System.Fabric.Description.ServiceTypeDescription
- uid: System.Fabric.Description.ServiceGroupTypeDescription.Members*
  commentId: Overload:System.Fabric.Description.ServiceGroupTypeDescription.Members
  isExternal: false
  name: Members
  nameWithType: ServiceGroupTypeDescription.Members
  fullName: System.Fabric.Description.ServiceGroupTypeDescription.Members
- uid: System.Collections.Generic.ICollection{System.Fabric.Description.ServiceGroupTypeMemberDescription}
  commentId: T:System.Collections.Generic.ICollection{System.Fabric.Description.ServiceGroupTypeMemberDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ServiceGroupTypeMemberDescription>
  nameWithType: ICollection<ServiceGroupTypeMemberDescription>
  fullName: System.Collections.Generic.ICollection<System.Fabric.Description.ServiceGroupTypeMemberDescription>
  nameWithType.vb: ICollection(Of ServiceGroupTypeMemberDescription)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Fabric.Description.ServiceGroupTypeMemberDescription)
  name.vb: ICollection(Of ServiceGroupTypeMemberDescription)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Description.ServiceGroupTypeMemberDescription
    name: ServiceGroupTypeMemberDescription
    nameWithType: ServiceGroupTypeMemberDescription
    fullName: System.Fabric.Description.ServiceGroupTypeMemberDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Description.ServiceGroupTypeMemberDescription
    name: ServiceGroupTypeMemberDescription
    nameWithType: ServiceGroupTypeMemberDescription
    fullName: System.Fabric.Description.ServiceGroupTypeMemberDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.Description.ServiceGroupTypeDescription.UseImplicitFactory*
  commentId: Overload:System.Fabric.Description.ServiceGroupTypeDescription.UseImplicitFactory
  isExternal: false
  name: UseImplicitFactory
  nameWithType: ServiceGroupTypeDescription.UseImplicitFactory
  fullName: System.Fabric.Description.ServiceGroupTypeDescription.UseImplicitFactory
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
