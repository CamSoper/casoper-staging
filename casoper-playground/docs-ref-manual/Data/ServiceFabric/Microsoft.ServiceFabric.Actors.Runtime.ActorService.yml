### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorService
  id: ActorService
  parent: Microsoft.ServiceFabric.Actors.Runtime
  children:
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.#ctor(System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation,System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.ActorBase},System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorBase,Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager},Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorTypeInformation
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.CreateServiceReplicaListeners
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnAbort
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnCloseAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.RunAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.Settings
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.StateProvider
  langs:
  - csharp
  - vb
  name: ActorService
  nameWithType: ActorService
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorService
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 26
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nRepresents the base class for Microsoft Service Fabric based reliable actors service.\n"
  remarks: "\nDerive from this class to implement your own custom actor service if you want to override\nany service level behavior for your actors.\n"
  example: []
  syntax:
    content: 'public class ActorService : StatefulServiceBase, IStatefulUserServiceReplica, IActorService, IService'
    content.vb: >-
      Public Class ActorService
          Inherits StatefulServiceBase
          Implements IStatefulUserServiceReplica, IActorService, IService
  inheritance:
  - System.Object
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  implements:
  - Microsoft.ServiceFabric.Actors.IActorService
  - Microsoft.ServiceFabric.Services.Remoting.IService
  inheritedMembers:
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync(System.Fabric.ReplicaOpenMode,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync(Microsoft.ServiceFabric.Data.RestoreContext,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription)
  - Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription,System.TimeSpan,System.Threading.CancellationToken)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Runtime.ActorService.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.#ctor(System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation,System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.ActorBase},System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorBase,Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager},Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.#ctor(System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation,System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.ActorBase},System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorBase,Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager},Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings)
  id: '#ctor(System.Fabric.StatefulServiceContext,Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation,System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.ActorBase},System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorBase,Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager},Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings)'
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  langs:
  - csharp
  - vb
  name: ActorService(StatefulServiceContext, ActorTypeInformation, Func<ActorService, ActorId, ActorBase>, Func<ActorBase, IActorStateProvider, IActorStateManager>, IActorStateProvider, ActorServiceSettings)
  nameWithType: ActorService.ActorService(StatefulServiceContext, ActorTypeInformation, Func<ActorService, ActorId, ActorBase>, Func<ActorBase, IActorStateProvider, IActorStateManager>, IActorStateProvider, ActorServiceSettings)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorService(System.Fabric.StatefulServiceContext, Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation, System.Func<Microsoft.ServiceFabric.Actors.Runtime.ActorService, Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.ActorBase>, System.Func<Microsoft.ServiceFabric.Actors.Runtime.ActorBase, Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider, Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager>, Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider, Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 49
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.ActorService\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, Func<ActorService, ActorId, ActorBase> actorFactory = null, Func<ActorBase, IActorStateProvider, IActorStateManager> stateManagerFactory = null, IActorStateProvider stateProvider = null, ActorServiceSettings settings = null)
    content.vb: Public Sub New(context As StatefulServiceContext, actorTypeInfo As ActorTypeInformation, actorFactory As Func(Of ActorService, ActorId, ActorBase) = Nothing, stateManagerFactory As Func(Of ActorBase, IActorStateProvider, IActorStateManager) = Nothing, stateProvider As IActorStateProvider = Nothing, settings As ActorServiceSettings = Nothing)
    parameters:
    - id: context
      type: System.Fabric.StatefulServiceContext
      description: Service context the actor service is operating under.
    - id: actorTypeInfo
      type: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
      description: Type information of the actor.
    - id: actorFactory
      type: System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.ActorBase}
      description: A factory method to create actor objects.
    - id: stateManagerFactory
      type: System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorBase,Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager}
      description: A factory method to create <xref href="Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager" data-throw-if-not-resolved="false"></xref>
    - id: stateProvider
      type: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
      description: State provider to store the state for actor objects.
    - id: settings
      type: Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings
      description: /// Settings to configures behavior of Actor Service.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorService.#ctor*
  nameWithType.vb: ActorService.ActorService(StatefulServiceContext, ActorTypeInformation, Func(Of ActorService, ActorId, ActorBase), Func(Of ActorBase, IActorStateProvider, IActorStateManager), IActorStateProvider, ActorServiceSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorService(System.Fabric.StatefulServiceContext, Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation, System.Func(Of Microsoft.ServiceFabric.Actors.Runtime.ActorService, Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.ActorBase), System.Func(Of Microsoft.ServiceFabric.Actors.Runtime.ActorBase, Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider, Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager), Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider, Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings)
  name.vb: ActorService(StatefulServiceContext, ActorTypeInformation, Func(Of ActorService, ActorId, ActorBase), Func(Of ActorBase, IActorStateProvider, IActorStateManager), IActorStateProvider, ActorServiceSettings)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorTypeInformation
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorTypeInformation
  id: ActorTypeInformation
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  langs:
  - csharp
  - vb
  name: ActorTypeInformation
  nameWithType: ActorService.ActorTypeInformation
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorTypeInformation
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorTypeInformation
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 78
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets ActorTypeInformation for actor service.\n"
  example: []
  syntax:
    content: public ActorTypeInformation ActorTypeInformation { get; }
    content.vb: Public ReadOnly Property ActorTypeInformation As ActorTypeInformation
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
      description: "\n<xref href=\"Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation\" data-throw-if-not-resolved=\"false\"></xref>\nfor the actor hosted by the service replica.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorTypeInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.StateProvider
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorService.StateProvider
  id: StateProvider
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  langs:
  - csharp
  - vb
  name: StateProvider
  nameWithType: ActorService.StateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.StateProvider
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StateProvider
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 90
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets a <xref href=\"Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider\" data-throw-if-not-resolved=\"false\"></xref> that represents the state provider for the actor service.\n"
  example: []
  syntax:
    content: public IActorStateProvider StateProvider { get; }
    content.vb: Public ReadOnly Property StateProvider As IActorStateProvider
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
      description: "\n<xref href=\"Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider\" data-throw-if-not-resolved=\"false\"></xref>\nrepresenting the state provider for the actor service.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorService.StateProvider*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Settings
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorService.Settings
  id: Settings
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: ActorService.Settings
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Settings
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Settings
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 101
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets settings for the actor service. \n"
  example: []
  syntax:
    content: public ActorServiceSettings Settings { get; }
    content.vb: Public ReadOnly Property Settings As ActorServiceSettings
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings
      description: "\nSettings for the actor service.\n"
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Settings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#IActorService#DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  langs:
  - csharp
  - vb
  name: IActorService.DeleteActorAsync(ActorId, CancellationToken)
  nameWithType: ActorService.IActorService.DeleteActorAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 145
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nDeletes an Actor from the Actor service.\n"
  remarks: "\n<p>An active actor, will be deactivated and its state will also be deleted from state provider.</p>\n<p>An in-active actor's state will be deleted from state provider.</p>\n<p>If this method is called for a non-existent actor id in the system, it will be a no-op.</p>\n"
  example: []
  syntax:
    content: Task IActorService.DeleteActorAsync(ActorId actorId, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync(actorId As ActorId, cancellationToken As CancellationToken) As Task Implements IActorService.DeleteActorAsync
    parameters:
    - id: actorId
      type: Microsoft.ServiceFabric.Actors.ActorId
      description: <xref href="Microsoft.ServiceFabric.Actors.ActorId" data-throw-if-not-resolved="false"></xref> of the actor to be deleted.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Propagates notification that operations should be canceled.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of call to server.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#DeleteActorAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  nameWithType.vb: ActorService.Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync(ActorId, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync(ActorId, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Actors#IActorService#GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  langs:
  - csharp
  - vb
  name: IActorService.GetActorsAsync(ContinuationToken, CancellationToken)
  nameWithType: ActorService.IActorService.GetActorsAsync(ContinuationToken, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 165
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets the list of Actors by querying the actor service.\n"
  example: []
  syntax:
    content: Task<PagedResult<ActorInformation>> IActorService.GetActorsAsync(ContinuationToken continuationToken, CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync(continuationToken As ContinuationToken, cancellationToken As CancellationToken) As Task(Of PagedResult(Of ActorInformation)) Implements IActorService.GetActorsAsync
    parameters:
    - id: continuationToken
      type: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
      description: >-
        A continuation token to start querying the results from.

        A null value of continuation token means start returning values form the beginning.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Propagates notification that operations should be canceled.
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Query.PagedResult{Microsoft.ServiceFabric.Actors.Query.ActorInformation}}
      description: A task that represents the asynchronous operation of call to server.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#GetActorsAsync*
  implements:
  - Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  nameWithType.vb: ActorService.Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync(ContinuationToken, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync(ContinuationToken, CancellationToken)
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.CreateServiceReplicaListeners
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.CreateServiceReplicaListeners
  id: CreateServiceReplicaListeners
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  langs:
  - csharp
  - vb
  name: CreateServiceReplicaListeners()
  nameWithType: ActorService.CreateServiceReplicaListeners()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.CreateServiceReplicaListeners()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateServiceReplicaListeners
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 183
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nOverrides <xref href=\"Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override IEnumerable<ServiceReplicaListener> CreateServiceReplicaListeners()
    content.vb: Protected Overrides Function CreateServiceReplicaListeners As IEnumerable(Of ServiceReplicaListener)
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener}
      description: "Endpoint string pairs like \n{\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}"
  overridden: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorService.CreateServiceReplicaListeners*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.RunAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.RunAsync(System.Threading.CancellationToken)
  id: RunAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  langs:
  - csharp
  - vb
  name: RunAsync(CancellationToken)
  nameWithType: ActorService.RunAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.RunAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RunAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 196
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nOverrides <xref href=\"Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override Task RunAsync(CancellationToken cancellationToken)
    content.vb: Protected Overrides Function RunAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of loading reminders when the replica becomes primary.
  overridden: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorService.RunAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  id: OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  langs:
  - csharp
  - vb
  name: OnChangeRoleAsync(ReplicaRole, CancellationToken)
  nameWithType: ActorService.OnChangeRoleAsync(ReplicaRole, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnChangeRoleAsync(System.Fabric.ReplicaRole, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnChangeRoleAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 207
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nOverrides <xref href=\"Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override Task OnChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    content.vb: Protected Overrides Function OnChangeRoleAsync(newRole As ReplicaRole, cancellationToken As CancellationToken) As Task
    parameters:
    - id: newRole
      type: System.Fabric.ReplicaRole
      description: New role for the replica.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation performed when the replica becomes primary.
  overridden: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnChangeRoleAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnCloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnCloseAsync(System.Threading.CancellationToken)
  id: OnCloseAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  langs:
  - csharp
  - vb
  name: OnCloseAsync(CancellationToken)
  nameWithType: ActorService.OnCloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnCloseAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnCloseAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 236
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nOverrides <xref href=\"Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override Task OnCloseAsync(CancellationToken cancellationToken)
    content.vb: Protected Overrides Function OnCloseAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation performed when the replica is closed.
  overridden: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnCloseAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnAbort
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnAbort
  id: OnAbort
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  langs:
  - csharp
  - vb
  name: OnAbort()
  nameWithType: ActorService.OnAbort()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnAbort()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: OnAbort
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorService.cs
    startLine: 248
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nOverrides <xref href=\"Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override void OnAbort()
    content.vb: Protected Overrides Sub OnAbort
  overridden: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnAbort*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.ServiceFabric.Actors.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  commentId: T:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  parent: Microsoft.ServiceFabric.Services.Runtime
  isExternal: false
  name: StatefulServiceBase
  nameWithType: StatefulServiceBase
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
- uid: Microsoft.ServiceFabric.Actors.IActorService
  commentId: T:Microsoft.ServiceFabric.Actors.IActorService
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: IActorService
  nameWithType: IActorService
  fullName: Microsoft.ServiceFabric.Actors.IActorService
- uid: Microsoft.ServiceFabric.Services.Remoting.IService
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.IService
  parent: Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: IService
  nameWithType: IService
  fullName: Microsoft.ServiceFabric.Services.Remoting.IService
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context
  commentId: P:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: false
  name: Context
  nameWithType: StatefulServiceBase.Context
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Context
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: false
  name: GetAddresses()
  nameWithType: StatefulServiceBase.GetAddresses()
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
    name: GetAddresses
    nameWithType: StatefulServiceBase.GetAddresses
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
    name: GetAddresses
    nameWithType: StatefulServiceBase.GetAddresses
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.GetAddresses
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition
  commentId: P:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: false
  name: Partition
  nameWithType: StatefulServiceBase.Partition
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.Partition
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync(System.Fabric.ReplicaOpenMode,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync(System.Fabric.ReplicaOpenMode,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: true
  name: OnOpenAsync(ReplicaOpenMode, CancellationToken)
  nameWithType: StatefulServiceBase.OnOpenAsync(ReplicaOpenMode, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync(System.Fabric.ReplicaOpenMode, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync(System.Fabric.ReplicaOpenMode,System.Threading.CancellationToken)
    name: OnOpenAsync
    nameWithType: StatefulServiceBase.OnOpenAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaOpenMode
    name: ReplicaOpenMode
    nameWithType: ReplicaOpenMode
    fullName: System.Fabric.ReplicaOpenMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync(System.Fabric.ReplicaOpenMode,System.Threading.CancellationToken)
    name: OnOpenAsync
    nameWithType: StatefulServiceBase.OnOpenAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnOpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaOpenMode
    name: ReplicaOpenMode
    nameWithType: ReplicaOpenMode
    fullName: System.Fabric.ReplicaOpenMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync(Microsoft.ServiceFabric.Data.RestoreContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync(Microsoft.ServiceFabric.Data.RestoreContext,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: true
  name: OnDataLossAsync(RestoreContext, CancellationToken)
  nameWithType: StatefulServiceBase.OnDataLossAsync(RestoreContext, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync(Microsoft.ServiceFabric.Data.RestoreContext, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync(Microsoft.ServiceFabric.Data.RestoreContext,System.Threading.CancellationToken)
    name: OnDataLossAsync
    nameWithType: StatefulServiceBase.OnDataLossAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.RestoreContext
    name: RestoreContext
    nameWithType: RestoreContext
    fullName: Microsoft.ServiceFabric.Data.RestoreContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync(Microsoft.ServiceFabric.Data.RestoreContext,System.Threading.CancellationToken)
    name: OnDataLossAsync
    nameWithType: StatefulServiceBase.OnDataLossAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnDataLossAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.RestoreContext
    name: RestoreContext
    nameWithType: RestoreContext
    fullName: Microsoft.ServiceFabric.Data.RestoreContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: false
  name: BackupAsync(BackupDescription)
  nameWithType: StatefulServiceBase.BackupAsync(BackupDescription)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription)
    name: BackupAsync
    nameWithType: StatefulServiceBase.BackupAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.BackupDescription
    name: BackupDescription
    nameWithType: BackupDescription
    fullName: Microsoft.ServiceFabric.Data.BackupDescription
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription)
    name: BackupAsync
    nameWithType: StatefulServiceBase.BackupAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.BackupDescription
    name: BackupDescription
    nameWithType: BackupDescription
    fullName: Microsoft.ServiceFabric.Data.BackupDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription,System.TimeSpan,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: true
  name: BackupAsync(BackupDescription, TimeSpan, CancellationToken)
  nameWithType: StatefulServiceBase.BackupAsync(BackupDescription, TimeSpan, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription, System.TimeSpan, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription,System.TimeSpan,System.Threading.CancellationToken)
    name: BackupAsync
    nameWithType: StatefulServiceBase.BackupAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.BackupDescription
    name: BackupDescription
    nameWithType: BackupDescription
    fullName: Microsoft.ServiceFabric.Data.BackupDescription
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync(Microsoft.ServiceFabric.Data.BackupDescription,System.TimeSpan,System.Threading.CancellationToken)
    name: BackupAsync
    nameWithType: StatefulServiceBase.BackupAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.BackupAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Data.BackupDescription
    name: BackupDescription
    nameWithType: BackupDescription
    fullName: Microsoft.ServiceFabric.Data.BackupDescription
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ActorService>()
  nameWithType: ByteArraySerializer.Serialize<ActorService>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.ActorService>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ActorService)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.ActorService)()
  name.vb: Serialize(Of ActorService)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ActorService>
    nameWithType: ByteArraySerializer.Serialize<ActorService>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.ActorService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ActorService)
    nameWithType: ByteArraySerializer.Serialize(Of ActorService)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.ActorService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Runtime
  fullName: Microsoft.ServiceFabric.Services.Runtime
- uid: Microsoft.ServiceFabric.Actors
  commentId: N:Microsoft.ServiceFabric.Actors
  isExternal: false
  name: Microsoft.ServiceFabric.Actors
  nameWithType: Microsoft.ServiceFabric.Actors
  fullName: Microsoft.ServiceFabric.Actors
- uid: Microsoft.ServiceFabric.Services.Remoting
  commentId: N:Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting
  nameWithType: Microsoft.ServiceFabric.Services.Remoting
  fullName: Microsoft.ServiceFabric.Services.Remoting
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorService
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: ActorService
  nameWithType: ActorService
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: IActorStateManager
  nameWithType: IActorStateManager
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorService.#ctor
  isExternal: false
  name: ActorService
  nameWithType: ActorService.ActorService
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorService
- uid: System.Fabric.StatefulServiceContext
  commentId: T:System.Fabric.StatefulServiceContext
  parent: System.Fabric
  isExternal: false
  name: StatefulServiceContext
  nameWithType: StatefulServiceContext
  fullName: System.Fabric.StatefulServiceContext
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorTypeInformation
- uid: System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.ActorBase}
  commentId: T:System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorService,Microsoft.ServiceFabric.Actors.ActorId,Microsoft.ServiceFabric.Actors.Runtime.ActorBase}
  parent: System
  definition: System.Func`3
  name: Func<ActorService, ActorId, ActorBase>
  nameWithType: Func<ActorService, ActorId, ActorBase>
  fullName: System.Func<Microsoft.ServiceFabric.Actors.Runtime.ActorService, Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.ActorBase>
  nameWithType.vb: Func(Of ActorService, ActorId, ActorBase)
  fullname.vb: System.Func(Of Microsoft.ServiceFabric.Actors.Runtime.ActorService, Microsoft.ServiceFabric.Actors.ActorId, Microsoft.ServiceFabric.Actors.Runtime.ActorBase)
  name.vb: Func(Of ActorService, ActorId, ActorBase)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService
    name: ActorService
    nameWithType: ActorService
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
    name: ActorBase
    nameWithType: ActorBase
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService
    name: ActorService
    nameWithType: ActorService
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
    name: ActorBase
    nameWithType: ActorBase
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorBase,Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager}
  commentId: T:System.Func{Microsoft.ServiceFabric.Actors.Runtime.ActorBase,Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider,Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager}
  parent: System
  definition: System.Func`3
  name: Func<ActorBase, IActorStateProvider, IActorStateManager>
  nameWithType: Func<ActorBase, IActorStateProvider, IActorStateManager>
  fullName: System.Func<Microsoft.ServiceFabric.Actors.Runtime.ActorBase, Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider, Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager>
  nameWithType.vb: Func(Of ActorBase, IActorStateProvider, IActorStateManager)
  fullname.vb: System.Func(Of Microsoft.ServiceFabric.Actors.Runtime.ActorBase, Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider, Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager)
  name.vb: Func(Of ActorBase, IActorStateProvider, IActorStateManager)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
    name: ActorBase
    nameWithType: ActorBase
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
    name: IActorStateProvider
    nameWithType: IActorStateProvider
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager
    name: IActorStateManager
    nameWithType: IActorStateManager
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
    name: ActorBase
    nameWithType: ActorBase
    fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
    name: IActorStateProvider
    nameWithType: IActorStateProvider
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager
    name: IActorStateManager
    nameWithType: IActorStateManager
    fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateManager
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: IActorStateProvider
  nameWithType: IActorStateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.IActorStateProvider
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: ActorServiceSettings
  nameWithType: ActorServiceSettings
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorServiceSettings
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorTypeInformation*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorTypeInformation
  isExternal: false
  name: ActorTypeInformation
  nameWithType: ActorService.ActorTypeInformation
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.ActorTypeInformation
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.StateProvider*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorService.StateProvider
  isExternal: false
  name: StateProvider
  nameWithType: ActorService.StateProvider
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.StateProvider
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Settings*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorService.Settings
  isExternal: false
  name: Settings
  nameWithType: ActorService.Settings
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Settings
- uid: Microsoft.ServiceFabric.Actors.ActorId
  commentId: T:Microsoft.ServiceFabric.Actors.ActorId
  parent: Microsoft.ServiceFabric.Actors
  isExternal: false
  name: ActorId
  nameWithType: ActorId
  fullName: Microsoft.ServiceFabric.Actors.ActorId
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#DeleteActorAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#DeleteActorAsync
  isExternal: false
  name: IActorService.DeleteActorAsync
  nameWithType: ActorService.IActorService.DeleteActorAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync
  nameWithType.vb: ActorService.Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync
  name.vb: Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync
- uid: Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.IActorService
  isExternal: true
  name: DeleteActorAsync(ActorId, CancellationToken)
  nameWithType: IActorService.DeleteActorAsync(ActorId, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: DeleteActorAsync
    nameWithType: IActorService.DeleteActorAsync
    fullName: Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync(Microsoft.ServiceFabric.Actors.ActorId,System.Threading.CancellationToken)
    name: DeleteActorAsync
    nameWithType: IActorService.DeleteActorAsync
    fullName: Microsoft.ServiceFabric.Actors.IActorService.DeleteActorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.ActorId
    name: ActorId
    nameWithType: ActorId
    fullName: Microsoft.ServiceFabric.Actors.ActorId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#GetActorsAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft#ServiceFabric#Actors#IActorService#GetActorsAsync
  isExternal: false
  name: IActorService.GetActorsAsync
  nameWithType: ActorService.IActorService.GetActorsAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync
  nameWithType.vb: ActorService.Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync
  name.vb: Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync
- uid: Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Actors.IActorService
  isExternal: true
  name: GetActorsAsync(ContinuationToken, CancellationToken)
  nameWithType: IActorService.GetActorsAsync(ContinuationToken, CancellationToken)
  fullName: Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
    name: GetActorsAsync
    nameWithType: IActorService.GetActorsAsync
    fullName: Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
    name: ContinuationToken
    nameWithType: ContinuationToken
    fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync(Microsoft.ServiceFabric.Actors.Query.ContinuationToken,System.Threading.CancellationToken)
    name: GetActorsAsync
    nameWithType: IActorService.GetActorsAsync
    fullName: Microsoft.ServiceFabric.Actors.IActorService.GetActorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
    name: ContinuationToken
    nameWithType: ContinuationToken
    fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  commentId: T:Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  parent: Microsoft.ServiceFabric.Actors.Query
  isExternal: false
  name: ContinuationToken
  nameWithType: ContinuationToken
  fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
- uid: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Query.PagedResult{Microsoft.ServiceFabric.Actors.Query.ActorInformation}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceFabric.Actors.Query.PagedResult{Microsoft.ServiceFabric.Actors.Query.ActorInformation}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PagedResult<ActorInformation>>
  nameWithType: Task<PagedResult<ActorInformation>>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceFabric.Actors.Query.PagedResult<Microsoft.ServiceFabric.Actors.Query.ActorInformation>>
  nameWithType.vb: Task(Of PagedResult(Of ActorInformation))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceFabric.Actors.Query.PagedResult(Of Microsoft.ServiceFabric.Actors.Query.ActorInformation))
  name.vb: Task(Of PagedResult(Of ActorInformation))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
    name: PagedResult
    nameWithType: PagedResult
    fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Actors.Query.ActorInformation
    name: ActorInformation
    nameWithType: ActorInformation
    fullName: Microsoft.ServiceFabric.Actors.Query.ActorInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
    name: PagedResult
    nameWithType: PagedResult
    fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Actors.Query.ActorInformation
    name: ActorInformation
    nameWithType: ActorInformation
    fullName: Microsoft.ServiceFabric.Actors.Query.ActorInformation
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Query
  commentId: N:Microsoft.ServiceFabric.Actors.Query
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Query
  nameWithType: Microsoft.ServiceFabric.Actors.Query
  fullName: Microsoft.ServiceFabric.Actors.Query
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: false
  name: CreateServiceReplicaListeners()
  nameWithType: StatefulServiceBase.CreateServiceReplicaListeners()
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
    name: CreateServiceReplicaListeners
    nameWithType: StatefulServiceBase.CreateServiceReplicaListeners
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
    name: CreateServiceReplicaListeners
    nameWithType: StatefulServiceBase.CreateServiceReplicaListeners
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.CreateServiceReplicaListeners
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.CreateServiceReplicaListeners*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorService.CreateServiceReplicaListeners
  isExternal: false
  name: CreateServiceReplicaListeners
  nameWithType: ActorService.CreateServiceReplicaListeners
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.CreateServiceReplicaListeners
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ServiceReplicaListener>
  nameWithType: IEnumerable<ServiceReplicaListener>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener>
  nameWithType.vb: IEnumerable(Of ServiceReplicaListener)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener)
  name.vb: IEnumerable(Of ServiceReplicaListener)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
    name: ServiceReplicaListener
    nameWithType: ServiceReplicaListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
    name: ServiceReplicaListener
    nameWithType: ServiceReplicaListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ServiceReplicaListener
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: true
  name: RunAsync(CancellationToken)
  nameWithType: StatefulServiceBase.RunAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)
    name: RunAsync
    nameWithType: StatefulServiceBase.RunAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync(System.Threading.CancellationToken)
    name: RunAsync
    nameWithType: StatefulServiceBase.RunAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.RunAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.RunAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorService.RunAsync
  isExternal: false
  name: RunAsync
  nameWithType: ActorService.RunAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.RunAsync
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: true
  name: OnChangeRoleAsync(ReplicaRole, CancellationToken)
  nameWithType: StatefulServiceBase.OnChangeRoleAsync(ReplicaRole, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
    name: OnChangeRoleAsync
    nameWithType: StatefulServiceBase.OnChangeRoleAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync(System.Fabric.ReplicaRole,System.Threading.CancellationToken)
    name: OnChangeRoleAsync
    nameWithType: StatefulServiceBase.OnChangeRoleAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnChangeRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ReplicaRole
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: System.Fabric.ReplicaRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnChangeRoleAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnChangeRoleAsync
  isExternal: false
  name: OnChangeRoleAsync
  nameWithType: ActorService.OnChangeRoleAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnChangeRoleAsync
- uid: System.Fabric.ReplicaRole
  commentId: T:System.Fabric.ReplicaRole
  parent: System.Fabric
  isExternal: false
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: System.Fabric.ReplicaRole
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: true
  name: OnCloseAsync(CancellationToken)
  nameWithType: StatefulServiceBase.OnCloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)
    name: OnCloseAsync
    nameWithType: StatefulServiceBase.OnCloseAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync(System.Threading.CancellationToken)
    name: OnCloseAsync
    nameWithType: StatefulServiceBase.OnCloseAsync
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnCloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnCloseAsync*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnCloseAsync
  isExternal: false
  name: OnCloseAsync
  nameWithType: ActorService.OnCloseAsync
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnCloseAsync
- uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
  commentId: M:Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
  parent: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase
  isExternal: false
  name: OnAbort()
  nameWithType: StatefulServiceBase.OnAbort()
  fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
    name: OnAbort
    nameWithType: StatefulServiceBase.OnAbort
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
    name: OnAbort
    nameWithType: StatefulServiceBase.OnAbort
    fullName: Microsoft.ServiceFabric.Services.Runtime.StatefulServiceBase.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnAbort*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnAbort
  isExternal: false
  name: OnAbort
  nameWithType: ActorService.OnAbort
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorService.OnAbort
