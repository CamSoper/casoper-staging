### YamlMime:ManagedReference
items:
- uid: System.Fabric.GatewayInformation
  commentId: T:System.Fabric.GatewayInformation
  id: GatewayInformation
  parent: System.Fabric
  children:
  - System.Fabric.GatewayInformation.NodeAddress
  - System.Fabric.GatewayInformation.NodeId
  - System.Fabric.GatewayInformation.NodeInstanceId
  - System.Fabric.GatewayInformation.NodeName
  langs:
  - csharp
  - vb
  name: GatewayInformation
  nameWithType: GatewayInformation
  fullName: System.Fabric.GatewayInformation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/GatewayInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: GatewayInformation
    path: src/prod/src/managed/Api/src/System/Fabric/GatewayInformation.cs
    startLine: 12
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Contains information identifying a Service Fabric node in the cluster.</p>\n"
  example: []
  syntax:
    content: public sealed class GatewayInformation
    content.vb: Public NotInheritable Class GatewayInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.GatewayInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.GatewayInformation.NodeAddress
  commentId: P:System.Fabric.GatewayInformation.NodeAddress
  id: NodeAddress
  parent: System.Fabric.GatewayInformation
  langs:
  - csharp
  - vb
  name: NodeAddress
  nameWithType: GatewayInformation.NodeAddress
  fullName: System.Fabric.GatewayInformation.NodeAddress
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/GatewayInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeAddress
    path: src/prod/src/managed/Api/src/System/Fabric/GatewayInformation.cs
    startLine: 24
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the address that Service Fabric clients use when connecting to this node (as specified in the Cluster Manifest).</p>\n"
  example: []
  syntax:
    content: public string NodeAddress { get; }
    content.vb: Public ReadOnly Property NodeAddress As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The address that Service Fabric clients use when connecting to this node (as specified in the Cluster Manifest).</p>\n"
  overload: System.Fabric.GatewayInformation.NodeAddress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.GatewayInformation.NodeId
  commentId: P:System.Fabric.GatewayInformation.NodeId
  id: NodeId
  parent: System.Fabric.GatewayInformation
  langs:
  - csharp
  - vb
  name: NodeId
  nameWithType: GatewayInformation.NodeId
  fullName: System.Fabric.GatewayInformation.NodeId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/GatewayInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeId
    path: src/prod/src/managed/Api/src/System/Fabric/GatewayInformation.cs
    startLine: 32
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>The unique identifier used internally by Service Fabric to identify a node. </p>\n"
  example: []
  syntax:
    content: public NodeId NodeId { get; }
    content.vb: Public ReadOnly Property NodeId As NodeId
    parameters: []
    return:
      type: System.Fabric.NodeId
      description: "\n<p>Returns <xref href=\"System.Fabric.NodeId\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.GatewayInformation.NodeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.GatewayInformation.NodeInstanceId
  commentId: P:System.Fabric.GatewayInformation.NodeInstanceId
  id: NodeInstanceId
  parent: System.Fabric.GatewayInformation
  langs:
  - csharp
  - vb
  name: NodeInstanceId
  nameWithType: GatewayInformation.NodeInstanceId
  fullName: System.Fabric.GatewayInformation.NodeInstanceId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/GatewayInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeInstanceId
    path: src/prod/src/managed/Api/src/System/Fabric/GatewayInformation.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>The instance of a Service Fabric node changes when the node is restarted.</p>\n"
  example: []
  syntax:
    content: public BigInteger NodeInstanceId { get; }
    content.vb: Public ReadOnly Property NodeInstanceId As BigInteger
    parameters: []
    return:
      type: System.Numerics.BigInteger
      description: "\n<p>Returns <xref href=\"System.Numerics.BigInteger\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.GatewayInformation.NodeInstanceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.GatewayInformation.NodeName
  commentId: P:System.Fabric.GatewayInformation.NodeName
  id: NodeName
  parent: System.Fabric.GatewayInformation
  langs:
  - csharp
  - vb
  name: NodeName
  nameWithType: GatewayInformation.NodeName
  fullName: System.Fabric.GatewayInformation.NodeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/GatewayInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeName
    path: src/prod/src/managed/Api/src/System/Fabric/GatewayInformation.cs
    startLine: 48
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>The friendly name of the Service Fabric node (defined in the Cluster Manifest) used to generate the NodeId.</p>\n"
  example: []
  syntax:
    content: public string NodeName { get; }
    content.vb: Public ReadOnly Property NodeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.GatewayInformation.NodeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.GatewayInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<GatewayInformation>()
  nameWithType: ByteArraySerializer.Serialize<GatewayInformation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.GatewayInformation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of GatewayInformation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.GatewayInformation)()
  name.vb: Serialize(Of GatewayInformation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<GatewayInformation>
    nameWithType: ByteArraySerializer.Serialize<GatewayInformation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.GatewayInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of GatewayInformation)
    nameWithType: ByteArraySerializer.Serialize(Of GatewayInformation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.GatewayInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.GatewayInformation.NodeAddress*
  commentId: Overload:System.Fabric.GatewayInformation.NodeAddress
  isExternal: false
  name: NodeAddress
  nameWithType: GatewayInformation.NodeAddress
  fullName: System.Fabric.GatewayInformation.NodeAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.NodeId
  commentId: T:System.Fabric.NodeId
  parent: System.Fabric
  isExternal: false
  name: NodeId
  nameWithType: NodeId
  fullName: System.Fabric.NodeId
- uid: System.Fabric.GatewayInformation.NodeId*
  commentId: Overload:System.Fabric.GatewayInformation.NodeId
  isExternal: false
  name: NodeId
  nameWithType: GatewayInformation.NodeId
  fullName: System.Fabric.GatewayInformation.NodeId
- uid: System.Numerics.BigInteger
  commentId: T:System.Numerics.BigInteger
  parent: System.Numerics
  isExternal: true
  name: BigInteger
  nameWithType: BigInteger
  fullName: System.Numerics.BigInteger
- uid: System.Fabric.GatewayInformation.NodeInstanceId*
  commentId: Overload:System.Fabric.GatewayInformation.NodeInstanceId
  isExternal: false
  name: NodeInstanceId
  nameWithType: GatewayInformation.NodeInstanceId
  fullName: System.Fabric.GatewayInformation.NodeInstanceId
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: false
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: System.Fabric.GatewayInformation.NodeName*
  commentId: Overload:System.Fabric.GatewayInformation.NodeName
  isExternal: false
  name: NodeName
  nameWithType: GatewayInformation.NodeName
  fullName: System.Fabric.GatewayInformation.NodeName
