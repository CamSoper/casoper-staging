### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory
  commentId: T:Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory
  id: WcfActorRemotingClientFactory
  parent: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client
  children:
  - Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.#ctor(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  - Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.#ctor(System.ServiceModel.Channels.Binding,Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String)
  langs:
  - csharp
  - vb
  name: WcfActorRemotingClientFactory
  nameWithType: WcfActorRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors.Wcf/Remoting/Wcf/Client/WcfActorRemotingClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WcfActorRemotingClientFactory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors.Wcf/Remoting/Wcf/Client/WcfActorRemotingClientFactory.cs
    startLine: 20
  assemblies:
  - Microsoft.ServiceFabric.Actors.Wcf
  namespace: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client
  summary: "\nAn <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory\" data-throw-if-not-resolved=\"false\"></xref> that uses \nWindows Communication Foundation to create <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient\" data-throw-if-not-resolved=\"false\"></xref> \nto communicate with an actor service and actors hosted by it, using actor and service interfaces that are remoted via\n<xref href=\"Microsoft.ServiceFabric.Actors.Remoting.Wcf.Runtime.WcfActorServiceRemotingListener\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class WcfActorRemotingClientFactory : WcfServiceRemotingClientFactory, IServiceRemotingClientFactory, ICommunicationClientFactory<IServiceRemotingClient>'
    content.vb: >-
      Public Class WcfActorRemotingClientFactory
          Inherits WcfServiceRemotingClientFactory
          Implements IServiceRemotingClientFactory, ICommunicationClientFactory(Of IServiceRemotingClient)
  inheritance:
  - System.Object
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  implements:
  - Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  inheritedMembers:
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.#ctor(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  commentId: M:Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.#ctor(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  id: '#ctor(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)'
  parent: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory
  langs:
  - csharp
  - vb
  name: WcfActorRemotingClientFactory(IServiceRemotingCallbackClient)
  nameWithType: WcfActorRemotingClientFactory.WcfActorRemotingClientFactory(IServiceRemotingCallbackClient)
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.WcfActorRemotingClientFactory(Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors.Wcf/Remoting/Wcf/Client/WcfActorRemotingClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors.Wcf/Remoting/Wcf/Client/WcfActorRemotingClientFactory.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceFabric.Actors.Wcf
  namespace: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client
  summary: "\nConstructs a WCF based actor remoting factory.\n"
  example: []
  syntax:
    content: public WcfActorRemotingClientFactory(IServiceRemotingCallbackClient callbackClient)
    content.vb: Public Sub New(callbackClient As IServiceRemotingCallbackClient)
    parameters:
    - id: callbackClient
      type: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
      description: "\nThe callback client that receives the callbacks from the service.\n"
  overload: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.#ctor(System.ServiceModel.Channels.Binding,Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String)
  commentId: M:Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.#ctor(System.ServiceModel.Channels.Binding,Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String)
  id: '#ctor(System.ServiceModel.Channels.Binding,Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String)'
  parent: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory
  langs:
  - csharp
  - vb
  name: WcfActorRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String)
  nameWithType: WcfActorRemotingClientFactory.WcfActorRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String)
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.WcfActorRemotingClientFactory(System.ServiceModel.Channels.Binding, Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>, Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors.Wcf/Remoting/Wcf/Client/WcfActorRemotingClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors.Wcf/Remoting/Wcf/Client/WcfActorRemotingClientFactory.cs
    startLine: 62
  assemblies:
  - Microsoft.ServiceFabric.Actors.Wcf
  namespace: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client
  summary: "\nConstructs a WCF based actor remoting factory.\n"
  remarks: "\nThis factory uses <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"Microsoft.ServiceFabric.Services.Remoting.Client.ServiceRemotingExceptionHandler\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"Microsoft.ServiceFabric.Actors.Remoting.Client.ActorRemotingExceptionHandler\" data-throw-if-not-resolved=\"false\"></xref>, in addition to the \nexception handlers supplied to the constructor. \n"
  example: []
  syntax:
    content: public WcfActorRemotingClientFactory(Binding clientBinding, IServiceRemotingCallbackClient callbackClient, IEnumerable<IExceptionHandler> exceptionHandlers = null, IServicePartitionResolver servicePartitionResolver = null, string traceId = null)
    content.vb: Public Sub New(clientBinding As Binding, callbackClient As IServiceRemotingCallbackClient, exceptionHandlers As IEnumerable(Of IExceptionHandler) = Nothing, servicePartitionResolver As IServicePartitionResolver = Nothing, traceId As String = Nothing)
    parameters:
    - id: clientBinding
      type: System.ServiceModel.Channels.Binding
      description: "\nWCF binding to use for the client. If the client binding is null,\na default client binding is created using \n<xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method \nwhich creates a <xref href=\"System.ServiceModel.NetTcpBinding\" data-throw-if-not-resolved=\"false\"></xref> with no security.\n"
    - id: callbackClient
      type: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
      description: "\nThe callback client that receives the callbacks from the service.\n"
    - id: exceptionHandlers
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
      description: "\nException handlers to handle the exceptions encountered in communicating with the service.\n"
    - id: servicePartitionResolver
      type: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
      description: "\nService partition resolver to resolve the service endpoints. If not specified, a default \nservice partition resolver returned by <xref href=\"Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver.GetDefault\" data-throw-if-not-resolved=\"false\"></xref> is used.\n"
    - id: traceId
      type: System.String
      description: "\nId to use in diagnostics traces from this component.\n"
  overload: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.#ctor*
  nameWithType.vb: WcfActorRemotingClientFactory.WcfActorRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.WcfActorRemotingClientFactory(System.ServiceModel.Channels.Binding, Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient, System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler), Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.String)
  name.vb: WcfActorRemotingClientFactory(Binding, IServiceRemotingCallbackClient, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String)
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: IServiceRemotingClientFactory
  nameWithType: IServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClientFactory
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: IServiceRemotingClient
  nameWithType: IServiceRemotingClient
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
- uid: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Runtime.WcfActorServiceRemotingListener
  commentId: T:Microsoft.ServiceFabric.Actors.Remoting.Wcf.Runtime.WcfActorServiceRemotingListener
  isExternal: false
  name: WcfActorServiceRemotingListener
  nameWithType: WcfActorServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Runtime.WcfActorServiceRemotingListener
- uid: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client
  commentId: N:Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client
  nameWithType: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  isExternal: false
  name: WcfServiceRemotingClientFactory
  nameWithType: WcfServiceRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient}
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  name: ICommunicationClientFactory<IServiceRemotingClient>
  nameWithType: ICommunicationClientFactory<IServiceRemotingClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>
  nameWithType.vb: ICommunicationClientFactory(Of IServiceRemotingClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient)
  name.vb: ICommunicationClientFactory(Of IServiceRemotingClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
  commentId: E:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  isExternal: false
  name: ClientConnected
  nameWithType: WcfServiceRemotingClientFactory.ClientConnected
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientConnected
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
  commentId: E:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  isExternal: false
  name: ClientDisconnected
  nameWithType: WcfServiceRemotingClientFactory.ClientDisconnected
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.ClientDisconnected
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  isExternal: true
  name: ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: WcfServiceRemotingClientFactory.ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync
    nameWithType: WcfServiceRemotingClientFactory.ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
    nameWithType: WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  isExternal: true
  name: ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: WcfServiceRemotingClientFactory.ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync
    nameWithType: WcfServiceRemotingClientFactory.ICommunicationClientFactory<IServiceRemotingClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
    nameWithType: WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory
  isExternal: true
  name: ICommunicationClientFactory<IServiceRemotingClient>.ReportOperationExceptionAsync(IServiceRemotingClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  nameWithType: WcfServiceRemotingClientFactory.ICommunicationClientFactory<IServiceRemotingClient>.ReportOperationExceptionAsync(IServiceRemotingClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync(IServiceRemotingClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync(IServiceRemotingClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ICommunicationClientFactory<IServiceRemotingClient>.ReportOperationExceptionAsync
    nameWithType: WcfServiceRemotingClientFactory.ICommunicationClientFactory<IServiceRemotingClient>.ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft#ServiceFabric#Services#Communication#Client#ICommunicationClientFactory{Microsoft#ServiceFabric#Services#Remoting#Client#IServiceRemotingClient}#ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync
    nameWithType: WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client.WcfServiceRemotingClientFactory.Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient>.ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
    name: IServiceRemotingClient
    nameWithType: IServiceRemotingClient
    fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceRemotingClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<WcfActorRemotingClientFactory>()
  nameWithType: ByteArraySerializer.Serialize<WcfActorRemotingClientFactory>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of WcfActorRemotingClientFactory)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory)()
  name.vb: Serialize(Of WcfActorRemotingClientFactory)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<WcfActorRemotingClientFactory>
    nameWithType: ByteArraySerializer.Serialize<WcfActorRemotingClientFactory>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of WcfActorRemotingClientFactory)
    nameWithType: ByteArraySerializer.Serialize(Of WcfActorRemotingClientFactory)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Client
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Client
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Client
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Client
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  isExternal: false
  name: ICommunicationClientFactory<TCommunicationClient>
  nameWithType: ICommunicationClientFactory<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient)
  name.vb: ICommunicationClientFactory(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.#ctor
  isExternal: false
  name: WcfActorRemotingClientFactory
  nameWithType: WcfActorRemotingClientFactory.WcfActorRemotingClientFactory
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Wcf.Client.WcfActorRemotingClientFactory.WcfActorRemotingClientFactory
- uid: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
  parent: Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: IServiceRemotingCallbackClient
  nameWithType: IServiceRemotingCallbackClient
  fullName: Microsoft.ServiceFabric.Services.Remoting.IServiceRemotingCallbackClient
- uid: Microsoft.ServiceFabric.Services.Remoting
  commentId: N:Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting
  nameWithType: Microsoft.ServiceFabric.Services.Remoting
  fullName: Microsoft.ServiceFabric.Services.Remoting
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
- uid: System.ServiceModel.NetTcpBinding
  commentId: T:System.ServiceModel.NetTcpBinding
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver.GetDefault
  commentId: M:Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver.GetDefault
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
  isExternal: false
  name: WcfExceptionHandler
  nameWithType: WcfExceptionHandler
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfExceptionHandler
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceRemotingExceptionHandler
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.ServiceRemotingExceptionHandler
  isExternal: false
  name: ServiceRemotingExceptionHandler
  nameWithType: ServiceRemotingExceptionHandler
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.ServiceRemotingExceptionHandler
- uid: Microsoft.ServiceFabric.Actors.Remoting.Client.ActorRemotingExceptionHandler
  commentId: T:Microsoft.ServiceFabric.Actors.Remoting.Client.ActorRemotingExceptionHandler
  isExternal: false
  name: ActorRemotingExceptionHandler
  nameWithType: ActorRemotingExceptionHandler
  fullName: Microsoft.ServiceFabric.Actors.Remoting.Client.ActorRemotingExceptionHandler
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IExceptionHandler>
  nameWithType: IEnumerable<IExceptionHandler>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>
  nameWithType.vb: IEnumerable(Of IExceptionHandler)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler)
  name.vb: IEnumerable(Of IExceptionHandler)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
  commentId: T:Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
  parent: Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: IServicePartitionResolver
  nameWithType: IServicePartitionResolver
  fullName: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceFabric.Services.Client
  commentId: N:Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Client
  nameWithType: Microsoft.ServiceFabric.Services.Client
  fullName: Microsoft.ServiceFabric.Services.Client
