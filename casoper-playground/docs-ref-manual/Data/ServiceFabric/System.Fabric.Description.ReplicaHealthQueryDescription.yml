### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.ReplicaHealthQueryDescription
  commentId: T:System.Fabric.Description.ReplicaHealthQueryDescription
  id: ReplicaHealthQueryDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.ReplicaHealthQueryDescription.#ctor(System.Guid,System.Int64)
  - System.Fabric.Description.ReplicaHealthQueryDescription.EventsFilter
  - System.Fabric.Description.ReplicaHealthQueryDescription.HealthPolicy
  - System.Fabric.Description.ReplicaHealthQueryDescription.PartitionId
  - System.Fabric.Description.ReplicaHealthQueryDescription.ReplicaOrInstanceId
  - System.Fabric.Description.ReplicaHealthQueryDescription.ToString
  langs:
  - csharp
  - vb
  name: ReplicaHealthQueryDescription
  nameWithType: ReplicaHealthQueryDescription
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaHealthQueryDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Describes the query input for getting <xref href=\"System.Fabric.Health.ReplicaHealth\" data-throw-if-not-resolved=\"false\"></xref>. Used by \n<xref href=\"System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Fabric.Description.ReplicaHealthQueryDescription)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public sealed class ReplicaHealthQueryDescription
    content.vb: Public NotInheritable Class ReplicaHealthQueryDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.ReplicaHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.#ctor(System.Guid,System.Int64)
  commentId: M:System.Fabric.Description.ReplicaHealthQueryDescription.#ctor(System.Guid,System.Int64)
  id: '#ctor(System.Guid,System.Int64)'
  parent: System.Fabric.Description.ReplicaHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ReplicaHealthQueryDescription(Guid, Int64)
  nameWithType: ReplicaHealthQueryDescription.ReplicaHealthQueryDescription(Guid, Int64)
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.ReplicaHealthQueryDescription(System.Guid, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
    startLine: 28
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Instantiates a new instance of the <xref href=\"System.Fabric.Description.ReplicaHealthQueryDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ReplicaHealthQueryDescription(Guid partitionId, long replicaOrInstanceId)
    content.vb: Public Sub New(partitionId As Guid, replicaOrInstanceId As Long)
    parameters:
    - id: partitionId
      type: System.Guid
      description: "\n<p>The partition identifier.</p>\n"
    - id: replicaOrInstanceId
      type: System.Int64
      description: "\n<p>The stateful service replica id or the stateless service instance.</p>\n"
  overload: System.Fabric.Description.ReplicaHealthQueryDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.PartitionId
  commentId: P:System.Fabric.Description.ReplicaHealthQueryDescription.PartitionId
  id: PartitionId
  parent: System.Fabric.Description.ReplicaHealthQueryDescription
  langs:
  - csharp
  - vb
  name: PartitionId
  nameWithType: ReplicaHealthQueryDescription.PartitionId
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.PartitionId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionId
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
    startLine: 41
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the partition identifier.</p>\n"
  example: []
  syntax:
    content: public Guid PartitionId { get; }
    content.vb: Public ReadOnly Property PartitionId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>The <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> representing the partition identifier.</p>\n"
  overload: System.Fabric.Description.ReplicaHealthQueryDescription.PartitionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.ReplicaOrInstanceId
  commentId: P:System.Fabric.Description.ReplicaHealthQueryDescription.ReplicaOrInstanceId
  id: ReplicaOrInstanceId
  parent: System.Fabric.Description.ReplicaHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ReplicaOrInstanceId
  nameWithType: ReplicaHealthQueryDescription.ReplicaOrInstanceId
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.ReplicaOrInstanceId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaOrInstanceId
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
    startLine: 53
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>The stateful service replica id or stateless service instance.</p>\n"
  example: []
  syntax:
    content: public long ReplicaOrInstanceId { get; }
    content.vb: Public ReadOnly Property ReplicaOrInstanceId As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> representing the stateful service replica id or the stateless service instance.</p>\n"
  overload: System.Fabric.Description.ReplicaHealthQueryDescription.ReplicaOrInstanceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.HealthPolicy
  commentId: P:System.Fabric.Description.ReplicaHealthQueryDescription.HealthPolicy
  id: HealthPolicy
  parent: System.Fabric.Description.ReplicaHealthQueryDescription
  langs:
  - csharp
  - vb
  name: HealthPolicy
  nameWithType: ReplicaHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.HealthPolicy
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthPolicy
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
    startLine: 67
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the <xref href=\"System.Fabric.Health.ApplicationHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate health.</p>\n"
  remarks: >-
    If not specified, the health store uses the application health policy of the parent application

    to evaluate the replica health.
  example: []
  syntax:
    content: public ApplicationHealthPolicy HealthPolicy { get; set; }
    content.vb: Public Property HealthPolicy As ApplicationHealthPolicy
    parameters: []
    return:
      type: System.Fabric.Health.ApplicationHealthPolicy
      description: "\n<p>The <xref href=\"System.Fabric.Health.ApplicationHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate health.</p>\n"
  overload: System.Fabric.Description.ReplicaHealthQueryDescription.HealthPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.EventsFilter
  commentId: P:System.Fabric.Description.ReplicaHealthQueryDescription.EventsFilter
  id: EventsFilter
  parent: System.Fabric.Description.ReplicaHealthQueryDescription
  langs:
  - csharp
  - vb
  name: EventsFilter
  nameWithType: ReplicaHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.EventsFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EventsFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
    startLine: 83
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for the collection of <xref href=\"System.Fabric.Health.HealthEvent\" data-throw-if-not-resolved=\"false\"></xref> reported on the replica. Only \nevents that match the filter will be returned.</p>\n"
  remarks: "<p> Only events that match \n    the filter will be returned. All events will be used to evaluate the replica aggregated health state.\n    If the filter is not specified, all events are returned.</p>"
  example: []
  syntax:
    content: public HealthEventsFilter EventsFilter { get; set; }
    content.vb: Public Property EventsFilter As HealthEventsFilter
    parameters: []
    return:
      type: System.Fabric.Health.HealthEventsFilter
      description: "\n<p>The <xref href=\"System.Fabric.Health.HealthEventsFilter\" data-throw-if-not-resolved=\"false\"></xref> used to filter the events returned by query.</p>\n"
  overload: System.Fabric.Description.ReplicaHealthQueryDescription.EventsFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.ToString
  commentId: M:System.Fabric.Description.ReplicaHealthQueryDescription.ToString
  id: ToString
  parent: System.Fabric.Description.ReplicaHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ReplicaHealthQueryDescription.ToString()
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ReplicaHealthQueryDescription.cs
    startLine: 93
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\nGets a string representation of the health query description.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the health query description.
  overridden: System.Object.ToString
  overload: System.Fabric.Description.ReplicaHealthQueryDescription.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health.ReplicaHealth
  commentId: T:System.Fabric.Health.ReplicaHealth
  parent: System.Fabric.Health
  isExternal: false
  name: ReplicaHealth
  nameWithType: ReplicaHealth
  fullName: System.Fabric.Health.ReplicaHealth
- uid: System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Fabric.Description.ReplicaHealthQueryDescription)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetReplicaHealthAsync(System.Fabric.Description.ReplicaHealthQueryDescription)
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ReplicaHealthQueryDescription>()
  nameWithType: ByteArraySerializer.Serialize<ReplicaHealthQueryDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ReplicaHealthQueryDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ReplicaHealthQueryDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ReplicaHealthQueryDescription)()
  name.vb: Serialize(Of ReplicaHealthQueryDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ReplicaHealthQueryDescription>
    nameWithType: ByteArraySerializer.Serialize<ReplicaHealthQueryDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ReplicaHealthQueryDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ReplicaHealthQueryDescription)
    nameWithType: ByteArraySerializer.Serialize(Of ReplicaHealthQueryDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ReplicaHealthQueryDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.ReplicaHealthQueryDescription
  commentId: T:System.Fabric.Description.ReplicaHealthQueryDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ReplicaHealthQueryDescription
  nameWithType: ReplicaHealthQueryDescription
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.#ctor*
  commentId: Overload:System.Fabric.Description.ReplicaHealthQueryDescription.#ctor
  isExternal: false
  name: ReplicaHealthQueryDescription
  nameWithType: ReplicaHealthQueryDescription.ReplicaHealthQueryDescription
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.ReplicaHealthQueryDescription
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.PartitionId*
  commentId: Overload:System.Fabric.Description.ReplicaHealthQueryDescription.PartitionId
  isExternal: false
  name: PartitionId
  nameWithType: ReplicaHealthQueryDescription.PartitionId
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.PartitionId
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.ReplicaOrInstanceId*
  commentId: Overload:System.Fabric.Description.ReplicaHealthQueryDescription.ReplicaOrInstanceId
  isExternal: false
  name: ReplicaOrInstanceId
  nameWithType: ReplicaHealthQueryDescription.ReplicaOrInstanceId
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.ReplicaOrInstanceId
- uid: System.Fabric.Health.ApplicationHealthPolicy
  commentId: T:System.Fabric.Health.ApplicationHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ApplicationHealthPolicy
  nameWithType: ApplicationHealthPolicy
  fullName: System.Fabric.Health.ApplicationHealthPolicy
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.HealthPolicy*
  commentId: Overload:System.Fabric.Description.ReplicaHealthQueryDescription.HealthPolicy
  isExternal: false
  name: HealthPolicy
  nameWithType: ReplicaHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.HealthPolicy
- uid: System.Fabric.Health.HealthEvent
  commentId: T:System.Fabric.Health.HealthEvent
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: System.Fabric.Health.HealthEvent
- uid: System.Fabric.Health.HealthEventsFilter
  commentId: T:System.Fabric.Health.HealthEventsFilter
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEventsFilter
  nameWithType: HealthEventsFilter
  fullName: System.Fabric.Health.HealthEventsFilter
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.EventsFilter*
  commentId: Overload:System.Fabric.Description.ReplicaHealthQueryDescription.EventsFilter
  isExternal: false
  name: EventsFilter
  nameWithType: ReplicaHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.EventsFilter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ReplicaHealthQueryDescription.ToString*
  commentId: Overload:System.Fabric.Description.ReplicaHealthQueryDescription.ToString
  isExternal: false
  name: ToString
  nameWithType: ReplicaHealthQueryDescription.ToString
  fullName: System.Fabric.Description.ReplicaHealthQueryDescription.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
