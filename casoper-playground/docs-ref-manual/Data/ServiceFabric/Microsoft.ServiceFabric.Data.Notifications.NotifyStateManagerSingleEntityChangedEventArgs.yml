### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs
  id: NotifyStateManagerSingleEntityChangedEventArgs
  parent: Microsoft.ServiceFabric.Data.Notifications
  children:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.#ctor(Microsoft.ServiceFabric.Data.ITransaction,Microsoft.ServiceFabric.Data.IReliableState,Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction)
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.ReliableState
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.Transaction
  langs:
  - csharp
  - vb
  name: NotifyStateManagerSingleEntityChangedEventArgs
  nameWithType: NotifyStateManagerSingleEntityChangedEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerSingleEntityChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NotifyStateManagerSingleEntityChangedEventArgs
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerSingleEntityChangedEventArgs.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nProvides data for the DictionaryChanged event caused by a transactional single entity operation.\n"
  example: []
  syntax:
    content: 'public class NotifyStateManagerSingleEntityChangedEventArgs : NotifyStateManagerChangedEventArgs'
    content.vb: >-
      Public Class NotifyStateManagerSingleEntityChangedEventArgs
          Inherits NotifyStateManagerChangedEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  inheritedMembers:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.#ctor(Microsoft.ServiceFabric.Data.ITransaction,Microsoft.ServiceFabric.Data.IReliableState,Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction)
  commentId: M:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.#ctor(Microsoft.ServiceFabric.Data.ITransaction,Microsoft.ServiceFabric.Data.IReliableState,Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction)
  id: '#ctor(Microsoft.ServiceFabric.Data.ITransaction,Microsoft.ServiceFabric.Data.IReliableState,Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction)'
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs
  langs:
  - csharp
  - vb
  name: NotifyStateManagerSingleEntityChangedEventArgs(ITransaction, IReliableState, NotifyStateManagerChangedAction)
  nameWithType: NotifyStateManagerSingleEntityChangedEventArgs.NotifyStateManagerSingleEntityChangedEventArgs(ITransaction, IReliableState, NotifyStateManagerChangedAction)
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.NotifyStateManagerSingleEntityChangedEventArgs(Microsoft.ServiceFabric.Data.ITransaction, Microsoft.ServiceFabric.Data.IReliableState, Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerSingleEntityChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerSingleEntityChangedEventArgs.cs
    startLine: 24
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nInitializes a new instance of the <cref name=\"NotifyStateManagerSingleEntityChangedEventArgs\"></cref>\n"
  example: []
  syntax:
    content: public NotifyStateManagerSingleEntityChangedEventArgs(ITransaction transaction, IReliableState reliableState, NotifyStateManagerChangedAction action)
    content.vb: Public Sub New(transaction As ITransaction, reliableState As IReliableState, action As NotifyStateManagerChangedAction)
    parameters:
    - id: transaction
      type: Microsoft.ServiceFabric.Data.ITransaction
      description: Transaction that the change is related to.
    - id: reliableState
      type: Microsoft.ServiceFabric.Data.IReliableState
      description: <cref name="IReliableState"></cref> that was changed.
    - id: action
      type: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction
      description: The type of the change.
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.Transaction
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.Transaction
  id: Transaction
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: NotifyStateManagerSingleEntityChangedEventArgs.Transaction
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.Transaction
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerSingleEntityChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Transaction
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerSingleEntityChangedEventArgs.cs
    startLine: 39
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nGets the transaction.\n"
  example: []
  syntax:
    content: public ITransaction Transaction { get; }
    content.vb: Public ReadOnly Property Transaction As ITransaction
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.ITransaction
      description: "\nThe transaction associated with the operation.\n"
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.Transaction*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.ReliableState
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.ReliableState
  id: ReliableState
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs
  langs:
  - csharp
  - vb
  name: ReliableState
  nameWithType: NotifyStateManagerSingleEntityChangedEventArgs.ReliableState
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.ReliableState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerSingleEntityChangedEventArgs.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReliableState
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/Notifications/NotifyStateManagerSingleEntityChangedEventArgs.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data.Notifications
  summary: "\nGets the reliable state\n"
  example: []
  syntax:
    content: public IReliableState ReliableState { get; }
    content.vb: Public ReadOnly Property ReliableState As IReliableState
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.IReliableState
      description: "\nThe <cref name=\"IReliableState\"></cref> associated with the notification.\n"
  overload: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.ReliableState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Data.Notifications
  commentId: N:Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: Microsoft.ServiceFabric.Data.Notifications
  nameWithType: Microsoft.ServiceFabric.Data.Notifications
  fullName: Microsoft.ServiceFabric.Data.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  parent: Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: NotifyStateManagerChangedEventArgs
  nameWithType: NotifyStateManagerChangedEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
  commentId: P:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
  parent: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs
  isExternal: false
  name: Action
  nameWithType: NotifyStateManagerChangedEventArgs.Action
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedEventArgs.Action
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NotifyStateManagerSingleEntityChangedEventArgs>()
  nameWithType: ByteArraySerializer.Serialize<NotifyStateManagerSingleEntityChangedEventArgs>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NotifyStateManagerSingleEntityChangedEventArgs)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs)()
  name.vb: Serialize(Of NotifyStateManagerSingleEntityChangedEventArgs)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NotifyStateManagerSingleEntityChangedEventArgs>
    nameWithType: ByteArraySerializer.Serialize<NotifyStateManagerSingleEntityChangedEventArgs>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NotifyStateManagerSingleEntityChangedEventArgs)
    nameWithType: ByteArraySerializer.Serialize(Of NotifyStateManagerSingleEntityChangedEventArgs)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.#ctor
  isExternal: false
  name: NotifyStateManagerSingleEntityChangedEventArgs
  nameWithType: NotifyStateManagerSingleEntityChangedEventArgs.NotifyStateManagerSingleEntityChangedEventArgs
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.NotifyStateManagerSingleEntityChangedEventArgs
- uid: Microsoft.ServiceFabric.Data.ITransaction
  commentId: T:Microsoft.ServiceFabric.Data.ITransaction
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: Microsoft.ServiceFabric.Data.ITransaction
- uid: Microsoft.ServiceFabric.Data.IReliableState
  commentId: T:Microsoft.ServiceFabric.Data.IReliableState
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: IReliableState
  nameWithType: IReliableState
  fullName: Microsoft.ServiceFabric.Data.IReliableState
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction
  commentId: T:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction
  parent: Microsoft.ServiceFabric.Data.Notifications
  isExternal: false
  name: NotifyStateManagerChangedAction
  nameWithType: NotifyStateManagerChangedAction
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerChangedAction
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.Transaction*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.Transaction
  isExternal: false
  name: Transaction
  nameWithType: NotifyStateManagerSingleEntityChangedEventArgs.Transaction
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.Transaction
- uid: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.ReliableState*
  commentId: Overload:Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.ReliableState
  isExternal: false
  name: ReliableState
  nameWithType: NotifyStateManagerSingleEntityChangedEventArgs.ReliableState
  fullName: Microsoft.ServiceFabric.Data.Notifications.NotifyStateManagerSingleEntityChangedEventArgs.ReliableState
