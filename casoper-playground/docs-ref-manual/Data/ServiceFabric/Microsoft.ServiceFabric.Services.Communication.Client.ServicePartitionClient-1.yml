### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  id: ServicePartitionClient`1
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  children:
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.#ctor(Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0},System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.Factory
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetry(System.Action{`0},System.Type[])
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetry``1(System.Func{`0,``0},System.Type[])
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync(System.Func{`0,System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Type[])
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync(System.Func{`0,System.Threading.Tasks.Task},System.Type[])
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync``1(System.Func{`0,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Type[])
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync``1(System.Func{`0,System.Threading.Tasks.Task{``0}},System.Type[])
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ListenerName
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.PartitionKey
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ServiceUri
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TargetReplicaSelector
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  langs:
  - csharp
  - vb
  name: ServicePartitionClient<TCommunicationClient>
  nameWithType: ServicePartitionClient<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServicePartitionClient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nSpecifies an instance of the communication client that can communicate with the replicas of a particular partition.\n"
  example: []
  syntax:
    content: 'public class ServicePartitionClient<TCommunicationClient> : IServicePartitionClient<TCommunicationClient> where TCommunicationClient : ICommunicationClient'
    content.vb: >-
      Public Class ServicePartitionClient(Of TCommunicationClient As ICommunicationClient)
          Implements IServicePartitionClient(Of TCommunicationClient)
    typeParameters:
    - id: TCommunicationClient
      description: type of Communication client
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient)
  name.vb: ServicePartitionClient(Of TCommunicationClient)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.#ctor(Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0},System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.#ctor(Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0},System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  id: '#ctor(Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0},System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)'
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: ServicePartitionClient(ICommunicationClientFactory<TCommunicationClient>, Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings)
  nameWithType: ServicePartitionClient<TCommunicationClient>.ServicePartitionClient(ICommunicationClientFactory<TCommunicationClient>, Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.ServicePartitionClient(Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>, System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 45
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nInstantiates a service partition client that uses the specified communication client factory to create\na client to talk to the service endpoint identified by the service uri, partitionkey, replica and listener\narguments.\n"
  example: []
  syntax:
    content: public ServicePartitionClient(ICommunicationClientFactory<TCommunicationClient> communicationClientFactory, Uri serviceUri, ServicePartitionKey partitionKey = null, TargetReplicaSelector targetReplicaSelector = TargetReplicaSelector.Default, string listenerName = null, OperationRetrySettings retrySettings = null)
    content.vb: Public Sub New(communicationClientFactory As ICommunicationClientFactory(Of TCommunicationClient), serviceUri As Uri, partitionKey As ServicePartitionKey = Nothing, targetReplicaSelector As TargetReplicaSelector = TargetReplicaSelector.Default, listenerName As String = Nothing, retrySettings As OperationRetrySettings = Nothing)
    parameters:
    - id: communicationClientFactory
      type: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
      description: Communication client factory
    - id: serviceUri
      type: System.Uri
      description: Name of the service
    - id: partitionKey
      type: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
      description: The partition key used to identify the partition within the service.
    - id: targetReplicaSelector
      type: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
      description: Target replica information
    - id: listenerName
      type: System.String
      description: Listener in the replica to which the client should connect to
    - id: retrySettings
      type: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
      description: Retry policy for exceptions seen during communication
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.#ctor*
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).ServicePartitionClient(ICommunicationClientFactory(Of TCommunicationClient), Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).ServicePartitionClient(Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient), System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings)
  name.vb: ServicePartitionClient(ICommunicationClientFactory(Of TCommunicationClient), Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.Factory
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.Factory
  id: Factory
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: Factory
  nameWithType: ServicePartitionClient<TCommunicationClient>.Factory
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.Factory
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Factory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 70
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the communication client factory\n"
  example: []
  syntax:
    content: public ICommunicationClientFactory<TCommunicationClient> Factory { get; }
    content.vb: Public ReadOnly Property Factory As ICommunicationClientFactory(Of TCommunicationClient)
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
      description: Communication client factory
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.Factory*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.Factory
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).Factory
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).Factory
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ServiceUri
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ServiceUri
  id: ServiceUri
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: ServiceUri
  nameWithType: ServicePartitionClient<TCommunicationClient>.ServiceUri
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.ServiceUri
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceUri
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 79
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the name of the service\n"
  example: []
  syntax:
    content: public Uri ServiceUri { get; }
    content.vb: Public ReadOnly Property ServiceUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: Name of the service
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ServiceUri*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.ServiceUri
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).ServiceUri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).ServiceUri
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.PartitionKey
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.PartitionKey
  id: PartitionKey
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: PartitionKey
  nameWithType: ServicePartitionClient<TCommunicationClient>.PartitionKey
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.PartitionKey
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionKey
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 88
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the partition key.\n"
  example: []
  syntax:
    content: public ServicePartitionKey PartitionKey { get; }
    content.vb: Public ReadOnly Property PartitionKey As ServicePartitionKey
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
      description: Partition key
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.PartitionKey*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.PartitionKey
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).PartitionKey
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).PartitionKey
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TargetReplicaSelector
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TargetReplicaSelector
  id: TargetReplicaSelector
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: TargetReplicaSelector
  nameWithType: ServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TargetReplicaSelector
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 97
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the information about which replica in the partition the client should connect to.\n"
  example: []
  syntax:
    content: public TargetReplicaSelector TargetReplicaSelector { get; }
    content.vb: Public ReadOnly Property TargetReplicaSelector As TargetReplicaSelector
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
      description: A <xref href="Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TargetReplicaSelector*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.TargetReplicaSelector
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ListenerName
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ListenerName
  id: ListenerName
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: ListenerName
  nameWithType: ServicePartitionClient<TCommunicationClient>.ListenerName
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.ListenerName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ListenerName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 106
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the name of the listener in the replica to which the client should connect to.\n"
  example: []
  syntax:
    content: public string ListenerName { get; }
    content.vb: Public ReadOnly Property ListenerName As String
    parameters: []
    return:
      type: System.String
      description: Listener name
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ListenerName*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.ListenerName
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).ListenerName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).ListenerName
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  id: TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: TryGetLastResolvedServicePartition(out ResolvedServicePartition)
  nameWithType: ServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition(out ResolvedServicePartition)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition(out System.Fabric.ResolvedServicePartition)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TryGetLastResolvedServicePartition
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 116
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the resolved service partition that was set on the client.\n"
  example: []
  syntax:
    content: public bool TryGetLastResolvedServicePartition(out ResolvedServicePartition resolvedServicePartition)
    content.vb: Public Function TryGetLastResolvedServicePartition(ByRef resolvedServicePartition As ResolvedServicePartition) As Boolean
    parameters:
    - id: resolvedServicePartition
      type: System.Fabric.ResolvedServicePartition
      description: previous ResolvedServicePartition
    return:
      type: System.Boolean
      description: true if a ResolvedServicePartition was set
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TryGetLastResolvedServicePartition*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition(ByRef ResolvedServicePartition)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition(ByRef System.Fabric.ResolvedServicePartition)
  name.vb: TryGetLastResolvedServicePartition(ByRef ResolvedServicePartition)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync``1(System.Func{`0,System.Threading.Tasks.Task{``0}},System.Type[])
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync``1(System.Func{`0,System.Threading.Tasks.Task{``0}},System.Type[])
  id: InvokeWithRetryAsync``1(System.Func{`0,System.Threading.Tasks.Task{``0}},System.Type[])
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: InvokeWithRetryAsync<TResult>(Func<TCommunicationClient, Task<TResult>>, Type[])
  nameWithType: ServicePartitionClient<TCommunicationClient>.InvokeWithRetryAsync<TResult>(Func<TCommunicationClient, Task<TResult>>, Type[])
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.InvokeWithRetryAsync<TResult>(System.Func<TCommunicationClient, System.Threading.Tasks.Task<TResult>>, System.Type[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InvokeWithRetryAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 134
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nInvokes the given Function, retrying for exceptions thrown other than the exceptions in the doNotRetryExceptionTypes.\nFor exceptions that are not in doNotRetryExceptionTypes, CommunicationClientFactory's ReportOperationExceptionAsync() method \ncontrols if the exception should be retried or not.\n"
  example: []
  syntax:
    content: public Task<TResult> InvokeWithRetryAsync<TResult>(Func<TCommunicationClient, Task<TResult>> func, params Type[] doNotRetryExceptionTypes)
    content.vb: Public Function InvokeWithRetryAsync(Of TResult)(func As Func(Of TCommunicationClient, Task(Of TResult)), ParamArray doNotRetryExceptionTypes As Type()) As Task(Of TResult)
    parameters:
    - id: func
      type: System.Func{{TCommunicationClient},System.Threading.Tasks.Task{{TResult}}}
      description: Function being invoked
    - id: doNotRetryExceptionTypes
      type: System.Type[]
      description: Exceptions for which the service partition client should not retry
    typeParameters:
    - id: TResult
      description: Result from the function being invoked
    return:
      type: System.Threading.Tasks.Task{{TResult}}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. The result of the Task is\nthe result from the function given in the argument.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync*
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).InvokeWithRetryAsync(Of TResult)(Func(Of TCommunicationClient, Task(Of TResult)), Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).InvokeWithRetryAsync(Of TResult)(System.Func(Of TCommunicationClient, System.Threading.Tasks.Task(Of TResult)), System.Type())
  name.vb: InvokeWithRetryAsync(Of TResult)(Func(Of TCommunicationClient, Task(Of TResult)), Type())
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync``1(System.Func{`0,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Type[])
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync``1(System.Func{`0,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Type[])
  id: InvokeWithRetryAsync``1(System.Func{`0,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Type[])
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: InvokeWithRetryAsync<TResult>(Func<TCommunicationClient, Task<TResult>>, CancellationToken, Type[])
  nameWithType: ServicePartitionClient<TCommunicationClient>.InvokeWithRetryAsync<TResult>(Func<TCommunicationClient, Task<TResult>>, CancellationToken, Type[])
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.InvokeWithRetryAsync<TResult>(System.Func<TCommunicationClient, System.Threading.Tasks.Task<TResult>>, System.Threading.CancellationToken, System.Type[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InvokeWithRetryAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 154
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nInvokes the given Function, retrying for exceptions thrown other than the exceptions in the doNotRetryExceptionTypes.\nFor exceptions that are not in doNotRetryExceptionTypes, CommunicationClientFactory's ReportOperationExceptionAsync() method \ncontrols if the exception should be retried or not.\n"
  example: []
  syntax:
    content: public Task<TResult> InvokeWithRetryAsync<TResult>(Func<TCommunicationClient, Task<TResult>> func, CancellationToken cancellationToken, params Type[] doNotRetryExceptionTypes)
    content.vb: Public Function InvokeWithRetryAsync(Of TResult)(func As Func(Of TCommunicationClient, Task(Of TResult)), cancellationToken As CancellationToken, ParamArray doNotRetryExceptionTypes As Type()) As Task(Of TResult)
    parameters:
    - id: func
      type: System.Func{{TCommunicationClient},System.Threading.Tasks.Task{{TResult}}}
      description: Function being invoked
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    - id: doNotRetryExceptionTypes
      type: System.Type[]
      description: Exceptions for which the service partition client should not retry
    typeParameters:
    - id: TResult
      description: Result from the function being invoked
    return:
      type: System.Threading.Tasks.Task{{TResult}}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. The result of the Task is\nthe result from the function given in the argument.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync*
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).InvokeWithRetryAsync(Of TResult)(Func(Of TCommunicationClient, Task(Of TResult)), CancellationToken, Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).InvokeWithRetryAsync(Of TResult)(System.Func(Of TCommunicationClient, System.Threading.Tasks.Task(Of TResult)), System.Threading.CancellationToken, System.Type())
  name.vb: InvokeWithRetryAsync(Of TResult)(Func(Of TCommunicationClient, Task(Of TResult)), CancellationToken, Type())
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync(System.Func{`0,System.Threading.Tasks.Task},System.Type[])
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync(System.Func{`0,System.Threading.Tasks.Task},System.Type[])
  id: InvokeWithRetryAsync(System.Func{`0,System.Threading.Tasks.Task},System.Type[])
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: InvokeWithRetryAsync(Func<TCommunicationClient, Task>, Type[])
  nameWithType: ServicePartitionClient<TCommunicationClient>.InvokeWithRetryAsync(Func<TCommunicationClient, Task>, Type[])
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.InvokeWithRetryAsync(System.Func<TCommunicationClient, System.Threading.Tasks.Task>, System.Type[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InvokeWithRetryAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 246
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nInvokes the given Function, retrying for exceptions thrown other than the exceptions in the doNotRetryExceptionTypes.\nFor exceptions that are not in doNotRetryExceptionTypes, CommunicationClientFactory's ReportOperationExceptionAsync() method \ncontrols if the exception should be retried or not.\n"
  example: []
  syntax:
    content: public Task InvokeWithRetryAsync(Func<TCommunicationClient, Task> func, params Type[] doNotRetryExceptionTypes)
    content.vb: Public Function InvokeWithRetryAsync(func As Func(Of TCommunicationClient, Task), ParamArray doNotRetryExceptionTypes As Type()) As Task
    parameters:
    - id: func
      type: System.Func{{TCommunicationClient},System.Threading.Tasks.Task}
      description: Function being invoked
    - id: doNotRetryExceptionTypes
      type: System.Type[]
      description: Exceptions for which the service partition client should not retry
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync*
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).InvokeWithRetryAsync(Func(Of TCommunicationClient, Task), Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).InvokeWithRetryAsync(System.Func(Of TCommunicationClient, System.Threading.Tasks.Task), System.Type())
  name.vb: InvokeWithRetryAsync(Func(Of TCommunicationClient, Task), Type())
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync(System.Func{`0,System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Type[])
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync(System.Func{`0,System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Type[])
  id: InvokeWithRetryAsync(System.Func{`0,System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Type[])
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: InvokeWithRetryAsync(Func<TCommunicationClient, Task>, CancellationToken, Type[])
  nameWithType: ServicePartitionClient<TCommunicationClient>.InvokeWithRetryAsync(Func<TCommunicationClient, Task>, CancellationToken, Type[])
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.InvokeWithRetryAsync(System.Func<TCommunicationClient, System.Threading.Tasks.Task>, System.Threading.CancellationToken, System.Type[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InvokeWithRetryAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 262
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nInvokes the given Function, retrying for exceptions thrown other than the exceptions in the doNotRetryExceptionTypes.\nFor exceptions that are not in doNotRetryExceptionTypes, CommunicationClientFactory's ReportOperationExceptionAsync() method \ncontrols if the exception should be retried or not.\n"
  example: []
  syntax:
    content: public Task InvokeWithRetryAsync(Func<TCommunicationClient, Task> func, CancellationToken cancellationToken, params Type[] doNotRetryExceptionTypes)
    content.vb: Public Function InvokeWithRetryAsync(func As Func(Of TCommunicationClient, Task), cancellationToken As CancellationToken, ParamArray doNotRetryExceptionTypes As Type()) As Task
    parameters:
    - id: func
      type: System.Func{{TCommunicationClient},System.Threading.Tasks.Task}
      description: Function being invoked
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    - id: doNotRetryExceptionTypes
      type: System.Type[]
      description: Exceptions for which the service partition client should not retry
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync*
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).InvokeWithRetryAsync(Func(Of TCommunicationClient, Task), CancellationToken, Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).InvokeWithRetryAsync(System.Func(Of TCommunicationClient, System.Threading.Tasks.Task), System.Threading.CancellationToken, System.Type())
  name.vb: InvokeWithRetryAsync(Func(Of TCommunicationClient, Task), CancellationToken, Type())
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetry``1(System.Func{`0,``0},System.Type[])
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetry``1(System.Func{`0,``0},System.Type[])
  id: InvokeWithRetry``1(System.Func{`0,``0},System.Type[])
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: InvokeWithRetry<TResult>(Func<TCommunicationClient, TResult>, Type[])
  nameWithType: ServicePartitionClient<TCommunicationClient>.InvokeWithRetry<TResult>(Func<TCommunicationClient, TResult>, Type[])
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.InvokeWithRetry<TResult>(System.Func<TCommunicationClient, TResult>, System.Type[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InvokeWithRetry
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 286
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nInvokes the given Function, retrying for exceptions thrown other than the exceptions in the doNotRetryExceptionTypes.\nFor exceptions that are not in doNotRetryExceptionTypes, CommunicationClientFactory's ReportOperationExceptionAsync() method \ncontrols if the exception should be retried or not.\n"
  example: []
  syntax:
    content: public TResult InvokeWithRetry<TResult>(Func<TCommunicationClient, TResult> func, params Type[] doNotRetryExceptionTypes)
    content.vb: Public Function InvokeWithRetry(Of TResult)(func As Func(Of TCommunicationClient, TResult), ParamArray doNotRetryExceptionTypes As Type()) As TResult
    parameters:
    - id: func
      type: System.Func{{TCommunicationClient},{TResult}}
      description: Function being invoked
    - id: doNotRetryExceptionTypes
      type: System.Type[]
      description: Exceptions for which the service partition client should not retry
    typeParameters:
    - id: TResult
      description: Result from the function being invoked
    return:
      type: '{TResult}'
      description: Result from the function given in the argument
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetry*
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).InvokeWithRetry(Of TResult)(Func(Of TCommunicationClient, TResult), Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).InvokeWithRetry(Of TResult)(System.Func(Of TCommunicationClient, TResult), System.Type())
  name.vb: InvokeWithRetry(Of TResult)(Func(Of TCommunicationClient, TResult), Type())
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetry(System.Action{`0},System.Type[])
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetry(System.Action{`0},System.Type[])
  id: InvokeWithRetry(System.Action{`0},System.Type[])
  parent: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: InvokeWithRetry(Action<TCommunicationClient>, Type[])
  nameWithType: ServicePartitionClient<TCommunicationClient>.InvokeWithRetry(Action<TCommunicationClient>, Type[])
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.InvokeWithRetry(System.Action<TCommunicationClient>, System.Type[])
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: InvokeWithRetry
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/ServicePartitionClient.cs
    startLine: 309
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nInvokes the given Function, retrying for exceptions thrown other than the exceptions in the doNotRetryExceptionTypes.\nFor exceptions that are not in doNotRetryExceptionTypes, CommunicationClientFactory's ReportOperationExceptionAsync() method \ncontrols if the exception should be retried or not.\n"
  example: []
  syntax:
    content: public void InvokeWithRetry(Action<TCommunicationClient> func, params Type[] doNotRetryExceptionTypes)
    content.vb: Public Sub InvokeWithRetry(func As Action(Of TCommunicationClient), ParamArray doNotRetryExceptionTypes As Type())
    parameters:
    - id: func
      type: System.Action{{TCommunicationClient}}
      description: Function being invoked
    - id: doNotRetryExceptionTypes
      type: System.Type[]
      description: Exceptions for which the service partition client should not retry
  overload: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetry*
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).InvokeWithRetry(Action(Of TCommunicationClient), Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).InvokeWithRetry(System.Action(Of TCommunicationClient), System.Type())
  name.vb: InvokeWithRetry(Action(Of TCommunicationClient), Type())
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{`0}
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  definition: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
  name: IServicePartitionClient<TCommunicationClient>
  nameWithType: IServicePartitionClient<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient)
  name.vb: IServicePartitionClient(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
    name: IServicePartitionClient
    nameWithType: IServicePartitionClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
    name: IServicePartitionClient
    nameWithType: IServicePartitionClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServicePartitionClient<TCommunicationClient>>()
  nameWithType: ByteArraySerializer.Serialize<ServicePartitionClient<TCommunicationClient>>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServicePartitionClient(Of TCommunicationClient))()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient))()
  name.vb: Serialize(Of ServicePartitionClient(Of TCommunicationClient))()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServicePartitionClient<TCommunicationClient>>
    nameWithType: ByteArraySerializer.Serialize<ServicePartitionClient<TCommunicationClient>>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServicePartitionClient(Of TCommunicationClient))
    nameWithType: ByteArraySerializer.Serialize(Of ServicePartitionClient(Of TCommunicationClient))
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
  isExternal: false
  name: IServicePartitionClient<TCommunicationClient>
  nameWithType: IServicePartitionClient<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient)
  name.vb: IServicePartitionClient(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
    name: IServicePartitionClient
    nameWithType: IServicePartitionClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
    name: IServicePartitionClient
    nameWithType: IServicePartitionClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.#ctor
  isExternal: false
  name: ServicePartitionClient
  nameWithType: ServicePartitionClient<TCommunicationClient>.ServicePartitionClient
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.ServicePartitionClient
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).ServicePartitionClient
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).ServicePartitionClient
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0}
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  name: ICommunicationClientFactory<TCommunicationClient>
  nameWithType: ICommunicationClientFactory<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient)
  name.vb: ICommunicationClientFactory(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  commentId: T:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  parent: Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
- uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: TargetReplicaSelector
  nameWithType: TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: OperationRetrySettings
  nameWithType: OperationRetrySettings
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  isExternal: false
  name: ICommunicationClientFactory<TCommunicationClient>
  nameWithType: ICommunicationClientFactory<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient)
  name.vb: ICommunicationClientFactory(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Client
  commentId: N:Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Client
  nameWithType: Microsoft.ServiceFabric.Services.Client
  fullName: Microsoft.ServiceFabric.Services.Client
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.Factory*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.Factory
  isExternal: false
  name: Factory
  nameWithType: ServicePartitionClient<TCommunicationClient>.Factory
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.Factory
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).Factory
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).Factory
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.Factory
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{`0}.Factory
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.Factory
  name: Factory
  nameWithType: IServicePartitionClient<TCommunicationClient>.Factory
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.Factory
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).Factory
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).Factory
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.Factory
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.Factory
  isExternal: false
  name: Factory
  nameWithType: IServicePartitionClient<TCommunicationClient>.Factory
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.Factory
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).Factory
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).Factory
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ServiceUri*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ServiceUri
  isExternal: false
  name: ServiceUri
  nameWithType: ServicePartitionClient<TCommunicationClient>.ServiceUri
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.ServiceUri
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).ServiceUri
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).ServiceUri
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.ServiceUri
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{`0}.ServiceUri
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ServiceUri
  name: ServiceUri
  nameWithType: IServicePartitionClient<TCommunicationClient>.ServiceUri
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.ServiceUri
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).ServiceUri
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).ServiceUri
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ServiceUri
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ServiceUri
  isExternal: false
  name: ServiceUri
  nameWithType: IServicePartitionClient<TCommunicationClient>.ServiceUri
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.ServiceUri
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).ServiceUri
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).ServiceUri
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.PartitionKey*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.PartitionKey
  isExternal: false
  name: PartitionKey
  nameWithType: ServicePartitionClient<TCommunicationClient>.PartitionKey
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.PartitionKey
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).PartitionKey
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).PartitionKey
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.PartitionKey
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{`0}.PartitionKey
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.PartitionKey
  name: PartitionKey
  nameWithType: IServicePartitionClient<TCommunicationClient>.PartitionKey
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.PartitionKey
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).PartitionKey
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).PartitionKey
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.PartitionKey
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.PartitionKey
  isExternal: false
  name: PartitionKey
  nameWithType: IServicePartitionClient<TCommunicationClient>.PartitionKey
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.PartitionKey
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).PartitionKey
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).PartitionKey
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TargetReplicaSelector*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TargetReplicaSelector
  isExternal: false
  name: TargetReplicaSelector
  nameWithType: ServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.TargetReplicaSelector
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{`0}.TargetReplicaSelector
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TargetReplicaSelector
  name: TargetReplicaSelector
  nameWithType: IServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TargetReplicaSelector
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TargetReplicaSelector
  isExternal: false
  name: TargetReplicaSelector
  nameWithType: IServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ListenerName*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.ListenerName
  isExternal: false
  name: ListenerName
  nameWithType: ServicePartitionClient<TCommunicationClient>.ListenerName
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.ListenerName
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).ListenerName
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).ListenerName
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.ListenerName
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{`0}.ListenerName
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ListenerName
  name: ListenerName
  nameWithType: IServicePartitionClient<TCommunicationClient>.ListenerName
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.ListenerName
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).ListenerName
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).ListenerName
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ListenerName
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ListenerName
  isExternal: false
  name: ListenerName
  nameWithType: IServicePartitionClient<TCommunicationClient>.ListenerName
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.ListenerName
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).ListenerName
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).ListenerName
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TryGetLastResolvedServicePartition*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.TryGetLastResolvedServicePartition
  isExternal: false
  name: TryGetLastResolvedServicePartition
  nameWithType: ServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{`0}.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient{{TCommunicationClient}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  name: TryGetLastResolvedServicePartition(ResolvedServicePartition)
  nameWithType: IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition(ResolvedServicePartition)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition)
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition(ResolvedServicePartition)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
    name: TryGetLastResolvedServicePartition
    nameWithType: IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
    name: TryGetLastResolvedServicePartition
    nameWithType: IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ResolvedServicePartition
  commentId: T:System.Fabric.ResolvedServicePartition
  parent: System.Fabric
  isExternal: false
  name: ResolvedServicePartition
  nameWithType: ResolvedServicePartition
  fullName: System.Fabric.ResolvedServicePartition
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  isExternal: false
  name: TryGetLastResolvedServicePartition(ResolvedServicePartition)
  nameWithType: IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition(ResolvedServicePartition)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition)
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition(ResolvedServicePartition)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
    name: TryGetLastResolvedServicePartition
    nameWithType: IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
    name: TryGetLastResolvedServicePartition
    nameWithType: IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetryAsync
  isExternal: false
  name: InvokeWithRetryAsync<TResult>
  nameWithType: ServicePartitionClient<TCommunicationClient>.InvokeWithRetryAsync<TResult>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.InvokeWithRetryAsync<TResult>
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).InvokeWithRetryAsync(Of TResult)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).InvokeWithRetryAsync(Of TResult)
  name.vb: InvokeWithRetryAsync(Of TResult)
- uid: System.Func{{TCommunicationClient},System.Threading.Tasks.Task{{TResult}}}
  commentId: T:System.Func{`0,System.Threading.Tasks.Task{``0}}
  parent: System
  definition: System.Func`2
  name: Func<TCommunicationClient, Task<TResult>>
  nameWithType: Func<TCommunicationClient, Task<TResult>>
  fullName: System.Func<TCommunicationClient, System.Threading.Tasks.Task<TResult>>
  nameWithType.vb: Func(Of TCommunicationClient, Task(Of TResult))
  fullname.vb: System.Func(Of TCommunicationClient, System.Threading.Tasks.Task(Of TResult))
  name.vb: Func(Of TCommunicationClient, Task(Of TResult))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{{TResult}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Func{{TCommunicationClient},System.Threading.Tasks.Task}
  commentId: T:System.Func{`0,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  name: Func<TCommunicationClient, Task>
  nameWithType: Func<TCommunicationClient, Task>
  fullName: System.Func<TCommunicationClient, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of TCommunicationClient, Task)
  fullname.vb: System.Func(Of TCommunicationClient, System.Threading.Tasks.Task)
  name.vb: Func(Of TCommunicationClient, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetry*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient`1.InvokeWithRetry
  isExternal: false
  name: InvokeWithRetry<TResult>
  nameWithType: ServicePartitionClient<TCommunicationClient>.InvokeWithRetry<TResult>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient<TCommunicationClient>.InvokeWithRetry<TResult>
  nameWithType.vb: ServicePartitionClient(Of TCommunicationClient).InvokeWithRetry(Of TResult)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ServicePartitionClient(Of TCommunicationClient).InvokeWithRetry(Of TResult)
  name.vb: InvokeWithRetry(Of TResult)
- uid: System.Func{{TCommunicationClient},{TResult}}
  commentId: T:System.Func{`0,``0}
  parent: System
  definition: System.Func`2
  name: Func<TCommunicationClient, TResult>
  nameWithType: Func<TCommunicationClient, TResult>
  fullName: System.Func<TCommunicationClient, TResult>
  nameWithType.vb: Func(Of TCommunicationClient, TResult)
  fullname.vb: System.Func(Of TCommunicationClient, TResult)
  name.vb: Func(Of TCommunicationClient, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TResult
  commentId: '!:TResult'
  isExternal: false
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Action{{TCommunicationClient}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  name: Action<TCommunicationClient>
  nameWithType: Action<TCommunicationClient>
  fullName: System.Action<TCommunicationClient>
  nameWithType.vb: Action(Of TCommunicationClient)
  fullname.vb: System.Action(Of TCommunicationClient)
  name.vb: Action(Of TCommunicationClient)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
