### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Data.RestoreDescription
  commentId: T:Microsoft.ServiceFabric.Data.RestoreDescription
  id: RestoreDescription
  parent: Microsoft.ServiceFabric.Data
  children:
  - Microsoft.ServiceFabric.Data.RestoreDescription.#ctor(System.String)
  - Microsoft.ServiceFabric.Data.RestoreDescription.#ctor(System.String,Microsoft.ServiceFabric.Data.RestorePolicy)
  - Microsoft.ServiceFabric.Data.RestoreDescription.BackupFolderPath
  - Microsoft.ServiceFabric.Data.RestoreDescription.Policy
  langs:
  - csharp
  - vb
  name: RestoreDescription
  nameWithType: RestoreDescription
  fullName: Microsoft.ServiceFabric.Data.RestoreDescription
  type: Struct
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RestoreDescription
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreDescription.cs
    startLine: 11
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nA RestoreDescription contains all of the information necessary to restore a stateful service replica. \n"
  example: []
  syntax:
    content: public struct RestoreDescription
    content.vb: Public Structure RestoreDescription
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - Microsoft.ServiceFabric.Data.RestoreDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.ServiceFabric.Data.RestoreDescription.#ctor(System.String)
  commentId: M:Microsoft.ServiceFabric.Data.RestoreDescription.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.ServiceFabric.Data.RestoreDescription
  langs:
  - csharp
  - vb
  name: RestoreDescription(String)
  nameWithType: RestoreDescription.RestoreDescription(String)
  fullName: Microsoft.ServiceFabric.Data.RestoreDescription.RestoreDescription(System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreDescription.cs
    startLine: 24
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nInitializes a new instance of the <cref name=\"RestoreDescription\"></cref> structure\n"
  example: []
  syntax:
    content: public RestoreDescription(string backupFolderPath)
    content.vb: Public Sub New(backupFolderPath As String)
    parameters:
    - id: backupFolderPath
      type: System.String
      description: "\nThe directory where the replica is to be restored from.\nThis parameter cannot be null, empty, or consist only of whitespace. \nUNC paths may also be provided.\n"
  overload: Microsoft.ServiceFabric.Data.RestoreDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.RestoreDescription.#ctor(System.String,Microsoft.ServiceFabric.Data.RestorePolicy)
  commentId: M:Microsoft.ServiceFabric.Data.RestoreDescription.#ctor(System.String,Microsoft.ServiceFabric.Data.RestorePolicy)
  id: '#ctor(System.String,Microsoft.ServiceFabric.Data.RestorePolicy)'
  parent: Microsoft.ServiceFabric.Data.RestoreDescription
  langs:
  - csharp
  - vb
  name: RestoreDescription(String, RestorePolicy)
  nameWithType: RestoreDescription.RestoreDescription(String, RestorePolicy)
  fullName: Microsoft.ServiceFabric.Data.RestoreDescription.RestoreDescription(System.String, Microsoft.ServiceFabric.Data.RestorePolicy)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreDescription.cs
    startLine: 39
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nInitializes a new instance of the RestoreDescription structure.\n"
  example: []
  syntax:
    content: public RestoreDescription(string backupFolderPath, RestorePolicy restorePolicy)
    content.vb: Public Sub New(backupFolderPath As String, restorePolicy As RestorePolicy)
    parameters:
    - id: backupFolderPath
      type: System.String
      description: "\nThe directory where the replica is to be restored from.\nThis parameter cannot be null, empty, or consist only of whitespace. \nUNC paths may also be provided.\n"
    - id: restorePolicy
      type: Microsoft.ServiceFabric.Data.RestorePolicy
      description: The restore policy.
  overload: Microsoft.ServiceFabric.Data.RestoreDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Data.RestoreDescription.BackupFolderPath
  commentId: P:Microsoft.ServiceFabric.Data.RestoreDescription.BackupFolderPath
  id: BackupFolderPath
  parent: Microsoft.ServiceFabric.Data.RestoreDescription
  langs:
  - csharp
  - vb
  name: BackupFolderPath
  nameWithType: RestoreDescription.BackupFolderPath
  fullName: Microsoft.ServiceFabric.Data.RestoreDescription.BackupFolderPath
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: BackupFolderPath
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreDescription.cs
    startLine: 57
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets the directory which will be used to restore the replica's state.\nThis parameter cannot be null, empty, or consist only of whitespace. \nUNC paths may also be provided.\n"
  remarks: "\nFolder must at least contain one full backup.\nIn addition, it could include one or more incremental backups.\n"
  example: []
  syntax:
    content: public string BackupFolderPath { get; }
    content.vb: Public ReadOnly Property BackupFolderPath As String
    parameters: []
    return:
      type: System.String
      description: "\nThe directory which will be used to restore the replica's state.\n"
  overload: Microsoft.ServiceFabric.Data.RestoreDescription.BackupFolderPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Data.RestoreDescription.Policy
  commentId: P:Microsoft.ServiceFabric.Data.RestoreDescription.Policy
  id: Policy
  parent: Microsoft.ServiceFabric.Data.RestoreDescription
  langs:
  - csharp
  - vb
  name: Policy
  nameWithType: RestoreDescription.Policy
  fullName: Microsoft.ServiceFabric.Data.RestoreDescription.Policy
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Policy
    path: src/prod/src/managed/Microsoft.ServiceFabric.Data.Interfaces/RestoreDescription.cs
    startLine: 71
  assemblies:
  - Microsoft.ServiceFabric.Data.Interfaces
  namespace: Microsoft.ServiceFabric.Data
  summary: "\nGets the restore policy.\n"
  example: []
  syntax:
    content: public RestorePolicy Policy { get; }
    content.vb: Public ReadOnly Property Policy As RestorePolicy
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Data.RestorePolicy
      description: "\nPolicy to be used for the restore.\n"
  overload: Microsoft.ServiceFabric.Data.RestoreDescription.Policy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Data
  commentId: N:Microsoft.ServiceFabric.Data
  isExternal: false
  name: Microsoft.ServiceFabric.Data
  nameWithType: Microsoft.ServiceFabric.Data
  fullName: Microsoft.ServiceFabric.Data
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Data.RestoreDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<RestoreDescription>()
  nameWithType: ByteArraySerializer.Serialize<RestoreDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.RestoreDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of RestoreDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.RestoreDescription)()
  name.vb: Serialize(Of RestoreDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<RestoreDescription>
    nameWithType: ByteArraySerializer.Serialize<RestoreDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Data.RestoreDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of RestoreDescription)
    nameWithType: ByteArraySerializer.Serialize(Of RestoreDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Data.RestoreDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Data.RestoreDescription.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Data.RestoreDescription.#ctor
  isExternal: false
  name: RestoreDescription
  nameWithType: RestoreDescription.RestoreDescription
  fullName: Microsoft.ServiceFabric.Data.RestoreDescription.RestoreDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Data.RestorePolicy
  commentId: T:Microsoft.ServiceFabric.Data.RestorePolicy
  parent: Microsoft.ServiceFabric.Data
  isExternal: false
  name: RestorePolicy
  nameWithType: RestorePolicy
  fullName: Microsoft.ServiceFabric.Data.RestorePolicy
- uid: Microsoft.ServiceFabric.Data.RestoreDescription.BackupFolderPath*
  commentId: Overload:Microsoft.ServiceFabric.Data.RestoreDescription.BackupFolderPath
  isExternal: false
  name: BackupFolderPath
  nameWithType: RestoreDescription.BackupFolderPath
  fullName: Microsoft.ServiceFabric.Data.RestoreDescription.BackupFolderPath
- uid: Microsoft.ServiceFabric.Data.RestoreDescription.Policy*
  commentId: Overload:Microsoft.ServiceFabric.Data.RestoreDescription.Policy
  isExternal: false
  name: Policy
  nameWithType: RestoreDescription.Policy
  fullName: Microsoft.ServiceFabric.Data.RestoreDescription.Policy
