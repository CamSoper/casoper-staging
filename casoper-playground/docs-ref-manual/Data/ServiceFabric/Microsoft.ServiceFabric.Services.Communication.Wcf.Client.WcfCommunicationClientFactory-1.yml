### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  id: WcfCommunicationClientFactory`1
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  children:
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,System.Object)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.AbortClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateWcfCommunicationClient(`0)
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.ValidateClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.ValidateClient(System.String,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  langs:
  - csharp
  - vb
  name: WcfCommunicationClientFactory<TServiceContract>
  nameWithType: WcfCommunicationClientFactory<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WcfCommunicationClientFactory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
    startLine: 24
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nAn <xref href=\"Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory%601\" data-throw-if-not-resolved=\"false\"></xref> that uses\nWindows Communication Foundation to create <xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient%601\" data-throw-if-not-resolved=\"false\"></xref>\nto communicate with stateless and stateful services that are using \n<xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class WcfCommunicationClientFactory<TServiceContract> : CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>, ICommunicationClientFactory<WcfCommunicationClient<TServiceContract>> where TServiceContract : class'
    content.vb: >-
      Public Class WcfCommunicationClientFactory(Of TServiceContract As Class)
          Inherits CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract))
          Implements ICommunicationClientFactory(Of WcfCommunicationClient(Of TServiceContract))
    typeParameters:
    - id: TServiceContract
      description: WCF based service contract
  inheritance:
  - System.Object
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  inheritedMembers:
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ServiceResolver
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ExceptionHandlers
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.TraceId
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ClientConnected
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ClientDisconnected
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}},Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract)
  name.vb: WcfCommunicationClientFactory(Of TServiceContract)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,System.Object)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,System.Object)
  id: '#ctor(System.ServiceModel.Channels.Binding,System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler},Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver,System.String,System.Object)'
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  langs:
  - csharp
  - vb
  name: WcfCommunicationClientFactory(Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, Object)
  nameWithType: WcfCommunicationClientFactory<TServiceContract>.WcfCommunicationClientFactory(Binding, IEnumerable<IExceptionHandler>, IServicePartitionResolver, String, Object)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>.WcfCommunicationClientFactory(System.ServiceModel.Channels.Binding, System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>, Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.String, System.Object)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nConstructs a factory to create clients using WCF to communicate with the services.\n"
  example: []
  syntax:
    content: public WcfCommunicationClientFactory(Binding clientBinding = null, IEnumerable<IExceptionHandler> exceptionHandlers = null, IServicePartitionResolver servicePartitionResolver = null, string traceId = null, object callback = null)
    content.vb: Public Sub New(clientBinding As Binding = Nothing, exceptionHandlers As IEnumerable(Of IExceptionHandler) = Nothing, servicePartitionResolver As IServicePartitionResolver = Nothing, traceId As String = Nothing, callback As Object = Nothing)
    parameters:
    - id: clientBinding
      type: System.ServiceModel.Channels.Binding
      description: "\nWCF binding to use for the client. If the client binding is not specified or null,\na default client binding is created using \n<xref href=\"Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method \nwhich creates a <xref href=\"System.ServiceModel.NetTcpBinding\" data-throw-if-not-resolved=\"false\"></xref> with no security.\n"
    - id: exceptionHandlers
      type: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
      description: "\nException handlers to handle the exceptions encountered in communicating with the service.\n"
    - id: servicePartitionResolver
      type: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
      description: "\nService partition resolver to resolve the service endpoints. If not specified, a default \nservice partition resolver returned by <xref href=\"Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver.GetDefault\" data-throw-if-not-resolved=\"false\"></xref> is used.\n"
    - id: traceId
      type: System.String
      description: "\nId to use in diagnostics traces from this component.\n"
    - id: callback
      type: System.Object
      description: "\nThe callback client that receives the callbacks from the service.\n"
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.#ctor*
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract).WcfCommunicationClientFactory(Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract).WcfCommunicationClientFactory(System.ServiceModel.Channels.Binding, System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler), Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver, System.String, System.Object)
  name.vb: WcfCommunicationClientFactory(Binding, IEnumerable(Of IExceptionHandler), IServicePartitionResolver, String, Object)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateWcfCommunicationClient(`0)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateWcfCommunicationClient(`0)
  id: CreateWcfCommunicationClient(`0)
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  langs:
  - csharp
  - vb
  name: CreateWcfCommunicationClient(TServiceContract)
  nameWithType: WcfCommunicationClientFactory<TServiceContract>.CreateWcfCommunicationClient(TServiceContract)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>.CreateWcfCommunicationClient(TServiceContract)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateWcfCommunicationClient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
    startLine: 75
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nCreates WCF communication clients to communicate over the given channel.\n"
  example: []
  syntax:
    content: protected virtual WcfCommunicationClient<TServiceContract> CreateWcfCommunicationClient(TServiceContract channel)
    content.vb: Protected Overridable Function CreateWcfCommunicationClient(channel As TServiceContract) As WcfCommunicationClient(Of TServiceContract)
    parameters:
    - id: channel
      type: '{TServiceContract}'
      description: Service contract based WCF channel.
    return:
      type: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}
      description: The communication client that was created
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateWcfCommunicationClient*
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract).CreateWcfCommunicationClient(TServiceContract)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract).CreateWcfCommunicationClient(TServiceContract)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
  id: CreateClientAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  langs:
  - csharp
  - vb
  name: CreateClientAsync(String, CancellationToken)
  nameWithType: WcfCommunicationClientFactory<TServiceContract>.CreateClientAsync(String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>.CreateClientAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateClientAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
    startLine: 86
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nCreates a communication client for the given endpoint address.\n"
  example: []
  syntax:
    content: protected override Task<WcfCommunicationClient<TServiceContract>> CreateClientAsync(string endpoint, CancellationToken cancellationToken)
    content.vb: Protected Overrides Function CreateClientAsync(endpoint As String, cancellationToken As CancellationToken) As Task(Of WcfCommunicationClient(Of TServiceContract))
    parameters:
    - id: endpoint
      type: System.String
      description: Endpoint address where the service is listening
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
      description: The communication client that was created
  overridden: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.CreateClientAsync(System.String,System.Threading.CancellationToken)
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateClientAsync*
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract).CreateClientAsync(String, CancellationToken)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract).CreateClientAsync(System.String, System.Threading.CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.ValidateClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.ValidateClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  id: ValidateClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  langs:
  - csharp
  - vb
  name: ValidateClient(WcfCommunicationClient<TServiceContract>)
  nameWithType: WcfCommunicationClientFactory<TServiceContract>.ValidateClient(WcfCommunicationClient<TServiceContract>)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>.ValidateClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ValidateClient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
    startLine: 144
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nReturns true if the client is still valid. Connection oriented transports can use this method to indicate that the client is no longer\nconnected to the service.\n"
  example: []
  syntax:
    content: protected override bool ValidateClient(WcfCommunicationClient<TServiceContract> client)
    content.vb: Protected Overrides Function ValidateClient(client As WcfCommunicationClient(Of TServiceContract)) As Boolean
    parameters:
    - id: client
      type: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}
      description: WCF communication client
    return:
      type: System.Boolean
      description: true if the client is valid, false otherwise
  overridden: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ValidateClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}})
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.ValidateClient*
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract).ValidateClient(WcfCommunicationClient(Of TServiceContract))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract).ValidateClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract))
  name.vb: ValidateClient(WcfCommunicationClient(Of TServiceContract))
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.ValidateClient(System.String,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.ValidateClient(System.String,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  id: ValidateClient(System.String,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  langs:
  - csharp
  - vb
  name: ValidateClient(String, WcfCommunicationClient<TServiceContract>)
  nameWithType: WcfCommunicationClientFactory<TServiceContract>.ValidateClient(String, WcfCommunicationClient<TServiceContract>)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>.ValidateClient(System.String, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ValidateClient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
    startLine: 155
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nReturns true if the client is still valid and connected to the endpoint specified in the parameter.\n"
  example: []
  syntax:
    content: protected override bool ValidateClient(string endpoint, WcfCommunicationClient<TServiceContract> client)
    content.vb: Protected Overrides Function ValidateClient(endpoint As String, client As WcfCommunicationClient(Of TServiceContract)) As Boolean
    parameters:
    - id: endpoint
      type: System.String
      description: endpoint string
    - id: client
      type: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}
      description: WCF communication client
    return:
      type: System.Boolean
      description: true if the client is valid, false otherwise
  overridden: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ValidateClient(System.String,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}})
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.ValidateClient*
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract).ValidateClient(String, WcfCommunicationClient(Of TServiceContract))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract).ValidateClient(System.String, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract))
  name.vb: ValidateClient(String, WcfCommunicationClient(Of TServiceContract))
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.AbortClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.AbortClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  id: AbortClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1
  langs:
  - csharp
  - vb
  name: AbortClient(WcfCommunicationClient<TServiceContract>)
  nameWithType: WcfCommunicationClientFactory<TServiceContract>.AbortClient(WcfCommunicationClient<TServiceContract>)
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>.AbortClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AbortClient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Communication/Wcf/Client/WcfCommunicationClientFactory.cs
    startLine: 166
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  summary: "\nAborts the given client\n"
  example: []
  syntax:
    content: protected override void AbortClient(WcfCommunicationClient<TServiceContract> client)
    content.vb: Protected Overrides Sub AbortClient(client As WcfCommunicationClient(Of TServiceContract))
    parameters:
    - id: client
      type: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}
      description: Communication client
  overridden: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.AbortClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}})
  overload: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.AbortClient*
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract).AbortClient(WcfCommunicationClient(Of TServiceContract))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract).AbortClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract))
  name.vb: AbortClient(WcfCommunicationClient(Of TServiceContract))
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  isExternal: false
  name: ICommunicationClientFactory<TCommunicationClient>
  nameWithType: ICommunicationClientFactory<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient)
  name.vb: ICommunicationClientFactory(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
  isExternal: false
  name: WcfCommunicationClient<TServiceContract>
  nameWithType: WcfCommunicationClient<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>
  nameWithType.vb: WcfCommunicationClient(Of TServiceContract)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)
  name.vb: WcfCommunicationClient(Of TServiceContract)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
  isExternal: false
  name: WcfCommunicationListener<TServiceContract>
  nameWithType: WcfCommunicationListener<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener<TServiceContract>
  nameWithType.vb: WcfCommunicationListener(Of TServiceContract)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener(Of TServiceContract)
  name.vb: WcfCommunicationListener(Of TServiceContract)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
    name: WcfCommunicationListener
    nameWithType: WcfCommunicationListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener`1
    name: WcfCommunicationListener
    nameWithType: WcfCommunicationListener
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Runtime.WcfCommunicationListener
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  name: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract))
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract))
  name.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract))
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
    name: CommunicationClientFactoryBase
    nameWithType: CommunicationClientFactoryBase
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
    name: CommunicationClientFactoryBase
    nameWithType: CommunicationClientFactoryBase
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  name: ICommunicationClientFactory<WcfCommunicationClient<TServiceContract>>
  nameWithType: ICommunicationClientFactory<WcfCommunicationClient<TServiceContract>>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>
  nameWithType.vb: ICommunicationClientFactory(Of WcfCommunicationClient(Of TServiceContract))
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract))
  name.vb: ICommunicationClientFactory(Of WcfCommunicationClient(Of TServiceContract))
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ServiceResolver
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.ServiceResolver
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ServiceResolver
  name: ServiceResolver
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.ServiceResolver
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.ServiceResolver
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).ServiceResolver
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).ServiceResolver
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ExceptionHandlers
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.ExceptionHandlers
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ExceptionHandlers
  name: ExceptionHandlers
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.ExceptionHandlers
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.ExceptionHandlers
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).ExceptionHandlers
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).ExceptionHandlers
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.TraceId
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.TraceId
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.TraceId
  name: TraceId
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.TraceId
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.TraceId
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).TraceId
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).TraceId
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ClientConnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.ClientConnected
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientConnected
  name: ClientConnected
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.ClientConnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.ClientConnected
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).ClientConnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).ClientConnected
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ClientDisconnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.ClientDisconnected
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientDisconnected
  name: ClientDisconnected
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.ClientDisconnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.ClientDisconnected
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).ClientDisconnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).ClientDisconnected
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  name: GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  name: GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}},Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0},Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  name: ReportOperationExceptionAsync(WcfCommunicationClient<TServiceContract>, ExceptionInformation, OperationRetrySettings, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.ReportOperationExceptionAsync(WcfCommunicationClient<TServiceContract>, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).ReportOperationExceptionAsync(WcfCommunicationClient(Of TServiceContract), ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).ReportOperationExceptionAsync(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract), Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  name.vb: ReportOperationExceptionAsync(WcfCommunicationClient(Of TServiceContract), ExceptionInformation, OperationRetrySettings, CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<WcfCommunicationClientFactory<TServiceContract>>()
  nameWithType: ByteArraySerializer.Serialize<WcfCommunicationClientFactory<TServiceContract>>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of WcfCommunicationClientFactory(Of TServiceContract))()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract))()
  name.vb: Serialize(Of WcfCommunicationClientFactory(Of TServiceContract))()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<WcfCommunicationClientFactory<TServiceContract>>
    nameWithType: ByteArraySerializer.Serialize<WcfCommunicationClientFactory<TServiceContract>>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of WcfCommunicationClientFactory(Of TServiceContract))
    nameWithType: ByteArraySerializer.Serialize(Of WcfCommunicationClientFactory(Of TServiceContract))
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
  isExternal: false
  name: CommunicationClientFactoryBase<TCommunicationClient>
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient)
  name.vb: CommunicationClientFactoryBase(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
    name: CommunicationClientFactoryBase
    nameWithType: CommunicationClientFactoryBase
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1
    name: CommunicationClientFactoryBase
    nameWithType: CommunicationClientFactoryBase
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ServiceResolver
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ServiceResolver
  isExternal: false
  name: ServiceResolver
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ServiceResolver
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ServiceResolver
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ServiceResolver
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ServiceResolver
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ExceptionHandlers
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ExceptionHandlers
  isExternal: false
  name: ExceptionHandlers
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ExceptionHandlers
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ExceptionHandlers
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ExceptionHandlers
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ExceptionHandlers
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.TraceId
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.TraceId
  isExternal: false
  name: TraceId
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.TraceId
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.TraceId
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).TraceId
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).TraceId
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientConnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientConnected
  isExternal: false
  name: ClientConnected
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ClientConnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ClientConnected
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ClientConnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ClientConnected
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientDisconnected
  commentId: E:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ClientDisconnected
  isExternal: false
  name: ClientDisconnected
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ClientDisconnected
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ClientDisconnected
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ClientDisconnected
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ClientDisconnected
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isExternal: true
  name: GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync(Uri, ServicePartitionKey, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isExternal: true
  name: GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync(ResolvedServicePartition, TargetReplicaSelector, String, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync(System.Fabric.ResolvedServicePartition, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.GetClientAsync(System.Fabric.ResolvedServicePartition,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: GetClientAsync
    nameWithType: CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).GetClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.ResolvedServicePartition
    name: ResolvedServicePartition
    nameWithType: ResolvedServicePartition
    fullName: System.Fabric.ResolvedServicePartition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
  isExternal: true
  name: ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ReportOperationExceptionAsync(TCommunicationClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ReportOperationExceptionAsync(TCommunicationClient, ExceptionInformation, OperationRetrySettings, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ReportOperationExceptionAsync(TCommunicationClient, Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation, Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ReportOperationExceptionAsync(`0,Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation,Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings,System.Threading.CancellationToken)
    name: ReportOperationExceptionAsync
    nameWithType: CommunicationClientFactoryBase(Of TCommunicationClient).ReportOperationExceptionAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ReportOperationExceptionAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
    name: ExceptionInformation
    nameWithType: ExceptionInformation
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ExceptionInformation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
    name: OperationRetrySettings
    nameWithType: OperationRetrySettings
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.OperationRetrySettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpClientBinding(System.Int64,System.TimeSpan,System.TimeSpan)
- uid: System.ServiceModel.NetTcpBinding
  commentId: T:System.ServiceModel.NetTcpBinding
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver.GetDefault
  commentId: M:Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver.GetDefault
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.#ctor
  isExternal: false
  name: WcfCommunicationClientFactory
  nameWithType: WcfCommunicationClientFactory<TServiceContract>.WcfCommunicationClientFactory
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>.WcfCommunicationClientFactory
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract).WcfCommunicationClientFactory
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract).WcfCommunicationClientFactory
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IExceptionHandler>
  nameWithType: IEnumerable<IExceptionHandler>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler>
  nameWithType.vb: IEnumerable(Of IExceptionHandler)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler)
  name.vb: IEnumerable(Of IExceptionHandler)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
    name: IExceptionHandler
    nameWithType: IExceptionHandler
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.IExceptionHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
  commentId: T:Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
  parent: Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: IServicePartitionResolver
  nameWithType: IServicePartitionResolver
  fullName: Microsoft.ServiceFabric.Services.Client.IServicePartitionResolver
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.ServiceFabric.Services.Client
  commentId: N:Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Client
  nameWithType: Microsoft.ServiceFabric.Services.Client
  fullName: Microsoft.ServiceFabric.Services.Client
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateWcfCommunicationClient*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateWcfCommunicationClient
  isExternal: false
  name: CreateWcfCommunicationClient
  nameWithType: WcfCommunicationClientFactory<TServiceContract>.CreateWcfCommunicationClient
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>.CreateWcfCommunicationClient
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract).CreateWcfCommunicationClient
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract).CreateWcfCommunicationClient
- uid: '{TServiceContract}'
  commentId: '!:TServiceContract'
  definition: TServiceContract
  name: TServiceContract
  nameWithType: TServiceContract
  fullName: TServiceContract
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}
  parent: Microsoft.ServiceFabric.Services.Communication.Wcf.Client
  definition: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
  name: WcfCommunicationClient<TServiceContract>
  nameWithType: WcfCommunicationClient<TServiceContract>
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>
  nameWithType.vb: WcfCommunicationClient(Of TServiceContract)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)
  name.vb: WcfCommunicationClient(Of TServiceContract)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
- uid: TServiceContract
  isExternal: false
  name: TServiceContract
  nameWithType: TServiceContract
  fullName: TServiceContract
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.CreateClientAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.CreateClientAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
  name: CreateClientAsync(String, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.CreateClientAsync(String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.CreateClientAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).CreateClientAsync(String, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).CreateClientAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
    name: CreateClientAsync
    nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.CreateClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.CreateClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
    name: CreateClientAsync
    nameWithType: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).CreateClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).CreateClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateClientAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.CreateClientAsync
  isExternal: false
  name: CreateClientAsync
  nameWithType: WcfCommunicationClientFactory<TServiceContract>.CreateClientAsync
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>.CreateClientAsync
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract).CreateClientAsync
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract).CreateClientAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<WcfCommunicationClient<TServiceContract>>
  nameWithType: Task<WcfCommunicationClient<TServiceContract>>
  fullName: System.Threading.Tasks.Task<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>
  nameWithType.vb: Task(Of WcfCommunicationClient(Of TServiceContract))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract))
  name.vb: Task(Of WcfCommunicationClient(Of TServiceContract))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: CreateClientAsync(String, CancellationToken)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.CreateClientAsync(String, CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.CreateClientAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).CreateClientAsync(String, CancellationToken)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).CreateClientAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
    name: CreateClientAsync
    nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.CreateClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.CreateClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.CreateClientAsync(System.String,System.Threading.CancellationToken)
    name: CreateClientAsync
    nameWithType: CommunicationClientFactoryBase(Of TCommunicationClient).CreateClientAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).CreateClientAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ValidateClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}})
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.ValidateClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(`0)
  name: ValidateClient(WcfCommunicationClient<TServiceContract>)
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.ValidateClient(WcfCommunicationClient<TServiceContract>)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.ValidateClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>)
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).ValidateClient(WcfCommunicationClient(Of TServiceContract))
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).ValidateClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract))
  name.vb: ValidateClient(WcfCommunicationClient(Of TServiceContract))
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(`0)
    name: ValidateClient
    nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.ValidateClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.ValidateClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(`0)
    name: ValidateClient
    nameWithType: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).ValidateClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).ValidateClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.ValidateClient*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.ValidateClient
  isExternal: false
  name: ValidateClient
  nameWithType: WcfCommunicationClientFactory<TServiceContract>.ValidateClient
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>.ValidateClient
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract).ValidateClient
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract).ValidateClient
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(`0)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(`0)
  isExternal: false
  name: ValidateClient(TCommunicationClient)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient(TCommunicationClient)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient(TCommunicationClient)
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient(TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient(TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(`0)
    name: ValidateClient
    nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(`0)
    name: ValidateClient
    nameWithType: CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.ValidateClient(System.String,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}})
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.ValidateClient(System.String,Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(System.String,`0)
  name: ValidateClient(String, WcfCommunicationClient<TServiceContract>)
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.ValidateClient(String, WcfCommunicationClient<TServiceContract>)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.ValidateClient(System.String, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>)
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).ValidateClient(String, WcfCommunicationClient(Of TServiceContract))
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).ValidateClient(System.String, Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract))
  name.vb: ValidateClient(String, WcfCommunicationClient(Of TServiceContract))
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(System.String,`0)
    name: ValidateClient
    nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.ValidateClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.ValidateClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(System.String,`0)
    name: ValidateClient
    nameWithType: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).ValidateClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).ValidateClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(System.String,`0)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(System.String,`0)
  isExternal: true
  name: ValidateClient(String, TCommunicationClient)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient(String, TCommunicationClient)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient(System.String, TCommunicationClient)
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient(String, TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient(System.String, TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(System.String,`0)
    name: ValidateClient
    nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.ValidateClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.ValidateClient(System.String,`0)
    name: ValidateClient
    nameWithType: CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).ValidateClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}.AbortClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}})
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0}}.AbortClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{`0})
  parent: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase{Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient{{TServiceContract}}}
  definition: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient(`0)
  name: AbortClient(WcfCommunicationClient<TServiceContract>)
  nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.AbortClient(WcfCommunicationClient<TServiceContract>)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.AbortClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>)
  nameWithType.vb: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).AbortClient(WcfCommunicationClient(Of TServiceContract))
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).AbortClient(Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract))
  name.vb: AbortClient(WcfCommunicationClient(Of TServiceContract))
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient(`0)
    name: AbortClient
    nameWithType: CommunicationClientFactoryBase<WcfCommunicationClient<TServiceContract>>.AbortClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient<TServiceContract>>.AbortClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: <
    nameWithType: <
    fullName: <
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient(`0)
    name: AbortClient
    nameWithType: CommunicationClientFactoryBase(Of WcfCommunicationClient(Of TServiceContract)).AbortClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient(Of TServiceContract)).AbortClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient`1
    name: WcfCommunicationClient
    nameWithType: WcfCommunicationClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClient
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TServiceContract
    nameWithType: TServiceContract
    fullName: TServiceContract
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.AbortClient*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory`1.AbortClient
  isExternal: false
  name: AbortClient
  nameWithType: WcfCommunicationClientFactory<TServiceContract>.AbortClient
  fullName: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory<TServiceContract>.AbortClient
  nameWithType.vb: WcfCommunicationClientFactory(Of TServiceContract).AbortClient
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Wcf.Client.WcfCommunicationClientFactory(Of TServiceContract).AbortClient
- uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient(`0)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient(`0)
  isExternal: false
  name: AbortClient(TCommunicationClient)
  nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.AbortClient(TCommunicationClient)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.AbortClient(TCommunicationClient)
  nameWithType.vb: CommunicationClientFactoryBase(Of TCommunicationClient).AbortClient(TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).AbortClient(TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient(`0)
    name: AbortClient
    nameWithType: CommunicationClientFactoryBase<TCommunicationClient>.AbortClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase<TCommunicationClient>.AbortClient
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase`1.AbortClient(`0)
    name: AbortClient
    nameWithType: CommunicationClientFactoryBase(Of TCommunicationClient).AbortClient
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.CommunicationClientFactoryBase(Of TCommunicationClient).AbortClient
  - name: (
    nameWithType: (
    fullName: (
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
