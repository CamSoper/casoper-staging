### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.ClusterHealthChunk
  commentId: T:System.Fabric.Health.ClusterHealthChunk
  id: ClusterHealthChunk
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.ClusterHealthChunk.ApplicationHealthStateChunks
  - System.Fabric.Health.ClusterHealthChunk.HealthState
  - System.Fabric.Health.ClusterHealthChunk.NodeHealthStateChunks
  - System.Fabric.Health.ClusterHealthChunk.ToString
  langs:
  - csharp
  - vb
  name: ClusterHealthChunk
  nameWithType: ClusterHealthChunk
  fullName: System.Fabric.Health.ClusterHealthChunk
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealthChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClusterHealthChunk
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealthChunk.cs
    startLine: 16
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nRepresents the cluster state chunk, which includes health information about the cluster.\n"
  example: []
  syntax:
    content: public sealed class ClusterHealthChunk
    content.vb: Public NotInheritable Class ClusterHealthChunk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.ClusterHealthChunk.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.ClusterHealthChunk.HealthState
  commentId: P:System.Fabric.Health.ClusterHealthChunk.HealthState
  id: HealthState
  parent: System.Fabric.Health.ClusterHealthChunk
  langs:
  - csharp
  - vb
  name: HealthState
  nameWithType: ClusterHealthChunk.HealthState
  fullName: System.Fabric.Health.ClusterHealthChunk.HealthState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealthChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthState
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealthChunk.cs
    startLine: 29
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the cluster aggregated health state.\n"
  example: []
  syntax:
    content: public HealthState HealthState { get; }
    content.vb: Public ReadOnly Property HealthState As HealthState
    parameters: []
    return:
      type: System.Fabric.Health.HealthState
      description: The cluster aggregated health state.
  overload: System.Fabric.Health.ClusterHealthChunk.HealthState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ClusterHealthChunk.NodeHealthStateChunks
  commentId: P:System.Fabric.Health.ClusterHealthChunk.NodeHealthStateChunks
  id: NodeHealthStateChunks
  parent: System.Fabric.Health.ClusterHealthChunk
  langs:
  - csharp
  - vb
  name: NodeHealthStateChunks
  nameWithType: ClusterHealthChunk.NodeHealthStateChunks
  fullName: System.Fabric.Health.ClusterHealthChunk.NodeHealthStateChunks
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealthChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeHealthStateChunks
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealthChunk.cs
    startLine: 42
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the list of the node health state chunks that respect the input filters.\n"
  remarks: "\n<p>By default, no children are included in results. Users can request to include\nsome children based on desired health or other information.</p>"
  example: []
  syntax:
    content: public NodeHealthStateChunkList NodeHealthStateChunks { get; }
    content.vb: Public ReadOnly Property NodeHealthStateChunks As NodeHealthStateChunkList
    parameters: []
    return:
      type: System.Fabric.Health.NodeHealthStateChunkList
      description: The list of the node health state chunks that respect the input filters.
  overload: System.Fabric.Health.ClusterHealthChunk.NodeHealthStateChunks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ClusterHealthChunk.ApplicationHealthStateChunks
  commentId: P:System.Fabric.Health.ClusterHealthChunk.ApplicationHealthStateChunks
  id: ApplicationHealthStateChunks
  parent: System.Fabric.Health.ClusterHealthChunk
  langs:
  - csharp
  - vb
  name: ApplicationHealthStateChunks
  nameWithType: ClusterHealthChunk.ApplicationHealthStateChunks
  fullName: System.Fabric.Health.ClusterHealthChunk.ApplicationHealthStateChunks
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealthChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationHealthStateChunks
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealthChunk.cs
    startLine: 55
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the list of the application health state chunks that respect the input filters.\n"
  remarks: "\n<p>By default, no children are included in results. Users can request to include\nsome children based on desired health or other information.</p>"
  example: []
  syntax:
    content: public ApplicationHealthStateChunkList ApplicationHealthStateChunks { get; }
    content.vb: Public ReadOnly Property ApplicationHealthStateChunks As ApplicationHealthStateChunkList
    parameters: []
    return:
      type: System.Fabric.Health.ApplicationHealthStateChunkList
      description: The list of the application health state chunks that respect the input filters.
  overload: System.Fabric.Health.ClusterHealthChunk.ApplicationHealthStateChunks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ClusterHealthChunk.ToString
  commentId: M:System.Fabric.Health.ClusterHealthChunk.ToString
  id: ToString
  parent: System.Fabric.Health.ClusterHealthChunk
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ClusterHealthChunk.ToString()
  fullName: System.Fabric.Health.ClusterHealthChunk.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealthChunk.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ClusterHealthChunk.cs
    startLine: 65
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nCreates a string description of the cluster chunk.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: String description of the cluster chunk.
  overridden: System.Object.ToString
  overload: System.Fabric.Health.ClusterHealthChunk.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ClusterHealthChunk.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ClusterHealthChunk>()
  nameWithType: ByteArraySerializer.Serialize<ClusterHealthChunk>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ClusterHealthChunk>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ClusterHealthChunk)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ClusterHealthChunk)()
  name.vb: Serialize(Of ClusterHealthChunk)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ClusterHealthChunk>
    nameWithType: ByteArraySerializer.Serialize<ClusterHealthChunk>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ClusterHealthChunk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ClusterHealthChunk)
    nameWithType: ByteArraySerializer.Serialize(Of ClusterHealthChunk)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ClusterHealthChunk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.ClusterHealthChunk.HealthState*
  commentId: Overload:System.Fabric.Health.ClusterHealthChunk.HealthState
  isExternal: false
  name: HealthState
  nameWithType: ClusterHealthChunk.HealthState
  fullName: System.Fabric.Health.ClusterHealthChunk.HealthState
- uid: System.Fabric.Health.HealthState
  commentId: T:System.Fabric.Health.HealthState
  parent: System.Fabric.Health
  isExternal: false
  name: HealthState
  nameWithType: HealthState
  fullName: System.Fabric.Health.HealthState
- uid: System.Fabric.Health.ClusterHealthChunk.NodeHealthStateChunks*
  commentId: Overload:System.Fabric.Health.ClusterHealthChunk.NodeHealthStateChunks
  isExternal: false
  name: NodeHealthStateChunks
  nameWithType: ClusterHealthChunk.NodeHealthStateChunks
  fullName: System.Fabric.Health.ClusterHealthChunk.NodeHealthStateChunks
- uid: System.Fabric.Health.NodeHealthStateChunkList
  commentId: T:System.Fabric.Health.NodeHealthStateChunkList
  parent: System.Fabric.Health
  isExternal: false
  name: NodeHealthStateChunkList
  nameWithType: NodeHealthStateChunkList
  fullName: System.Fabric.Health.NodeHealthStateChunkList
- uid: System.Fabric.Health.ClusterHealthChunk.ApplicationHealthStateChunks*
  commentId: Overload:System.Fabric.Health.ClusterHealthChunk.ApplicationHealthStateChunks
  isExternal: false
  name: ApplicationHealthStateChunks
  nameWithType: ClusterHealthChunk.ApplicationHealthStateChunks
  fullName: System.Fabric.Health.ClusterHealthChunk.ApplicationHealthStateChunks
- uid: System.Fabric.Health.ApplicationHealthStateChunkList
  commentId: T:System.Fabric.Health.ApplicationHealthStateChunkList
  parent: System.Fabric.Health
  isExternal: false
  name: ApplicationHealthStateChunkList
  nameWithType: ApplicationHealthStateChunkList
  fullName: System.Fabric.Health.ApplicationHealthStateChunkList
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ClusterHealthChunk.ToString*
  commentId: Overload:System.Fabric.Health.ClusterHealthChunk.ToString
  isExternal: false
  name: ToString
  nameWithType: ClusterHealthChunk.ToString
  fullName: System.Fabric.Health.ClusterHealthChunk.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
