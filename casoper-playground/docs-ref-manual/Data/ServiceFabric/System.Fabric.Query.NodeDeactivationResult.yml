### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.NodeDeactivationResult
  commentId: T:System.Fabric.Query.NodeDeactivationResult
  id: NodeDeactivationResult
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.NodeDeactivationResult.EffectiveIntent
  - System.Fabric.Query.NodeDeactivationResult.PendingSafetyChecks
  - System.Fabric.Query.NodeDeactivationResult.Status
  - System.Fabric.Query.NodeDeactivationResult.Tasks
  langs:
  - csharp
  - vb
  name: NodeDeactivationResult
  nameWithType: NodeDeactivationResult
  fullName: System.Fabric.Query.NodeDeactivationResult
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeDeactivationResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeDeactivationResult
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeDeactivationResult.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Contains the detailed deactivation information about a node.</p>\n"
  example: []
  syntax:
    content: public sealed class NodeDeactivationResult
    content.vb: Public NotInheritable Class NodeDeactivationResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.NodeDeactivationResult.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.NodeDeactivationResult.EffectiveIntent
  commentId: P:System.Fabric.Query.NodeDeactivationResult.EffectiveIntent
  id: EffectiveIntent
  parent: System.Fabric.Query.NodeDeactivationResult
  langs:
  - csharp
  - vb
  name: EffectiveIntent
  nameWithType: NodeDeactivationResult.EffectiveIntent
  fullName: System.Fabric.Query.NodeDeactivationResult.EffectiveIntent
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeDeactivationResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EffectiveIntent
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeDeactivationResult.cs
    startLine: 38
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>A node may get deactivated by multiple tasks at the same time. Each task may specify a different node \ndeactivation intent. In this case, effective intent is highest intent among all deactivation tasks, where ordering \nis defined as Pause &lt; Restart &lt; RemoveData.</p>\n"
  example: []
  syntax:
    content: public NodeDeactivationIntent EffectiveIntent { get; }
    content.vb: Public ReadOnly Property EffectiveIntent As NodeDeactivationIntent
    parameters: []
    return:
      type: System.Fabric.NodeDeactivationIntent
      description: "\n<p>Returns <xref href=\"System.Fabric.NodeDeactivationIntent\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Query.NodeDeactivationResult.EffectiveIntent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.NodeDeactivationResult.Status
  commentId: P:System.Fabric.Query.NodeDeactivationResult.Status
  id: Status
  parent: System.Fabric.Query.NodeDeactivationResult
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: NodeDeactivationResult.Status
  fullName: System.Fabric.Query.NodeDeactivationResult.Status
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeDeactivationResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Status
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeDeactivationResult.cs
    startLine: 47
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Specifies the deactivation status for a node.</p>\n"
  example: []
  syntax:
    content: public NodeDeactivationStatus Status { get; }
    content.vb: Public ReadOnly Property Status As NodeDeactivationStatus
    parameters: []
    return:
      type: System.Fabric.NodeDeactivationStatus
      description: "\n<p>Returns <xref href=\"System.Fabric.NodeDeactivationStatus\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Query.NodeDeactivationResult.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.NodeDeactivationResult.Tasks
  commentId: P:System.Fabric.Query.NodeDeactivationResult.Tasks
  id: Tasks
  parent: System.Fabric.Query.NodeDeactivationResult
  langs:
  - csharp
  - vb
  name: Tasks
  nameWithType: NodeDeactivationResult.Tasks
  fullName: System.Fabric.Query.NodeDeactivationResult.Tasks
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeDeactivationResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Tasks
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeDeactivationResult.cs
    startLine: 56
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Contains information about all the node deactivation tasks for a node.</p>\n"
  example: []
  syntax:
    content: public IList<NodeDeactivationTask> Tasks { get; }
    content.vb: Public ReadOnly Property Tasks As IList(Of NodeDeactivationTask)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Query.NodeDeactivationTask}
      description: "\n<p>Returns <xref href=\"System.Collections.Generic.IList%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Query.NodeDeactivationResult.Tasks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.NodeDeactivationResult.PendingSafetyChecks
  commentId: P:System.Fabric.Query.NodeDeactivationResult.PendingSafetyChecks
  id: PendingSafetyChecks
  parent: System.Fabric.Query.NodeDeactivationResult
  langs:
  - csharp
  - vb
  name: PendingSafetyChecks
  nameWithType: NodeDeactivationResult.PendingSafetyChecks
  fullName: System.Fabric.Query.NodeDeactivationResult.PendingSafetyChecks
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeDeactivationResult.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PendingSafetyChecks
    path: src/prod/src/managed/Api/src/System/Fabric/Query/NodeDeactivationResult.cs
    startLine: 67
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>\nGets a list of safety checks that are currently failing.\n</p>\n"
  example: []
  syntax:
    content: public IList<SafetyCheck> PendingSafetyChecks { get; }
    content.vb: Public ReadOnly Property PendingSafetyChecks As IList(Of SafetyCheck)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.SafetyCheck}
      description: "\n<p>The list of failing safety checks.</p>\n"
  overload: System.Fabric.Query.NodeDeactivationResult.PendingSafetyChecks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.NodeDeactivationResult.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NodeDeactivationResult>()
  nameWithType: ByteArraySerializer.Serialize<NodeDeactivationResult>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.NodeDeactivationResult>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NodeDeactivationResult)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.NodeDeactivationResult)()
  name.vb: Serialize(Of NodeDeactivationResult)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NodeDeactivationResult>
    nameWithType: ByteArraySerializer.Serialize<NodeDeactivationResult>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.NodeDeactivationResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NodeDeactivationResult)
    nameWithType: ByteArraySerializer.Serialize(Of NodeDeactivationResult)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.NodeDeactivationResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.NodeDeactivationIntent
  commentId: T:System.Fabric.NodeDeactivationIntent
  parent: System.Fabric
  isExternal: false
  name: NodeDeactivationIntent
  nameWithType: NodeDeactivationIntent
  fullName: System.Fabric.NodeDeactivationIntent
- uid: System.Fabric.Query.NodeDeactivationResult.EffectiveIntent*
  commentId: Overload:System.Fabric.Query.NodeDeactivationResult.EffectiveIntent
  isExternal: false
  name: EffectiveIntent
  nameWithType: NodeDeactivationResult.EffectiveIntent
  fullName: System.Fabric.Query.NodeDeactivationResult.EffectiveIntent
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.NodeDeactivationStatus
  commentId: T:System.Fabric.NodeDeactivationStatus
  parent: System.Fabric
  isExternal: false
  name: NodeDeactivationStatus
  nameWithType: NodeDeactivationStatus
  fullName: System.Fabric.NodeDeactivationStatus
- uid: System.Fabric.Query.NodeDeactivationResult.Status*
  commentId: Overload:System.Fabric.Query.NodeDeactivationResult.Status
  isExternal: false
  name: Status
  nameWithType: NodeDeactivationResult.Status
  fullName: System.Fabric.Query.NodeDeactivationResult.Status
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.NodeDeactivationResult.Tasks*
  commentId: Overload:System.Fabric.Query.NodeDeactivationResult.Tasks
  isExternal: false
  name: Tasks
  nameWithType: NodeDeactivationResult.Tasks
  fullName: System.Fabric.Query.NodeDeactivationResult.Tasks
- uid: System.Collections.Generic.IList{System.Fabric.Query.NodeDeactivationTask}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Query.NodeDeactivationTask}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<NodeDeactivationTask>
  nameWithType: IList<NodeDeactivationTask>
  fullName: System.Collections.Generic.IList<System.Fabric.Query.NodeDeactivationTask>
  nameWithType.vb: IList(Of NodeDeactivationTask)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Query.NodeDeactivationTask)
  name.vb: IList(Of NodeDeactivationTask)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.NodeDeactivationTask
    name: NodeDeactivationTask
    nameWithType: NodeDeactivationTask
    fullName: System.Fabric.Query.NodeDeactivationTask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.NodeDeactivationTask
    name: NodeDeactivationTask
    nameWithType: NodeDeactivationTask
    fullName: System.Fabric.Query.NodeDeactivationTask
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Fabric.Query.NodeDeactivationResult.PendingSafetyChecks*
  commentId: Overload:System.Fabric.Query.NodeDeactivationResult.PendingSafetyChecks
  isExternal: false
  name: PendingSafetyChecks
  nameWithType: NodeDeactivationResult.PendingSafetyChecks
  fullName: System.Fabric.Query.NodeDeactivationResult.PendingSafetyChecks
- uid: System.Collections.Generic.IList{System.Fabric.SafetyCheck}
  commentId: T:System.Collections.Generic.IList{System.Fabric.SafetyCheck}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SafetyCheck>
  nameWithType: IList<SafetyCheck>
  fullName: System.Collections.Generic.IList<System.Fabric.SafetyCheck>
  nameWithType.vb: IList(Of SafetyCheck)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.SafetyCheck)
  name.vb: IList(Of SafetyCheck)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.SafetyCheck
    name: SafetyCheck
    nameWithType: SafetyCheck
    fullName: System.Fabric.SafetyCheck
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.SafetyCheck
    name: SafetyCheck
    nameWithType: SafetyCheck
    fullName: System.Fabric.SafetyCheck
  - name: )
    nameWithType: )
    fullName: )
