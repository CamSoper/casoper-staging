### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings
  id: ActorConcurrencySettings
  parent: Microsoft.ServiceFabric.Actors.Runtime
  children:
  - Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.#ctor
  - Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.LockTimeout
  - Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.ReentrancyMode
  langs:
  - csharp
  - vb
  name: ActorConcurrencySettings
  nameWithType: ActorConcurrencySettings
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorConcurrencySettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ActorConcurrencySettings
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorConcurrencySettings.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nThe method calls on an actor dispatched via in turn with support for logical call context based reentrancy. This class\nprovides the settings to configure the turn based concurrency lock for actors.\n"
  example: []
  syntax:
    content: public sealed class ActorConcurrencySettings
    content.vb: Public NotInheritable Class ActorConcurrencySettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.#ctor
  commentId: M:Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.#ctor
  id: '#ctor'
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings
  langs:
  - csharp
  - vb
  name: ActorConcurrencySettings()
  nameWithType: ActorConcurrencySettings.ActorConcurrencySettings()
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.ActorConcurrencySettings()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorConcurrencySettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorConcurrencySettings.cs
    startLine: 21
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nInitializes a new instance of the ActorConcurrencySettings class.\n"
  example: []
  syntax:
    content: public ActorConcurrencySettings()
    content.vb: Public Sub New
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.ReentrancyMode
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.ReentrancyMode
  id: ReentrancyMode
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings
  langs:
  - csharp
  - vb
  name: ReentrancyMode
  nameWithType: ActorConcurrencySettings.ReentrancyMode
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.ReentrancyMode
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorConcurrencySettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReentrancyMode
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorConcurrencySettings.cs
    startLine: 37
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets or sets Reentrancy mode for actor method calls.\n"
  example: []
  syntax:
    content: public ActorReentrancyMode ReentrancyMode { get; set; }
    content.vb: Public Property ReentrancyMode As ActorReentrancyMode
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Actors.Runtime.ActorReentrancyMode
      description: <xref href="Microsoft.ServiceFabric.Actors.Runtime.ActorReentrancyMode" data-throw-if-not-resolved="false"></xref> for the actor method calls.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.ReentrancyMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.LockTimeout
  commentId: P:Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.LockTimeout
  id: LockTimeout
  parent: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings
  langs:
  - csharp
  - vb
  name: LockTimeout
  nameWithType: ActorConcurrencySettings.LockTimeout
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.LockTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorConcurrencySettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LockTimeout
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Runtime/ActorConcurrencySettings.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Runtime
  summary: "\nGets or sets timeout for the turn based concurrency lock. If the runtime cannot acquire the lock to dispatch the method\ncall, it will throw <xref href=\"Microsoft.ServiceFabric.Actors.ActorConcurrencyLockTimeoutException\" data-throw-if-not-resolved=\"false\"></xref> exception. \nThis exception will unwind the logical call chain and the call will retried up to a configured maximum amount of times.\n"
  remarks: "\nThe actual timeout value for the concurrency lock can be higher as the runtime will add a random interval to \nthe supplied value.\n"
  example: []
  syntax:
    content: public TimeSpan LockTimeout { get; set; }
    content.vb: Public Property LockTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: Timeout for the turn based concurrency lock.
  overload: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.LockTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.ServiceFabric.Actors.Runtime
  commentId: N:Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Runtime
  nameWithType: Microsoft.ServiceFabric.Actors.Runtime
  fullName: Microsoft.ServiceFabric.Actors.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ActorConcurrencySettings>()
  nameWithType: ByteArraySerializer.Serialize<ActorConcurrencySettings>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ActorConcurrencySettings)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings)()
  name.vb: Serialize(Of ActorConcurrencySettings)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ActorConcurrencySettings>
    nameWithType: ByteArraySerializer.Serialize<ActorConcurrencySettings>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ActorConcurrencySettings)
    nameWithType: ByteArraySerializer.Serialize(Of ActorConcurrencySettings)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.#ctor
  isExternal: false
  name: ActorConcurrencySettings
  nameWithType: ActorConcurrencySettings.ActorConcurrencySettings
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.ActorConcurrencySettings
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorReentrancyMode
  commentId: T:Microsoft.ServiceFabric.Actors.Runtime.ActorReentrancyMode
  parent: Microsoft.ServiceFabric.Actors.Runtime
  isExternal: false
  name: ActorReentrancyMode
  nameWithType: ActorReentrancyMode
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorReentrancyMode
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.ReentrancyMode*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.ReentrancyMode
  isExternal: false
  name: ReentrancyMode
  nameWithType: ActorConcurrencySettings.ReentrancyMode
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.ReentrancyMode
- uid: Microsoft.ServiceFabric.Actors.ActorConcurrencyLockTimeoutException
  commentId: T:Microsoft.ServiceFabric.Actors.ActorConcurrencyLockTimeoutException
  isExternal: false
  name: ActorConcurrencyLockTimeoutException
  nameWithType: ActorConcurrencyLockTimeoutException
  fullName: Microsoft.ServiceFabric.Actors.ActorConcurrencyLockTimeoutException
- uid: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.LockTimeout*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.LockTimeout
  isExternal: false
  name: LockTimeout
  nameWithType: ActorConcurrencySettings.LockTimeout
  fullName: Microsoft.ServiceFabric.Actors.Runtime.ActorConcurrencySettings.LockTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
