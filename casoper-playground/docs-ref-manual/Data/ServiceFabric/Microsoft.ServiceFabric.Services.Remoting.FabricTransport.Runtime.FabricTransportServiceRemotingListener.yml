### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  id: FabricTransportServiceRemotingListener
  parent: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  children:
  - Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService)
  - Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings)
  - Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,System.String)
  - Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler)
  - Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings)
  - Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.String)
  - Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  - Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: FabricTransportServiceRemotingListener
  nameWithType: FabricTransportServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FabricTransportServiceRemotingListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
    startLine: 17
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  summary: "\nAn <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener\" data-throw-if-not-resolved=\"false\"></xref> that uses\nfabric TCP transport to provide interface remoting for stateless and stateful services.\n"
  example: []
  syntax:
    content: 'public class FabricTransportServiceRemotingListener : IServiceRemotingListener, ICommunicationListener'
    content.vb: >-
      Public Class FabricTransportServiceRemotingListener
          Implements IServiceRemotingListener, ICommunicationListener
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService)
  id: '#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService)'
  parent: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  langs:
  - csharp
  - vb
  name: FabricTransportServiceRemotingListener(ServiceContext, IService)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext, IService)
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(System.Fabric.ServiceContext, Microsoft.ServiceFabric.Services.Remoting.IService)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
    startLine: 30
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  summary: "\nConstructs a fabric transport based service remoting listener.\n"
  example: []
  syntax:
    content: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, IService serviceImplementation)
    content.vb: Public Sub New(serviceContext As ServiceContext, serviceImplementation As IService)
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: "\nThe context of the service for which the remoting listener is being constructed.\n"
    - id: serviceImplementation
      type: Microsoft.ServiceFabric.Services.Remoting.IService
      description: "\nThe service implementation object.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,System.String)
  id: '#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,System.String)'
  parent: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  langs:
  - csharp
  - vb
  name: FabricTransportServiceRemotingListener(ServiceContext, IService, String)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext, IService, String)
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(System.Fabric.ServiceContext, Microsoft.ServiceFabric.Services.Remoting.IService, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
    startLine: 53
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  summary: "\nConstructs a fabric Transport based service remoting listener.\n"
  example: []
  syntax:
    content: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, IService serviceImplementation, string listenerSettingsConfigSectionName)
    content.vb: Public Sub New(serviceContext As ServiceContext, serviceImplementation As IService, listenerSettingsConfigSectionName As String)
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: "\nThe context of the service for which the remoting listener is being constructed.\n"
    - id: serviceImplementation
      type: Microsoft.ServiceFabric.Services.Remoting.IService
      description: "\nThe service implementation object.\n"
    - id: listenerSettingsConfigSectionName
      type: System.String
      description: "\nThe name of the configuration section in the configuration package named\n\"Config\" in the service manifest that defines the settings for the listener. \n"
  overload: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings)
  id: '#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings)'
  parent: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  langs:
  - csharp
  - vb
  name: FabricTransportServiceRemotingListener(ServiceContext, IService, FabricTransportListenerSettings)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext, IService, FabricTransportListenerSettings)
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(System.Fabric.ServiceContext, Microsoft.ServiceFabric.Services.Remoting.IService, Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
    startLine: 76
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  summary: "\nConstructs a fabric transport based service remoting listener that uses the specified settings.\n"
  example: []
  syntax:
    content: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, IService serviceImplementation, FabricTransportListenerSettings listenerSettings)
    content.vb: Public Sub New(serviceContext As ServiceContext, serviceImplementation As IService, listenerSettings As FabricTransportListenerSettings)
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: "\nThe context of the service for which the remoting listener is being constructed.\n"
    - id: serviceImplementation
      type: Microsoft.ServiceFabric.Services.Remoting.IService
      description: "\nThe service implementation object.\n"
    - id: listenerSettings
      type: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings
      description: "\nThe settings for the listener.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler)
  id: '#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler)'
  parent: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  langs:
  - csharp
  - vb
  name: FabricTransportServiceRemotingListener(ServiceContext, IServiceRemotingMessageHandler)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext, IServiceRemotingMessageHandler)
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(System.Fabric.ServiceContext, Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
    startLine: 97
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  summary: "\nConstructs a fabric transport based service remoting listener.\n"
  example: []
  syntax:
    content: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, IServiceRemotingMessageHandler messageHandler)
    content.vb: Public Sub New(serviceContext As ServiceContext, messageHandler As IServiceRemotingMessageHandler)
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: "\nThe context of the service for which the remoting listener is being constructed.\n"
    - id: messageHandler
      type: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
      description: "\nThe handler for processing remoting messages. As the messages are received,\nthe listener delivers them to this handler.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.String)
  id: '#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.String)'
  parent: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  langs:
  - csharp
  - vb
  name: FabricTransportServiceRemotingListener(ServiceContext, IServiceRemotingMessageHandler, String)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext, IServiceRemotingMessageHandler, String)
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(System.Fabric.ServiceContext, Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
    startLine: 118
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  summary: "\nConstructs a fabric transport based service remoting listener.\n"
  example: []
  syntax:
    content: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, IServiceRemotingMessageHandler messageHandler, string listenerSettingsConfigSectionName)
    content.vb: Public Sub New(serviceContext As ServiceContext, messageHandler As IServiceRemotingMessageHandler, listenerSettingsConfigSectionName As String)
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: "\nThe context of the service for which the remoting listener is being constructed.\n"
    - id: messageHandler
      type: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
      description: "\nThe handler for processing remoting messages. As the messages are received,\nthe listener delivers them to this handler.\n"
    - id: listenerSettingsConfigSectionName
      type: System.String
      description: "\nThe name of the configuration section in the configuration package named\n\"Config\" in the service manifest that defines the settings for the listener. \n"
  overload: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings)
  id: '#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings)'
  parent: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  langs:
  - csharp
  - vb
  name: FabricTransportServiceRemotingListener(ServiceContext, IServiceRemotingMessageHandler, FabricTransportListenerSettings)
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext, IServiceRemotingMessageHandler, FabricTransportListenerSettings)
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(System.Fabric.ServiceContext, Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler, Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
    startLine: 142
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  summary: "\nConstructs a fabric transport based service remoting listener.\n"
  example: []
  syntax:
    content: public FabricTransportServiceRemotingListener(ServiceContext serviceContext, IServiceRemotingMessageHandler messageHandler, FabricTransportListenerSettings listenerSettings)
    content.vb: Public Sub New(serviceContext As ServiceContext, messageHandler As IServiceRemotingMessageHandler, listenerSettings As FabricTransportListenerSettings)
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: "\nThe context of the service for which the remoting listener is being constructed.\n"
    - id: messageHandler
      type: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
      description: "\nThe handler for processing remoting messages. As the messages are received,\nthe listener delivers them to this handler.\n"
    - id: listenerSettings
      type: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings
      description: "\nThe settings to use for the listener.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  langs:
  - csharp
  - vb
  name: ICommunicationListener.OpenAsync(CancellationToken)
  nameWithType: FabricTransportServiceRemotingListener.ICommunicationListener.OpenAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
    startLine: 162
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  summary: "\nThis method causes the communication listener to be opened. Once the Open\ncompletes, the communication listener becomes usable - accepts and sends messages.\n"
  example: []
  syntax:
    content: Task<string> ICommunicationListener.OpenAsync(CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(cancellationToken As CancellationToken) As Task(Of String) Implements ICommunicationListener.OpenAsync
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. The result of the Task is\nthe endpoint string.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  nameWithType.vb: FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  langs:
  - csharp
  - vb
  name: ICommunicationListener.CloseAsync(CancellationToken)
  nameWithType: FabricTransportServiceRemotingListener.ICommunicationListener.CloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
    startLine: 176
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  summary: "\nThis method causes the communication listener to close. Close is a terminal state and \nthis method allows the communication listener to transition to this state in a\ngraceful manner.\n"
  example: []
  syntax:
    content: Task ICommunicationListener.CloseAsync(CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(cancellationToken As CancellationToken) As Task Implements ICommunicationListener.CloseAsync
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  nameWithType.vb: FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  id: Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener
  langs:
  - csharp
  - vb
  name: ICommunicationListener.Abort()
  nameWithType: FabricTransportServiceRemotingListener.ICommunicationListener.Abort()
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/FabricTransport/Runtime/FabricTransportServiceRemotingListener.cs
    startLine: 187
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  summary: "\nThis method causes the communication listener to close. Close is a terminal state and\nthis method causes the transition to close ungracefully. Any outstanding operations\n(including close) should be canceled when this method is called.\n"
  example: []
  syntax:
    content: void ICommunicationListener.Abort()
    content.vb: Sub Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort Implements ICommunicationListener.Abort
  overload: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  nameWithType.vb: FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: IServiceRemotingListener
  nameWithType: IServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime
  isExternal: false
  name: ICommunicationListener
  nameWithType: ICommunicationListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<FabricTransportServiceRemotingListener>()
  nameWithType: ByteArraySerializer.Serialize<FabricTransportServiceRemotingListener>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of FabricTransportServiceRemotingListener)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener)()
  name.vb: Serialize(Of FabricTransportServiceRemotingListener)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<FabricTransportServiceRemotingListener>
    nameWithType: ByteArraySerializer.Serialize<FabricTransportServiceRemotingListener>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of FabricTransportServiceRemotingListener)
    nameWithType: ByteArraySerializer.Serialize(Of FabricTransportServiceRemotingListener)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Runtime
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Runtime
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.#ctor
  isExternal: false
  name: FabricTransportServiceRemotingListener
  nameWithType: FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener
- uid: System.Fabric.ServiceContext
  commentId: T:System.Fabric.ServiceContext
  parent: System.Fabric
  isExternal: false
  name: ServiceContext
  nameWithType: ServiceContext
  fullName: System.Fabric.ServiceContext
- uid: Microsoft.ServiceFabric.Services.Remoting.IService
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.IService
  parent: Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: IService
  nameWithType: IService
  fullName: Microsoft.ServiceFabric.Services.Remoting.IService
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Services.Remoting
  commentId: N:Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting
  nameWithType: Microsoft.ServiceFabric.Services.Remoting
  fullName: Microsoft.ServiceFabric.Services.Remoting
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings
  commentId: T:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings
  parent: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
  isExternal: false
  name: FabricTransportListenerSettings
  nameWithType: FabricTransportListenerSettings
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime.FabricTransportListenerSettings
- uid: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
  fullName: Microsoft.ServiceFabric.Services.Communication.FabricTransport.Runtime
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: IServiceRemotingMessageHandler
  nameWithType: IServiceRemotingMessageHandler
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync
  isExternal: false
  name: ICommunicationListener.OpenAsync
  nameWithType: FabricTransportServiceRemotingListener.ICommunicationListener.OpenAsync
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  nameWithType.vb: FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: true
  name: OpenAsync(CancellationToken)
  nameWithType: ICommunicationListener.OpenAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationListener.OpenAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationListener.OpenAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync
  isExternal: false
  name: ICommunicationListener.CloseAsync
  nameWithType: FabricTransportServiceRemotingListener.ICommunicationListener.CloseAsync
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  nameWithType.vb: FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: true
  name: CloseAsync(CancellationToken)
  nameWithType: ICommunicationListener.CloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationListener.CloseAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationListener.CloseAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  isExternal: false
  name: ICommunicationListener.Abort
  nameWithType: FabricTransportServiceRemotingListener.ICommunicationListener.Abort
  fullName: Microsoft.ServiceFabric.Services.Remoting.FabricTransport.Runtime.FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  nameWithType.vb: FabricTransportServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: false
  name: Abort()
  nameWithType: ICommunicationListener.Abort()
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
    name: Abort
    nameWithType: ICommunicationListener.Abort
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
    name: Abort
    nameWithType: ICommunicationListener.Abort
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
