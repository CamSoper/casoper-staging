### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  id: WcfServiceRemotingListener
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  children:
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,System.ServiceModel.Channels.Binding,System.String)
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.ServiceModel.Channels.Binding,System.String)
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.ServiceHost
  langs:
  - csharp
  - vb
  name: WcfServiceRemotingListener
  nameWithType: WcfServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: WcfServiceRemotingListener
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
    startLine: 24
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  summary: "\nAn <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener\" data-throw-if-not-resolved=\"false\"></xref> that uses\nWindows Communication Foundation to provide interface remoting for stateless and stateful services.\n"
  example: []
  syntax:
    content: 'public class WcfServiceRemotingListener : IServiceRemotingListener, ICommunicationListener'
    content.vb: >-
      Public Class WcfServiceRemotingListener
          Implements IServiceRemotingListener, ICommunicationListener
  inheritance:
  - System.Object
  implements:
  - Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,System.ServiceModel.Channels.Binding,System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,System.ServiceModel.Channels.Binding,System.String)
  id: '#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.IService,System.ServiceModel.Channels.Binding,System.String)'
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  langs:
  - csharp
  - vb
  name: WcfServiceRemotingListener(ServiceContext, IService, Binding, String)
  nameWithType: WcfServiceRemotingListener.WcfServiceRemotingListener(ServiceContext, IService, Binding, String)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.WcfServiceRemotingListener(System.Fabric.ServiceContext, Microsoft.ServiceFabric.Services.Remoting.IService, System.ServiceModel.Channels.Binding, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
    startLine: 41
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  summary: "\nConstructs a WCF based service remoting listener. \n"
  example: []
  syntax:
    content: public WcfServiceRemotingListener(ServiceContext serviceContext, IService serviceImplementation, Binding listenerBinding = null, string endpointResourceName = "ServiceEndpoint")
    content.vb: Public Sub New(serviceContext As ServiceContext, serviceImplementation As IService, listenerBinding As Binding = Nothing, endpointResourceName As String = "ServiceEndpoint")
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: The context of the service for which the remoting listener is being constructed.
    - id: serviceImplementation
      type: Microsoft.ServiceFabric.Services.Remoting.IService
      description: The service implementation object.
    - id: listenerBinding
      type: System.ServiceModel.Channels.Binding
      description: >
        WCF binding to use for the listener. If the listener binding is not specified or null,

        a default listener binding is created using <xref href="Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)" data-throw-if-not-resolved="false"></xref> method which creates

        a <xref href="System.ServiceModel.NetTcpBinding" data-throw-if-not-resolved="false"></xref> with no security.
    - id: endpointResourceName
      type: System.String
      description: "The name of the endpoint resource defined in the service manifest that \nshould be used to create the address for the listener. If the endpointResourceName is not specified or null,\nthe default value \"ServiceEndpoint\" is used.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.ServiceModel.Channels.Binding,System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.ServiceModel.Channels.Binding,System.String)
  id: '#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.ServiceModel.Channels.Binding,System.String)'
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  langs:
  - csharp
  - vb
  name: WcfServiceRemotingListener(ServiceContext, IServiceRemotingMessageHandler, Binding, String)
  nameWithType: WcfServiceRemotingListener.WcfServiceRemotingListener(ServiceContext, IServiceRemotingMessageHandler, Binding, String)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.WcfServiceRemotingListener(System.Fabric.ServiceContext, Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler, System.ServiceModel.Channels.Binding, System.String)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
    startLine: 70
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  summary: "\nConstructs a WCF based service remoting listener. \n"
  example: []
  syntax:
    content: public WcfServiceRemotingListener(ServiceContext serviceContext, IServiceRemotingMessageHandler messageHandler, Binding listenerBinding = null, string endpointResourceName = "ServiceEndpoint")
    content.vb: Public Sub New(serviceContext As ServiceContext, messageHandler As IServiceRemotingMessageHandler, listenerBinding As Binding = Nothing, endpointResourceName As String = "ServiceEndpoint")
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: The context of the service for which the remoting listener is being constructed.
    - id: messageHandler
      type: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
      description: >
        The handler for receiving and processing remoting messages. As the messages are received

        the listener delivers the messages to the handler.
    - id: listenerBinding
      type: System.ServiceModel.Channels.Binding
      description: >
        WCF binding to use for the listener. If the listener binding is not specified or null,

        a default listener binding is created using <xref href="Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)" data-throw-if-not-resolved="false"></xref> method which creates

        a <xref href="System.ServiceModel.NetTcpBinding" data-throw-if-not-resolved="false"></xref> with no security.
    - id: endpointResourceName
      type: System.String
      description: "The name of the endpoint resource defined in the service manifest that \nshould be used to create the address for the listener. If the endpointResourceName is not specified or it is null,\nthe default value \"ServiceEndpoint\" is used.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  id: '#ctor(System.Fabric.ServiceContext,Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)'
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  langs:
  - csharp
  - vb
  name: WcfServiceRemotingListener(ServiceContext, IServiceRemotingMessageHandler, Binding, EndpointAddress)
  nameWithType: WcfServiceRemotingListener.WcfServiceRemotingListener(ServiceContext, IServiceRemotingMessageHandler, Binding, EndpointAddress)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.WcfServiceRemotingListener(System.Fabric.ServiceContext, Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler, System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
    startLine: 97
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  summary: "\nConstructs a WCF based service remoting listener. \n"
  example: []
  syntax:
    content: public WcfServiceRemotingListener(ServiceContext serviceContext, IServiceRemotingMessageHandler messageHandler, Binding listenerBinding = null, EndpointAddress address = null)
    content.vb: Public Sub New(serviceContext As ServiceContext, messageHandler As IServiceRemotingMessageHandler, listenerBinding As Binding = Nothing, address As EndpointAddress = Nothing)
    parameters:
    - id: serviceContext
      type: System.Fabric.ServiceContext
      description: The context of the service for which the remoting listener is being constructed.
    - id: messageHandler
      type: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
      description: >
        The handler for receiving and processing remoting messages. As the messages are received

        the listener delivers the messages to the handler.
    - id: listenerBinding
      type: System.ServiceModel.Channels.Binding
      description: >
        WCF binding to use for the listener. If the listener binding is not specified or null,

        a default listener binding is created using <xref href="Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64%2cSystem.TimeSpan%2cSystem.TimeSpan)" data-throw-if-not-resolved="false"></xref> method.
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "The endpoint address to use for the WCF listener. If not specified or null, the endpoint\naddress is created using the default endpoint resource named \"ServiceEndpoint\" defined in the service manifest. \n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.ServiceHost
  commentId: P:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.ServiceHost
  id: ServiceHost
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  langs:
  - csharp
  - vb
  name: ServiceHost
  nameWithType: WcfServiceRemotingListener.ServiceHost
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.ServiceHost
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceHost
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
    startLine: 134
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  summary: "\nGets the <xref href=\"System.ServiceModel.ServiceHost\" data-throw-if-not-resolved=\"false\"></xref> used by this listener to host the \nWCF service implementation.\n"
  remarks: "\nThe service host is created by the listener in it's constructor. Before this communication\nlistener is opened by the runtime via <xref href=\"Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> method,\nthe service host can be customized by accessing it via this property.\n"
  example: []
  syntax:
    content: public ServiceHost ServiceHost { get; }
    content.vb: Public ReadOnly Property ServiceHost As ServiceHost
    parameters: []
    return:
      type: System.ServiceModel.ServiceHost
      description: "\nA <xref href=\"System.ServiceModel.ServiceHost\" data-throw-if-not-resolved=\"false\"></xref> used by this listener to host the \nWCF service implementation.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.ServiceHost*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync(System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  langs:
  - csharp
  - vb
  name: ICommunicationListener.OpenAsync(CancellationToken)
  nameWithType: WcfServiceRemotingListener.ICommunicationListener.OpenAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
    startLine: 148
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  summary: "\nThis method causes the communication listener to be opened. Once the Open\ncompletes, the communication listener becomes usable - accepts and sends messages.\n"
  example: []
  syntax:
    content: Task<string> ICommunicationListener.OpenAsync(CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(cancellationToken As CancellationToken) As Task(Of String) Implements ICommunicationListener.OpenAsync
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation. The result of the Task is\nthe endpoint string.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  nameWithType.vb: WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  id: Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync(System.Threading.CancellationToken)
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  langs:
  - csharp
  - vb
  name: ICommunicationListener.CloseAsync(CancellationToken)
  nameWithType: WcfServiceRemotingListener.ICommunicationListener.CloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
    startLine: 162
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  summary: "\nThis method causes the communication listener to close. Close is a terminal state and \nthis method allows the communication listener to transition to this state in a\ngraceful manner.\n"
  example: []
  syntax:
    content: Task ICommunicationListener.CloseAsync(CancellationToken cancellationToken)
    content.vb: Function Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(cancellationToken As CancellationToken) As Task Implements ICommunicationListener.CloseAsync
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task
      description: "\nA <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents outstanding operation.\n"
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  nameWithType.vb: WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(CancellationToken)
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(CancellationToken)
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  id: Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  isEii: true
  parent: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener
  langs:
  - csharp
  - vb
  name: ICommunicationListener.Abort()
  nameWithType: WcfServiceRemotingListener.ICommunicationListener.Abort()
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services.Wcf/Remoting/Wcf/Runtime/WcfServiceRemotingListener.cs
    startLine: 172
  assemblies:
  - Microsoft.ServiceFabric.Services.Wcf
  namespace: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  summary: "\nThis method causes the communication listener to close. Close is a terminal state and\nthis method causes the transition to close ungracefully. Any outstanding operations\n(including close) should be canceled when this method is called.\n"
  example: []
  syntax:
    content: void ICommunicationListener.Abort()
    content.vb: Sub Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort Implements ICommunicationListener.Abort
  overload: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort*
  implements:
  - Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  nameWithType.vb: WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: IServiceRemotingListener
  nameWithType: IServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingListener
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime
  isExternal: false
  name: ICommunicationListener
  nameWithType: ICommunicationListener
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<WcfServiceRemotingListener>()
  nameWithType: ByteArraySerializer.Serialize<WcfServiceRemotingListener>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of WcfServiceRemotingListener)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener)()
  name.vb: Serialize(Of WcfServiceRemotingListener)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<WcfServiceRemotingListener>
    nameWithType: ByteArraySerializer.Serialize<WcfServiceRemotingListener>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of WcfServiceRemotingListener)
    nameWithType: ByteArraySerializer.Serialize(Of WcfServiceRemotingListener)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Runtime
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Runtime
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Runtime
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Runtime
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64,System.TimeSpan,System.TimeSpan)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Wcf.WcfUtility.CreateTcpListenerBinding(System.Int64,System.TimeSpan,System.TimeSpan)
- uid: System.ServiceModel.NetTcpBinding
  commentId: T:System.ServiceModel.NetTcpBinding
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.#ctor
  isExternal: false
  name: WcfServiceRemotingListener
  nameWithType: WcfServiceRemotingListener.WcfServiceRemotingListener
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.WcfServiceRemotingListener
- uid: System.Fabric.ServiceContext
  commentId: T:System.Fabric.ServiceContext
  parent: System.Fabric
  isExternal: false
  name: ServiceContext
  nameWithType: ServiceContext
  fullName: System.Fabric.ServiceContext
- uid: Microsoft.ServiceFabric.Services.Remoting.IService
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.IService
  parent: Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: IService
  nameWithType: IService
  fullName: Microsoft.ServiceFabric.Services.Remoting.IService
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: Microsoft.ServiceFabric.Services.Remoting
  commentId: N:Microsoft.ServiceFabric.Services.Remoting
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting
  nameWithType: Microsoft.ServiceFabric.Services.Remoting
  fullName: Microsoft.ServiceFabric.Services.Remoting
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
  parent: Microsoft.ServiceFabric.Services.Remoting.Runtime
  isExternal: false
  name: IServiceRemotingMessageHandler
  nameWithType: IServiceRemotingMessageHandler
  fullName: Microsoft.ServiceFabric.Services.Remoting.Runtime.IServiceRemotingMessageHandler
- uid: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.ServiceModel.ServiceHost
  commentId: T:System.ServiceModel.ServiceHost
  parent: System.ServiceModel
  isExternal: true
  name: ServiceHost
  nameWithType: ServiceHost
  fullName: System.ServiceModel.ServiceHost
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: true
  name: OpenAsync(CancellationToken)
  nameWithType: ICommunicationListener.OpenAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationListener.OpenAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync(System.Threading.CancellationToken)
    name: OpenAsync
    nameWithType: ICommunicationListener.OpenAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.ServiceHost*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.ServiceHost
  isExternal: false
  name: ServiceHost
  nameWithType: WcfServiceRemotingListener.ServiceHost
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.ServiceHost
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#OpenAsync
  isExternal: false
  name: ICommunicationListener.OpenAsync
  nameWithType: WcfServiceRemotingListener.ICommunicationListener.OpenAsync
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  nameWithType.vb: WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.OpenAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#CloseAsync
  isExternal: false
  name: ICommunicationListener.CloseAsync
  nameWithType: WcfServiceRemotingListener.ICommunicationListener.CloseAsync
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  nameWithType.vb: WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: true
  name: CloseAsync(CancellationToken)
  nameWithType: ICommunicationListener.CloseAsync(CancellationToken)
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationListener.CloseAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync(System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: ICommunicationListener.CloseAsync
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.CloseAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft#ServiceFabric#Services#Communication#Runtime#ICommunicationListener#Abort
  isExternal: false
  name: ICommunicationListener.Abort
  nameWithType: WcfServiceRemotingListener.ICommunicationListener.Abort
  fullName: Microsoft.ServiceFabric.Services.Remoting.Wcf.Runtime.WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  nameWithType.vb: WcfServiceRemotingListener.Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  name.vb: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
- uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  parent: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener
  isExternal: false
  name: Abort()
  nameWithType: ICommunicationListener.Abort()
  fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort()
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
    name: Abort
    nameWithType: ICommunicationListener.Abort
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
    name: Abort
    nameWithType: ICommunicationListener.Abort
    fullName: Microsoft.ServiceFabric.Services.Communication.Runtime.ICommunicationListener.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
