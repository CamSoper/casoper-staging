### YamlMime:ManagedReference
items:
- uid: System.Fabric.NamedPropertyMetadata
  commentId: T:System.Fabric.NamedPropertyMetadata
  id: NamedPropertyMetadata
  parent: System.Fabric
  children:
  - System.Fabric.NamedPropertyMetadata.CustomTypeId
  - System.Fabric.NamedPropertyMetadata.LastModifiedUtc
  - System.Fabric.NamedPropertyMetadata.Parent
  - System.Fabric.NamedPropertyMetadata.PropertyName
  - System.Fabric.NamedPropertyMetadata.SequenceNumber
  - System.Fabric.NamedPropertyMetadata.TypeId
  - System.Fabric.NamedPropertyMetadata.ValueSize
  langs:
  - csharp
  - vb
  name: NamedPropertyMetadata
  nameWithType: NamedPropertyMetadata
  fullName: System.Fabric.NamedPropertyMetadata
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NamedPropertyMetadata
    path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
    startLine: 16
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>The metadata associated with a <xref href=\"System.Fabric.NamedProperty\" data-throw-if-not-resolved=\"false\"></xref>, including the propertyâ€™s name.</p>\n"
  example: []
  syntax:
    content: public sealed class NamedPropertyMetadata
    content.vb: Public NotInheritable Class NamedPropertyMetadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.NamedPropertyMetadata.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.NamedPropertyMetadata.PropertyName
  commentId: P:System.Fabric.NamedPropertyMetadata.PropertyName
  id: PropertyName
  parent: System.Fabric.NamedPropertyMetadata
  langs:
  - csharp
  - vb
  name: PropertyName
  nameWithType: NamedPropertyMetadata.PropertyName
  fullName: System.Fabric.NamedPropertyMetadata.PropertyName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PropertyName
    path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
    startLine: 29
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the name of the Property. It could be thought of as the key for a key value pair.</p>\n"
  example: []
  syntax:
    content: public string PropertyName { get; }
    content.vb: Public ReadOnly Property PropertyName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The property name.</p>\n"
  overload: System.Fabric.NamedPropertyMetadata.PropertyName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NamedPropertyMetadata.Parent
  commentId: P:System.Fabric.NamedPropertyMetadata.Parent
  id: Parent
  parent: System.Fabric.NamedPropertyMetadata
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: NamedPropertyMetadata.Parent
  fullName: System.Fabric.NamedPropertyMetadata.Parent
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Parent
    path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
    startLine: 37
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the name of the parent Service Fabric Name for the Property. It could be thought of as the namespace/table under which the property exists.</p>\n"
  example: []
  syntax:
    content: public Uri Parent { get; }
    content.vb: Public ReadOnly Property Parent As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The name of the parent Service Fabric Name for the Property.</p>\n"
  overload: System.Fabric.NamedPropertyMetadata.Parent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NamedPropertyMetadata.TypeId
  commentId: P:System.Fabric.NamedPropertyMetadata.TypeId
  id: TypeId
  parent: System.Fabric.NamedPropertyMetadata
  langs:
  - csharp
  - vb
  name: TypeId
  nameWithType: NamedPropertyMetadata.TypeId
  fullName: System.Fabric.NamedPropertyMetadata.TypeId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TypeId
    path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates whether the value of the Property is a Binary, <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>. \nA common use of this field is to determine the type to use for the <xref href=\"System.Fabric.NamedProperty.GetValue%60%601\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>All Service Fabric enumerations have a reserved Invalid value.</p>\n"
  example: []
  syntax:
    content: public PropertyTypeId TypeId { get; }
    content.vb: Public ReadOnly Property TypeId As PropertyTypeId
    parameters: []
    return:
      type: System.Fabric.PropertyTypeId
      description: "\n<p>The property type of the property.</p>\n"
  overload: System.Fabric.NamedPropertyMetadata.TypeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NamedPropertyMetadata.ValueSize
  commentId: P:System.Fabric.NamedPropertyMetadata.ValueSize
  id: ValueSize
  parent: System.Fabric.NamedPropertyMetadata
  langs:
  - csharp
  - vb
  name: ValueSize
  nameWithType: NamedPropertyMetadata.ValueSize
  fullName: System.Fabric.NamedPropertyMetadata.ValueSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ValueSize
    path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
    startLine: 57
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Indicates the length of the serialized Property value.</p>\n"
  example: []
  syntax:
    content: public int ValueSize { get; }
    content.vb: Public ReadOnly Property ValueSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The length of the serialized Property value.</p>\n"
  overload: System.Fabric.NamedPropertyMetadata.ValueSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NamedPropertyMetadata.SequenceNumber
  commentId: P:System.Fabric.NamedPropertyMetadata.SequenceNumber
  id: SequenceNumber
  parent: System.Fabric.NamedPropertyMetadata
  langs:
  - csharp
  - vb
  name: SequenceNumber
  nameWithType: NamedPropertyMetadata.SequenceNumber
  fullName: System.Fabric.NamedPropertyMetadata.SequenceNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
    startLine: 68
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the version of the Property. Every time a Property is modified, its sequence number is increased.</p>\n"
  remarks: "\n<p>Sequence numbers will be guaranteed to always increase. However, the increase may not be monotonic.</p>\n"
  example: []
  syntax:
    content: public long SequenceNumber { get; }
    content.vb: Public ReadOnly Property SequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The version of the property.</p>\n"
  overload: System.Fabric.NamedPropertyMetadata.SequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NamedPropertyMetadata.LastModifiedUtc
  commentId: P:System.Fabric.NamedPropertyMetadata.LastModifiedUtc
  id: LastModifiedUtc
  parent: System.Fabric.NamedPropertyMetadata
  langs:
  - csharp
  - vb
  name: LastModifiedUtc
  nameWithType: NamedPropertyMetadata.LastModifiedUtc
  fullName: System.Fabric.NamedPropertyMetadata.LastModifiedUtc
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastModifiedUtc
    path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
    startLine: 76
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets when the Property was last modified. Only write operations will cause this field to be updated.</p>\n"
  example: []
  syntax:
    content: public DateTime LastModifiedUtc { get; }
    content.vb: Public ReadOnly Property LastModifiedUtc As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The last time the property was modified, UTC.</p>\n"
  overload: System.Fabric.NamedPropertyMetadata.LastModifiedUtc*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.NamedPropertyMetadata.CustomTypeId
  commentId: P:System.Fabric.NamedPropertyMetadata.CustomTypeId
  id: CustomTypeId
  parent: System.Fabric.NamedPropertyMetadata
  langs:
  - csharp
  - vb
  name: CustomTypeId
  nameWithType: NamedPropertyMetadata.CustomTypeId
  fullName: System.Fabric.NamedPropertyMetadata.CustomTypeId
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CustomTypeId
    path: src/prod/src/managed/Api/src/System/Fabric/NamedPropertyMetadata.cs
    startLine: 90
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the custom type id.</p>\n"
  remarks: "\n<p>Using this property, the user is able to tag the type of the value of the property. \nCommon use case for this property is the following. Assume you have property called configuration. \nThe value of this property can be JSON or XML, depending on who last updated the property. \nIn this scenario the updaters can use custom type id property to communicate the type of the property to the consumer of the property.</p>\n"
  example: []
  syntax:
    content: public string CustomTypeId { get; }
    content.vb: Public ReadOnly Property CustomTypeId As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The custom type id.</p>\n"
  overload: System.Fabric.NamedPropertyMetadata.CustomTypeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.NamedProperty
  commentId: T:System.Fabric.NamedProperty
  parent: System.Fabric
  isExternal: false
  name: NamedProperty
  nameWithType: NamedProperty
  fullName: System.Fabric.NamedProperty
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.NamedPropertyMetadata.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<NamedPropertyMetadata>()
  nameWithType: ByteArraySerializer.Serialize<NamedPropertyMetadata>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.NamedPropertyMetadata>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of NamedPropertyMetadata)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.NamedPropertyMetadata)()
  name.vb: Serialize(Of NamedPropertyMetadata)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<NamedPropertyMetadata>
    nameWithType: ByteArraySerializer.Serialize<NamedPropertyMetadata>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.NamedPropertyMetadata>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of NamedPropertyMetadata)
    nameWithType: ByteArraySerializer.Serialize(Of NamedPropertyMetadata)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.NamedPropertyMetadata)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.NamedPropertyMetadata.PropertyName*
  commentId: Overload:System.Fabric.NamedPropertyMetadata.PropertyName
  isExternal: false
  name: PropertyName
  nameWithType: NamedPropertyMetadata.PropertyName
  fullName: System.Fabric.NamedPropertyMetadata.PropertyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.NamedPropertyMetadata.Parent*
  commentId: Overload:System.Fabric.NamedPropertyMetadata.Parent
  isExternal: false
  name: Parent
  nameWithType: NamedPropertyMetadata.Parent
  fullName: System.Fabric.NamedPropertyMetadata.Parent
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Fabric.NamedProperty.GetValue``1
  commentId: M:System.Fabric.NamedProperty.GetValue``1
- uid: System.Fabric.NamedPropertyMetadata.TypeId*
  commentId: Overload:System.Fabric.NamedPropertyMetadata.TypeId
  isExternal: false
  name: TypeId
  nameWithType: NamedPropertyMetadata.TypeId
  fullName: System.Fabric.NamedPropertyMetadata.TypeId
- uid: System.Fabric.PropertyTypeId
  commentId: T:System.Fabric.PropertyTypeId
  parent: System.Fabric
  isExternal: false
  name: PropertyTypeId
  nameWithType: PropertyTypeId
  fullName: System.Fabric.PropertyTypeId
- uid: System.Fabric.NamedPropertyMetadata.ValueSize*
  commentId: Overload:System.Fabric.NamedPropertyMetadata.ValueSize
  isExternal: false
  name: ValueSize
  nameWithType: NamedPropertyMetadata.ValueSize
  fullName: System.Fabric.NamedPropertyMetadata.ValueSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Fabric.NamedPropertyMetadata.SequenceNumber*
  commentId: Overload:System.Fabric.NamedPropertyMetadata.SequenceNumber
  isExternal: false
  name: SequenceNumber
  nameWithType: NamedPropertyMetadata.SequenceNumber
  fullName: System.Fabric.NamedPropertyMetadata.SequenceNumber
- uid: System.Fabric.NamedPropertyMetadata.LastModifiedUtc*
  commentId: Overload:System.Fabric.NamedPropertyMetadata.LastModifiedUtc
  isExternal: false
  name: LastModifiedUtc
  nameWithType: NamedPropertyMetadata.LastModifiedUtc
  fullName: System.Fabric.NamedPropertyMetadata.LastModifiedUtc
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Fabric.NamedPropertyMetadata.CustomTypeId*
  commentId: Overload:System.Fabric.NamedPropertyMetadata.CustomTypeId
  isExternal: false
  name: CustomTypeId
  nameWithType: NamedPropertyMetadata.CustomTypeId
  fullName: System.Fabric.NamedPropertyMetadata.CustomTypeId
