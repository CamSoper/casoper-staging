### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.DeployedServiceType
  commentId: T:System.Fabric.Query.DeployedServiceType
  id: DeployedServiceType
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.DeployedServiceType.CodePackageName
  - System.Fabric.Query.DeployedServiceType.ServiceManifestName
  - System.Fabric.Query.DeployedServiceType.ServiceTypeName
  - System.Fabric.Query.DeployedServiceType.ServiceTypeRegistrationStatus
  langs:
  - csharp
  - vb
  name: DeployedServiceType
  nameWithType: DeployedServiceType
  fullName: System.Fabric.Query.DeployedServiceType
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceTypeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DeployedServiceType
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceTypeResultItem.cs
    startLine: 35
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Represents a deployed service type.</p>\n"
  example: []
  syntax:
    content: public sealed class DeployedServiceType
    content.vb: Public NotInheritable Class DeployedServiceType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.DeployedServiceType.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.DeployedServiceType.ServiceTypeName
  commentId: P:System.Fabric.Query.DeployedServiceType.ServiceTypeName
  id: ServiceTypeName
  parent: System.Fabric.Query.DeployedServiceType
  langs:
  - csharp
  - vb
  name: ServiceTypeName
  nameWithType: DeployedServiceType.ServiceTypeName
  fullName: System.Fabric.Query.DeployedServiceType.ServiceTypeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceTypeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceTypeResultItem.cs
    startLine: 53
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the service type name.</p>\n"
  example: []
  syntax:
    content: public string ServiceTypeName { get; }
    content.vb: Public ReadOnly Property ServiceTypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the service type.</p>\n"
  overload: System.Fabric.Query.DeployedServiceType.ServiceTypeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedServiceType.CodePackageName
  commentId: P:System.Fabric.Query.DeployedServiceType.CodePackageName
  id: CodePackageName
  parent: System.Fabric.Query.DeployedServiceType
  langs:
  - csharp
  - vb
  name: CodePackageName
  nameWithType: DeployedServiceType.CodePackageName
  fullName: System.Fabric.Query.DeployedServiceType.CodePackageName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceTypeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CodePackageName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceTypeResultItem.cs
    startLine: 61
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the code package name.</p>\n"
  example: []
  syntax:
    content: public string CodePackageName { get; }
    content.vb: Public ReadOnly Property CodePackageName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The code package name.</p>\n"
  overload: System.Fabric.Query.DeployedServiceType.CodePackageName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedServiceType.ServiceManifestName
  commentId: P:System.Fabric.Query.DeployedServiceType.ServiceManifestName
  id: ServiceManifestName
  parent: System.Fabric.Query.DeployedServiceType
  langs:
  - csharp
  - vb
  name: ServiceManifestName
  nameWithType: DeployedServiceType.ServiceManifestName
  fullName: System.Fabric.Query.DeployedServiceType.ServiceManifestName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceTypeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceManifestName
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceTypeResultItem.cs
    startLine: 69
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the service manifest name.</p>\n"
  example: []
  syntax:
    content: public string ServiceManifestName { get; }
    content.vb: Public ReadOnly Property ServiceManifestName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the service manifest.</p>\n"
  overload: System.Fabric.Query.DeployedServiceType.ServiceManifestName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.DeployedServiceType.ServiceTypeRegistrationStatus
  commentId: P:System.Fabric.Query.DeployedServiceType.ServiceTypeRegistrationStatus
  id: ServiceTypeRegistrationStatus
  parent: System.Fabric.Query.DeployedServiceType
  langs:
  - csharp
  - vb
  name: ServiceTypeRegistrationStatus
  nameWithType: DeployedServiceType.ServiceTypeRegistrationStatus
  fullName: System.Fabric.Query.DeployedServiceType.ServiceTypeRegistrationStatus
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceTypeResultItem.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceTypeRegistrationStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/DeployedServiceTypeResultItem.cs
    startLine: 77
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the service type registration status.</p>\n"
  example: []
  syntax:
    content: public ServiceTypeRegistrationStatus ServiceTypeRegistrationStatus { get; }
    content.vb: Public ReadOnly Property ServiceTypeRegistrationStatus As ServiceTypeRegistrationStatus
    parameters: []
    return:
      type: System.Fabric.Query.ServiceTypeRegistrationStatus
      description: "\n<p>The status of the service type registration.</p>\n"
  overload: System.Fabric.Query.DeployedServiceType.ServiceTypeRegistrationStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.DeployedServiceType.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<DeployedServiceType>()
  nameWithType: ByteArraySerializer.Serialize<DeployedServiceType>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.DeployedServiceType>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of DeployedServiceType)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.DeployedServiceType)()
  name.vb: Serialize(Of DeployedServiceType)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<DeployedServiceType>
    nameWithType: ByteArraySerializer.Serialize<DeployedServiceType>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.DeployedServiceType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of DeployedServiceType)
    nameWithType: ByteArraySerializer.Serialize(Of DeployedServiceType)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.DeployedServiceType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.DeployedServiceType.ServiceTypeName*
  commentId: Overload:System.Fabric.Query.DeployedServiceType.ServiceTypeName
  isExternal: false
  name: ServiceTypeName
  nameWithType: DeployedServiceType.ServiceTypeName
  fullName: System.Fabric.Query.DeployedServiceType.ServiceTypeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Query.DeployedServiceType.CodePackageName*
  commentId: Overload:System.Fabric.Query.DeployedServiceType.CodePackageName
  isExternal: false
  name: CodePackageName
  nameWithType: DeployedServiceType.CodePackageName
  fullName: System.Fabric.Query.DeployedServiceType.CodePackageName
- uid: System.Fabric.Query.DeployedServiceType.ServiceManifestName*
  commentId: Overload:System.Fabric.Query.DeployedServiceType.ServiceManifestName
  isExternal: false
  name: ServiceManifestName
  nameWithType: DeployedServiceType.ServiceManifestName
  fullName: System.Fabric.Query.DeployedServiceType.ServiceManifestName
- uid: System.Fabric.Query.DeployedServiceType.ServiceTypeRegistrationStatus*
  commentId: Overload:System.Fabric.Query.DeployedServiceType.ServiceTypeRegistrationStatus
  isExternal: false
  name: ServiceTypeRegistrationStatus
  nameWithType: DeployedServiceType.ServiceTypeRegistrationStatus
  fullName: System.Fabric.Query.DeployedServiceType.ServiceTypeRegistrationStatus
- uid: System.Fabric.Query.ServiceTypeRegistrationStatus
  commentId: T:System.Fabric.Query.ServiceTypeRegistrationStatus
  parent: System.Fabric.Query
  isExternal: false
  name: ServiceTypeRegistrationStatus
  nameWithType: ServiceTypeRegistrationStatus
  fullName: System.Fabric.Query.ServiceTypeRegistrationStatus
