### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.ReplicatorQueueStatus
  commentId: T:System.Fabric.Query.ReplicatorQueueStatus
  id: ReplicatorQueueStatus
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.ReplicatorQueueStatus.#ctor
  - System.Fabric.Query.ReplicatorQueueStatus.CommittedSequenceNumber
  - System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber
  - System.Fabric.Query.ReplicatorQueueStatus.FirstSequenceNumber
  - System.Fabric.Query.ReplicatorQueueStatus.LastSequenceNumber
  - System.Fabric.Query.ReplicatorQueueStatus.QueueMemorySize
  - System.Fabric.Query.ReplicatorQueueStatus.QueueUtilizationPercentage
  langs:
  - csharp
  - vb
  name: ReplicatorQueueStatus
  nameWithType: ReplicatorQueueStatus
  fullName: System.Fabric.Query.ReplicatorQueueStatus
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicatorQueueStatus
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Provides various statistics of the queue used in the Service Fabric Replicator.</p>\n"
  remarks: "\n<p>Depending on the role of the replicator (<xref href=\"System.Fabric.ReplicaRole.Primary\" data-throw-if-not-resolved=\"false\"></xref> \nor <xref href=\"System.Fabric.ReplicaRole.ActiveSecondary\" data-throw-if-not-resolved=\"false\"></xref>), the properties in this type mean different things.</p>\n"
  example: []
  syntax:
    content: public sealed class ReplicatorQueueStatus
    content.vb: Public NotInheritable Class ReplicatorQueueStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.ReplicatorQueueStatus.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Query.ReplicatorQueueStatus.#ctor
  commentId: M:System.Fabric.Query.ReplicatorQueueStatus.#ctor
  id: '#ctor'
  parent: System.Fabric.Query.ReplicatorQueueStatus
  langs:
  - csharp
  - vb
  name: ReplicatorQueueStatus()
  nameWithType: ReplicatorQueueStatus.ReplicatorQueueStatus()
  fullName: System.Fabric.Query.ReplicatorQueueStatus.ReplicatorQueueStatus()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
    startLine: 20
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Query.ReplicatorQueueStatus\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ReplicatorQueueStatus()
    content.vb: Public Sub New
  overload: System.Fabric.Query.ReplicatorQueueStatus.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Query.ReplicatorQueueStatus.QueueUtilizationPercentage
  commentId: P:System.Fabric.Query.ReplicatorQueueStatus.QueueUtilizationPercentage
  id: QueueUtilizationPercentage
  parent: System.Fabric.Query.ReplicatorQueueStatus
  langs:
  - csharp
  - vb
  name: QueueUtilizationPercentage
  nameWithType: ReplicatorQueueStatus.QueueUtilizationPercentage
  fullName: System.Fabric.Query.ReplicatorQueueStatus.QueueUtilizationPercentage
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: QueueUtilizationPercentage
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
    startLine: 33
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the utilization of the queue.</p>\n"
  remarks: "\n<p>A value of ‘0’ indicates that the queue is empty and a value of ‘100’ indicates that the queue is full.</p>\n"
  example: []
  syntax:
    content: public long QueueUtilizationPercentage { get; }
    content.vb: Public ReadOnly Property QueueUtilizationPercentage As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The utilization of the queue.</p>\n"
  overload: System.Fabric.Query.ReplicatorQueueStatus.QueueUtilizationPercentage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ReplicatorQueueStatus.QueueMemorySize
  commentId: P:System.Fabric.Query.ReplicatorQueueStatus.QueueMemorySize
  id: QueueMemorySize
  parent: System.Fabric.Query.ReplicatorQueueStatus
  langs:
  - csharp
  - vb
  name: QueueMemorySize
  nameWithType: ReplicatorQueueStatus.QueueMemorySize
  fullName: System.Fabric.Query.ReplicatorQueueStatus.QueueMemorySize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: QueueMemorySize
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
    startLine: 41
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Gets the number of virtual memory bytes being consumed by the queue.</p>\n"
  example: []
  syntax:
    content: public long QueueMemorySize { get; }
    content.vb: Public ReadOnly Property QueueMemorySize As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of virtual memory bytes being consumed by the queue.</p>\n"
  overload: System.Fabric.Query.ReplicatorQueueStatus.QueueMemorySize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ReplicatorQueueStatus.FirstSequenceNumber
  commentId: P:System.Fabric.Query.ReplicatorQueueStatus.FirstSequenceNumber
  id: FirstSequenceNumber
  parent: System.Fabric.Query.ReplicatorQueueStatus
  langs:
  - csharp
  - vb
  name: FirstSequenceNumber
  nameWithType: ReplicatorQueueStatus.FirstSequenceNumber
  fullName: System.Fabric.Query.ReplicatorQueueStatus.FirstSequenceNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FirstSequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
    startLine: 68
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>See remarks.</p>\n"
  remarks: "\n<ol><li>\n<p>\n<xref href=\"System.Fabric.ReplicaRole.Primary\" data-throw-if-not-resolved=\"false\"></xref> – Represents the smallest sequence number of the operation that is \npresent in the queue. It’s value will be the same as <xref href=\"System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber\" data-throw-if-not-resolved=\"false\"></xref>, \nsince the primary replicator discards operations once it receives an acknowledgement from all the secondary replicas.</p>\n</li><li>\n<p>\n<xref href=\"System.Fabric.ReplicaRole.ActiveSecondary\" data-throw-if-not-resolved=\"false\"></xref> – Represents the sequence number of the first operation \nthat is available in the queue.</p>\n</li></ol>\n"
  example: []
  syntax:
    content: public long FirstSequenceNumber { get; }
    content.vb: Public ReadOnly Property FirstSequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The first sequence number.</p>\n"
  overload: System.Fabric.Query.ReplicatorQueueStatus.FirstSequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber
  commentId: P:System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber
  id: CompletedSequenceNumber
  parent: System.Fabric.Query.ReplicatorQueueStatus
  langs:
  - csharp
  - vb
  name: CompletedSequenceNumber
  nameWithType: ReplicatorQueueStatus.CompletedSequenceNumber
  fullName: System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CompletedSequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
    startLine: 94
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>See remarks.</p>\n"
  remarks: "\n<ol><li>\n<p>\n<xref href=\"System.Fabric.ReplicaRole.Primary\" data-throw-if-not-resolved=\"false\"></xref> – Represents the highest sequence number for which <strong>all</strong> the \nsecondary replicas have applied the operation.</p>\n</li><li>\n<p>\n<xref href=\"System.Fabric.ReplicaRole.ActiveSecondary\" data-throw-if-not-resolved=\"false\"></xref> – Represents the highest sequence number that has been \napplied by the user service replica.</p>\n</li></ol>\n"
  example: []
  syntax:
    content: public long CompletedSequenceNumber { get; }
    content.vb: Public ReadOnly Property CompletedSequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The completed sequence number.</p>\n"
  overload: System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ReplicatorQueueStatus.CommittedSequenceNumber
  commentId: P:System.Fabric.Query.ReplicatorQueueStatus.CommittedSequenceNumber
  id: CommittedSequenceNumber
  parent: System.Fabric.Query.ReplicatorQueueStatus
  langs:
  - csharp
  - vb
  name: CommittedSequenceNumber
  nameWithType: ReplicatorQueueStatus.CommittedSequenceNumber
  fullName: System.Fabric.Query.ReplicatorQueueStatus.CommittedSequenceNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CommittedSequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
    startLine: 120
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>See remarks.</p>\n"
  remarks: "\n<ol><li>\n<p>\n<xref href=\"System.Fabric.ReplicaRole.Primary\" data-throw-if-not-resolved=\"false\"></xref> – Represents the highest sequence number for which a <strong>quorum</strong> \nof secondary replicas have applied the operation.</p>\n</li><li>\n<p>\n<xref href=\"System.Fabric.ReplicaRole.ActiveSecondary\" data-throw-if-not-resolved=\"false\"></xref> – Represents the highest sequence number that has been \nreceived by the secondary replicator from the primary.</p>\n</li></ol>\n"
  example: []
  syntax:
    content: public long CommittedSequenceNumber { get; }
    content.vb: Public ReadOnly Property CommittedSequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The committed sequence number.</p>\n"
  overload: System.Fabric.Query.ReplicatorQueueStatus.CommittedSequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ReplicatorQueueStatus.LastSequenceNumber
  commentId: P:System.Fabric.Query.ReplicatorQueueStatus.LastSequenceNumber
  id: LastSequenceNumber
  parent: System.Fabric.Query.ReplicatorQueueStatus
  langs:
  - csharp
  - vb
  name: LastSequenceNumber
  nameWithType: ReplicatorQueueStatus.LastSequenceNumber
  fullName: System.Fabric.Query.ReplicatorQueueStatus.LastSequenceNumber
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastSequenceNumber
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ReplicatorQueueStatus.cs
    startLine: 146
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>See remarks.</p>\n"
  remarks: "\n<ol><li>\n<p>\n<xref href=\"System.Fabric.ReplicaRole.Primary\" data-throw-if-not-resolved=\"false\"></xref> – Represents the latest sequence number of the operation that \nis available in the queue.</p>\n</li><li>\n<p>\n<xref href=\"System.Fabric.ReplicaRole.ActiveSecondary\" data-throw-if-not-resolved=\"false\"></xref> – Represents the latest sequence number of the operation \nthat is available in the queue.</p>\n</li></ol>\n"
  example: []
  syntax:
    content: public long LastSequenceNumber { get; }
    content.vb: Public ReadOnly Property LastSequenceNumber As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The last sequence number.</p>\n"
  overload: System.Fabric.Query.ReplicatorQueueStatus.LastSequenceNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.ReplicaRole.Primary
  commentId: F:System.Fabric.ReplicaRole.Primary
- uid: System.Fabric.ReplicaRole.ActiveSecondary
  commentId: F:System.Fabric.ReplicaRole.ActiveSecondary
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.ReplicatorQueueStatus.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ReplicatorQueueStatus>()
  nameWithType: ByteArraySerializer.Serialize<ReplicatorQueueStatus>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.ReplicatorQueueStatus>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ReplicatorQueueStatus)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.ReplicatorQueueStatus)()
  name.vb: Serialize(Of ReplicatorQueueStatus)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ReplicatorQueueStatus>
    nameWithType: ByteArraySerializer.Serialize<ReplicatorQueueStatus>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.ReplicatorQueueStatus>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ReplicatorQueueStatus)
    nameWithType: ByteArraySerializer.Serialize(Of ReplicatorQueueStatus)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.ReplicatorQueueStatus)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.ReplicatorQueueStatus
  commentId: T:System.Fabric.Query.ReplicatorQueueStatus
  parent: System.Fabric.Query
  isExternal: false
  name: ReplicatorQueueStatus
  nameWithType: ReplicatorQueueStatus
  fullName: System.Fabric.Query.ReplicatorQueueStatus
- uid: System.Fabric.Query.ReplicatorQueueStatus.#ctor*
  commentId: Overload:System.Fabric.Query.ReplicatorQueueStatus.#ctor
  isExternal: false
  name: ReplicatorQueueStatus
  nameWithType: ReplicatorQueueStatus.ReplicatorQueueStatus
  fullName: System.Fabric.Query.ReplicatorQueueStatus.ReplicatorQueueStatus
- uid: System.Fabric.Query.ReplicatorQueueStatus.QueueUtilizationPercentage*
  commentId: Overload:System.Fabric.Query.ReplicatorQueueStatus.QueueUtilizationPercentage
  isExternal: false
  name: QueueUtilizationPercentage
  nameWithType: ReplicatorQueueStatus.QueueUtilizationPercentage
  fullName: System.Fabric.Query.ReplicatorQueueStatus.QueueUtilizationPercentage
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Query.ReplicatorQueueStatus.QueueMemorySize*
  commentId: Overload:System.Fabric.Query.ReplicatorQueueStatus.QueueMemorySize
  isExternal: false
  name: QueueMemorySize
  nameWithType: ReplicatorQueueStatus.QueueMemorySize
  fullName: System.Fabric.Query.ReplicatorQueueStatus.QueueMemorySize
- uid: System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber
  commentId: P:System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber
- uid: System.Fabric.Query.ReplicatorQueueStatus.FirstSequenceNumber*
  commentId: Overload:System.Fabric.Query.ReplicatorQueueStatus.FirstSequenceNumber
  isExternal: false
  name: FirstSequenceNumber
  nameWithType: ReplicatorQueueStatus.FirstSequenceNumber
  fullName: System.Fabric.Query.ReplicatorQueueStatus.FirstSequenceNumber
- uid: System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber*
  commentId: Overload:System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber
  isExternal: false
  name: CompletedSequenceNumber
  nameWithType: ReplicatorQueueStatus.CompletedSequenceNumber
  fullName: System.Fabric.Query.ReplicatorQueueStatus.CompletedSequenceNumber
- uid: System.Fabric.Query.ReplicatorQueueStatus.CommittedSequenceNumber*
  commentId: Overload:System.Fabric.Query.ReplicatorQueueStatus.CommittedSequenceNumber
  isExternal: false
  name: CommittedSequenceNumber
  nameWithType: ReplicatorQueueStatus.CommittedSequenceNumber
  fullName: System.Fabric.Query.ReplicatorQueueStatus.CommittedSequenceNumber
- uid: System.Fabric.Query.ReplicatorQueueStatus.LastSequenceNumber*
  commentId: Overload:System.Fabric.Query.ReplicatorQueueStatus.LastSequenceNumber
  isExternal: false
  name: LastSequenceNumber
  nameWithType: ReplicatorQueueStatus.LastSequenceNumber
  fullName: System.Fabric.Query.ReplicatorQueueStatus.LastSequenceNumber
