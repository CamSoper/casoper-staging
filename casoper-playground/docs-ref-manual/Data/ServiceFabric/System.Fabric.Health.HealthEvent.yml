### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.HealthEvent
  commentId: T:System.Fabric.Health.HealthEvent
  id: HealthEvent
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.HealthEvent.HealthInformation
  - System.Fabric.Health.HealthEvent.IsExpired
  - System.Fabric.Health.HealthEvent.LastErrorTransitionAt
  - System.Fabric.Health.HealthEvent.LastModifiedUtcTimestamp
  - System.Fabric.Health.HealthEvent.LastOkTransitionAt
  - System.Fabric.Health.HealthEvent.LastWarningTransitionAt
  - System.Fabric.Health.HealthEvent.SourceUtcTimestamp
  - System.Fabric.Health.HealthEvent.ToString
  langs:
  - csharp
  - vb
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: System.Fabric.Health.HealthEvent
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthEvent
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Represents health information reported on a health entity, such as cluster, application or node,\nwith additional metadata added by the Health Manager.</p>\n"
  remarks: >-
    Health events are returned by health queries such as <xref href="System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription)" data-throw-if-not-resolved="false"></xref>.

    They contain <xref href="System.Fabric.Health.HealthEvent.HealthInformation" data-throw-if-not-resolved="false"></xref> sent to Health Manager in a <xref href="System.Fabric.Health.HealthReport" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public sealed class HealthEvent
    content.vb: Public NotInheritable Class HealthEvent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.HealthEvent.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.HealthEvent.SourceUtcTimestamp
  commentId: P:System.Fabric.Health.HealthEvent.SourceUtcTimestamp
  id: SourceUtcTimestamp
  parent: System.Fabric.Health.HealthEvent
  langs:
  - csharp
  - vb
  name: SourceUtcTimestamp
  nameWithType: HealthEvent.SourceUtcTimestamp
  fullName: System.Fabric.Health.HealthEvent.SourceUtcTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: SourceUtcTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
    startLine: 31
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the date and time when the health report was sent by the source.</p>\n"
  example: []
  syntax:
    content: public DateTime SourceUtcTimestamp { get; }
    content.vb: Public ReadOnly Property SourceUtcTimestamp As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The date and time when the health report was sent by the source.</p>\n"
  overload: System.Fabric.Health.HealthEvent.SourceUtcTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.HealthEvent.LastModifiedUtcTimestamp
  commentId: P:System.Fabric.Health.HealthEvent.LastModifiedUtcTimestamp
  id: LastModifiedUtcTimestamp
  parent: System.Fabric.Health.HealthEvent
  langs:
  - csharp
  - vb
  name: LastModifiedUtcTimestamp
  nameWithType: HealthEvent.LastModifiedUtcTimestamp
  fullName: System.Fabric.Health.HealthEvent.LastModifiedUtcTimestamp
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastModifiedUtcTimestamp
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
    startLine: 39
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the date and time when the health report was last modified by the health store.</p>\n"
  example: []
  syntax:
    content: public DateTime LastModifiedUtcTimestamp { get; }
    content.vb: Public ReadOnly Property LastModifiedUtcTimestamp As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The date and time when the health report was last modified by the health store.</p>\n"
  overload: System.Fabric.Health.HealthEvent.LastModifiedUtcTimestamp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.HealthEvent.IsExpired
  commentId: P:System.Fabric.Health.HealthEvent.IsExpired
  id: IsExpired
  parent: System.Fabric.Health.HealthEvent
  langs:
  - csharp
  - vb
  name: IsExpired
  nameWithType: HealthEvent.IsExpired
  fullName: System.Fabric.Health.HealthEvent.IsExpired
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IsExpired
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
    startLine: 54
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets a value that indicates whetherÂ the health event has expired.</p>\n"
  remarks: "\n<p>An event can be expired only if RemoveWhenExpired is false.\nOtherwise, the event is not returned by query and is removed from the store.\n</p>\n"
  example: []
  syntax:
    content: public bool IsExpired { get; }
    content.vb: Public ReadOnly Property IsExpired As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the health event has expired;\n<strong>false</strong> if the health event was not expired at the time the health store evaluated the query.</p>\n"
  overload: System.Fabric.Health.HealthEvent.IsExpired*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.HealthEvent.LastOkTransitionAt
  commentId: P:System.Fabric.Health.HealthEvent.LastOkTransitionAt
  id: LastOkTransitionAt
  parent: System.Fabric.Health.HealthEvent
  langs:
  - csharp
  - vb
  name: LastOkTransitionAt
  nameWithType: HealthEvent.LastOkTransitionAt
  fullName: System.Fabric.Health.HealthEvent.LastOkTransitionAt
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastOkTransitionAt
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
    startLine: 88
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>If the current <xref href=\"System.Fabric.Health.HealthInformation.HealthState\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Fabric.Health.HealthState.Ok\" data-throw-if-not-resolved=\"false\"></xref>, \nreturns the time at which the health report was first reported with <xref href=\"System.Fabric.Health.HealthState.Ok\" data-throw-if-not-resolved=\"false\"></xref>. For periodic reporting, \nmany reports with the same state may have been generated.</p>\n<p>If the current <xref href=\"System.Fabric.Health.HealthInformation.HealthState\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Fabric.Health.HealthState.Error\" data-throw-if-not-resolved=\"false\"></xref> \nor <xref href=\"System.Fabric.Health.HealthState.Warning\" data-throw-if-not-resolved=\"false\"></xref>, returns the time at which the health state was last in \n<xref href=\"System.Fabric.Health.HealthState.Ok\" data-throw-if-not-resolved=\"false\"></xref>, before transitioning to a different state. If the <xref href=\"System.Fabric.Health.HealthInformation.HealthState\" data-throw-if-not-resolved=\"false\"></xref> \nhas never been <xref href=\"System.Fabric.Health.HealthState.Ok\" data-throw-if-not-resolved=\"false\"></xref>, the value will be System.DateTime.FromFileTimeUtc(0).</p>\n"
  remarks: "\n<p>The transition fields, <xref href=\"System.Fabric.Health.HealthEvent.LastOkTransitionAt\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Fabric.Health.HealthEvent.LastWarningTransitionAt\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Fabric.Health.HealthEvent.LastErrorTransitionAt\" data-throw-if-not-resolved=\"false\"></xref> give the history of the health state transitions for the event.\nThey can be used for smarter alerts or \"historical\" health event information. They enable scenarios such as:\n<ul><li></li><li></li><li></li></ul>\n</p>\n"
  example: []
  syntax:
    content: public DateTime LastOkTransitionAt { get; }
    content.vb: Public ReadOnly Property LastOkTransitionAt As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>Returns <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> representing the last transition time (UTC) involving <xref href=\"System.Fabric.Health.HealthState.Ok\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Health.HealthEvent.LastOkTransitionAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.HealthEvent.LastWarningTransitionAt
  commentId: P:System.Fabric.Health.HealthEvent.LastWarningTransitionAt
  id: LastWarningTransitionAt
  parent: System.Fabric.Health.HealthEvent
  langs:
  - csharp
  - vb
  name: LastWarningTransitionAt
  nameWithType: HealthEvent.LastWarningTransitionAt
  fullName: System.Fabric.Health.HealthEvent.LastWarningTransitionAt
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastWarningTransitionAt
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
    startLine: 122
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>If the current <xref href=\"System.Fabric.Health.HealthInformation.HealthState\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Fabric.Health.HealthState.Warning\" data-throw-if-not-resolved=\"false\"></xref>, \nreturns the time at which the health report was first reported with <xref href=\"System.Fabric.Health.HealthState.Warning\" data-throw-if-not-resolved=\"false\"></xref>. For periodic reporting, \nmany reports with the same state may have been generated.</p>\n<p>If the current <xref href=\"System.Fabric.Health.HealthInformation.HealthState\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Fabric.Health.HealthState.Ok\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"System.Fabric.Health.HealthState.Error\" data-throw-if-not-resolved=\"false\"></xref>, returns the time at which the health state was last in <xref href=\"System.Fabric.Health.HealthState.Warning\" data-throw-if-not-resolved=\"false\"></xref>, \nbefore transitioning to a different state. If the <xref href=\"System.Fabric.Health.HealthInformation.HealthState\" data-throw-if-not-resolved=\"false\"></xref> has never been \n<xref href=\"System.Fabric.Health.HealthState.Warning\" data-throw-if-not-resolved=\"false\"></xref>, the value will be System.DateTime.FromFileTimeUtc(0).</p>\n"
  remarks: "\n<p>The transition fields, <xref href=\"System.Fabric.Health.HealthEvent.LastOkTransitionAt\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Fabric.Health.HealthEvent.LastWarningTransitionAt\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Fabric.Health.HealthEvent.LastErrorTransitionAt\" data-throw-if-not-resolved=\"false\"></xref> give the history of the health state transitions for the event.\nThey can be used for smarter alerts or \"historical\" health event information. They enable scenarios such as:\n<ul><li></li><li></li><li></li></ul>\n</p>\n"
  example: []
  syntax:
    content: public DateTime LastWarningTransitionAt { get; }
    content.vb: Public ReadOnly Property LastWarningTransitionAt As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>Returns <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> representing the last transition time (UTC) involving <xref href=\"System.Fabric.Health.HealthState.Warning\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Health.HealthEvent.LastWarningTransitionAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.HealthEvent.LastErrorTransitionAt
  commentId: P:System.Fabric.Health.HealthEvent.LastErrorTransitionAt
  id: LastErrorTransitionAt
  parent: System.Fabric.Health.HealthEvent
  langs:
  - csharp
  - vb
  name: LastErrorTransitionAt
  nameWithType: HealthEvent.LastErrorTransitionAt
  fullName: System.Fabric.Health.HealthEvent.LastErrorTransitionAt
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: LastErrorTransitionAt
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
    startLine: 156
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>If the current <xref href=\"System.Fabric.Health.HealthInformation.HealthState\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Fabric.Health.HealthState.Error\" data-throw-if-not-resolved=\"false\"></xref>, returns \nthe time at which the health report was first reported with <xref href=\"System.Fabric.Health.HealthState.Error\" data-throw-if-not-resolved=\"false\"></xref>. For periodic reporting, many reports \nwith the same state may have been generated.</p>\n<p>If the current <xref href=\"System.Fabric.Health.HealthInformation.HealthState\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Fabric.Health.HealthState.Ok\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"System.Fabric.Health.HealthState.Warning\" data-throw-if-not-resolved=\"false\"></xref>, returns the time at which the health state was last in <xref href=\"System.Fabric.Health.HealthState.Error\" data-throw-if-not-resolved=\"false\"></xref>, \nbefore transitioning to a different state. If the <xref href=\"System.Fabric.Health.HealthInformation.HealthState\" data-throw-if-not-resolved=\"false\"></xref> has never been \n<xref href=\"System.Fabric.Health.HealthState.Error\" data-throw-if-not-resolved=\"false\"></xref>, the value will be System.DateTime.FromFileTimeUtc(0).</p>\n"
  remarks: "\n<p>The transition fields, <xref href=\"System.Fabric.Health.HealthEvent.LastOkTransitionAt\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Fabric.Health.HealthEvent.LastWarningTransitionAt\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Fabric.Health.HealthEvent.LastErrorTransitionAt\" data-throw-if-not-resolved=\"false\"></xref> give the history of the health state transitions for the event.\nThey can be used for smarter alerts or \"historical\" health event information. They enable scenarios such as:\n<ul><li></li><li></li><li></li></ul>\n</p>\n"
  example: []
  syntax:
    content: public DateTime LastErrorTransitionAt { get; }
    content.vb: Public ReadOnly Property LastErrorTransitionAt As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>Returns <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> representing the last transition time (UTC) involving <xref href=\"System.Fabric.Health.HealthState.Error\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Health.HealthEvent.LastErrorTransitionAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.HealthEvent.HealthInformation
  commentId: P:System.Fabric.Health.HealthEvent.HealthInformation
  id: HealthInformation
  parent: System.Fabric.Health.HealthEvent
  langs:
  - csharp
  - vb
  name: HealthInformation
  nameWithType: HealthEvent.HealthInformation
  fullName: System.Fabric.Health.HealthEvent.HealthInformation
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthInformation
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
    startLine: 164
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the health information that was sent to health store in a <xref href=\"System.Fabric.Health.HealthReport\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public HealthInformation HealthInformation { get; }
    content.vb: Public ReadOnly Property HealthInformation As HealthInformation
    parameters: []
    return:
      type: System.Fabric.Health.HealthInformation
      description: "\n<p>The health information that was sent to health store in a <xref href=\"System.Fabric.Health.HealthReport\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Health.HealthEvent.HealthInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.HealthEvent.ToString
  commentId: M:System.Fabric.Health.HealthEvent.ToString
  id: ToString
  parent: System.Fabric.Health.HealthEvent
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HealthEvent.ToString()
  fullName: System.Fabric.Health.HealthEvent.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthEvent.cs
    startLine: 171
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets a string representation of the health event.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the health event.
  overridden: System.Object.ToString
  overload: System.Fabric.Health.HealthEvent.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetClusterHealthAsync(System.Fabric.Description.ClusterHealthQueryDescription)
- uid: System.Fabric.Health.HealthEvent.HealthInformation
  commentId: P:System.Fabric.Health.HealthEvent.HealthInformation
- uid: System.Fabric.Health.HealthReport
  commentId: T:System.Fabric.Health.HealthReport
  parent: System.Fabric.Health
  isExternal: false
  name: HealthReport
  nameWithType: HealthReport
  fullName: System.Fabric.Health.HealthReport
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthEvent.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<HealthEvent>()
  nameWithType: ByteArraySerializer.Serialize<HealthEvent>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.HealthEvent>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of HealthEvent)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.HealthEvent)()
  name.vb: Serialize(Of HealthEvent)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<HealthEvent>
    nameWithType: ByteArraySerializer.Serialize<HealthEvent>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.HealthEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of HealthEvent)
    nameWithType: ByteArraySerializer.Serialize(Of HealthEvent)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.HealthEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.HealthEvent.SourceUtcTimestamp*
  commentId: Overload:System.Fabric.Health.HealthEvent.SourceUtcTimestamp
  isExternal: false
  name: SourceUtcTimestamp
  nameWithType: HealthEvent.SourceUtcTimestamp
  fullName: System.Fabric.Health.HealthEvent.SourceUtcTimestamp
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Fabric.Health.HealthEvent.LastModifiedUtcTimestamp*
  commentId: Overload:System.Fabric.Health.HealthEvent.LastModifiedUtcTimestamp
  isExternal: false
  name: LastModifiedUtcTimestamp
  nameWithType: HealthEvent.LastModifiedUtcTimestamp
  fullName: System.Fabric.Health.HealthEvent.LastModifiedUtcTimestamp
- uid: System.Fabric.Health.HealthEvent.IsExpired*
  commentId: Overload:System.Fabric.Health.HealthEvent.IsExpired
  isExternal: false
  name: IsExpired
  nameWithType: HealthEvent.IsExpired
  fullName: System.Fabric.Health.HealthEvent.IsExpired
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric.Health.HealthInformation.HealthState
  commentId: P:System.Fabric.Health.HealthInformation.HealthState
- uid: System.Fabric.Health.HealthState.Ok
  commentId: F:System.Fabric.Health.HealthState.Ok
- uid: System.Fabric.Health.HealthState.Error
  commentId: F:System.Fabric.Health.HealthState.Error
- uid: System.Fabric.Health.HealthState.Warning
  commentId: F:System.Fabric.Health.HealthState.Warning
- uid: System.Fabric.Health.HealthEvent.LastOkTransitionAt
  commentId: P:System.Fabric.Health.HealthEvent.LastOkTransitionAt
- uid: System.Fabric.Health.HealthEvent.LastWarningTransitionAt
  commentId: P:System.Fabric.Health.HealthEvent.LastWarningTransitionAt
- uid: System.Fabric.Health.HealthEvent.LastErrorTransitionAt
  commentId: P:System.Fabric.Health.HealthEvent.LastErrorTransitionAt
- uid: System.Fabric.Health.HealthEvent.LastOkTransitionAt*
  commentId: Overload:System.Fabric.Health.HealthEvent.LastOkTransitionAt
  isExternal: false
  name: LastOkTransitionAt
  nameWithType: HealthEvent.LastOkTransitionAt
  fullName: System.Fabric.Health.HealthEvent.LastOkTransitionAt
- uid: System.Fabric.Health.HealthEvent.LastWarningTransitionAt*
  commentId: Overload:System.Fabric.Health.HealthEvent.LastWarningTransitionAt
  isExternal: false
  name: LastWarningTransitionAt
  nameWithType: HealthEvent.LastWarningTransitionAt
  fullName: System.Fabric.Health.HealthEvent.LastWarningTransitionAt
- uid: System.Fabric.Health.HealthEvent.LastErrorTransitionAt*
  commentId: Overload:System.Fabric.Health.HealthEvent.LastErrorTransitionAt
  isExternal: false
  name: LastErrorTransitionAt
  nameWithType: HealthEvent.LastErrorTransitionAt
  fullName: System.Fabric.Health.HealthEvent.LastErrorTransitionAt
- uid: System.Fabric.Health.HealthEvent.HealthInformation*
  commentId: Overload:System.Fabric.Health.HealthEvent.HealthInformation
  isExternal: false
  name: HealthInformation
  nameWithType: HealthEvent.HealthInformation
  fullName: System.Fabric.Health.HealthEvent.HealthInformation
- uid: System.Fabric.Health.HealthInformation
  commentId: T:System.Fabric.Health.HealthInformation
  parent: System.Fabric.Health
  isExternal: false
  name: HealthInformation
  nameWithType: HealthInformation
  fullName: System.Fabric.Health.HealthInformation
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthEvent.ToString*
  commentId: Overload:System.Fabric.Health.HealthEvent.ToString
  isExternal: false
  name: ToString
  nameWithType: HealthEvent.ToString
  fullName: System.Fabric.Health.HealthEvent.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
