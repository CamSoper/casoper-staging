### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.ServiceHealthQueryDescription
  commentId: T:System.Fabric.Description.ServiceHealthQueryDescription
  id: ServiceHealthQueryDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.ServiceHealthQueryDescription.#ctor(System.Uri)
  - System.Fabric.Description.ServiceHealthQueryDescription.EventsFilter
  - System.Fabric.Description.ServiceHealthQueryDescription.HealthPolicy
  - System.Fabric.Description.ServiceHealthQueryDescription.PartitionsFilter
  - System.Fabric.Description.ServiceHealthQueryDescription.ServiceName
  - System.Fabric.Description.ServiceHealthQueryDescription.ToString
  langs:
  - csharp
  - vb
  name: ServiceHealthQueryDescription
  nameWithType: ServiceHealthQueryDescription
  fullName: System.Fabric.Description.ServiceHealthQueryDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceHealthQueryDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Provides query input for getting <xref href=\"System.Fabric.Health.ServiceHealth\" data-throw-if-not-resolved=\"false\"></xref>. Used by \n<xref href=\"System.Fabric.FabricClient.HealthClient.GetServiceHealthAsync(System.Fabric.Description.ServiceHealthQueryDescription)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public sealed class ServiceHealthQueryDescription
    content.vb: Public NotInheritable Class ServiceHealthQueryDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.ServiceHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.ServiceHealthQueryDescription.#ctor(System.Uri)
  commentId: M:System.Fabric.Description.ServiceHealthQueryDescription.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Fabric.Description.ServiceHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ServiceHealthQueryDescription(Uri)
  nameWithType: ServiceHealthQueryDescription.ServiceHealthQueryDescription(Uri)
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.ServiceHealthQueryDescription(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
    startLine: 28
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Description.ServiceHealthQueryDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ServiceHealthQueryDescription(Uri serviceName)
    content.vb: Public Sub New(serviceName As Uri)
    parameters:
    - id: serviceName
      type: System.Uri
      description: "\n<p>The service name. Cannot be null.</p>\n"
  overload: System.Fabric.Description.ServiceHealthQueryDescription.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null value was passed in for a required parameter.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceHealthQueryDescription.ServiceName
  commentId: P:System.Fabric.Description.ServiceHealthQueryDescription.ServiceName
  id: ServiceName
  parent: System.Fabric.Description.ServiceHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: ServiceHealthQueryDescription.ServiceName
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.ServiceName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceName
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> of the service name.</p>\n"
  example: []
  syntax:
    content: public Uri ServiceName { get; }
    content.vb: Public ReadOnly Property ServiceName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> of the service name.</p>\n"
  overload: System.Fabric.Description.ServiceHealthQueryDescription.ServiceName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ServiceHealthQueryDescription.HealthPolicy
  commentId: P:System.Fabric.Description.ServiceHealthQueryDescription.HealthPolicy
  id: HealthPolicy
  parent: System.Fabric.Description.ServiceHealthQueryDescription
  langs:
  - csharp
  - vb
  name: HealthPolicy
  nameWithType: ServiceHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.HealthPolicy
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthPolicy
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
    startLine: 54
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the <xref href=\"System.Fabric.Health.ApplicationHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate health.</p>\n"
  remarks: >-
    If not specified, the health store uses the application health policy of the parent application

    to evaluate the service health.
  example: []
  syntax:
    content: public ApplicationHealthPolicy HealthPolicy { get; set; }
    content.vb: Public Property HealthPolicy As ApplicationHealthPolicy
    parameters: []
    return:
      type: System.Fabric.Health.ApplicationHealthPolicy
      description: "\n<p>The <xref href=\"System.Fabric.Health.ApplicationHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate health.</p>\n"
  overload: System.Fabric.Description.ServiceHealthQueryDescription.HealthPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceHealthQueryDescription.EventsFilter
  commentId: P:System.Fabric.Description.ServiceHealthQueryDescription.EventsFilter
  id: EventsFilter
  parent: System.Fabric.Description.ServiceHealthQueryDescription
  langs:
  - csharp
  - vb
  name: EventsFilter
  nameWithType: ServiceHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.EventsFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EventsFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
    startLine: 70
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for the collection of <xref href=\"System.Fabric.Health.HealthEvent\" data-throw-if-not-resolved=\"false\"></xref> reported on the service. Only events \nthat match the filter will be returned.</p>\n"
  remarks: "<p> Only events that match \n    the filter will be returned. All events will be used to evaluate the service aggregated health state.\n    If the filter is not specified, all events are returned.</p>"
  example: []
  syntax:
    content: public HealthEventsFilter EventsFilter { get; set; }
    content.vb: Public Property EventsFilter As HealthEventsFilter
    parameters: []
    return:
      type: System.Fabric.Health.HealthEventsFilter
      description: "\n<p>The <xref href=\"System.Fabric.Health.HealthEventsFilter\" data-throw-if-not-resolved=\"false\"></xref> used to filter returned events.</p>\n"
  overload: System.Fabric.Description.ServiceHealthQueryDescription.EventsFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceHealthQueryDescription.PartitionsFilter
  commentId: P:System.Fabric.Description.ServiceHealthQueryDescription.PartitionsFilter
  id: PartitionsFilter
  parent: System.Fabric.Description.ServiceHealthQueryDescription
  langs:
  - csharp
  - vb
  name: PartitionsFilter
  nameWithType: ServiceHealthQueryDescription.PartitionsFilter
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.PartitionsFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionsFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
    startLine: 86
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for <xref href=\"System.Fabric.Health.PartitionHealthState\" data-throw-if-not-resolved=\"false\"></xref> children. Only children that match the filter \nwill be returned.</p>\n"
  remarks: "<p> Only children that match the filter will be returned. \n    All children will be used to evaluate the service aggregated health state.\n    If the filter is not specified, all partition children are returned.</p>"
  example: []
  syntax:
    content: public PartitionHealthStatesFilter PartitionsFilter { get; set; }
    content.vb: Public Property PartitionsFilter As PartitionHealthStatesFilter
    parameters: []
    return:
      type: System.Fabric.Health.PartitionHealthStatesFilter
      description: "\n<p>The <xref href=\"System.Fabric.Health.PartitionHealthStatesFilter\" data-throw-if-not-resolved=\"false\"></xref> used to filter returned partition health states.</p>\n"
  overload: System.Fabric.Description.ServiceHealthQueryDescription.PartitionsFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ServiceHealthQueryDescription.ToString
  commentId: M:System.Fabric.Description.ServiceHealthQueryDescription.ToString
  id: ToString
  parent: System.Fabric.Description.ServiceHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ServiceHealthQueryDescription.ToString()
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServiceHealthQueryDescription.cs
    startLine: 96
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\nGets a string representation of the health query description.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the health query description.
  overridden: System.Object.ToString
  overload: System.Fabric.Description.ServiceHealthQueryDescription.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health.ServiceHealth
  commentId: T:System.Fabric.Health.ServiceHealth
  isExternal: false
  name: ServiceHealth
  nameWithType: ServiceHealth
  fullName: System.Fabric.Health.ServiceHealth
- uid: System.Fabric.FabricClient.HealthClient.GetServiceHealthAsync(System.Fabric.Description.ServiceHealthQueryDescription)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetServiceHealthAsync(System.Fabric.Description.ServiceHealthQueryDescription)
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ServiceHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceHealthQueryDescription>()
  nameWithType: ByteArraySerializer.Serialize<ServiceHealthQueryDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ServiceHealthQueryDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceHealthQueryDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ServiceHealthQueryDescription)()
  name.vb: Serialize(Of ServiceHealthQueryDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceHealthQueryDescription>
    nameWithType: ByteArraySerializer.Serialize<ServiceHealthQueryDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ServiceHealthQueryDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceHealthQueryDescription)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceHealthQueryDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ServiceHealthQueryDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.ServiceHealthQueryDescription
  commentId: T:System.Fabric.Description.ServiceHealthQueryDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ServiceHealthQueryDescription
  nameWithType: ServiceHealthQueryDescription
  fullName: System.Fabric.Description.ServiceHealthQueryDescription
- uid: System.Fabric.Description.ServiceHealthQueryDescription.#ctor*
  commentId: Overload:System.Fabric.Description.ServiceHealthQueryDescription.#ctor
  isExternal: false
  name: ServiceHealthQueryDescription
  nameWithType: ServiceHealthQueryDescription.ServiceHealthQueryDescription
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.ServiceHealthQueryDescription
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Description.ServiceHealthQueryDescription.ServiceName*
  commentId: Overload:System.Fabric.Description.ServiceHealthQueryDescription.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: ServiceHealthQueryDescription.ServiceName
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.ServiceName
- uid: System.Fabric.Health.ApplicationHealthPolicy
  commentId: T:System.Fabric.Health.ApplicationHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ApplicationHealthPolicy
  nameWithType: ApplicationHealthPolicy
  fullName: System.Fabric.Health.ApplicationHealthPolicy
- uid: System.Fabric.Description.ServiceHealthQueryDescription.HealthPolicy*
  commentId: Overload:System.Fabric.Description.ServiceHealthQueryDescription.HealthPolicy
  isExternal: false
  name: HealthPolicy
  nameWithType: ServiceHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.HealthPolicy
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.Health.HealthEvent
  commentId: T:System.Fabric.Health.HealthEvent
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: System.Fabric.Health.HealthEvent
- uid: System.Fabric.Health.HealthEventsFilter
  commentId: T:System.Fabric.Health.HealthEventsFilter
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEventsFilter
  nameWithType: HealthEventsFilter
  fullName: System.Fabric.Health.HealthEventsFilter
- uid: System.Fabric.Description.ServiceHealthQueryDescription.EventsFilter*
  commentId: Overload:System.Fabric.Description.ServiceHealthQueryDescription.EventsFilter
  isExternal: false
  name: EventsFilter
  nameWithType: ServiceHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.EventsFilter
- uid: System.Fabric.Health.PartitionHealthState
  commentId: T:System.Fabric.Health.PartitionHealthState
  parent: System.Fabric.Health
  isExternal: false
  name: PartitionHealthState
  nameWithType: PartitionHealthState
  fullName: System.Fabric.Health.PartitionHealthState
- uid: System.Fabric.Health.PartitionHealthStatesFilter
  commentId: T:System.Fabric.Health.PartitionHealthStatesFilter
  parent: System.Fabric.Health
  isExternal: false
  name: PartitionHealthStatesFilter
  nameWithType: PartitionHealthStatesFilter
  fullName: System.Fabric.Health.PartitionHealthStatesFilter
- uid: System.Fabric.Description.ServiceHealthQueryDescription.PartitionsFilter*
  commentId: Overload:System.Fabric.Description.ServiceHealthQueryDescription.PartitionsFilter
  isExternal: false
  name: PartitionsFilter
  nameWithType: ServiceHealthQueryDescription.PartitionsFilter
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.PartitionsFilter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ServiceHealthQueryDescription.ToString*
  commentId: Overload:System.Fabric.Description.ServiceHealthQueryDescription.ToString
  isExternal: false
  name: ToString
  nameWithType: ServiceHealthQueryDescription.ToString
  fullName: System.Fabric.Description.ServiceHealthQueryDescription.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
