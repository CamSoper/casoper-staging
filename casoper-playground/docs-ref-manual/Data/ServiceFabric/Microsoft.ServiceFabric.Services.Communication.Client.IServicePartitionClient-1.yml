### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
  id: IServicePartitionClient`1
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  children:
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.Factory
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ListenerName
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.PartitionKey
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ServiceUri
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TargetReplicaSelector
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  langs:
  - csharp
  - vb
  name: IServicePartitionClient<TCommunicationClient>
  nameWithType: IServicePartitionClient<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IServicePartitionClient
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
    startLine: 14
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nDefines the interface for the client that can communicate with replicas of a particular service partition.\n"
  example: []
  syntax:
    content: >-
      public interface IServicePartitionClient<TCommunicationClient>
          where TCommunicationClient : ICommunicationClient
    content.vb: Public Interface IServicePartitionClient(Of TCommunicationClient As ICommunicationClient)
    typeParameters:
    - id: TCommunicationClient
      description: Type of ICommunicationClient
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient)
  name.vb: IServicePartitionClient(Of TCommunicationClient)
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ServiceUri
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ServiceUri
  id: ServiceUri
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: ServiceUri
  nameWithType: IServicePartitionClient<TCommunicationClient>.ServiceUri
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.ServiceUri
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceUri
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
    startLine: 20
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the name of the service\n"
  example: []
  syntax:
    content: Uri ServiceUri { get; }
    content.vb: ReadOnly Property ServiceUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: Name of the service
  overload: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ServiceUri*
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).ServiceUri
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).ServiceUri
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.PartitionKey
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.PartitionKey
  id: PartitionKey
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: PartitionKey
  nameWithType: IServicePartitionClient<TCommunicationClient>.PartitionKey
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.PartitionKey
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionKey
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
    startLine: 26
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the key of the partition the client is communicating with. \n"
  example: []
  syntax:
    content: ServicePartitionKey PartitionKey { get; }
    content.vb: ReadOnly Property PartitionKey As ServicePartitionKey
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
      description: Partition key
  overload: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.PartitionKey*
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).PartitionKey
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).PartitionKey
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TargetReplicaSelector
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TargetReplicaSelector
  id: TargetReplicaSelector
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: TargetReplicaSelector
  nameWithType: IServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TargetReplicaSelector
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
    startLine: 32
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the information about which replica in the partition the client should connect to.\n"
  example: []
  syntax:
    content: TargetReplicaSelector TargetReplicaSelector { get; }
    content.vb: ReadOnly Property TargetReplicaSelector As TargetReplicaSelector
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
      description: A <xref href="Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector" data-throw-if-not-resolved="false"></xref>
  overload: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TargetReplicaSelector*
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ListenerName
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ListenerName
  id: ListenerName
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: ListenerName
  nameWithType: IServicePartitionClient<TCommunicationClient>.ListenerName
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.ListenerName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ListenerName
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
    startLine: 38
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the name of the listener in the replica to which the client should connect to.\n"
  example: []
  syntax:
    content: string ListenerName { get; }
    content.vb: ReadOnly Property ListenerName As String
    parameters: []
    return:
      type: System.String
      description: Listener name
  overload: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ListenerName*
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).ListenerName
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).ListenerName
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.Factory
  commentId: P:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.Factory
  id: Factory
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: Factory
  nameWithType: IServicePartitionClient<TCommunicationClient>.Factory
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.Factory
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Factory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
    startLine: 44
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the communication client factory\n"
  example: []
  syntax:
    content: ICommunicationClientFactory<TCommunicationClient> Factory { get; }
    content.vb: ReadOnly Property Factory As ICommunicationClientFactory(Of TCommunicationClient)
    parameters: []
    return:
      type: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
      description: Communication client factory
  overload: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.Factory*
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).Factory
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).Factory
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  commentId: M:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  id: TryGetLastResolvedServicePartition(System.Fabric.ResolvedServicePartition@)
  parent: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1
  langs:
  - csharp
  - vb
  name: TryGetLastResolvedServicePartition(out ResolvedServicePartition)
  nameWithType: IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition(out ResolvedServicePartition)
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition(out System.Fabric.ResolvedServicePartition)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TryGetLastResolvedServicePartition
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Communication/Client/IServicePartitionClient.cs
    startLine: 51
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Communication.Client
  summary: "\nGets the resolved service partition that was set on the client.\n"
  example: []
  syntax:
    content: bool TryGetLastResolvedServicePartition(out ResolvedServicePartition resolvedServicePartition)
    content.vb: Function TryGetLastResolvedServicePartition(ByRef resolvedServicePartition As ResolvedServicePartition) As Boolean
    parameters:
    - id: resolvedServicePartition
      type: System.Fabric.ResolvedServicePartition
      description: previous ResolvedServicePartition
    return:
      type: System.Boolean
      description: true if a ResolvedServicePartition was set
  overload: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition*
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition(ByRef ResolvedServicePartition)
  fullName.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition(ByRef System.Fabric.ResolvedServicePartition)
  name.vb: TryGetLastResolvedServicePartition(ByRef ResolvedServicePartition)
references:
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IServicePartitionClient<TCommunicationClient>>()
  nameWithType: ByteArraySerializer.Serialize<IServicePartitionClient<TCommunicationClient>>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IServicePartitionClient(Of TCommunicationClient))()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient))()
  name.vb: Serialize(Of IServicePartitionClient(Of TCommunicationClient))()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IServicePartitionClient<TCommunicationClient>>
    nameWithType: ByteArraySerializer.Serialize<IServicePartitionClient<TCommunicationClient>>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IServicePartitionClient(Of TCommunicationClient))
    nameWithType: ByteArraySerializer.Serialize(Of IServicePartitionClient(Of TCommunicationClient))
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ServiceUri*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ServiceUri
  isExternal: false
  name: ServiceUri
  nameWithType: IServicePartitionClient<TCommunicationClient>.ServiceUri
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.ServiceUri
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).ServiceUri
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).ServiceUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.PartitionKey*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.PartitionKey
  isExternal: false
  name: PartitionKey
  nameWithType: IServicePartitionClient<TCommunicationClient>.PartitionKey
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.PartitionKey
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).PartitionKey
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).PartitionKey
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  commentId: T:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  parent: Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
- uid: Microsoft.ServiceFabric.Services.Client
  commentId: N:Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Client
  nameWithType: Microsoft.ServiceFabric.Services.Client
  fullName: Microsoft.ServiceFabric.Services.Client
- uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: TargetReplicaSelector
  nameWithType: TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TargetReplicaSelector*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TargetReplicaSelector
  isExternal: false
  name: TargetReplicaSelector
  nameWithType: IServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.TargetReplicaSelector
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).TargetReplicaSelector
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ListenerName*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.ListenerName
  isExternal: false
  name: ListenerName
  nameWithType: IServicePartitionClient<TCommunicationClient>.ListenerName
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.ListenerName
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).ListenerName
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).ListenerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.Factory*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.Factory
  isExternal: false
  name: Factory
  nameWithType: IServicePartitionClient<TCommunicationClient>.Factory
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.Factory
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).Factory
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).Factory
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{{TCommunicationClient}}
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory{`0}
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  definition: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  name: ICommunicationClientFactory<TCommunicationClient>
  nameWithType: ICommunicationClientFactory<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient)
  name.vb: ICommunicationClientFactory(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
  isExternal: false
  name: ICommunicationClientFactory<TCommunicationClient>
  nameWithType: ICommunicationClientFactory<TCommunicationClient>
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory<TCommunicationClient>
  nameWithType.vb: ICommunicationClientFactory(Of TCommunicationClient)
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory(Of TCommunicationClient)
  name.vb: ICommunicationClientFactory(Of TCommunicationClient)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory`1
    name: ICommunicationClientFactory
    nameWithType: ICommunicationClientFactory
    fullName: Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClientFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCommunicationClient
    nameWithType: TCommunicationClient
    fullName: TCommunicationClient
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition*
  commentId: Overload:Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient`1.TryGetLastResolvedServicePartition
  isExternal: false
  name: TryGetLastResolvedServicePartition
  nameWithType: IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient<TCommunicationClient>.TryGetLastResolvedServicePartition
  nameWithType.vb: IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition
  fullname.vb: Microsoft.ServiceFabric.Services.Communication.Client.IServicePartitionClient(Of TCommunicationClient).TryGetLastResolvedServicePartition
- uid: System.Fabric.ResolvedServicePartition
  commentId: T:System.Fabric.ResolvedServicePartition
  parent: System.Fabric
  isExternal: false
  name: ResolvedServicePartition
  nameWithType: ResolvedServicePartition
  fullName: System.Fabric.ResolvedServicePartition
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
