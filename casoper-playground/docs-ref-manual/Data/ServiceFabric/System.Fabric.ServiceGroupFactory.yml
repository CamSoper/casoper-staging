### YamlMime:ManagedReference
items:
- uid: System.Fabric.ServiceGroupFactory
  commentId: T:System.Fabric.ServiceGroupFactory
  id: ServiceGroupFactory
  parent: System.Fabric
  children:
  - System.Fabric.ServiceGroupFactory.#ctor
  - System.Fabric.ServiceGroupFactory.AddServiceType(System.String,System.Type)
  - System.Fabric.ServiceGroupFactory.AddStatefulServiceFactory(System.String,System.Fabric.IStatefulServiceFactory)
  - System.Fabric.ServiceGroupFactory.AddStatelessServiceFactory(System.String,System.Fabric.IStatelessServiceFactory)
  - System.Fabric.ServiceGroupFactory.RemoveServiceFactory(System.String)
  langs:
  - csharp
  - vb
  name: ServiceGroupFactory
  nameWithType: ServiceGroupFactory
  fullName: System.Fabric.ServiceGroupFactory
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceGroupFactory
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Creates a service group factory that is used to create actual service groups from the provided type factories at runtime.</p>\n"
  example: []
  syntax:
    content: public sealed class ServiceGroupFactory
    content.vb: Public NotInheritable Class ServiceGroupFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.ServiceGroupFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.ServiceGroupFactory.#ctor
  commentId: M:System.Fabric.ServiceGroupFactory.#ctor
  id: '#ctor'
  parent: System.Fabric.ServiceGroupFactory
  langs:
  - csharp
  - vb
  name: ServiceGroupFactory()
  nameWithType: ServiceGroupFactory.ServiceGroupFactory()
  fullName: System.Fabric.ServiceGroupFactory.ServiceGroupFactory()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
    startLine: 23
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Creates an empty <xref href=\"System.Fabric.ServiceGroupFactory\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example: []
  syntax:
    content: public ServiceGroupFactory()
    content.vb: Public Sub New
  overload: System.Fabric.ServiceGroupFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.ServiceGroupFactory.AddServiceType(System.String,System.Type)
  commentId: M:System.Fabric.ServiceGroupFactory.AddServiceType(System.String,System.Type)
  id: AddServiceType(System.String,System.Type)
  parent: System.Fabric.ServiceGroupFactory
  langs:
  - csharp
  - vb
  name: AddServiceType(String, Type)
  nameWithType: ServiceGroupFactory.AddServiceType(String, Type)
  fullName: System.Fabric.ServiceGroupFactory.AddServiceType(System.String, System.Type)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AddServiceType
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
    startLine: 55
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Registers a particular stateful or stateless service type with the service group factory so that it can be created as \na member of the service group.</p>\n"
  example: []
  syntax:
    content: public void AddServiceType(string serviceTypeName, Type serviceTypeImplementation)
    content.vb: Public Sub AddServiceType(serviceTypeName As String, serviceTypeImplementation As Type)
    parameters:
    - id: serviceTypeName
      type: System.String
      description: "\n<p>The service type name as a string. It should match the service type that is specified in the manifest or \nthe <xref href=\"System.Fabric.Description.ServiceGroupMemberDescription\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Fabric.Description.ServiceGroupDescription\" data-throw-if-not-resolved=\"false\"></xref> \nthat is provided during the <xref href=\"System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupAsync(System.Fabric.Description.ServiceGroupDescription)\" data-throw-if-not-resolved=\"false\"></xref> call.</p>\n"
    - id: serviceTypeImplementation
      type: System.Type
      description: "\n<p>The fully qualified C# type of the service that implements the Service Fabric service.</p>\n"
  overload: System.Fabric.ServiceGroupFactory.AddServiceType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.ServiceGroupFactory.AddStatelessServiceFactory(System.String,System.Fabric.IStatelessServiceFactory)
  commentId: M:System.Fabric.ServiceGroupFactory.AddStatelessServiceFactory(System.String,System.Fabric.IStatelessServiceFactory)
  id: AddStatelessServiceFactory(System.String,System.Fabric.IStatelessServiceFactory)
  parent: System.Fabric.ServiceGroupFactory
  langs:
  - csharp
  - vb
  name: AddStatelessServiceFactory(String, IStatelessServiceFactory)
  nameWithType: ServiceGroupFactory.AddStatelessServiceFactory(String, IStatelessServiceFactory)
  fullName: System.Fabric.ServiceGroupFactory.AddStatelessServiceFactory(System.String, System.Fabric.IStatelessServiceFactory)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AddStatelessServiceFactory
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
    startLine: 103
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Adds the specified stateless service factory to the service group factory.</p>\n"
  example: []
  syntax:
    content: public void AddStatelessServiceFactory(string serviceTypeName, IStatelessServiceFactory factory)
    content.vb: Public Sub AddStatelessServiceFactory(serviceTypeName As String, factory As IStatelessServiceFactory)
    parameters:
    - id: serviceTypeName
      type: System.String
      description: "\n<p>The service type name as a string. It should match the service type that is specified in the manifest \nor the <xref href=\"System.Fabric.Description.ServiceGroupMemberDescription\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Fabric.Description.ServiceGroupDescription\" data-throw-if-not-resolved=\"false\"></xref> \nthat is provided during the <xref href=\"System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupAsync(System.Fabric.Description.ServiceGroupDescription)\" data-throw-if-not-resolved=\"false\"></xref> call.</p>\n"
    - id: factory
      type: System.Fabric.IStatelessServiceFactory
      description: "\n<p>The stateless service factory to add.</p>\n"
  overload: System.Fabric.ServiceGroupFactory.AddStatelessServiceFactory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.ServiceGroupFactory.AddStatefulServiceFactory(System.String,System.Fabric.IStatefulServiceFactory)
  commentId: M:System.Fabric.ServiceGroupFactory.AddStatefulServiceFactory(System.String,System.Fabric.IStatefulServiceFactory)
  id: AddStatefulServiceFactory(System.String,System.Fabric.IStatefulServiceFactory)
  parent: System.Fabric.ServiceGroupFactory
  langs:
  - csharp
  - vb
  name: AddStatefulServiceFactory(String, IStatefulServiceFactory)
  nameWithType: ServiceGroupFactory.AddStatefulServiceFactory(String, IStatefulServiceFactory)
  fullName: System.Fabric.ServiceGroupFactory.AddStatefulServiceFactory(System.String, System.Fabric.IStatefulServiceFactory)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AddStatefulServiceFactory
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
    startLine: 125
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Adds the specified stateful service factory to the service group factory.</p>\n"
  example: []
  syntax:
    content: public void AddStatefulServiceFactory(string serviceTypeName, IStatefulServiceFactory factory)
    content.vb: Public Sub AddStatefulServiceFactory(serviceTypeName As String, factory As IStatefulServiceFactory)
    parameters:
    - id: serviceTypeName
      type: System.String
      description: "\n<p>Indicates the service type name as a string. It should match the service type that is specified in the manifest or \nthe <xref href=\"System.Fabric.Description.ServiceGroupMemberDescription\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Fabric.Description.ServiceGroupDescription\" data-throw-if-not-resolved=\"false\"></xref> that \nis provided during the <xref href=\"System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupAsync(System.Fabric.Description.ServiceGroupDescription)\" data-throw-if-not-resolved=\"false\"></xref> call.</p>\n"
    - id: factory
      type: System.Fabric.IStatefulServiceFactory
      description: "\n<p>The stateful service factory to add.</p>\n"
  overload: System.Fabric.ServiceGroupFactory.AddStatefulServiceFactory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.ServiceGroupFactory.RemoveServiceFactory(System.String)
  commentId: M:System.Fabric.ServiceGroupFactory.RemoveServiceFactory(System.String)
  id: RemoveServiceFactory(System.String)
  parent: System.Fabric.ServiceGroupFactory
  langs:
  - csharp
  - vb
  name: RemoveServiceFactory(String)
  nameWithType: ServiceGroupFactory.RemoveServiceFactory(String)
  fullName: System.Fabric.ServiceGroupFactory.RemoveServiceFactory(System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RemoveServiceFactory
    path: src/prod/src/managed/Api/src/System/Fabric/Hosting/ServiceGroupFactory.cs
    startLine: 142
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Removes the service factory.</p>\n"
  example: []
  syntax:
    content: public void RemoveServiceFactory(string serviceTypeName)
    content.vb: Public Sub RemoveServiceFactory(serviceTypeName As String)
    parameters:
    - id: serviceTypeName
      type: System.String
      description: "\n<p>The service type name as a string. It should match the service type that was specified when the factory was registered. </p>\n"
  overload: System.Fabric.ServiceGroupFactory.RemoveServiceFactory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ServiceGroupFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceGroupFactory>()
  nameWithType: ByteArraySerializer.Serialize<ServiceGroupFactory>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ServiceGroupFactory>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceGroupFactory)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ServiceGroupFactory)()
  name.vb: Serialize(Of ServiceGroupFactory)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceGroupFactory>
    nameWithType: ByteArraySerializer.Serialize<ServiceGroupFactory>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ServiceGroupFactory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceGroupFactory)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceGroupFactory)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ServiceGroupFactory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.ServiceGroupFactory
  commentId: T:System.Fabric.ServiceGroupFactory
  parent: System.Fabric
  isExternal: false
  name: ServiceGroupFactory
  nameWithType: ServiceGroupFactory
  fullName: System.Fabric.ServiceGroupFactory
- uid: System.Fabric.ServiceGroupFactory.#ctor*
  commentId: Overload:System.Fabric.ServiceGroupFactory.#ctor
  isExternal: false
  name: ServiceGroupFactory
  nameWithType: ServiceGroupFactory.ServiceGroupFactory
  fullName: System.Fabric.ServiceGroupFactory.ServiceGroupFactory
- uid: System.Fabric.Description.ServiceGroupMemberDescription
  commentId: T:System.Fabric.Description.ServiceGroupMemberDescription
  isExternal: false
  name: ServiceGroupMemberDescription
  nameWithType: ServiceGroupMemberDescription
  fullName: System.Fabric.Description.ServiceGroupMemberDescription
- uid: System.Fabric.Description.ServiceGroupDescription
  commentId: T:System.Fabric.Description.ServiceGroupDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ServiceGroupDescription
  nameWithType: ServiceGroupDescription
  fullName: System.Fabric.Description.ServiceGroupDescription
- uid: System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupAsync(System.Fabric.Description.ServiceGroupDescription)
  commentId: M:System.Fabric.FabricClient.ServiceGroupManagementClient.CreateServiceGroupAsync(System.Fabric.Description.ServiceGroupDescription)
- uid: System.Fabric.ServiceGroupFactory.AddServiceType*
  commentId: Overload:System.Fabric.ServiceGroupFactory.AddServiceType
  isExternal: false
  name: AddServiceType
  nameWithType: ServiceGroupFactory.AddServiceType
  fullName: System.Fabric.ServiceGroupFactory.AddServiceType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Fabric.ServiceGroupFactory.AddStatelessServiceFactory*
  commentId: Overload:System.Fabric.ServiceGroupFactory.AddStatelessServiceFactory
  isExternal: false
  name: AddStatelessServiceFactory
  nameWithType: ServiceGroupFactory.AddStatelessServiceFactory
  fullName: System.Fabric.ServiceGroupFactory.AddStatelessServiceFactory
- uid: System.Fabric.IStatelessServiceFactory
  commentId: T:System.Fabric.IStatelessServiceFactory
  parent: System.Fabric
  isExternal: false
  name: IStatelessServiceFactory
  nameWithType: IStatelessServiceFactory
  fullName: System.Fabric.IStatelessServiceFactory
- uid: System.Fabric.ServiceGroupFactory.AddStatefulServiceFactory*
  commentId: Overload:System.Fabric.ServiceGroupFactory.AddStatefulServiceFactory
  isExternal: false
  name: AddStatefulServiceFactory
  nameWithType: ServiceGroupFactory.AddStatefulServiceFactory
  fullName: System.Fabric.ServiceGroupFactory.AddStatefulServiceFactory
- uid: System.Fabric.IStatefulServiceFactory
  commentId: T:System.Fabric.IStatefulServiceFactory
  parent: System.Fabric
  isExternal: false
  name: IStatefulServiceFactory
  nameWithType: IStatefulServiceFactory
  fullName: System.Fabric.IStatefulServiceFactory
- uid: System.Fabric.ServiceGroupFactory.RemoveServiceFactory*
  commentId: Overload:System.Fabric.ServiceGroupFactory.RemoveServiceFactory
  isExternal: false
  name: RemoveServiceFactory
  nameWithType: ServiceGroupFactory.RemoveServiceFactory
  fullName: System.Fabric.ServiceGroupFactory.RemoveServiceFactory
