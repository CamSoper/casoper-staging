### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase
  commentId: T:System.Fabric.Description.UpgradeUpdateDescriptionBase
  id: UpgradeUpdateDescriptionBase
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.UpgradeUpdateDescriptionBase.#ctor
  - System.Fabric.Description.UpgradeUpdateDescriptionBase.FailureAction
  - System.Fabric.Description.UpgradeUpdateDescriptionBase.ForceRestart
  - System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckRetryTimeout
  - System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckStableDuration
  - System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckWaitDuration
  - System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeDomainTimeout
  - System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeMode
  - System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeReplicaSetCheckTimeout
  - System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeTimeout
  langs:
  - csharp
  - vb
  name: UpgradeUpdateDescriptionBase
  nameWithType: UpgradeUpdateDescriptionBase
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeUpdateDescriptionBase
    path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Represents the base class for <xref href=\"System.Fabric.Description.ApplicationUpgradeUpdateDescription\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"System.Fabric.Description.FabricUpgradeUpdateDescription\" data-throw-if-not-resolved=\"false\"></xref>. Used to modify the upgrade parameters describing the behavior \nof application or cluster upgrades. See <xref href=\"System.Fabric.FabricClient.ApplicationManagementClient.UpdateApplicationUpgradeAsync(System.Fabric.Description.ApplicationUpgradeUpdateDescription)\" data-throw-if-not-resolved=\"false\"></xref> \nand <xref href=\"System.Fabric.FabricClient.ClusterManagementClient.UpdateFabricUpgradeAsync(System.Fabric.Description.FabricUpgradeUpdateDescription)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public abstract class UpgradeUpdateDescriptionBase
    content.vb: Public MustInherit Class UpgradeUpdateDescriptionBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.UpgradeUpdateDescriptionBase.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.#ctor
  commentId: M:System.Fabric.Description.UpgradeUpdateDescriptionBase.#ctor
  id: '#ctor'
  parent: System.Fabric.Description.UpgradeUpdateDescriptionBase
  langs:
  - csharp
  - vb
  name: UpgradeUpdateDescriptionBase()
  nameWithType: UpgradeUpdateDescriptionBase.UpgradeUpdateDescriptionBase()
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeUpdateDescriptionBase()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Description.UpgradeUpdateDescriptionBase\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: protected UpgradeUpdateDescriptionBase()
    content.vb: Protected Sub New
  overload: System.Fabric.Description.UpgradeUpdateDescriptionBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeMode
  commentId: P:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeMode
  id: UpgradeMode
  parent: System.Fabric.Description.UpgradeUpdateDescriptionBase
  langs:
  - csharp
  - vb
  name: UpgradeMode
  nameWithType: UpgradeUpdateDescriptionBase.UpgradeMode
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeMode
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeMode
    path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
    startLine: 29
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the new value of <xref href=\"System.Fabric.RollingUpgradeMode\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public RollingUpgradeMode? UpgradeMode { get; set; }
    content.vb: Public Property UpgradeMode As RollingUpgradeMode?
    parameters: []
    return:
      type: System.Nullable{System.Fabric.RollingUpgradeMode}
      description: "\n<p>The new value of <xref href=\"System.Fabric.RollingUpgradeMode\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.ForceRestart
  commentId: P:System.Fabric.Description.UpgradeUpdateDescriptionBase.ForceRestart
  id: ForceRestart
  parent: System.Fabric.Description.UpgradeUpdateDescriptionBase
  langs:
  - csharp
  - vb
  name: ForceRestart
  nameWithType: UpgradeUpdateDescriptionBase.ForceRestart
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.ForceRestart
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ForceRestart
    path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
    startLine: 38
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the new value of <xref href=\"System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public bool ? ForceRestart { get; set; }
    content.vb: Public Property ForceRestart As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: "\n<p>The new value of <xref href=\"System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.UpgradeUpdateDescriptionBase.ForceRestart*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeReplicaSetCheckTimeout
  commentId: P:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeReplicaSetCheckTimeout
  id: UpgradeReplicaSetCheckTimeout
  parent: System.Fabric.Description.UpgradeUpdateDescriptionBase
  langs:
  - csharp
  - vb
  name: UpgradeReplicaSetCheckTimeout
  nameWithType: UpgradeUpdateDescriptionBase.UpgradeReplicaSetCheckTimeout
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeReplicaSetCheckTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeReplicaSetCheckTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
    startLine: 47
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the new value of <xref href=\"System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public TimeSpan? UpgradeReplicaSetCheckTimeout { get; set; }
    content.vb: Public Property UpgradeReplicaSetCheckTimeout As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: "\n<p>The new value of <xref href=\"System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeReplicaSetCheckTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.FailureAction
  commentId: P:System.Fabric.Description.UpgradeUpdateDescriptionBase.FailureAction
  id: FailureAction
  parent: System.Fabric.Description.UpgradeUpdateDescriptionBase
  langs:
  - csharp
  - vb
  name: FailureAction
  nameWithType: UpgradeUpdateDescriptionBase.FailureAction
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.FailureAction
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FailureAction
    path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
    startLine: 56
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the new value of <xref href=\"System.Fabric.UpgradeFailureAction\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public UpgradeFailureAction? FailureAction { get; set; }
    content.vb: Public Property FailureAction As UpgradeFailureAction?
    parameters: []
    return:
      type: System.Nullable{System.Fabric.UpgradeFailureAction}
      description: "\n<p>The new value of <xref href=\"System.Fabric.UpgradeFailureAction\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.UpgradeUpdateDescriptionBase.FailureAction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckWaitDuration
  commentId: P:System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckWaitDuration
  id: HealthCheckWaitDuration
  parent: System.Fabric.Description.UpgradeUpdateDescriptionBase
  langs:
  - csharp
  - vb
  name: HealthCheckWaitDuration
  nameWithType: UpgradeUpdateDescriptionBase.HealthCheckWaitDuration
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckWaitDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthCheckWaitDuration
    path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
    startLine: 65
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the new value of <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public TimeSpan? HealthCheckWaitDuration { get; set; }
    content.vb: Public Property HealthCheckWaitDuration As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: "\n<p>The new value of <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckWaitDuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckStableDuration
  commentId: P:System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckStableDuration
  id: HealthCheckStableDuration
  parent: System.Fabric.Description.UpgradeUpdateDescriptionBase
  langs:
  - csharp
  - vb
  name: HealthCheckStableDuration
  nameWithType: UpgradeUpdateDescriptionBase.HealthCheckStableDuration
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckStableDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthCheckStableDuration
    path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
    startLine: 74
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the new value of <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public TimeSpan? HealthCheckStableDuration { get; set; }
    content.vb: Public Property HealthCheckStableDuration As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: "\n<p>The new value of <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckStableDuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckRetryTimeout
  commentId: P:System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckRetryTimeout
  id: HealthCheckRetryTimeout
  parent: System.Fabric.Description.UpgradeUpdateDescriptionBase
  langs:
  - csharp
  - vb
  name: HealthCheckRetryTimeout
  nameWithType: UpgradeUpdateDescriptionBase.HealthCheckRetryTimeout
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckRetryTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthCheckRetryTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
    startLine: 83
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the new value of <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public TimeSpan? HealthCheckRetryTimeout { get; set; }
    content.vb: Public Property HealthCheckRetryTimeout As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: "\n<p>The new value of <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckRetryTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeTimeout
  commentId: P:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeTimeout
  id: UpgradeTimeout
  parent: System.Fabric.Description.UpgradeUpdateDescriptionBase
  langs:
  - csharp
  - vb
  name: UpgradeTimeout
  nameWithType: UpgradeUpdateDescriptionBase.UpgradeTimeout
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
    startLine: 92
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the new value of <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public TimeSpan? UpgradeTimeout { get; set; }
    content.vb: Public Property UpgradeTimeout As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: "\n<p>The new value of <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeDomainTimeout
  commentId: P:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeDomainTimeout
  id: UpgradeDomainTimeout
  parent: System.Fabric.Description.UpgradeUpdateDescriptionBase
  langs:
  - csharp
  - vb
  name: UpgradeDomainTimeout
  nameWithType: UpgradeUpdateDescriptionBase.UpgradeDomainTimeout
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeDomainTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeDomainTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/Description/UpgradeUpdateDescriptionBase.cs
    startLine: 101
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the new value of <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  example: []
  syntax:
    content: public TimeSpan? UpgradeDomainTimeout { get; set; }
    content.vb: Public Property UpgradeDomainTimeout As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: "\n<p>The new value of <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeDomainTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.Description.ApplicationUpgradeUpdateDescription
  commentId: T:System.Fabric.Description.ApplicationUpgradeUpdateDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ApplicationUpgradeUpdateDescription
  nameWithType: ApplicationUpgradeUpdateDescription
  fullName: System.Fabric.Description.ApplicationUpgradeUpdateDescription
- uid: System.Fabric.Description.FabricUpgradeUpdateDescription
  commentId: T:System.Fabric.Description.FabricUpgradeUpdateDescription
  parent: System.Fabric.Description
  isExternal: false
  name: FabricUpgradeUpdateDescription
  nameWithType: FabricUpgradeUpdateDescription
  fullName: System.Fabric.Description.FabricUpgradeUpdateDescription
- uid: System.Fabric.FabricClient.ApplicationManagementClient.UpdateApplicationUpgradeAsync(System.Fabric.Description.ApplicationUpgradeUpdateDescription)
  commentId: M:System.Fabric.FabricClient.ApplicationManagementClient.UpdateApplicationUpgradeAsync(System.Fabric.Description.ApplicationUpgradeUpdateDescription)
- uid: System.Fabric.FabricClient.ClusterManagementClient.UpdateFabricUpgradeAsync(System.Fabric.Description.FabricUpgradeUpdateDescription)
  commentId: M:System.Fabric.FabricClient.ClusterManagementClient.UpdateFabricUpgradeAsync(System.Fabric.Description.FabricUpgradeUpdateDescription)
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<UpgradeUpdateDescriptionBase>()
  nameWithType: ByteArraySerializer.Serialize<UpgradeUpdateDescriptionBase>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.UpgradeUpdateDescriptionBase>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of UpgradeUpdateDescriptionBase)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.UpgradeUpdateDescriptionBase)()
  name.vb: Serialize(Of UpgradeUpdateDescriptionBase)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<UpgradeUpdateDescriptionBase>
    nameWithType: ByteArraySerializer.Serialize<UpgradeUpdateDescriptionBase>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.UpgradeUpdateDescriptionBase>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of UpgradeUpdateDescriptionBase)
    nameWithType: ByteArraySerializer.Serialize(Of UpgradeUpdateDescriptionBase)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.UpgradeUpdateDescriptionBase)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase
  commentId: T:System.Fabric.Description.UpgradeUpdateDescriptionBase
  parent: System.Fabric.Description
  isExternal: false
  name: UpgradeUpdateDescriptionBase
  nameWithType: UpgradeUpdateDescriptionBase
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.#ctor*
  commentId: Overload:System.Fabric.Description.UpgradeUpdateDescriptionBase.#ctor
  isExternal: false
  name: UpgradeUpdateDescriptionBase
  nameWithType: UpgradeUpdateDescriptionBase.UpgradeUpdateDescriptionBase
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeUpdateDescriptionBase
- uid: System.Fabric.RollingUpgradeMode
  commentId: T:System.Fabric.RollingUpgradeMode
  parent: System.Fabric
  isExternal: false
  name: RollingUpgradeMode
  nameWithType: RollingUpgradeMode
  fullName: System.Fabric.RollingUpgradeMode
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeMode*
  commentId: Overload:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeMode
  isExternal: false
  name: UpgradeMode
  nameWithType: UpgradeUpdateDescriptionBase.UpgradeMode
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeMode
- uid: System.Nullable{System.Fabric.RollingUpgradeMode}
  commentId: T:System.Nullable{System.Fabric.RollingUpgradeMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<RollingUpgradeMode>
  nameWithType: Nullable<RollingUpgradeMode>
  fullName: System.Nullable<System.Fabric.RollingUpgradeMode>
  nameWithType.vb: Nullable(Of RollingUpgradeMode)
  fullname.vb: System.Nullable(Of System.Fabric.RollingUpgradeMode)
  name.vb: Nullable(Of RollingUpgradeMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.RollingUpgradeMode
    name: RollingUpgradeMode
    nameWithType: RollingUpgradeMode
    fullName: System.Fabric.RollingUpgradeMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.RollingUpgradeMode
    name: RollingUpgradeMode
    nameWithType: RollingUpgradeMode
    fullName: System.Fabric.RollingUpgradeMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
  commentId: P:System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
  parent: System.Fabric.Description.RollingUpgradePolicyDescription
  isExternal: false
  name: ForceRestart
  nameWithType: RollingUpgradePolicyDescription.ForceRestart
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.ForceRestart
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.ForceRestart*
  commentId: Overload:System.Fabric.Description.UpgradeUpdateDescriptionBase.ForceRestart
  isExternal: false
  name: ForceRestart
  nameWithType: UpgradeUpdateDescriptionBase.ForceRestart
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.ForceRestart
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.RollingUpgradePolicyDescription
  commentId: T:System.Fabric.Description.RollingUpgradePolicyDescription
  parent: System.Fabric.Description
  isExternal: false
  name: RollingUpgradePolicyDescription
  nameWithType: RollingUpgradePolicyDescription
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription
- uid: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  commentId: P:System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  parent: System.Fabric.Description.RollingUpgradePolicyDescription
  isExternal: false
  name: UpgradeReplicaSetCheckTimeout
  nameWithType: RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
  fullName: System.Fabric.Description.RollingUpgradePolicyDescription.UpgradeReplicaSetCheckTimeout
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeReplicaSetCheckTimeout*
  commentId: Overload:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeReplicaSetCheckTimeout
  isExternal: false
  name: UpgradeReplicaSetCheckTimeout
  nameWithType: UpgradeUpdateDescriptionBase.UpgradeReplicaSetCheckTimeout
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeReplicaSetCheckTimeout
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.UpgradeFailureAction
  commentId: T:System.Fabric.UpgradeFailureAction
  parent: System.Fabric
  isExternal: false
  name: UpgradeFailureAction
  nameWithType: UpgradeFailureAction
  fullName: System.Fabric.UpgradeFailureAction
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.FailureAction*
  commentId: Overload:System.Fabric.Description.UpgradeUpdateDescriptionBase.FailureAction
  isExternal: false
  name: FailureAction
  nameWithType: UpgradeUpdateDescriptionBase.FailureAction
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.FailureAction
- uid: System.Nullable{System.Fabric.UpgradeFailureAction}
  commentId: T:System.Nullable{System.Fabric.UpgradeFailureAction}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UpgradeFailureAction>
  nameWithType: Nullable<UpgradeFailureAction>
  fullName: System.Nullable<System.Fabric.UpgradeFailureAction>
  nameWithType.vb: Nullable(Of UpgradeFailureAction)
  fullname.vb: System.Nullable(Of System.Fabric.UpgradeFailureAction)
  name.vb: Nullable(Of UpgradeFailureAction)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.UpgradeFailureAction
    name: UpgradeFailureAction
    nameWithType: UpgradeFailureAction
    fullName: System.Fabric.UpgradeFailureAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.UpgradeFailureAction
    name: UpgradeFailureAction
    nameWithType: UpgradeFailureAction
    fullName: System.Fabric.UpgradeFailureAction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckWaitDuration*
  commentId: Overload:System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckWaitDuration
  isExternal: false
  name: HealthCheckWaitDuration
  nameWithType: UpgradeUpdateDescriptionBase.HealthCheckWaitDuration
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckWaitDuration
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckStableDuration*
  commentId: Overload:System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckStableDuration
  isExternal: false
  name: HealthCheckStableDuration
  nameWithType: UpgradeUpdateDescriptionBase.HealthCheckStableDuration
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckStableDuration
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckRetryTimeout*
  commentId: Overload:System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckRetryTimeout
  isExternal: false
  name: HealthCheckRetryTimeout
  nameWithType: UpgradeUpdateDescriptionBase.HealthCheckRetryTimeout
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.HealthCheckRetryTimeout
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeTimeout*
  commentId: Overload:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeTimeout
  isExternal: false
  name: UpgradeTimeout
  nameWithType: UpgradeUpdateDescriptionBase.UpgradeTimeout
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeTimeout
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
- uid: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeDomainTimeout*
  commentId: Overload:System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeDomainTimeout
  isExternal: false
  name: UpgradeDomainTimeout
  nameWithType: UpgradeUpdateDescriptionBase.UpgradeDomainTimeout
  fullName: System.Fabric.Description.UpgradeUpdateDescriptionBase.UpgradeDomainTimeout
