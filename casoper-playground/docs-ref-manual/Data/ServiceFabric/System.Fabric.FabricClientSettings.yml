### YamlMime:ManagedReference
items:
- uid: System.Fabric.FabricClientSettings
  commentId: T:System.Fabric.FabricClientSettings
  id: FabricClientSettings
  parent: System.Fabric
  children:
  - System.Fabric.FabricClientSettings.#ctor
  - System.Fabric.FabricClientSettings.AuthTokenBufferSize
  - System.Fabric.FabricClientSettings.ClientFriendlyName
  - System.Fabric.FabricClientSettings.ConnectionIdleTimeout
  - System.Fabric.FabricClientSettings.ConnectionInitializationTimeout
  - System.Fabric.FabricClientSettings.HealthOperationTimeout
  - System.Fabric.FabricClientSettings.HealthReportRetrySendInterval
  - System.Fabric.FabricClientSettings.HealthReportSendInterval
  - System.Fabric.FabricClientSettings.KeepAliveInterval
  - System.Fabric.FabricClientSettings.NotificationCacheUpdateTimeout
  - System.Fabric.FabricClientSettings.NotificationGatewayConnectionTimeout
  - System.Fabric.FabricClientSettings.PartitionLocationCacheBucketCount
  - System.Fabric.FabricClientSettings.PartitionLocationCacheLimit
  - System.Fabric.FabricClientSettings.ServiceChangePollInterval
  langs:
  - csharp
  - vb
  name: FabricClientSettings
  nameWithType: FabricClientSettings
  fullName: System.Fabric.FabricClientSettings
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FabricClientSettings
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Represents the configuration settings for the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public sealed class FabricClientSettings
    content.vb: Public NotInheritable Class FabricClientSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.FabricClientSettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.FabricClientSettings.#ctor
  commentId: M:System.Fabric.FabricClientSettings.#ctor
  id: '#ctor'
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: FabricClientSettings()
  nameWithType: FabricClientSettings.FabricClientSettings()
  fullName: System.Fabric.FabricClientSettings.FabricClientSettings()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 20
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.FabricClientSettings\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public FabricClientSettings()
    content.vb: Public Sub New
  overload: System.Fabric.FabricClientSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.ClientFriendlyName
  commentId: P:System.Fabric.FabricClientSettings.ClientFriendlyName
  id: ClientFriendlyName
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: ClientFriendlyName
  nameWithType: FabricClientSettings.ClientFriendlyName
  fullName: System.Fabric.FabricClientSettings.ClientFriendlyName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ClientFriendlyName
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 54
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the client friendly name that will appear in Service Fabric traces for debugging.</p>\n"
  remarks: "\n<p>The default value is null and the client friendly name will automatically be generated as a GUID internally.</p>\n"
  example: []
  syntax:
    content: public string ClientFriendlyName { get; set; }
    content.vb: Public Property ClientFriendlyName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The client friendly name that will appear in Service Fabric traces for debugging.</p>\n"
  overload: System.Fabric.FabricClientSettings.ClientFriendlyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.PartitionLocationCacheLimit
  commentId: P:System.Fabric.FabricClientSettings.PartitionLocationCacheLimit
  id: PartitionLocationCacheLimit
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: PartitionLocationCacheLimit
  nameWithType: FabricClientSettings.PartitionLocationCacheLimit
  fullName: System.Fabric.FabricClientSettings.PartitionLocationCacheLimit
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionLocationCacheLimit
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 67
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the maximum number of cached location entries on the client.</p>\n"
  remarks: "\n<p>The default value of the <xref href=\"System.Fabric.FabricClientSettings.PartitionLocationCacheLimit\" data-throw-if-not-resolved=\"false\"></xref> property is 1000.</p>\n<p>The <xref href=\"System.Fabric.FabricClientSettings.PartitionLocationCacheLimit\" data-throw-if-not-resolved=\"false\"></xref> property is not updatable. Setting this property will throw a <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> exception.</p>\n<p>When the cache limit is reached the oldest entries are discarded first. The default value is 100.</p>\n"
  example: []
  syntax:
    content: public long PartitionLocationCacheLimit { get; set; }
    content.vb: Public Property PartitionLocationCacheLimit As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The maximum number of cached location entries on the client.</p>\n"
  overload: System.Fabric.FabricClientSettings.PartitionLocationCacheLimit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.PartitionLocationCacheBucketCount
  commentId: P:System.Fabric.FabricClientSettings.PartitionLocationCacheBucketCount
  id: PartitionLocationCacheBucketCount
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: PartitionLocationCacheBucketCount
  nameWithType: FabricClientSettings.PartitionLocationCacheBucketCount
  fullName: System.Fabric.FabricClientSettings.PartitionLocationCacheBucketCount
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionLocationCacheBucketCount
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 78
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the bucket count used by the client’s service resolution cache.</p>\n"
  remarks: "\n<p>The default value is 1024.</p>\n"
  example: []
  syntax:
    content: public long PartitionLocationCacheBucketCount { get; set; }
    content.vb: Public Property PartitionLocationCacheBucketCount As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The bucket count used by the client’s service resolution cache.</p>\n"
  overload: System.Fabric.FabricClientSettings.PartitionLocationCacheBucketCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.ServiceChangePollInterval
  commentId: P:System.Fabric.FabricClientSettings.ServiceChangePollInterval
  id: ServiceChangePollInterval
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: ServiceChangePollInterval
  nameWithType: FabricClientSettings.ServiceChangePollInterval
  fullName: System.Fabric.FabricClientSettings.ServiceChangePollInterval
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceChangePollInterval
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 89
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the timeout on service change notification requests from the client to the gateway for all registered callbacks.</p>\n"
  remarks: "\n<p>The default value of the <xref href=\"System.Fabric.FabricClientSettings.ServiceChangePollInterval\" data-throw-if-not-resolved=\"false\"></xref> property is 120 seconds.</p>\n"
  example: []
  syntax:
    content: public TimeSpan ServiceChangePollInterval { get; set; }
    content.vb: Public Property ServiceChangePollInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The timeout on service change notification requests from the client to the gateway for all registered callbacks.</p>\n"
  overload: System.Fabric.FabricClientSettings.ServiceChangePollInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.ConnectionInitializationTimeout
  commentId: P:System.Fabric.FabricClientSettings.ConnectionInitializationTimeout
  id: ConnectionInitializationTimeout
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: ConnectionInitializationTimeout
  nameWithType: FabricClientSettings.ConnectionInitializationTimeout
  fullName: System.Fabric.FabricClientSettings.ConnectionInitializationTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ConnectionInitializationTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 101
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the timeout after which, if the current gateway address does not respond with a valid connection, another different address is randomly selected from the gateway addresses collection.</p>\n"
  remarks: "\n<p>The default value of the <xref href=\"System.Fabric.FabricClientSettings.ConnectionInitializationTimeout\" data-throw-if-not-resolved=\"false\"></xref> property is 2 seconds.</p>\n<p>The <xref href=\"System.Fabric.FabricClientSettings.ConnectionInitializationTimeout\" data-throw-if-not-resolved=\"false\"></xref> property must be less than the value of the <xref href=\"System.Fabric.FabricClientSettings.ServiceChangePollInterval\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  example: []
  syntax:
    content: public TimeSpan ConnectionInitializationTimeout { get; set; }
    content.vb: Public Property ConnectionInitializationTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The timeout after the current gateway address does not respond with a valid connection.</p>\n"
  overload: System.Fabric.FabricClientSettings.ConnectionInitializationTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.KeepAliveInterval
  commentId: P:System.Fabric.FabricClientSettings.KeepAliveInterval
  id: KeepAliveInterval
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: KeepAliveInterval
  nameWithType: FabricClientSettings.KeepAliveInterval
  fullName: System.Fabric.FabricClientSettings.KeepAliveInterval
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: KeepAliveInterval
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 116
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets the interval at which the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> will ping the connected endpoint.</p>\n"
  remarks: "\n<p>The default value of the <xref href=\"System.Fabric.FabricClientSettings.KeepAliveInterval\" data-throw-if-not-resolved=\"false\"></xref> property is 0 seconds.</p>\n<p>This property can't be updated after the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> is opened.\nSetting this property will throw a <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> exception.</p>\n<p>\n<xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> will continue pinging as long as it has pending operations.</p>\n"
  example: []
  syntax:
    content: public TimeSpan KeepAliveInterval { get; set; }
    content.vb: Public Property KeepAliveInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The interval at which the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> will ping the connected endpoint.</p>\n"
  overload: System.Fabric.FabricClientSettings.KeepAliveInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.ConnectionIdleTimeout
  commentId: P:System.Fabric.FabricClientSettings.ConnectionIdleTimeout
  id: ConnectionIdleTimeout
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: ConnectionIdleTimeout
  nameWithType: FabricClientSettings.ConnectionIdleTimeout
  fullName: System.Fabric.FabricClientSettings.ConnectionIdleTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ConnectionIdleTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 128
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p><xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> will clean up its underlying connections if they have been idle for this duration (set to 0 seconds to disable).</p>\n"
  remarks: "\n<p>This property can't be updated after the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> is opened.\nSetting this property will throw a <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> exception.</p>\n"
  example: []
  syntax:
    content: public TimeSpan ConnectionIdleTimeout { get; set; }
    content.vb: Public Property ConnectionIdleTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The idle duration at which the <xref href=\"System.Fabric.FabricClient\" data-throw-if-not-resolved=\"false\"></xref> will clean up its underlying connections. </p>\n"
  overload: System.Fabric.FabricClientSettings.ConnectionIdleTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.HealthOperationTimeout
  commentId: P:System.Fabric.FabricClientSettings.HealthOperationTimeout
  id: HealthOperationTimeout
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: HealthOperationTimeout
  nameWithType: FabricClientSettings.HealthOperationTimeout
  fullName: System.Fabric.FabricClientSettings.HealthOperationTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthOperationTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 139
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the timeout on health operation requests from the client to the gateway.</p>\n"
  remarks: "\n<p>The default value of the <xref href=\"System.Fabric.FabricClientSettings.HealthOperationTimeout\" data-throw-if-not-resolved=\"false\"></xref> property is 120 seconds.</p>\n"
  example: []
  syntax:
    content: public TimeSpan HealthOperationTimeout { get; set; }
    content.vb: Public Property HealthOperationTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The timeout on health operation requests from the client to the gateway.</p>\n"
  overload: System.Fabric.FabricClientSettings.HealthOperationTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.HealthReportSendInterval
  commentId: P:System.Fabric.FabricClientSettings.HealthReportSendInterval
  id: HealthReportSendInterval
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: HealthReportSendInterval
  nameWithType: FabricClientSettings.HealthReportSendInterval
  fullName: System.Fabric.FabricClientSettings.HealthReportSendInterval
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthReportSendInterval
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 150
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the interval at which health reports are sent to Health Manager.</p>\n"
  remarks: "\n<p>The default value of the <xref href=\"System.Fabric.FabricClientSettings.HealthReportSendInterval\" data-throw-if-not-resolved=\"false\"></xref> property is 30 seconds.</p>\n"
  example: []
  syntax:
    content: public TimeSpan HealthReportSendInterval { get; set; }
    content.vb: Public Property HealthReportSendInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The interval at which health reports are sent to Health Manager.</p>\n"
  overload: System.Fabric.FabricClientSettings.HealthReportSendInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.HealthReportRetrySendInterval
  commentId: P:System.Fabric.FabricClientSettings.HealthReportRetrySendInterval
  id: HealthReportRetrySendInterval
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: HealthReportRetrySendInterval
  nameWithType: FabricClientSettings.HealthReportRetrySendInterval
  fullName: System.Fabric.FabricClientSettings.HealthReportRetrySendInterval
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthReportRetrySendInterval
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 161
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the retry interval at which health reports that have not yet been acknowledged by the Health Manager are resent.</p>\n"
  remarks: "\n<p>The default value of the <xref href=\"System.Fabric.FabricClientSettings.HealthReportRetrySendInterval\" data-throw-if-not-resolved=\"false\"></xref> property is 30 seconds.</p>\n"
  example: []
  syntax:
    content: public TimeSpan HealthReportRetrySendInterval { get; set; }
    content.vb: Public Property HealthReportRetrySendInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The retry interval at which health reports that have not yet been acknowledged by the Health Manager are resent.</p>\n"
  overload: System.Fabric.FabricClientSettings.HealthReportRetrySendInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.NotificationGatewayConnectionTimeout
  commentId: P:System.Fabric.FabricClientSettings.NotificationGatewayConnectionTimeout
  id: NotificationGatewayConnectionTimeout
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: NotificationGatewayConnectionTimeout
  nameWithType: FabricClientSettings.NotificationGatewayConnectionTimeout
  fullName: System.Fabric.FabricClientSettings.NotificationGatewayConnectionTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NotificationGatewayConnectionTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 169
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the timeout for running a re-connection protocol if the client has registered for service notifications. The default value is 30 seconds. </p>\n"
  example: []
  syntax:
    content: public TimeSpan NotificationGatewayConnectionTimeout { get; set; }
    content.vb: Public Property NotificationGatewayConnectionTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The timeout for running a re-connection protocol if the client has registered for service notifications.</p>\n"
  overload: System.Fabric.FabricClientSettings.NotificationGatewayConnectionTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.NotificationCacheUpdateTimeout
  commentId: P:System.Fabric.FabricClientSettings.NotificationCacheUpdateTimeout
  id: NotificationCacheUpdateTimeout
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: NotificationCacheUpdateTimeout
  nameWithType: FabricClientSettings.NotificationCacheUpdateTimeout
  fullName: System.Fabric.FabricClientSettings.NotificationCacheUpdateTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NotificationCacheUpdateTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 177
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\n<p>Gets or sets the timeout for updating the local cache in response to service notifications. The default value is 30 seconds.</p>\n"
  example: []
  syntax:
    content: public TimeSpan NotificationCacheUpdateTimeout { get; set; }
    content.vb: Public Property NotificationCacheUpdateTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The timeout for updating the local cache in response to service notifications.</p>\n"
  overload: System.Fabric.FabricClientSettings.NotificationCacheUpdateTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.FabricClientSettings.AuthTokenBufferSize
  commentId: P:System.Fabric.FabricClientSettings.AuthTokenBufferSize
  id: AuthTokenBufferSize
  parent: System.Fabric.FabricClientSettings
  langs:
  - csharp
  - vb
  name: AuthTokenBufferSize
  nameWithType: FabricClientSettings.AuthTokenBufferSize
  fullName: System.Fabric.FabricClientSettings.AuthTokenBufferSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: AuthTokenBufferSize
    path: src/prod/src/managed/Api/src/System/Fabric/FabricClientSettings.cs
    startLine: 185
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nGets or sets a value indicating the buffer size to use when retrieving an authentication token from Azure Active Directory.\n"
  example: []
  syntax:
    content: public long AuthTokenBufferSize { get; set; }
    content.vb: Public Property AuthTokenBufferSize As Long
    parameters: []
    return:
      type: System.Int64
      description: "\nReturns the buffer size in bytes.\n"
  overload: System.Fabric.FabricClientSettings.AuthTokenBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.FabricClient
  commentId: T:System.Fabric.FabricClient
  parent: System.Fabric
  isExternal: false
  name: FabricClient
  nameWithType: FabricClient
  fullName: System.Fabric.FabricClient
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.FabricClientSettings.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<FabricClientSettings>()
  nameWithType: ByteArraySerializer.Serialize<FabricClientSettings>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.FabricClientSettings>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of FabricClientSettings)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.FabricClientSettings)()
  name.vb: Serialize(Of FabricClientSettings)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<FabricClientSettings>
    nameWithType: ByteArraySerializer.Serialize<FabricClientSettings>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.FabricClientSettings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of FabricClientSettings)
    nameWithType: ByteArraySerializer.Serialize(Of FabricClientSettings)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.FabricClientSettings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.FabricClientSettings
  commentId: T:System.Fabric.FabricClientSettings
  parent: System.Fabric
  isExternal: false
  name: FabricClientSettings
  nameWithType: FabricClientSettings
  fullName: System.Fabric.FabricClientSettings
- uid: System.Fabric.FabricClientSettings.#ctor*
  commentId: Overload:System.Fabric.FabricClientSettings.#ctor
  isExternal: false
  name: FabricClientSettings
  nameWithType: FabricClientSettings.FabricClientSettings
  fullName: System.Fabric.FabricClientSettings.FabricClientSettings
- uid: System.Fabric.FabricClientSettings.ClientFriendlyName*
  commentId: Overload:System.Fabric.FabricClientSettings.ClientFriendlyName
  isExternal: false
  name: ClientFriendlyName
  nameWithType: FabricClientSettings.ClientFriendlyName
  fullName: System.Fabric.FabricClientSettings.ClientFriendlyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.FabricClientSettings.PartitionLocationCacheLimit
  commentId: P:System.Fabric.FabricClientSettings.PartitionLocationCacheLimit
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Fabric.FabricClientSettings.PartitionLocationCacheLimit*
  commentId: Overload:System.Fabric.FabricClientSettings.PartitionLocationCacheLimit
  isExternal: false
  name: PartitionLocationCacheLimit
  nameWithType: FabricClientSettings.PartitionLocationCacheLimit
  fullName: System.Fabric.FabricClientSettings.PartitionLocationCacheLimit
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.FabricClientSettings.PartitionLocationCacheBucketCount*
  commentId: Overload:System.Fabric.FabricClientSettings.PartitionLocationCacheBucketCount
  isExternal: false
  name: PartitionLocationCacheBucketCount
  nameWithType: FabricClientSettings.PartitionLocationCacheBucketCount
  fullName: System.Fabric.FabricClientSettings.PartitionLocationCacheBucketCount
- uid: System.Fabric.FabricClientSettings.ServiceChangePollInterval
  commentId: P:System.Fabric.FabricClientSettings.ServiceChangePollInterval
- uid: System.Fabric.FabricClientSettings.ServiceChangePollInterval*
  commentId: Overload:System.Fabric.FabricClientSettings.ServiceChangePollInterval
  isExternal: false
  name: ServiceChangePollInterval
  nameWithType: FabricClientSettings.ServiceChangePollInterval
  fullName: System.Fabric.FabricClientSettings.ServiceChangePollInterval
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.FabricClientSettings.ConnectionInitializationTimeout
  commentId: P:System.Fabric.FabricClientSettings.ConnectionInitializationTimeout
- uid: System.Fabric.FabricClientSettings.ConnectionInitializationTimeout*
  commentId: Overload:System.Fabric.FabricClientSettings.ConnectionInitializationTimeout
  isExternal: false
  name: ConnectionInitializationTimeout
  nameWithType: FabricClientSettings.ConnectionInitializationTimeout
  fullName: System.Fabric.FabricClientSettings.ConnectionInitializationTimeout
- uid: System.Fabric.FabricClientSettings.KeepAliveInterval
  commentId: P:System.Fabric.FabricClientSettings.KeepAliveInterval
- uid: System.Fabric.FabricClientSettings.KeepAliveInterval*
  commentId: Overload:System.Fabric.FabricClientSettings.KeepAliveInterval
  isExternal: false
  name: KeepAliveInterval
  nameWithType: FabricClientSettings.KeepAliveInterval
  fullName: System.Fabric.FabricClientSettings.KeepAliveInterval
- uid: System.Fabric.FabricClientSettings.ConnectionIdleTimeout*
  commentId: Overload:System.Fabric.FabricClientSettings.ConnectionIdleTimeout
  isExternal: false
  name: ConnectionIdleTimeout
  nameWithType: FabricClientSettings.ConnectionIdleTimeout
  fullName: System.Fabric.FabricClientSettings.ConnectionIdleTimeout
- uid: System.Fabric.FabricClientSettings.HealthOperationTimeout
  commentId: P:System.Fabric.FabricClientSettings.HealthOperationTimeout
- uid: System.Fabric.FabricClientSettings.HealthOperationTimeout*
  commentId: Overload:System.Fabric.FabricClientSettings.HealthOperationTimeout
  isExternal: false
  name: HealthOperationTimeout
  nameWithType: FabricClientSettings.HealthOperationTimeout
  fullName: System.Fabric.FabricClientSettings.HealthOperationTimeout
- uid: System.Fabric.FabricClientSettings.HealthReportSendInterval
  commentId: P:System.Fabric.FabricClientSettings.HealthReportSendInterval
- uid: System.Fabric.FabricClientSettings.HealthReportSendInterval*
  commentId: Overload:System.Fabric.FabricClientSettings.HealthReportSendInterval
  isExternal: false
  name: HealthReportSendInterval
  nameWithType: FabricClientSettings.HealthReportSendInterval
  fullName: System.Fabric.FabricClientSettings.HealthReportSendInterval
- uid: System.Fabric.FabricClientSettings.HealthReportRetrySendInterval
  commentId: P:System.Fabric.FabricClientSettings.HealthReportRetrySendInterval
- uid: System.Fabric.FabricClientSettings.HealthReportRetrySendInterval*
  commentId: Overload:System.Fabric.FabricClientSettings.HealthReportRetrySendInterval
  isExternal: false
  name: HealthReportRetrySendInterval
  nameWithType: FabricClientSettings.HealthReportRetrySendInterval
  fullName: System.Fabric.FabricClientSettings.HealthReportRetrySendInterval
- uid: System.Fabric.FabricClientSettings.NotificationGatewayConnectionTimeout*
  commentId: Overload:System.Fabric.FabricClientSettings.NotificationGatewayConnectionTimeout
  isExternal: false
  name: NotificationGatewayConnectionTimeout
  nameWithType: FabricClientSettings.NotificationGatewayConnectionTimeout
  fullName: System.Fabric.FabricClientSettings.NotificationGatewayConnectionTimeout
- uid: System.Fabric.FabricClientSettings.NotificationCacheUpdateTimeout*
  commentId: Overload:System.Fabric.FabricClientSettings.NotificationCacheUpdateTimeout
  isExternal: false
  name: NotificationCacheUpdateTimeout
  nameWithType: FabricClientSettings.NotificationCacheUpdateTimeout
  fullName: System.Fabric.FabricClientSettings.NotificationCacheUpdateTimeout
- uid: System.Fabric.FabricClientSettings.AuthTokenBufferSize*
  commentId: Overload:System.Fabric.FabricClientSettings.AuthTokenBufferSize
  isExternal: false
  name: AuthTokenBufferSize
  nameWithType: FabricClientSettings.AuthTokenBufferSize
  fullName: System.Fabric.FabricClientSettings.AuthTokenBufferSize
