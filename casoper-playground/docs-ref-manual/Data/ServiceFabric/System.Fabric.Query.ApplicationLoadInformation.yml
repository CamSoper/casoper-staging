### YamlMime:ManagedReference
items:
- uid: System.Fabric.Query.ApplicationLoadInformation
  commentId: T:System.Fabric.Query.ApplicationLoadInformation
  id: ApplicationLoadInformation
  parent: System.Fabric.Query
  children:
  - System.Fabric.Query.ApplicationLoadInformation.#ctor
  - System.Fabric.Query.ApplicationLoadInformation.ApplicationLoadMetricInformation
  - System.Fabric.Query.ApplicationLoadInformation.MaximumNodes
  - System.Fabric.Query.ApplicationLoadInformation.MinimumNodes
  - System.Fabric.Query.ApplicationLoadInformation.Name
  - System.Fabric.Query.ApplicationLoadInformation.NodeCount
  langs:
  - csharp
  - vb
  name: ApplicationLoadInformation
  nameWithType: ApplicationLoadInformation
  fullName: System.Fabric.Query.ApplicationLoadInformation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationLoadInformation
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p> Describes the load of an application instance that is retrieved using\n<xref href=\"System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n"
  example: []
  syntax:
    content: public class ApplicationLoadInformation
    content.vb: Public Class ApplicationLoadInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Query.ApplicationLoadInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Query.ApplicationLoadInformation.#ctor
  commentId: M:System.Fabric.Query.ApplicationLoadInformation.#ctor
  id: '#ctor'
  parent: System.Fabric.Query.ApplicationLoadInformation
  langs:
  - csharp
  - vb
  name: ApplicationLoadInformation()
  nameWithType: ApplicationLoadInformation.ApplicationLoadInformation()
  fullName: System.Fabric.Query.ApplicationLoadInformation.ApplicationLoadInformation()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
    startLine: 20
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Query.ApplicationLoadInformation\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ApplicationLoadInformation()
    content.vb: Public Sub New
  overload: System.Fabric.Query.ApplicationLoadInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Query.ApplicationLoadInformation.Name
  commentId: P:System.Fabric.Query.ApplicationLoadInformation.Name
  id: Name
  parent: System.Fabric.Query.ApplicationLoadInformation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ApplicationLoadInformation.Name
  fullName: System.Fabric.Query.ApplicationLoadInformation.Name
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Name
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
    startLine: 30
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets or sets the name of the application.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\nThe name of the application.\n"
  overload: System.Fabric.Query.ApplicationLoadInformation.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ApplicationLoadInformation.MinimumNodes
  commentId: P:System.Fabric.Query.ApplicationLoadInformation.MinimumNodes
  id: MinimumNodes
  parent: System.Fabric.Query.ApplicationLoadInformation
  langs:
  - csharp
  - vb
  name: MinimumNodes
  nameWithType: ApplicationLoadInformation.MinimumNodes
  fullName: System.Fabric.Query.ApplicationLoadInformation.MinimumNodes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MinimumNodes
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
    startLine: 41
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the minimum number of nodes for this application.\n"
  example: []
  syntax:
    content: public long MinimumNodes { get; }
    content.vb: Public ReadOnly Property MinimumNodes As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>\nNumber of nodes where Service Fabric will reserve Capacity in the cluster for this Application instance.\nThis value is equal to <xref href=\"System.Fabric.Description.ApplicationDescription.MinimumNodes\" data-throw-if-not-resolved=\"false\"></xref> that was set when the application was created or updated.\n</p>\n"
  overload: System.Fabric.Query.ApplicationLoadInformation.MinimumNodes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ApplicationLoadInformation.MaximumNodes
  commentId: P:System.Fabric.Query.ApplicationLoadInformation.MaximumNodes
  id: MaximumNodes
  parent: System.Fabric.Query.ApplicationLoadInformation
  langs:
  - csharp
  - vb
  name: MaximumNodes
  nameWithType: ApplicationLoadInformation.MaximumNodes
  fullName: System.Fabric.Query.ApplicationLoadInformation.MaximumNodes
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MaximumNodes
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
    startLine: 55
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the maximum number of nodes where this application can be instantiated.\n"
  remarks: "\nFor applications that do not have application capacity defined this value will be zero.\n"
  example: []
  syntax:
    content: public long MaximumNodes { get; }
    content.vb: Public ReadOnly Property MaximumNodes As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>\nNumber of nodes this application is allowed to span.\nThis value is equal to <xref href=\"System.Fabric.Description.ApplicationDescription.MaximumNodes\" data-throw-if-not-resolved=\"false\"></xref> that was set when application was created or updated.\n</p>\n"
  overload: System.Fabric.Query.ApplicationLoadInformation.MaximumNodes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ApplicationLoadInformation.NodeCount
  commentId: P:System.Fabric.Query.ApplicationLoadInformation.NodeCount
  id: NodeCount
  parent: System.Fabric.Query.ApplicationLoadInformation
  langs:
  - csharp
  - vb
  name: NodeCount
  nameWithType: ApplicationLoadInformation.NodeCount
  fullName: System.Fabric.Query.ApplicationLoadInformation.NodeCount
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeCount
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
    startLine: 68
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the number of nodes on which this application is instantiated.\n"
  remarks: "\nFor applications that do not have application capacity defined this value will be zero.\n"
  example: []
  syntax:
    content: public long NodeCount { get; }
    content.vb: Public ReadOnly Property NodeCount As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>\nThe number of nodes on which this application is currently instantiated.\n</p>\n"
  overload: System.Fabric.Query.ApplicationLoadInformation.NodeCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Query.ApplicationLoadInformation.ApplicationLoadMetricInformation
  commentId: P:System.Fabric.Query.ApplicationLoadInformation.ApplicationLoadMetricInformation
  id: ApplicationLoadMetricInformation
  parent: System.Fabric.Query.ApplicationLoadInformation
  langs:
  - csharp
  - vb
  name: ApplicationLoadMetricInformation
  nameWithType: ApplicationLoadInformation.ApplicationLoadMetricInformation
  fullName: System.Fabric.Query.ApplicationLoadInformation.ApplicationLoadMetricInformation
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationLoadMetricInformation
    path: src/prod/src/managed/Api/src/System/Fabric/Query/ApplicationLoadInformation.cs
    startLine: 81
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Query
  summary: "\nGets the list of loads per metric for this application instance.\n"
  remarks: "\nFor applications that do not have application capacity defined this list will be empty.\n"
  example: []
  syntax:
    content: public IList<ApplicationLoadMetricInformation> ApplicationLoadMetricInformation { get; }
    content.vb: Public ReadOnly Property ApplicationLoadMetricInformation As IList(Of ApplicationLoadMetricInformation)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Query.ApplicationLoadMetricInformation}
      description: "\nThe list of loads per metric for for this application instance. For each metric that was defined in \n<xref href=\"System.Fabric.Description.ApplicationDescription.Metrics\" data-throw-if-not-resolved=\"false\"></xref> when application was created or updated there will be one instance of\n<xref href=\"System.Fabric.Query.ApplicationLoadMetricInformation\" data-throw-if-not-resolved=\"false\"></xref> in this list.\n"
  overload: System.Fabric.Query.ApplicationLoadInformation.ApplicationLoadMetricInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String)
  commentId: M:System.Fabric.FabricClient.QueryClient.GetApplicationLoadInformationAsync(System.String)
- uid: System.Fabric.Query
  commentId: N:System.Fabric.Query
  isExternal: false
  name: System.Fabric.Query
  nameWithType: System.Fabric.Query
  fullName: System.Fabric.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Query.ApplicationLoadInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ApplicationLoadInformation>()
  nameWithType: ByteArraySerializer.Serialize<ApplicationLoadInformation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.ApplicationLoadInformation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ApplicationLoadInformation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.ApplicationLoadInformation)()
  name.vb: Serialize(Of ApplicationLoadInformation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ApplicationLoadInformation>
    nameWithType: ByteArraySerializer.Serialize<ApplicationLoadInformation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Query.ApplicationLoadInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ApplicationLoadInformation)
    nameWithType: ByteArraySerializer.Serialize(Of ApplicationLoadInformation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Query.ApplicationLoadInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Query.ApplicationLoadInformation
  commentId: T:System.Fabric.Query.ApplicationLoadInformation
  isExternal: false
  name: ApplicationLoadInformation
  nameWithType: ApplicationLoadInformation
  fullName: System.Fabric.Query.ApplicationLoadInformation
- uid: System.Fabric.Query.ApplicationLoadInformation.#ctor*
  commentId: Overload:System.Fabric.Query.ApplicationLoadInformation.#ctor
  isExternal: false
  name: ApplicationLoadInformation
  nameWithType: ApplicationLoadInformation.ApplicationLoadInformation
  fullName: System.Fabric.Query.ApplicationLoadInformation.ApplicationLoadInformation
- uid: System.Fabric.Query.ApplicationLoadInformation.Name*
  commentId: Overload:System.Fabric.Query.ApplicationLoadInformation.Name
  isExternal: false
  name: Name
  nameWithType: ApplicationLoadInformation.Name
  fullName: System.Fabric.Query.ApplicationLoadInformation.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Description.ApplicationDescription.MinimumNodes
  commentId: P:System.Fabric.Description.ApplicationDescription.MinimumNodes
- uid: System.Fabric.Query.ApplicationLoadInformation.MinimumNodes*
  commentId: Overload:System.Fabric.Query.ApplicationLoadInformation.MinimumNodes
  isExternal: false
  name: MinimumNodes
  nameWithType: ApplicationLoadInformation.MinimumNodes
  fullName: System.Fabric.Query.ApplicationLoadInformation.MinimumNodes
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.Description.ApplicationDescription.MaximumNodes
  commentId: P:System.Fabric.Description.ApplicationDescription.MaximumNodes
- uid: System.Fabric.Query.ApplicationLoadInformation.MaximumNodes*
  commentId: Overload:System.Fabric.Query.ApplicationLoadInformation.MaximumNodes
  isExternal: false
  name: MaximumNodes
  nameWithType: ApplicationLoadInformation.MaximumNodes
  fullName: System.Fabric.Query.ApplicationLoadInformation.MaximumNodes
- uid: System.Fabric.Query.ApplicationLoadInformation.NodeCount*
  commentId: Overload:System.Fabric.Query.ApplicationLoadInformation.NodeCount
  isExternal: false
  name: NodeCount
  nameWithType: ApplicationLoadInformation.NodeCount
  fullName: System.Fabric.Query.ApplicationLoadInformation.NodeCount
- uid: System.Fabric.Description.ApplicationDescription.Metrics
  commentId: F:System.Fabric.Description.ApplicationDescription.Metrics
- uid: System.Fabric.Query.ApplicationLoadMetricInformation
  commentId: T:System.Fabric.Query.ApplicationLoadMetricInformation
  isExternal: false
  name: ApplicationLoadMetricInformation
  nameWithType: ApplicationLoadMetricInformation
  fullName: System.Fabric.Query.ApplicationLoadMetricInformation
- uid: System.Fabric.Query.ApplicationLoadInformation.ApplicationLoadMetricInformation*
  commentId: Overload:System.Fabric.Query.ApplicationLoadInformation.ApplicationLoadMetricInformation
  isExternal: false
  name: ApplicationLoadMetricInformation
  nameWithType: ApplicationLoadInformation.ApplicationLoadMetricInformation
  fullName: System.Fabric.Query.ApplicationLoadInformation.ApplicationLoadMetricInformation
- uid: System.Collections.Generic.IList{System.Fabric.Query.ApplicationLoadMetricInformation}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Query.ApplicationLoadMetricInformation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ApplicationLoadMetricInformation>
  nameWithType: IList<ApplicationLoadMetricInformation>
  fullName: System.Collections.Generic.IList<System.Fabric.Query.ApplicationLoadMetricInformation>
  nameWithType.vb: IList(Of ApplicationLoadMetricInformation)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Query.ApplicationLoadMetricInformation)
  name.vb: IList(Of ApplicationLoadMetricInformation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Query.ApplicationLoadMetricInformation
    name: ApplicationLoadMetricInformation
    nameWithType: ApplicationLoadMetricInformation
    fullName: System.Fabric.Query.ApplicationLoadMetricInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Query.ApplicationLoadMetricInformation
    name: ApplicationLoadMetricInformation
    nameWithType: ApplicationLoadMetricInformation
    fullName: System.Fabric.Query.ApplicationLoadMetricInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
