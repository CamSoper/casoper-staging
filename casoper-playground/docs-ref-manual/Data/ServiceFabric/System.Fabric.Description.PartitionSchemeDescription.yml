### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.PartitionSchemeDescription
  commentId: T:System.Fabric.Description.PartitionSchemeDescription
  id: PartitionSchemeDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.PartitionSchemeDescription.#ctor(System.Fabric.Description.PartitionScheme)
  - System.Fabric.Description.PartitionSchemeDescription.#ctor(System.Fabric.Description.PartitionSchemeDescription)
  - System.Fabric.Description.PartitionSchemeDescription.Scheme
  langs:
  - csharp
  - vb
  name: PartitionSchemeDescription
  nameWithType: PartitionSchemeDescription
  fullName: System.Fabric.Description.PartitionSchemeDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServicePartitionDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionSchemeDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServicePartitionDescription.cs
    startLine: 43
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Describes how the service is partitioned. This is the parent entity from which the actual partitioning scheme descriptions are derived.</p>\n"
  example: []
  syntax:
    content: >-
      [KnownType(typeof (SingletonPartitionSchemeDescription))]

      [KnownType(typeof (UniformInt64RangePartitionSchemeDescription))]

      [KnownType(typeof (NamedPartitionSchemeDescription))]

      public abstract class PartitionSchemeDescription
    content.vb: >-
      <KnownType(GetType(SingletonPartitionSchemeDescription))>

      <KnownType(GetType(UniformInt64RangePartitionSchemeDescription))>

      <KnownType(GetType(NamedPartitionSchemeDescription))>

      Public MustInherit Class PartitionSchemeDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.PartitionSchemeDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Description.SingletonPartitionSchemeDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Description.UniformInt64RangePartitionSchemeDescription
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Description.NamedPartitionSchemeDescription
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Description.PartitionSchemeDescription.#ctor(System.Fabric.Description.PartitionScheme)
  commentId: M:System.Fabric.Description.PartitionSchemeDescription.#ctor(System.Fabric.Description.PartitionScheme)
  id: '#ctor(System.Fabric.Description.PartitionScheme)'
  parent: System.Fabric.Description.PartitionSchemeDescription
  langs:
  - csharp
  - vb
  name: PartitionSchemeDescription(PartitionScheme)
  nameWithType: PartitionSchemeDescription.PartitionSchemeDescription(PartitionScheme)
  fullName: System.Fabric.Description.PartitionSchemeDescription.PartitionSchemeDescription(System.Fabric.Description.PartitionScheme)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServicePartitionDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServicePartitionDescription.cs
    startLine: 59
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Instantiates a <xref href=\"System.Fabric.Description.PartitionSchemeDescription\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  example: []
  syntax:
    content: protected PartitionSchemeDescription(PartitionScheme scheme)
    content.vb: Protected Sub New(scheme As PartitionScheme)
    parameters:
    - id: scheme
      type: System.Fabric.Description.PartitionScheme
      description: "\n<p>\n<xref href=\"System.Fabric.Description.PartitionScheme\" data-throw-if-not-resolved=\"false\"></xref> defines the kind of partition scheme.</p>\n"
  overload: System.Fabric.Description.PartitionSchemeDescription.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Description.PartitionSchemeDescription.#ctor(System.Fabric.Description.PartitionSchemeDescription)
  commentId: M:System.Fabric.Description.PartitionSchemeDescription.#ctor(System.Fabric.Description.PartitionSchemeDescription)
  id: '#ctor(System.Fabric.Description.PartitionSchemeDescription)'
  parent: System.Fabric.Description.PartitionSchemeDescription
  langs:
  - csharp
  - vb
  name: PartitionSchemeDescription(PartitionSchemeDescription)
  nameWithType: PartitionSchemeDescription.PartitionSchemeDescription(PartitionSchemeDescription)
  fullName: System.Fabric.Description.PartitionSchemeDescription.PartitionSchemeDescription(System.Fabric.Description.PartitionSchemeDescription)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServicePartitionDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServicePartitionDescription.cs
    startLine: 73
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>\nInstantiates a <xref href=\"System.Fabric.Description.PartitionSchemeDescription\" data-throw-if-not-resolved=\"false\"></xref> class with parameters from another \n<xref href=\"System.Fabric.Description.PartitionSchemeDescription\" data-throw-if-not-resolved=\"false\"></xref> object.\n</p>\n"
  example: []
  syntax:
    content: protected PartitionSchemeDescription(PartitionSchemeDescription other)
    content.vb: Protected Sub New(other As PartitionSchemeDescription)
    parameters:
    - id: other
      type: System.Fabric.Description.PartitionSchemeDescription
      description: "\n<p>The partition scheme description from which parameters are copied.</p>\n"
  overload: System.Fabric.Description.PartitionSchemeDescription.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Description.PartitionSchemeDescription.Scheme
  commentId: P:System.Fabric.Description.PartitionSchemeDescription.Scheme
  id: Scheme
  parent: System.Fabric.Description.PartitionSchemeDescription
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: PartitionSchemeDescription.Scheme
  fullName: System.Fabric.Description.PartitionSchemeDescription.Scheme
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ServicePartitionDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Scheme
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ServicePartitionDescription.cs
    startLine: 86
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Specifies how the service is partitioned. A common use is that it enables programmers to cast the description into \n<xref href=\"System.Fabric.Description.SingletonPartitionSchemeDescription\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Fabric.Description.NamedPartitionSchemeDescription\" data-throw-if-not-resolved=\"false\"></xref>, \nor <xref href=\"System.Fabric.Description.UniformInt64RangePartitionSchemeDescription\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public PartitionScheme Scheme { get; }
    content.vb: Public ReadOnly Property Scheme As PartitionScheme
    parameters: []
    return:
      type: System.Fabric.Description.PartitionScheme
      description: "\n<p>Returns <xref href=\"System.Fabric.Description.PartitionScheme\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overload: System.Fabric.Description.PartitionSchemeDescription.Scheme*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.PartitionSchemeDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<PartitionSchemeDescription>()
  nameWithType: ByteArraySerializer.Serialize<PartitionSchemeDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.PartitionSchemeDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of PartitionSchemeDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.PartitionSchemeDescription)()
  name.vb: Serialize(Of PartitionSchemeDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<PartitionSchemeDescription>
    nameWithType: ByteArraySerializer.Serialize<PartitionSchemeDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.PartitionSchemeDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of PartitionSchemeDescription)
    nameWithType: ByteArraySerializer.Serialize(Of PartitionSchemeDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.PartitionSchemeDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.PartitionSchemeDescription
  commentId: T:System.Fabric.Description.PartitionSchemeDescription
  parent: System.Fabric.Description
  isExternal: false
  name: PartitionSchemeDescription
  nameWithType: PartitionSchemeDescription
  fullName: System.Fabric.Description.PartitionSchemeDescription
- uid: System.Fabric.Description.PartitionScheme
  commentId: T:System.Fabric.Description.PartitionScheme
  parent: System.Fabric.Description
  isExternal: false
  name: PartitionScheme
  nameWithType: PartitionScheme
  fullName: System.Fabric.Description.PartitionScheme
- uid: System.Fabric.Description.PartitionSchemeDescription.#ctor*
  commentId: Overload:System.Fabric.Description.PartitionSchemeDescription.#ctor
  isExternal: false
  name: PartitionSchemeDescription
  nameWithType: PartitionSchemeDescription.PartitionSchemeDescription
  fullName: System.Fabric.Description.PartitionSchemeDescription.PartitionSchemeDescription
- uid: System.Fabric.Description.SingletonPartitionSchemeDescription
  commentId: T:System.Fabric.Description.SingletonPartitionSchemeDescription
  parent: System.Fabric.Description
  isExternal: false
  name: SingletonPartitionSchemeDescription
  nameWithType: SingletonPartitionSchemeDescription
  fullName: System.Fabric.Description.SingletonPartitionSchemeDescription
- uid: System.Fabric.Description.NamedPartitionSchemeDescription
  commentId: T:System.Fabric.Description.NamedPartitionSchemeDescription
  parent: System.Fabric.Description
  isExternal: false
  name: NamedPartitionSchemeDescription
  nameWithType: NamedPartitionSchemeDescription
  fullName: System.Fabric.Description.NamedPartitionSchemeDescription
- uid: System.Fabric.Description.UniformInt64RangePartitionSchemeDescription
  commentId: T:System.Fabric.Description.UniformInt64RangePartitionSchemeDescription
  parent: System.Fabric.Description
  isExternal: false
  name: UniformInt64RangePartitionSchemeDescription
  nameWithType: UniformInt64RangePartitionSchemeDescription
  fullName: System.Fabric.Description.UniformInt64RangePartitionSchemeDescription
- uid: System.Fabric.Description.PartitionSchemeDescription.Scheme*
  commentId: Overload:System.Fabric.Description.PartitionSchemeDescription.Scheme
  isExternal: false
  name: Scheme
  nameWithType: PartitionSchemeDescription.Scheme
  fullName: System.Fabric.Description.PartitionSchemeDescription.Scheme
