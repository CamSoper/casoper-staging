### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.DeployedServicePackageHealthState
  commentId: T:System.Fabric.Health.DeployedServicePackageHealthState
  id: DeployedServicePackageHealthState
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.DeployedServicePackageHealthState.ApplicationName
  - System.Fabric.Health.DeployedServicePackageHealthState.NodeName
  - System.Fabric.Health.DeployedServicePackageHealthState.ServiceManifestName
  - System.Fabric.Health.DeployedServicePackageHealthState.ToString
  langs:
  - csharp
  - vb
  name: DeployedServicePackageHealthState
  nameWithType: DeployedServicePackageHealthState
  fullName: System.Fabric.Health.DeployedServicePackageHealthState
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthState.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DeployedServicePackageHealthState
    path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthState.cs
    startLine: 13
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Represents the health state of a deployed service package, containing the entity identifier and the aggregated health state.</p>\n"
  example: []
  syntax:
    content: 'public sealed class DeployedServicePackageHealthState : EntityHealthState'
    content.vb: >-
      Public NotInheritable Class DeployedServicePackageHealthState
          Inherits EntityHealthState
  inheritance:
  - System.Object
  - System.Fabric.Health.EntityHealthState
  inheritedMembers:
  - System.Fabric.Health.EntityHealthState.AggregatedHealthState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.DeployedServicePackageHealthState.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.DeployedServicePackageHealthState.ApplicationName
  commentId: P:System.Fabric.Health.DeployedServicePackageHealthState.ApplicationName
  id: ApplicationName
  parent: System.Fabric.Health.DeployedServicePackageHealthState
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: DeployedServicePackageHealthState.ApplicationName
  fullName: System.Fabric.Health.DeployedServicePackageHealthState.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthState.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthState.cs
    startLine: 25
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the application name.</p>\n"
  example: []
  syntax:
    content: public Uri ApplicationName { get; }
    content.vb: Public ReadOnly Property ApplicationName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> representing the application name.</p>\n"
  overload: System.Fabric.Health.DeployedServicePackageHealthState.ApplicationName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.DeployedServicePackageHealthState.ServiceManifestName
  commentId: P:System.Fabric.Health.DeployedServicePackageHealthState.ServiceManifestName
  id: ServiceManifestName
  parent: System.Fabric.Health.DeployedServicePackageHealthState
  langs:
  - csharp
  - vb
  name: ServiceManifestName
  nameWithType: DeployedServicePackageHealthState.ServiceManifestName
  fullName: System.Fabric.Health.DeployedServicePackageHealthState.ServiceManifestName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthState.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceManifestName
    path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthState.cs
    startLine: 37
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the service manifest name.</p>\n"
  example: []
  syntax:
    content: public string ServiceManifestName { get; }
    content.vb: Public ReadOnly Property ServiceManifestName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representing the service manifest name.</p>\n"
  overload: System.Fabric.Health.DeployedServicePackageHealthState.ServiceManifestName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.DeployedServicePackageHealthState.NodeName
  commentId: P:System.Fabric.Health.DeployedServicePackageHealthState.NodeName
  id: NodeName
  parent: System.Fabric.Health.DeployedServicePackageHealthState
  langs:
  - csharp
  - vb
  name: NodeName
  nameWithType: DeployedServicePackageHealthState.NodeName
  fullName: System.Fabric.Health.DeployedServicePackageHealthState.NodeName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthState.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: NodeName
    path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthState.cs
    startLine: 49
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the node name of the node where the deployed service package is running.</p>\n"
  example: []
  syntax:
    content: public string NodeName { get; }
    content.vb: Public ReadOnly Property NodeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representing the node name.</p>\n"
  overload: System.Fabric.Health.DeployedServicePackageHealthState.NodeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.DeployedServicePackageHealthState.ToString
  commentId: M:System.Fabric.Health.DeployedServicePackageHealthState.ToString
  id: ToString
  parent: System.Fabric.Health.DeployedServicePackageHealthState
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DeployedServicePackageHealthState.ToString()
  fullName: System.Fabric.Health.DeployedServicePackageHealthState.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthState.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Health/DeployedServicePackageHealthState.cs
    startLine: 59
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nCreates a string description of the deployed service package health state, containing the identifier and the aggregated health state.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: String description of the <xref href="System.Fabric.Health.DeployedServicePackageHealthState" data-throw-if-not-resolved="false"></xref>.
  overridden: System.Object.ToString
  overload: System.Fabric.Health.DeployedServicePackageHealthState.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Health.EntityHealthState
  commentId: T:System.Fabric.Health.EntityHealthState
  parent: System.Fabric.Health
  isExternal: false
  name: EntityHealthState
  nameWithType: EntityHealthState
  fullName: System.Fabric.Health.EntityHealthState
- uid: System.Fabric.Health.EntityHealthState.AggregatedHealthState
  commentId: P:System.Fabric.Health.EntityHealthState.AggregatedHealthState
  parent: System.Fabric.Health.EntityHealthState
  isExternal: false
  name: AggregatedHealthState
  nameWithType: EntityHealthState.AggregatedHealthState
  fullName: System.Fabric.Health.EntityHealthState.AggregatedHealthState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.DeployedServicePackageHealthState.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<DeployedServicePackageHealthState>()
  nameWithType: ByteArraySerializer.Serialize<DeployedServicePackageHealthState>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.DeployedServicePackageHealthState>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of DeployedServicePackageHealthState)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.DeployedServicePackageHealthState)()
  name.vb: Serialize(Of DeployedServicePackageHealthState)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<DeployedServicePackageHealthState>
    nameWithType: ByteArraySerializer.Serialize<DeployedServicePackageHealthState>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.DeployedServicePackageHealthState>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of DeployedServicePackageHealthState)
    nameWithType: ByteArraySerializer.Serialize(Of DeployedServicePackageHealthState)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.DeployedServicePackageHealthState)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Health.DeployedServicePackageHealthState.ApplicationName*
  commentId: Overload:System.Fabric.Health.DeployedServicePackageHealthState.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: DeployedServicePackageHealthState.ApplicationName
  fullName: System.Fabric.Health.DeployedServicePackageHealthState.ApplicationName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.Health.DeployedServicePackageHealthState.ServiceManifestName*
  commentId: Overload:System.Fabric.Health.DeployedServicePackageHealthState.ServiceManifestName
  isExternal: false
  name: ServiceManifestName
  nameWithType: DeployedServicePackageHealthState.ServiceManifestName
  fullName: System.Fabric.Health.DeployedServicePackageHealthState.ServiceManifestName
- uid: System.Fabric.Health.DeployedServicePackageHealthState.NodeName*
  commentId: Overload:System.Fabric.Health.DeployedServicePackageHealthState.NodeName
  isExternal: false
  name: NodeName
  nameWithType: DeployedServicePackageHealthState.NodeName
  fullName: System.Fabric.Health.DeployedServicePackageHealthState.NodeName
- uid: System.Fabric.Health.DeployedServicePackageHealthState
  commentId: T:System.Fabric.Health.DeployedServicePackageHealthState
  parent: System.Fabric.Health
  isExternal: false
  name: DeployedServicePackageHealthState
  nameWithType: DeployedServicePackageHealthState
  fullName: System.Fabric.Health.DeployedServicePackageHealthState
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.DeployedServicePackageHealthState.ToString*
  commentId: Overload:System.Fabric.Health.DeployedServicePackageHealthState.ToString
  isExternal: false
  name: ToString
  nameWithType: DeployedServicePackageHealthState.ToString
  fullName: System.Fabric.Health.DeployedServicePackageHealthState.ToString
