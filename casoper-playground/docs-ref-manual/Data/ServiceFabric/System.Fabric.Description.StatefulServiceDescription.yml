### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.StatefulServiceDescription
  commentId: T:System.Fabric.Description.StatefulServiceDescription
  id: StatefulServiceDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.StatefulServiceDescription.#ctor
  - System.Fabric.Description.StatefulServiceDescription.HasPersistedState
  - System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize
  - System.Fabric.Description.StatefulServiceDescription.QuorumLossWaitDuration
  - System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration
  - System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration
  - System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize
  langs:
  - csharp
  - vb
  name: StatefulServiceDescription
  nameWithType: StatefulServiceDescription
  fullName: System.Fabric.Description.StatefulServiceDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StatefulServiceDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
    startLine: 18
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Represents the extend <xref href=\"System.Fabric.Description.ServiceDescription\" data-throw-if-not-resolved=\"false\"></xref> to provide additional information necessary to create stateful services.</p>\n"
  remarks: "\n<p></p>\n"
  example: []
  syntax:
    content: 'public sealed class StatefulServiceDescription : ServiceDescription'
    content.vb: >-
      Public NotInheritable Class StatefulServiceDescription
          Inherits ServiceDescription
  inheritance:
  - System.Object
  - System.Fabric.Description.ServiceDescription
  inheritedMembers:
  - System.Fabric.Description.ServiceDescription.Kind
  - System.Fabric.Description.ServiceDescription.PlacementConstraints
  - System.Fabric.Description.ServiceDescription.ServiceTypeName
  - System.Fabric.Description.ServiceDescription.ApplicationName
  - System.Fabric.Description.ServiceDescription.ServiceName
  - System.Fabric.Description.ServiceDescription.PartitionSchemeDescription
  - System.Fabric.Description.ServiceDescription.InitializationData
  - System.Fabric.Description.ServiceDescription.Metrics
  - System.Fabric.Description.ServiceDescription.Correlations
  - System.Fabric.Description.ServiceDescription.PlacementPolicies
  - System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified
  - System.Fabric.Description.ServiceDescription.DefaultMoveCost
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.StatefulServiceDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.StatefulServiceDescription.#ctor
  commentId: M:System.Fabric.Description.StatefulServiceDescription.#ctor
  id: '#ctor'
  parent: System.Fabric.Description.StatefulServiceDescription
  langs:
  - csharp
  - vb
  name: StatefulServiceDescription()
  nameWithType: StatefulServiceDescription.StatefulServiceDescription()
  fullName: System.Fabric.Description.StatefulServiceDescription.StatefulServiceDescription()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
    startLine: 23
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Description.StatefulServiceDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public StatefulServiceDescription()
    content.vb: Public Sub New
  overload: System.Fabric.Description.StatefulServiceDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.StatefulServiceDescription.HasPersistedState
  commentId: P:System.Fabric.Description.StatefulServiceDescription.HasPersistedState
  id: HasPersistedState
  parent: System.Fabric.Description.StatefulServiceDescription
  langs:
  - csharp
  - vb
  name: HasPersistedState
  nameWithType: StatefulServiceDescription.HasPersistedState
  fullName: System.Fabric.Description.StatefulServiceDescription.HasPersistedState
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HasPersistedState
    path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
    startLine: 59
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets a value indicating whether this instance has persisted state.</p>\n"
  remarks: "<p>When a <xref href=\"System.Fabric.FabricReplicator\" data-throw-if-not-resolved=\"false\"></xref> at a secondary replica receives an operation \n    for a persistent service, it must wait for the service to acknowledge that the data has been persisted before it can send that acknowledgment \n    back to the primary. For non-persistent services, the operation can be acknowledged immediately upon receipt.</p>\n<p>When a \npersistent service replica fails, the Service Fabric will not immediately consider that replica as lost because the persistent state for that replica \nstill exists. If the replica is recovered, it can be recreated using the persisted state. In contrast, beginning to build a replacement replica \nimmediately may be costly and unnecessary, especially when the failures are transient. To configure how long Service Fabric should wait for the \npersistent replica to recover before building a new (replacement) replica from scratch, use the \n<xref href=\"System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration\" data-throw-if-not-resolved=\"false\"></xref> parameter. For non-persistent services (those \nwith <xref href=\"System.Fabric.Description.StatefulServiceDescription.HasPersistedState\" data-throw-if-not-resolved=\"false\"></xref> set to <strong>false</strong>), Service Fabric \nwill immediately begin creating a new replica (since there is no persistent state to recover from, and hence no point in waiting for local recovery).</p>"
  example: []
  syntax:
    content: public bool HasPersistedState { get; set; }
    content.vb: Public Property HasPersistedState As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the instance has persisted state; otherwise, <strong>false</strong>.</p>\n"
  overload: System.Fabric.Description.StatefulServiceDescription.HasPersistedState*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize
  commentId: P:System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize
  id: TargetReplicaSetSize
  parent: System.Fabric.Description.StatefulServiceDescription
  langs:
  - csharp
  - vb
  name: TargetReplicaSetSize
  nameWithType: StatefulServiceDescription.TargetReplicaSetSize
  fullName: System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: TargetReplicaSetSize
    path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
    startLine: 74
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p> Gets or sets the target size of the replica set.</p>\n"
  remarks: "\n<p>The number of replicas that the system creates and maintains for each partition of this service.</p>\n"
  example: []
  syntax:
    content: public int TargetReplicaSetSize { get; set; }
    content.vb: Public Property TargetReplicaSetSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The target size of the replica set.</p>\n"
  overload: System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize
  commentId: P:System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize
  id: MinReplicaSetSize
  parent: System.Fabric.Description.StatefulServiceDescription
  langs:
  - csharp
  - vb
  name: MinReplicaSetSize
  nameWithType: StatefulServiceDescription.MinReplicaSetSize
  fullName: System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MinReplicaSetSize
    path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
    startLine: 102
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the minimum allowed replica set size for this service.</p>\n"
  remarks: "\n<p>Defines the minimum number of replicas that Service Fabric will keep in its view of the Replica Set for a given partition. For example, if \nthe <xref href=\"System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize\" data-throw-if-not-resolved=\"false\"></xref> is set to five (5) then normally (without failures) \nthere will be five replicas in the view of the replica set. However this number will decrease during failures. The \n<xref href=\"System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize\" data-throw-if-not-resolved=\"false\"></xref> defines the minimum number of replicas in the view, so for \nexample if the <xref href=\"System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize\" data-throw-if-not-resolved=\"false\"></xref> is five and the \n<xref href=\"System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize\" data-throw-if-not-resolved=\"false\"></xref> is three, then even if there are three concurrent failures \n(resulting  in only two remaining replicas running) will still have three replicas in its view of the replica set (two up and one down). Since  \nuses majority quorum of the number of replicas maintained in this view, majority quorum of the \n<xref href=\"System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize\" data-throw-if-not-resolved=\"false\"></xref> is minimum level of reliability of any operation: in the \nprior example, with Target = 5 and Min = 3, with 3 concurrent failures, there are two remaining up replicas (and one down), and the majority \nquorum of 3 (the <xref href=\"System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize\" data-throw-if-not-resolved=\"false\"></xref>) is 2. This means that the primary will \ncontinue to be able to replicate operations AND that the remaining secondary replica MUST apply the operation in order for the replica set (partition) \nto make progress. If the total number of replicas drops below the majority quorum of the \n<xref href=\"System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize\" data-throw-if-not-resolved=\"false\"></xref> then further writes will be disallowed.</p>\n"
  example: []
  syntax:
    content: public int MinReplicaSetSize { get; set; }
    content.vb: Public Property MinReplicaSetSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The minimum allowed replica set size for this service.</p>\n"
  overload: System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration
  commentId: P:System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration
  id: ReplicaRestartWaitDuration
  parent: System.Fabric.Description.StatefulServiceDescription
  langs:
  - csharp
  - vb
  name: ReplicaRestartWaitDuration
  nameWithType: StatefulServiceDescription.ReplicaRestartWaitDuration
  fullName: System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaRestartWaitDuration
    path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
    startLine: 121
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the duration, in seconds, between when a replica goes down and when a new replica is created.</p>\n"
  remarks: "\n<p>When a persistent replica goes down, this timer starts.  When it expires Service Fabric will create a new replica on any node in the \ncluster. This configuration is to reduce unnecessary state copies. When a persisted replica goes down, the system waits for it to come \nback up for <xref href=\"System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration\" data-throw-if-not-resolved=\"false\"></xref> seconds before creating a new \nreplica which will require a copy. Note that a replica that is down is not considered lost, yet.</p>\n<p>The default value is 300 (seconds).</p>\n"
  example: []
  syntax:
    content: public TimeSpan? ReplicaRestartWaitDuration { get; set; }
    content.vb: Public Property ReplicaRestartWaitDuration As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: "\n<p>The duration as a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  overload: System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.StatefulServiceDescription.QuorumLossWaitDuration
  commentId: P:System.Fabric.Description.StatefulServiceDescription.QuorumLossWaitDuration
  id: QuorumLossWaitDuration
  parent: System.Fabric.Description.StatefulServiceDescription
  langs:
  - csharp
  - vb
  name: QuorumLossWaitDuration
  nameWithType: StatefulServiceDescription.QuorumLossWaitDuration
  fullName: System.Fabric.Description.StatefulServiceDescription.QuorumLossWaitDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: QuorumLossWaitDuration
    path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
    startLine: 138
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the maximum duration, in seconds, for which a partition is allowed to be in a state of quorum loss.</p>\n"
  remarks: "\n<p>If the partition is still in quorum loss after this duration, the partition is recovered from quorum loss by considering the down \nreplicas as lost. Note that this can potentially incur data loss. The default value is Infinity and it is not recommended to change this value.</p>\n"
  example: []
  syntax:
    content: public TimeSpan? QuorumLossWaitDuration { get; set; }
    content.vb: Public Property QuorumLossWaitDuration As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: "\n<p>The wait duration as a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  overload: System.Fabric.Description.StatefulServiceDescription.QuorumLossWaitDuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration
  commentId: P:System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration
  id: StandByReplicaKeepDuration
  parent: System.Fabric.Description.StatefulServiceDescription
  langs:
  - csharp
  - vb
  name: StandByReplicaKeepDuration
  nameWithType: StatefulServiceDescription.StandByReplicaKeepDuration
  fullName: System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: StandByReplicaKeepDuration
    path: src/prod/src/managed/Api/src/System/Fabric/Description/StatefulServiceDescription.cs
    startLine: 159
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the definition on how long StandBy replicas should be maintained before being removed.</p>\n"
  remarks: "\n<p>Sometimes a replica will be down for longer than the <xref href=\"System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration\" data-throw-if-not-resolved=\"false\"></xref>. \nIn these cases a new replica will be built to replace it. Sometimes however the loss is not permanent and the persistent replica is eventually recovered. \nThis now constitutes a StandBy replica. StandBy replicas will preferentially be used in the case of subsequent failures or resource balancing actions, \nsince they represent persistent state that already exists and which can be used to expedite recovery. The \n<xref href=\"System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration\" data-throw-if-not-resolved=\"false\"></xref> defines how long such StandBy replicas should be maintained \nbefore being removed.</p>\n"
  example: []
  syntax:
    content: public TimeSpan? StandByReplicaKeepDuration { get; set; }
    content.vb: Public Property StandByReplicaKeepDuration As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: "\n<p>The definition on how long StandBy replicas should be maintained before being removed.</p>\n"
  overload: System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.Description.ServiceDescription
  commentId: T:System.Fabric.Description.ServiceDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.Fabric.Description.ServiceDescription
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Description.ServiceDescription.Kind
  commentId: P:System.Fabric.Description.ServiceDescription.Kind
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: Kind
  nameWithType: ServiceDescription.Kind
  fullName: System.Fabric.Description.ServiceDescription.Kind
- uid: System.Fabric.Description.ServiceDescription.PlacementConstraints
  commentId: P:System.Fabric.Description.ServiceDescription.PlacementConstraints
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: PlacementConstraints
  nameWithType: ServiceDescription.PlacementConstraints
  fullName: System.Fabric.Description.ServiceDescription.PlacementConstraints
- uid: System.Fabric.Description.ServiceDescription.ServiceTypeName
  commentId: P:System.Fabric.Description.ServiceDescription.ServiceTypeName
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: ServiceTypeName
  nameWithType: ServiceDescription.ServiceTypeName
  fullName: System.Fabric.Description.ServiceDescription.ServiceTypeName
- uid: System.Fabric.Description.ServiceDescription.ApplicationName
  commentId: P:System.Fabric.Description.ServiceDescription.ApplicationName
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: ApplicationName
  nameWithType: ServiceDescription.ApplicationName
  fullName: System.Fabric.Description.ServiceDescription.ApplicationName
- uid: System.Fabric.Description.ServiceDescription.ServiceName
  commentId: P:System.Fabric.Description.ServiceDescription.ServiceName
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: ServiceName
  nameWithType: ServiceDescription.ServiceName
  fullName: System.Fabric.Description.ServiceDescription.ServiceName
- uid: System.Fabric.Description.ServiceDescription.PartitionSchemeDescription
  commentId: P:System.Fabric.Description.ServiceDescription.PartitionSchemeDescription
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: PartitionSchemeDescription
  nameWithType: ServiceDescription.PartitionSchemeDescription
  fullName: System.Fabric.Description.ServiceDescription.PartitionSchemeDescription
- uid: System.Fabric.Description.ServiceDescription.InitializationData
  commentId: P:System.Fabric.Description.ServiceDescription.InitializationData
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: InitializationData
  nameWithType: ServiceDescription.InitializationData
  fullName: System.Fabric.Description.ServiceDescription.InitializationData
- uid: System.Fabric.Description.ServiceDescription.Metrics
  commentId: P:System.Fabric.Description.ServiceDescription.Metrics
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: Metrics
  nameWithType: ServiceDescription.Metrics
  fullName: System.Fabric.Description.ServiceDescription.Metrics
- uid: System.Fabric.Description.ServiceDescription.Correlations
  commentId: P:System.Fabric.Description.ServiceDescription.Correlations
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: Correlations
  nameWithType: ServiceDescription.Correlations
  fullName: System.Fabric.Description.ServiceDescription.Correlations
- uid: System.Fabric.Description.ServiceDescription.PlacementPolicies
  commentId: P:System.Fabric.Description.ServiceDescription.PlacementPolicies
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: PlacementPolicies
  nameWithType: ServiceDescription.PlacementPolicies
  fullName: System.Fabric.Description.ServiceDescription.PlacementPolicies
- uid: System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified
  commentId: P:System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: IsDefaultMoveCostSpecified
  nameWithType: ServiceDescription.IsDefaultMoveCostSpecified
  fullName: System.Fabric.Description.ServiceDescription.IsDefaultMoveCostSpecified
- uid: System.Fabric.Description.ServiceDescription.DefaultMoveCost
  commentId: P:System.Fabric.Description.ServiceDescription.DefaultMoveCost
  parent: System.Fabric.Description.ServiceDescription
  isExternal: false
  name: DefaultMoveCost
  nameWithType: ServiceDescription.DefaultMoveCost
  fullName: System.Fabric.Description.ServiceDescription.DefaultMoveCost
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.StatefulServiceDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<StatefulServiceDescription>()
  nameWithType: ByteArraySerializer.Serialize<StatefulServiceDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.StatefulServiceDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of StatefulServiceDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.StatefulServiceDescription)()
  name.vb: Serialize(Of StatefulServiceDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<StatefulServiceDescription>
    nameWithType: ByteArraySerializer.Serialize<StatefulServiceDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.StatefulServiceDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of StatefulServiceDescription)
    nameWithType: ByteArraySerializer.Serialize(Of StatefulServiceDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.StatefulServiceDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.StatefulServiceDescription
  commentId: T:System.Fabric.Description.StatefulServiceDescription
  parent: System.Fabric.Description
  isExternal: false
  name: StatefulServiceDescription
  nameWithType: StatefulServiceDescription
  fullName: System.Fabric.Description.StatefulServiceDescription
- uid: System.Fabric.Description.StatefulServiceDescription.#ctor*
  commentId: Overload:System.Fabric.Description.StatefulServiceDescription.#ctor
  isExternal: false
  name: StatefulServiceDescription
  nameWithType: StatefulServiceDescription.StatefulServiceDescription
  fullName: System.Fabric.Description.StatefulServiceDescription.StatefulServiceDescription
- uid: System.Fabric.FabricReplicator
  commentId: T:System.Fabric.FabricReplicator
  parent: System.Fabric
  isExternal: false
  name: FabricReplicator
  nameWithType: FabricReplicator
  fullName: System.Fabric.FabricReplicator
- uid: System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration
  commentId: P:System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration
- uid: System.Fabric.Description.StatefulServiceDescription.HasPersistedState
  commentId: P:System.Fabric.Description.StatefulServiceDescription.HasPersistedState
- uid: System.Fabric.Description.StatefulServiceDescription.HasPersistedState*
  commentId: Overload:System.Fabric.Description.StatefulServiceDescription.HasPersistedState
  isExternal: false
  name: HasPersistedState
  nameWithType: StatefulServiceDescription.HasPersistedState
  fullName: System.Fabric.Description.StatefulServiceDescription.HasPersistedState
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize*
  commentId: Overload:System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize
  isExternal: false
  name: TargetReplicaSetSize
  nameWithType: StatefulServiceDescription.TargetReplicaSetSize
  fullName: System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize
  commentId: P:System.Fabric.Description.StatefulServiceDescription.TargetReplicaSetSize
- uid: System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize
  commentId: P:System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize
- uid: System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize*
  commentId: Overload:System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize
  isExternal: false
  name: MinReplicaSetSize
  nameWithType: StatefulServiceDescription.MinReplicaSetSize
  fullName: System.Fabric.Description.StatefulServiceDescription.MinReplicaSetSize
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration*
  commentId: Overload:System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration
  isExternal: false
  name: ReplicaRestartWaitDuration
  nameWithType: StatefulServiceDescription.ReplicaRestartWaitDuration
  fullName: System.Fabric.Description.StatefulServiceDescription.ReplicaRestartWaitDuration
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.StatefulServiceDescription.QuorumLossWaitDuration*
  commentId: Overload:System.Fabric.Description.StatefulServiceDescription.QuorumLossWaitDuration
  isExternal: false
  name: QuorumLossWaitDuration
  nameWithType: StatefulServiceDescription.QuorumLossWaitDuration
  fullName: System.Fabric.Description.StatefulServiceDescription.QuorumLossWaitDuration
- uid: System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration
  commentId: P:System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration
- uid: System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration*
  commentId: Overload:System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration
  isExternal: false
  name: StandByReplicaKeepDuration
  nameWithType: StatefulServiceDescription.StandByReplicaKeepDuration
  fullName: System.Fabric.Description.StatefulServiceDescription.StandByReplicaKeepDuration
