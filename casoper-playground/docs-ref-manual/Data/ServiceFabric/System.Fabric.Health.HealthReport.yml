### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.HealthReport
  commentId: T:System.Fabric.Health.HealthReport
  id: HealthReport
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.HealthReport.#ctor(System.Fabric.Health.HealthReportKind,System.Fabric.Health.HealthInformation)
  - System.Fabric.Health.HealthReport.HealthInformation
  - System.Fabric.Health.HealthReport.Kind
  langs:
  - csharp
  - vb
  name: HealthReport
  nameWithType: HealthReport
  fullName: System.Fabric.Health.HealthReport
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthReport
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthReport.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Represents a base class for all health reports classes.</p>\n"
  remarks: The report can be sent to the health store using <xref href="System.Fabric.FabricClient.HealthClient.ReportHealth(System.Fabric.Health.HealthReport)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [KnownType(typeof (ApplicationHealthReport))]

      [KnownType(typeof (NodeHealthReport))]

      [KnownType(typeof (PartitionHealthReport))]

      [KnownType(typeof (ServiceHealthReport))]

      [KnownType(typeof (StatelessServiceInstanceHealthReport))]

      [KnownType(typeof (StatefulServiceReplicaHealthReport))]

      public abstract class HealthReport
    content.vb: >-
      <KnownType(GetType(ApplicationHealthReport))>

      <KnownType(GetType(NodeHealthReport))>

      <KnownType(GetType(PartitionHealthReport))>

      <KnownType(GetType(ServiceHealthReport))>

      <KnownType(GetType(StatelessServiceInstanceHealthReport))>

      <KnownType(GetType(StatefulServiceReplicaHealthReport))>

      Public MustInherit Class HealthReport
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.HealthReport.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Health.ApplicationHealthReport
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Health.NodeHealthReport
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Health.PartitionHealthReport
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Health.ServiceHealthReport
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Health.StatelessServiceInstanceHealthReport
  - type: System.Runtime.Serialization.KnownTypeAttribute
    ctor: System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Fabric.Health.StatefulServiceReplicaHealthReport
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Fabric.Health.HealthReport.#ctor(System.Fabric.Health.HealthReportKind,System.Fabric.Health.HealthInformation)
  commentId: M:System.Fabric.Health.HealthReport.#ctor(System.Fabric.Health.HealthReportKind,System.Fabric.Health.HealthInformation)
  id: '#ctor(System.Fabric.Health.HealthReportKind,System.Fabric.Health.HealthInformation)'
  parent: System.Fabric.Health.HealthReport
  langs:
  - csharp
  - vb
  name: HealthReport(HealthReportKind, HealthInformation)
  nameWithType: HealthReport.HealthReport(HealthReportKind, HealthInformation)
  fullName: System.Fabric.Health.HealthReport.HealthReport(System.Fabric.Health.HealthReportKind, System.Fabric.Health.HealthInformation)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthReport.cs
    startLine: 32
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Health.HealthReport\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: protected HealthReport(HealthReportKind kind, HealthInformation healthInformation)
    content.vb: Protected Sub New(kind As HealthReportKind, healthInformation As HealthInformation)
    parameters:
    - id: kind
      type: System.Fabric.Health.HealthReportKind
      description: "\n<p>The kind of the health report. </p>\n"
    - id: healthInformation
      type: System.Fabric.Health.HealthInformation
      description: "\n<p>The <xref href=\"System.Fabric.Health.HealthInformation\" data-throw-if-not-resolved=\"false\"></xref> which describes the report fields, like sourceId, property, health state. Required.</p>\n"
  overload: System.Fabric.Health.HealthReport.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Fabric.Health.HealthReport.Kind
  commentId: P:System.Fabric.Health.HealthReport.Kind
  id: Kind
  parent: System.Fabric.Health.HealthReport
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: HealthReport.Kind
  fullName: System.Fabric.Health.HealthReport.Kind
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Kind
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthReport.cs
    startLine: 46
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the kind of the health report.</p>\n"
  example: []
  syntax:
    content: public HealthReportKind Kind { get; }
    content.vb: Public ReadOnly Property Kind As HealthReportKind
    parameters: []
    return:
      type: System.Fabric.Health.HealthReportKind
      description: "\n<p>The kind of the health report.</p>\n"
  overload: System.Fabric.Health.HealthReport.Kind*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.HealthReport.HealthInformation
  commentId: P:System.Fabric.Health.HealthReport.HealthInformation
  id: HealthInformation
  parent: System.Fabric.Health.HealthReport
  langs:
  - csharp
  - vb
  name: HealthInformation
  nameWithType: HealthReport.HealthInformation
  fullName: System.Fabric.Health.HealthReport.HealthInformation
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthReport.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthInformation
    path: src/prod/src/managed/Api/src/System/Fabric/Health/HealthReport.cs
    startLine: 59
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\n<p>Gets the health information that describes common health fields.</p>\n"
  remarks: The health information is persisted in the health store inside the <xref href="System.Fabric.Health.HealthEvent" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public HealthInformation HealthInformation { get; }
    content.vb: Public ReadOnly Property HealthInformation As HealthInformation
    parameters: []
    return:
      type: System.Fabric.Health.HealthInformation
      description: "\n<p>The health information that describes common health fields.</p>\n"
  overload: System.Fabric.Health.HealthReport.HealthInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric.FabricClient.HealthClient.ReportHealth(System.Fabric.Health.HealthReport)
  commentId: M:System.Fabric.FabricClient.HealthClient.ReportHealth(System.Fabric.Health.HealthReport)
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthReport.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<HealthReport>()
  nameWithType: ByteArraySerializer.Serialize<HealthReport>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.HealthReport>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of HealthReport)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.HealthReport)()
  name.vb: Serialize(Of HealthReport)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<HealthReport>
    nameWithType: ByteArraySerializer.Serialize<HealthReport>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.HealthReport>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of HealthReport)
    nameWithType: ByteArraySerializer.Serialize(Of HealthReport)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.HealthReport)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.HealthReport
  commentId: T:System.Fabric.Health.HealthReport
  parent: System.Fabric.Health
  isExternal: false
  name: HealthReport
  nameWithType: HealthReport
  fullName: System.Fabric.Health.HealthReport
- uid: System.Fabric.Health.HealthInformation
  commentId: T:System.Fabric.Health.HealthInformation
  parent: System.Fabric.Health
  isExternal: false
  name: HealthInformation
  nameWithType: HealthInformation
  fullName: System.Fabric.Health.HealthInformation
- uid: System.Fabric.Health.HealthReport.#ctor*
  commentId: Overload:System.Fabric.Health.HealthReport.#ctor
  isExternal: false
  name: HealthReport
  nameWithType: HealthReport.HealthReport
  fullName: System.Fabric.Health.HealthReport.HealthReport
- uid: System.Fabric.Health.HealthReportKind
  commentId: T:System.Fabric.Health.HealthReportKind
  parent: System.Fabric.Health
  isExternal: false
  name: HealthReportKind
  nameWithType: HealthReportKind
  fullName: System.Fabric.Health.HealthReportKind
- uid: System.Fabric.Health.HealthReport.Kind*
  commentId: Overload:System.Fabric.Health.HealthReport.Kind
  isExternal: false
  name: Kind
  nameWithType: HealthReport.Kind
  fullName: System.Fabric.Health.HealthReport.Kind
- uid: System.Fabric.Health.HealthEvent
  commentId: T:System.Fabric.Health.HealthEvent
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: System.Fabric.Health.HealthEvent
- uid: System.Fabric.Health.HealthReport.HealthInformation*
  commentId: Overload:System.Fabric.Health.HealthReport.HealthInformation
  isExternal: false
  name: HealthInformation
  nameWithType: HealthReport.HealthInformation
  fullName: System.Fabric.Health.HealthReport.HealthInformation
