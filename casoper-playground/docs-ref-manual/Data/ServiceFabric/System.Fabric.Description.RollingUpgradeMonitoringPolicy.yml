### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy
  commentId: T:System.Fabric.Description.RollingUpgradeMonitoringPolicy
  id: RollingUpgradeMonitoringPolicy
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.RollingUpgradeMonitoringPolicy.#ctor
  - System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction
  - System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
  - System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
  - System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
  - System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
  - System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout
  langs:
  - csharp
  - vb
  name: RollingUpgradeMonitoringPolicy
  nameWithType: RollingUpgradeMonitoringPolicy
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: RollingUpgradeMonitoringPolicy
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
    startLine: 15
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Represents a class to encapsulate a rolling upgrade monitoring policy.</p>\n"
  example: []
  syntax:
    content: public class RollingUpgradeMonitoringPolicy
    content.vb: Public Class RollingUpgradeMonitoringPolicy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.RollingUpgradeMonitoringPolicy.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.#ctor
  commentId: M:System.Fabric.Description.RollingUpgradeMonitoringPolicy.#ctor
  id: '#ctor'
  parent: System.Fabric.Description.RollingUpgradeMonitoringPolicy
  langs:
  - csharp
  - vb
  name: RollingUpgradeMonitoringPolicy()
  nameWithType: RollingUpgradeMonitoringPolicy.RollingUpgradeMonitoringPolicy()
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.RollingUpgradeMonitoringPolicy()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
    startLine: 94
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>The initialization sets the properties of the <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy\" data-throw-if-not-resolved=\"false\"></xref> class with the following defaults.</p>\n<p>Property</p>\n<p>Default value</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<xref href=\"System.Fabric.UpgradeFailureAction.Invalid\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n<p>This value must be changed or a <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> will be thrown before the upgrade begins.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value that defaults to 120 seconds.\n</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>600 seconds</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>TimeSpan.FromSeconds(uint.MaxValue)</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>TimeSpan.FromSeconds(uint.MaxValue)</p>\n</td></tr></tbody></table>\n"
  example: []
  syntax:
    content: public RollingUpgradeMonitoringPolicy()
    content.vb: Public Sub New
  overload: System.Fabric.Description.RollingUpgradeMonitoringPolicy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction
  id: FailureAction
  parent: System.Fabric.Description.RollingUpgradeMonitoringPolicy
  langs:
  - csharp
  - vb
  name: FailureAction
  nameWithType: RollingUpgradeMonitoringPolicy.FailureAction
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: FailureAction
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
    startLine: 114
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the action to take if an upgrade fails. The default is <xref href=\"System.Fabric.UpgradeFailureAction.Invalid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction\" data-throw-if-not-resolved=\"false\"></xref> property must be changed from the default \nof <xref href=\"System.Fabric.UpgradeFailureAction.Invalid\" data-throw-if-not-resolved=\"false\"></xref> or a <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> will be thrown before the upgrade begins.</p>\n"
  example: []
  syntax:
    content: public UpgradeFailureAction FailureAction { get; set; }
    content.vb: Public Property FailureAction As UpgradeFailureAction
    parameters: []
    return:
      type: System.Fabric.UpgradeFailureAction
      description: "\n<p>The action to take if an upgrade fails.</p>\n"
  overload: System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction\" data-throw-if-not-resolved=\"false\"></xref> property is set to \n<xref href=\"System.Fabric.UpgradeFailureAction.Invalid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
  id: HealthCheckWaitDuration
  parent: System.Fabric.Description.RollingUpgradeMonitoringPolicy
  langs:
  - csharp
  - vb
  name: HealthCheckWaitDuration
  nameWithType: RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthCheckWaitDuration
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
    startLine: 125
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the length of time to wait after completing an upgrade domain before performing health checks.</p>\n"
  remarks: "\n<p>The default is <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public TimeSpan HealthCheckWaitDuration { get; set; }
    content.vb: Public Property HealthCheckWaitDuration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The length of time to wait after completing an upgrade domain before performing health checks.</p>\n"
  overload: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
  id: HealthCheckStableDuration
  parent: System.Fabric.Description.RollingUpgradeMonitoringPolicy
  langs:
  - csharp
  - vb
  name: HealthCheckStableDuration
  nameWithType: RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthCheckStableDuration
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
    startLine: 138
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the length of time that health checks must pass continuously before the upgrade proceeds \nto the next upgrade domain.</p>\n"
  remarks: "\n<p>The default is 120 seconds.</p>\n"
  example: []
  syntax:
    content: public TimeSpan HealthCheckStableDuration { get; set; }
    content.vb: Public Property HealthCheckStableDuration As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The length of time that health checks must pass continuously.</p>\n"
  overload: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
  id: HealthCheckRetryTimeout
  parent: System.Fabric.Description.RollingUpgradeMonitoringPolicy
  langs:
  - csharp
  - vb
  name: HealthCheckRetryTimeout
  nameWithType: RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthCheckRetryTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
    startLine: 151
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the length of time that health checks can fail continuously before the upgrade fails and the action specified by <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction\" data-throw-if-not-resolved=\"false\"></xref> occurs.</p>\n"
  remarks: "\n<p>The default is 600 seconds. Setting <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout\" data-throw-if-not-resolved=\"false\"></xref> \nto <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> will result in only a single health check.</p>\n"
  example: []
  syntax:
    content: public TimeSpan HealthCheckRetryTimeout { get; set; }
    content.vb: Public Property HealthCheckRetryTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The length of time that health checks can fail continuously.</p>\n"
  overload: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout
  id: UpgradeTimeout
  parent: System.Fabric.Description.RollingUpgradeMonitoringPolicy
  langs:
  - csharp
  - vb
  name: UpgradeTimeout
  nameWithType: RollingUpgradeMonitoringPolicy.UpgradeTimeout
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
    startLine: 163
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the length of time that the overall upgrade can take before the upgrade fails and the action specified by <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction\" data-throw-if-not-resolved=\"false\"></xref> occurs.</p>\n"
  remarks: "\n<p>The default is TimeSpan.FromSeconds(uint.MaxValue).</p>\n"
  example: []
  syntax:
    content: public TimeSpan UpgradeTimeout { get; set; }
    content.vb: Public Property UpgradeTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The upgrade timeout.</p>\n"
  overload: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
  id: UpgradeDomainTimeout
  parent: System.Fabric.Description.RollingUpgradeMonitoringPolicy
  langs:
  - csharp
  - vb
  name: UpgradeDomainTimeout
  nameWithType: RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: UpgradeDomainTimeout
    path: src/prod/src/managed/Api/src/System/Fabric/Description/RollingUpgradeMonitoringPolicy.cs
    startLine: 175
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the length of time that the processing of any upgrade domain can take before the upgrade fails and the action specified by <xref href=\"System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction\" data-throw-if-not-resolved=\"false\"></xref> occurs.</p>\n"
  remarks: "\n<p>The default is TimeSpan.FromSeconds(uint.MaxValue).</p>\n"
  example: []
  syntax:
    content: public TimeSpan UpgradeDomainTimeout { get; set; }
    content.vb: Public Property UpgradeDomainTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The timeout for any upgrade domain.</p>\n"
  overload: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<RollingUpgradeMonitoringPolicy>()
  nameWithType: ByteArraySerializer.Serialize<RollingUpgradeMonitoringPolicy>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.RollingUpgradeMonitoringPolicy>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of RollingUpgradeMonitoringPolicy)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.RollingUpgradeMonitoringPolicy)()
  name.vb: Serialize(Of RollingUpgradeMonitoringPolicy)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<RollingUpgradeMonitoringPolicy>
    nameWithType: ByteArraySerializer.Serialize<RollingUpgradeMonitoringPolicy>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.RollingUpgradeMonitoringPolicy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of RollingUpgradeMonitoringPolicy)
    nameWithType: ByteArraySerializer.Serialize(Of RollingUpgradeMonitoringPolicy)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.RollingUpgradeMonitoringPolicy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy
  commentId: T:System.Fabric.Description.RollingUpgradeMonitoringPolicy
  parent: System.Fabric.Description
  isExternal: false
  name: RollingUpgradeMonitoringPolicy
  nameWithType: RollingUpgradeMonitoringPolicy
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction
- uid: System.Fabric.UpgradeFailureAction.Invalid
  commentId: F:System.Fabric.UpgradeFailureAction.Invalid
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
- uid: System.TimeSpan.Zero
  commentId: F:System.TimeSpan.Zero
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout
  commentId: P:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.#ctor*
  commentId: Overload:System.Fabric.Description.RollingUpgradeMonitoringPolicy.#ctor
  isExternal: false
  name: RollingUpgradeMonitoringPolicy
  nameWithType: RollingUpgradeMonitoringPolicy.RollingUpgradeMonitoringPolicy
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.RollingUpgradeMonitoringPolicy
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction*
  commentId: Overload:System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction
  isExternal: false
  name: FailureAction
  nameWithType: RollingUpgradeMonitoringPolicy.FailureAction
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.FailureAction
- uid: System.Fabric.UpgradeFailureAction
  commentId: T:System.Fabric.UpgradeFailureAction
  parent: System.Fabric
  isExternal: false
  name: UpgradeFailureAction
  nameWithType: UpgradeFailureAction
  fullName: System.Fabric.UpgradeFailureAction
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration*
  commentId: Overload:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
  isExternal: false
  name: HealthCheckWaitDuration
  nameWithType: RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckWaitDuration
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration*
  commentId: Overload:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
  isExternal: false
  name: HealthCheckStableDuration
  nameWithType: RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckStableDuration
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout*
  commentId: Overload:System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
  isExternal: false
  name: HealthCheckRetryTimeout
  nameWithType: RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.HealthCheckRetryTimeout
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout*
  commentId: Overload:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout
  isExternal: false
  name: UpgradeTimeout
  nameWithType: RollingUpgradeMonitoringPolicy.UpgradeTimeout
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeTimeout
- uid: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout*
  commentId: Overload:System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
  isExternal: false
  name: UpgradeDomainTimeout
  nameWithType: RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
  fullName: System.Fabric.Description.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeout
