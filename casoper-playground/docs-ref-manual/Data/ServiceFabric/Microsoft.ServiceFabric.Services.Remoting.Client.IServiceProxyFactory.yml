### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory
  id: IServiceProxyFactory
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  children:
  - Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
  langs:
  - csharp
  - vb
  name: IServiceProxyFactory
  nameWithType: IServiceProxyFactory
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory
  type: Interface
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/IServiceProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: IServiceProxyFactory
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/IServiceProxyFactory.cs
    startLine: 13
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Client
  summary: "\nSpecifies the interface for the factory that creates proxies for remote communication to the specified service.\n"
  example: []
  syntax:
    content: public interface IServiceProxyFactory
    content.vb: Public Interface IServiceProxyFactory
  extensionMethods:
  - Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
  commentId: M:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
  id: CreateServiceProxy``1(System.Uri,Microsoft.ServiceFabric.Services.Client.ServicePartitionKey,Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector,System.String)
  parent: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory
  langs:
  - csharp
  - vb
  name: CreateServiceProxy<TServiceInterface>(Uri, ServicePartitionKey, TargetReplicaSelector, String)
  nameWithType: IServiceProxyFactory.CreateServiceProxy<TServiceInterface>(Uri, ServicePartitionKey, TargetReplicaSelector, String)
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy<TServiceInterface>(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String)
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/IServiceProxyFactory.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CreateServiceProxy
    path: src/prod/src/managed/Microsoft.ServiceFabric.Services/Remoting/Client/IServiceProxyFactory.cs
    startLine: 28
  assemblies:
  - Microsoft.ServiceFabric.Services
  namespace: Microsoft.ServiceFabric.Services.Remoting.Client
  summary: "\nCreates a proxy to communicate to the specified service using the remoted interface TServiceInterface that \nthe service implements.\n<typeparam name=\"TServiceInterface\">Interface that is being remoted</typeparam>\n<param name=\"serviceUri\">Uri of the Service.</param>\n<param name=\"partitionKey\">The Partition key that determines which service partition is responsible for handling requests from this service proxy</param>\n<param name=\"targetReplicaSelector\">Determines which replica or instance of the service partition the client should connect to.</param>\n<param name=\"listenerName\">This parameter is Optional if the service has a single communication listener. The endpoints from the service\nare of the form {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}. When the service exposes multiple endpoints, this parameter\nidentifies which of those endpoints to use for the remoting communication.\n</param>\n<returns>The proxy that implement the interface that is being remoted. The returned object also implement <xref href=\"Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy\" data-throw-if-not-resolved=\"false\"></xref> interface.</returns>\n"
  example: []
  syntax:
    content: 'TServiceInterface CreateServiceProxy<TServiceInterface>(Uri serviceUri, ServicePartitionKey partitionKey = null, TargetReplicaSelector targetReplicaSelector = TargetReplicaSelector.Default, string listenerName = null)where TServiceInterface : IService'
    content.vb: Function CreateServiceProxy(Of TServiceInterface As IService)(serviceUri As Uri, partitionKey As ServicePartitionKey = Nothing, targetReplicaSelector As TargetReplicaSelector = TargetReplicaSelector.Default, listenerName As String = Nothing) As TServiceInterface
    parameters:
    - id: serviceUri
      type: System.Uri
    - id: partitionKey
      type: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
    - id: targetReplicaSelector
      type: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
    - id: listenerName
      type: System.String
    typeParameters:
    - id: TServiceInterface
    return:
      type: '{TServiceInterface}'
  overload: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy*
  nameWithType.vb: IServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)(Uri, ServicePartitionKey, TargetReplicaSelector, String)
  fullName.vb: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)(System.Uri, Microsoft.ServiceFabric.Services.Client.ServicePartitionKey, Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector, System.String)
  name.vb: CreateServiceProxy(Of TServiceInterface)(Uri, ServicePartitionKey, TargetReplicaSelector, String)
references:
- uid: Microsoft.ServiceFabric.Services.Remoting.Client
  commentId: N:Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Remoting.Client
  nameWithType: Microsoft.ServiceFabric.Services.Remoting.Client
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<IServiceProxyFactory>()
  nameWithType: ByteArraySerializer.Serialize<IServiceProxyFactory>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of IServiceProxyFactory)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory)()
  name.vb: Serialize(Of IServiceProxyFactory)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<IServiceProxyFactory>
    nameWithType: ByteArraySerializer.Serialize<IServiceProxyFactory>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of IServiceProxyFactory)
    nameWithType: ByteArraySerializer.Serialize(Of IServiceProxyFactory)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy
  commentId: T:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy
  parent: Microsoft.ServiceFabric.Services.Remoting.Client
  isExternal: false
  name: IServiceProxy
  nameWithType: IServiceProxy
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxy
- uid: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy*
  commentId: Overload:Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy
  isExternal: false
  name: CreateServiceProxy<TServiceInterface>
  nameWithType: IServiceProxyFactory.CreateServiceProxy<TServiceInterface>
  fullName: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy<TServiceInterface>
  nameWithType.vb: IServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)
  fullname.vb: Microsoft.ServiceFabric.Services.Remoting.Client.IServiceProxyFactory.CreateServiceProxy(Of TServiceInterface)
  name.vb: CreateServiceProxy(Of TServiceInterface)
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  commentId: T:Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
  parent: Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey
  fullName: Microsoft.ServiceFabric.Services.Client.ServicePartitionKey
- uid: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  commentId: T:Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
  parent: Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: TargetReplicaSelector
  nameWithType: TargetReplicaSelector
  fullName: Microsoft.ServiceFabric.Services.Communication.Client.TargetReplicaSelector
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{TServiceInterface}'
  commentId: '!:TServiceInterface'
  definition: TServiceInterface
  name: TServiceInterface
  nameWithType: TServiceInterface
  fullName: TServiceInterface
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ServiceFabric.Services.Client
  commentId: N:Microsoft.ServiceFabric.Services.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Client
  nameWithType: Microsoft.ServiceFabric.Services.Client
  fullName: Microsoft.ServiceFabric.Services.Client
- uid: Microsoft.ServiceFabric.Services.Communication.Client
  commentId: N:Microsoft.ServiceFabric.Services.Communication.Client
  isExternal: false
  name: Microsoft.ServiceFabric.Services.Communication.Client
  nameWithType: Microsoft.ServiceFabric.Services.Communication.Client
  fullName: Microsoft.ServiceFabric.Services.Communication.Client
- uid: TServiceInterface
  isExternal: false
  name: TServiceInterface
  nameWithType: TServiceInterface
  fullName: TServiceInterface
