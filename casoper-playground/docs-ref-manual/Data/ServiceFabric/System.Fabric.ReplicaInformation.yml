### YamlMime:ManagedReference
items:
- uid: System.Fabric.ReplicaInformation
  commentId: T:System.Fabric.ReplicaInformation
  id: ReplicaInformation
  parent: System.Fabric
  children:
  - System.Fabric.ReplicaInformation.#ctor
  - System.Fabric.ReplicaInformation.CatchUpCapability
  - System.Fabric.ReplicaInformation.CurrentProgress
  - System.Fabric.ReplicaInformation.Id
  - System.Fabric.ReplicaInformation.MustCatchup
  - System.Fabric.ReplicaInformation.ReplicatorAddress
  - System.Fabric.ReplicaInformation.Role
  - System.Fabric.ReplicaInformation.Status
  langs:
  - csharp
  - vb
  name: ReplicaInformation
  nameWithType: ReplicaInformation
  fullName: System.Fabric.ReplicaInformation
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicaInformation
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
    startLine: 13
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nThis supports the Service Fabric infrastructure and is not meant to be used directly from your code.\n"
  example: []
  syntax:
    content: public sealed class ReplicaInformation
    content.vb: Public NotInheritable Class ReplicaInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.ReplicaInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.ReplicaInformation.#ctor
  commentId: M:System.Fabric.ReplicaInformation.#ctor
  id: '#ctor'
  parent: System.Fabric.ReplicaInformation
  langs:
  - csharp
  - vb
  name: ReplicaInformation()
  nameWithType: ReplicaInformation.ReplicaInformation()
  fullName: System.Fabric.ReplicaInformation.ReplicaInformation()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
    startLine: 18
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nThis supports the Service Fabric infrastructure and is not meant to be used directly from your code.\n"
  example: []
  syntax:
    content: public ReplicaInformation()
    content.vb: Public Sub New
  overload: System.Fabric.ReplicaInformation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.ReplicaInformation.Id
  commentId: P:System.Fabric.ReplicaInformation.Id
  id: Id
  parent: System.Fabric.ReplicaInformation
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ReplicaInformation.Id
  fullName: System.Fabric.ReplicaInformation.Id
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Id
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
    startLine: 24
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  example: []
  syntax:
    content: public long Id { get; }
    content.vb: Public ReadOnly Property Id As Long
    parameters: []
    return:
      type: System.Int64
      description: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  overload: System.Fabric.ReplicaInformation.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ReplicaInformation.Role
  commentId: P:System.Fabric.ReplicaInformation.Role
  id: Role
  parent: System.Fabric.ReplicaInformation
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: ReplicaInformation.Role
  fullName: System.Fabric.ReplicaInformation.Role
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Role
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
    startLine: 32
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  example: []
  syntax:
    content: public ReplicaRole Role { get; }
    content.vb: Public ReadOnly Property Role As ReplicaRole
    parameters: []
    return:
      type: System.Fabric.ReplicaRole
      description: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  overload: System.Fabric.ReplicaInformation.Role*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ReplicaInformation.Status
  commentId: P:System.Fabric.ReplicaInformation.Status
  id: Status
  parent: System.Fabric.ReplicaInformation
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ReplicaInformation.Status
  fullName: System.Fabric.ReplicaInformation.Status
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Status
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  example: []
  syntax:
    content: public ReplicaStatus Status { get; }
    content.vb: Public ReadOnly Property Status As ReplicaStatus
    parameters: []
    return:
      type: System.Fabric.ReplicaStatus
      description: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  overload: System.Fabric.ReplicaInformation.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ReplicaInformation.ReplicatorAddress
  commentId: P:System.Fabric.ReplicaInformation.ReplicatorAddress
  id: ReplicatorAddress
  parent: System.Fabric.ReplicaInformation
  langs:
  - csharp
  - vb
  name: ReplicatorAddress
  nameWithType: ReplicaInformation.ReplicatorAddress
  fullName: System.Fabric.ReplicaInformation.ReplicatorAddress
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ReplicatorAddress
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
    startLine: 48
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  example: []
  syntax:
    content: public string ReplicatorAddress { get; }
    content.vb: Public ReadOnly Property ReplicatorAddress As String
    parameters: []
    return:
      type: System.String
      description: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  overload: System.Fabric.ReplicaInformation.ReplicatorAddress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ReplicaInformation.CatchUpCapability
  commentId: P:System.Fabric.ReplicaInformation.CatchUpCapability
  id: CatchUpCapability
  parent: System.Fabric.ReplicaInformation
  langs:
  - csharp
  - vb
  name: CatchUpCapability
  nameWithType: ReplicaInformation.CatchUpCapability
  fullName: System.Fabric.ReplicaInformation.CatchUpCapability
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CatchUpCapability
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
    startLine: 56
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  example: []
  syntax:
    content: public long CatchUpCapability { get; }
    content.vb: Public ReadOnly Property CatchUpCapability As Long
    parameters: []
    return:
      type: System.Int64
      description: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  overload: System.Fabric.ReplicaInformation.CatchUpCapability*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ReplicaInformation.CurrentProgress
  commentId: P:System.Fabric.ReplicaInformation.CurrentProgress
  id: CurrentProgress
  parent: System.Fabric.ReplicaInformation
  langs:
  - csharp
  - vb
  name: CurrentProgress
  nameWithType: ReplicaInformation.CurrentProgress
  fullName: System.Fabric.ReplicaInformation.CurrentProgress
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: CurrentProgress
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
    startLine: 64
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  example: []
  syntax:
    content: public long CurrentProgress { get; }
    content.vb: Public ReadOnly Property CurrentProgress As Long
    parameters: []
    return:
      type: System.Int64
      description: This supports the Service Fabric infrastructure and is not meant to be used directly from your code.
  overload: System.Fabric.ReplicaInformation.CurrentProgress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.ReplicaInformation.MustCatchup
  commentId: P:System.Fabric.ReplicaInformation.MustCatchup
  id: MustCatchup
  parent: System.Fabric.ReplicaInformation
  langs:
  - csharp
  - vb
  name: MustCatchup
  nameWithType: ReplicaInformation.MustCatchup
  fullName: System.Fabric.ReplicaInformation.MustCatchup
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: MustCatchup
    path: src/prod/src/managed/Api/src/System/Fabric/ReplicaInformation.cs
    startLine: 75
  assemblies:
  - System.Fabric
  namespace: System.Fabric
  summary: "\nFOR INTERNAL USE ONLY.\nGets a value indicating whether the replica must be caught up as part of a WaitForQuorumCatchup.\n"
  example: []
  syntax:
    content: public bool MustCatchup { get; }
    content.vb: Public ReadOnly Property MustCatchup As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Whether the replica must be caught up as part of a WaitForQuorumCatchup.
  overload: System.Fabric.ReplicaInformation.MustCatchup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Fabric
  commentId: N:System.Fabric
  isExternal: false
  name: System.Fabric
  nameWithType: System.Fabric
  fullName: System.Fabric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.ReplicaInformation.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ReplicaInformation>()
  nameWithType: ByteArraySerializer.Serialize<ReplicaInformation>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ReplicaInformation>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ReplicaInformation)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ReplicaInformation)()
  name.vb: Serialize(Of ReplicaInformation)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ReplicaInformation>
    nameWithType: ByteArraySerializer.Serialize<ReplicaInformation>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.ReplicaInformation>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ReplicaInformation)
    nameWithType: ByteArraySerializer.Serialize(Of ReplicaInformation)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.ReplicaInformation)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.ReplicaInformation.#ctor*
  commentId: Overload:System.Fabric.ReplicaInformation.#ctor
  isExternal: false
  name: ReplicaInformation
  nameWithType: ReplicaInformation.ReplicaInformation
  fullName: System.Fabric.ReplicaInformation.ReplicaInformation
- uid: System.Fabric.ReplicaInformation.Id*
  commentId: Overload:System.Fabric.ReplicaInformation.Id
  isExternal: false
  name: Id
  nameWithType: ReplicaInformation.Id
  fullName: System.Fabric.ReplicaInformation.Id
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Fabric.ReplicaInformation.Role*
  commentId: Overload:System.Fabric.ReplicaInformation.Role
  isExternal: false
  name: Role
  nameWithType: ReplicaInformation.Role
  fullName: System.Fabric.ReplicaInformation.Role
- uid: System.Fabric.ReplicaRole
  commentId: T:System.Fabric.ReplicaRole
  parent: System.Fabric
  isExternal: false
  name: ReplicaRole
  nameWithType: ReplicaRole
  fullName: System.Fabric.ReplicaRole
- uid: System.Fabric.ReplicaInformation.Status*
  commentId: Overload:System.Fabric.ReplicaInformation.Status
  isExternal: false
  name: Status
  nameWithType: ReplicaInformation.Status
  fullName: System.Fabric.ReplicaInformation.Status
- uid: System.Fabric.ReplicaStatus
  commentId: T:System.Fabric.ReplicaStatus
  parent: System.Fabric
  isExternal: false
  name: ReplicaStatus
  nameWithType: ReplicaStatus
  fullName: System.Fabric.ReplicaStatus
- uid: System.Fabric.ReplicaInformation.ReplicatorAddress*
  commentId: Overload:System.Fabric.ReplicaInformation.ReplicatorAddress
  isExternal: false
  name: ReplicatorAddress
  nameWithType: ReplicaInformation.ReplicatorAddress
  fullName: System.Fabric.ReplicaInformation.ReplicatorAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Fabric.ReplicaInformation.CatchUpCapability*
  commentId: Overload:System.Fabric.ReplicaInformation.CatchUpCapability
  isExternal: false
  name: CatchUpCapability
  nameWithType: ReplicaInformation.CatchUpCapability
  fullName: System.Fabric.ReplicaInformation.CatchUpCapability
- uid: System.Fabric.ReplicaInformation.CurrentProgress*
  commentId: Overload:System.Fabric.ReplicaInformation.CurrentProgress
  isExternal: false
  name: CurrentProgress
  nameWithType: ReplicaInformation.CurrentProgress
  fullName: System.Fabric.ReplicaInformation.CurrentProgress
- uid: System.Fabric.ReplicaInformation.MustCatchup*
  commentId: Overload:System.Fabric.ReplicaInformation.MustCatchup
  isExternal: false
  name: MustCatchup
  nameWithType: ReplicaInformation.MustCatchup
  fullName: System.Fabric.ReplicaInformation.MustCatchup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
