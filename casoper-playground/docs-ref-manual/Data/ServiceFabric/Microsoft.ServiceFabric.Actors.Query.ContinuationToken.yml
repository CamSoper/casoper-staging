### YamlMime:ManagedReference
items:
- uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  commentId: T:Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  id: ContinuationToken
  parent: Microsoft.ServiceFabric.Actors.Query
  children:
  - Microsoft.ServiceFabric.Actors.Query.ContinuationToken.#ctor(System.Object)
  - Microsoft.ServiceFabric.Actors.Query.ContinuationToken.Marker
  langs:
  - csharp
  - vb
  name: ContinuationToken
  nameWithType: ContinuationToken
  fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/ContinuationToken.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ContinuationToken
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/ContinuationToken.cs
    startLine: 15
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Query
  summary: "\nRepresents a continuation token for query operations.\n"
  remarks: "A method that may return a partial set of results via a \n<xref href=\"Microsoft.ServiceFabric.Actors.Query.PagedResult%601\" data-throw-if-not-resolved=\"false\"></xref> object also returns a continuation token\nin the object, which can be used in a subsequent call to return the next set of available results."
  example: []
  syntax:
    content: >-
      [DataContract(Name = "ContinuationToken", Namespace = "urn:actors")]

      public class ContinuationToken
    content.vb: >-
      <DataContract(Name:="ContinuationToken", Namespace:="urn:actors")>

      Public Class ContinuationToken
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.ServiceFabric.Actors.Query.ContinuationToken.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: ContinuationToken
    - name: Namespace
      type: System.String
      value: urn:actors
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken.#ctor(System.Object)
  commentId: M:Microsoft.ServiceFabric.Actors.Query.ContinuationToken.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  langs:
  - csharp
  - vb
  name: ContinuationToken(Object)
  nameWithType: ContinuationToken.ContinuationToken(Object)
  fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken.ContinuationToken(System.Object)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/ContinuationToken.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/ContinuationToken.cs
    startLine: 22
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Query
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.ServiceFabric.Actors.Query.ContinuationToken\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ContinuationToken(object marker)
    content.vb: Public Sub New(marker As Object)
    parameters:
    - id: marker
      type: System.Object
      description: Marker used to retrieve the next set of available results.
  overload: Microsoft.ServiceFabric.Actors.Query.ContinuationToken.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken.Marker
  commentId: P:Microsoft.ServiceFabric.Actors.Query.ContinuationToken.Marker
  id: Marker
  parent: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  langs:
  - csharp
  - vb
  name: Marker
  nameWithType: ContinuationToken.Marker
  fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken.Marker
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/ContinuationToken.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: Marker
    path: src/prod/src/managed/Microsoft.ServiceFabric.Actors/Query/ContinuationToken.cs
    startLine: 31
  assemblies:
  - Microsoft.ServiceFabric.Actors
  namespace: Microsoft.ServiceFabric.Actors.Query
  summary: "\nGets a marker used to fetch the next set of available results.\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "Marker", Order = 0, IsRequired = true)]

      public object Marker { get; }
    content.vb: >-
      <DataMember(Name:="Marker", Order:=0, IsRequired:=True)>

      Public ReadOnly Property Marker As Object
    parameters: []
    return:
      type: System.Object
      description: A marker used to fetch the next set of available results.
  overload: Microsoft.ServiceFabric.Actors.Query.ContinuationToken.Marker*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Marker
    - name: Order
      type: System.Int32
      value: 0
    - name: IsRequired
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
  commentId: T:Microsoft.ServiceFabric.Actors.Query.PagedResult`1
  isExternal: false
  name: PagedResult<T>
  nameWithType: PagedResult<T>
  fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult<T>
  nameWithType.vb: PagedResult(Of T)
  fullname.vb: Microsoft.ServiceFabric.Actors.Query.PagedResult(Of T)
  name.vb: PagedResult(Of T)
  spec.csharp:
  - uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
    name: PagedResult
    nameWithType: PagedResult
    fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.ServiceFabric.Actors.Query.PagedResult`1
    name: PagedResult
    nameWithType: PagedResult
    fullName: Microsoft.ServiceFabric.Actors.Query.PagedResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Query
  commentId: N:Microsoft.ServiceFabric.Actors.Query
  isExternal: false
  name: Microsoft.ServiceFabric.Actors.Query
  nameWithType: Microsoft.ServiceFabric.Actors.Query
  fullName: Microsoft.ServiceFabric.Actors.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ContinuationToken>()
  nameWithType: ByteArraySerializer.Serialize<ContinuationToken>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Query.ContinuationToken>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ContinuationToken)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Query.ContinuationToken)()
  name.vb: Serialize(Of ContinuationToken)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ContinuationToken>
    nameWithType: ByteArraySerializer.Serialize<ContinuationToken>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<Microsoft.ServiceFabric.Actors.Query.ContinuationToken>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ContinuationToken)
    nameWithType: ByteArraySerializer.Serialize(Of ContinuationToken)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of Microsoft.ServiceFabric.Actors.Query.ContinuationToken)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  commentId: T:Microsoft.ServiceFabric.Actors.Query.ContinuationToken
  parent: Microsoft.ServiceFabric.Actors.Query
  isExternal: false
  name: ContinuationToken
  nameWithType: ContinuationToken
  fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken
- uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken.#ctor*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Query.ContinuationToken.#ctor
  isExternal: false
  name: ContinuationToken
  nameWithType: ContinuationToken.ContinuationToken
  fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken.ContinuationToken
- uid: Microsoft.ServiceFabric.Actors.Query.ContinuationToken.Marker*
  commentId: Overload:Microsoft.ServiceFabric.Actors.Query.ContinuationToken.Marker
  isExternal: false
  name: Marker
  nameWithType: ContinuationToken.Marker
  fullName: Microsoft.ServiceFabric.Actors.Query.ContinuationToken.Marker
