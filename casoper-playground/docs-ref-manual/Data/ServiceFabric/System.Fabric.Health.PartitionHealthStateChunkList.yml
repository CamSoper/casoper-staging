### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.PartitionHealthStateChunkList
  commentId: T:System.Fabric.Health.PartitionHealthStateChunkList
  id: PartitionHealthStateChunkList
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.PartitionHealthStateChunkList.#ctor
  langs:
  - csharp
  - vb
  name: PartitionHealthStateChunkList
  nameWithType: PartitionHealthStateChunkList
  fullName: System.Fabric.Health.PartitionHealthStateChunkList
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/PartitionHealthStateChunkList.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionHealthStateChunkList
    path: src/prod/src/managed/Api/src/System/Fabric/Health/PartitionHealthStateChunkList.cs
    startLine: 14
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nRepresents a list that contains <xref href=\"System.Fabric.Health.PartitionHealthStateChunk\" data-throw-if-not-resolved=\"false\"></xref> items.\n"
  remarks: >-
    The list can be obtained through health state chunk queries. The queries may have as result more chunks that can fit a message.

    In this case, the list of items that fit the message is returned plus a count that shows how many total items are available.
  example: []
  syntax:
    content: 'public sealed class PartitionHealthStateChunkList : HealthStateChunkList<PartitionHealthStateChunk>, IList<PartitionHealthStateChunk>, ICollection<PartitionHealthStateChunk>, IEnumerable<PartitionHealthStateChunk>, IEnumerable'
    content.vb: >-
      Public NotInheritable Class PartitionHealthStateChunkList
          Inherits HealthStateChunkList(Of PartitionHealthStateChunk)
          Implements IList(Of PartitionHealthStateChunk), ICollection(Of PartitionHealthStateChunk), IEnumerable(Of PartitionHealthStateChunk), IEnumerable
  inheritance:
  - System.Object
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  implements:
  - System.Collections.Generic.IList{System.Fabric.Health.PartitionHealthStateChunk}
  - System.Collections.Generic.ICollection{System.Fabric.Health.PartitionHealthStateChunk}
  - System.Collections.Generic.IEnumerable{System.Fabric.Health.PartitionHealthStateChunk}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.IndexOf(System.Fabric.Health.PartitionHealthStateChunk)
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Insert(System.Int32,System.Fabric.Health.PartitionHealthStateChunk)
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.RemoveAt(System.Int32)
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Item(System.Int32)
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.TotalCount
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Add(System.Fabric.Health.PartitionHealthStateChunk)
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Clear
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Contains(System.Fabric.Health.PartitionHealthStateChunk)
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.CopyTo(System.Fabric.Health.PartitionHealthStateChunk[],System.Int32)
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Count
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.IsReadOnly
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Remove(System.Fabric.Health.PartitionHealthStateChunk)
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.GetEnumerator
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.ToString
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.System#Collections#IEnumerable#GetEnumerator
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.PartitionHealthStateChunkList.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  - System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.System.Fabric.Health.HealthStateChunkListHelper.ToArray``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.PartitionHealthStateChunkList.#ctor
  commentId: M:System.Fabric.Health.PartitionHealthStateChunkList.#ctor
  id: '#ctor'
  parent: System.Fabric.Health.PartitionHealthStateChunkList
  langs:
  - csharp
  - vb
  name: PartitionHealthStateChunkList()
  nameWithType: PartitionHealthStateChunkList.PartitionHealthStateChunkList()
  fullName: System.Fabric.Health.PartitionHealthStateChunkList.PartitionHealthStateChunkList()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/PartitionHealthStateChunkList.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Health/PartitionHealthStateChunkList.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nInstantiates an empty <xref href=\"System.Fabric.Health.PartitionHealthStateChunkList\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public PartitionHealthStateChunkList()
    content.vb: Public Sub New
  overload: System.Fabric.Health.PartitionHealthStateChunkList.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Fabric.Health.PartitionHealthStateChunk
  commentId: T:System.Fabric.Health.PartitionHealthStateChunk
  isExternal: false
  name: PartitionHealthStateChunk
  nameWithType: PartitionHealthStateChunk
  fullName: System.Fabric.Health.PartitionHealthStateChunk
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  commentId: T:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  parent: System.Fabric.Health
  definition: System.Fabric.Health.HealthStateChunkList`1
  name: HealthStateChunkList<PartitionHealthStateChunk>
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk)
  name.vb: HealthStateChunkList(Of PartitionHealthStateChunk)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1
    name: HealthStateChunkList
    nameWithType: HealthStateChunkList
    fullName: System.Fabric.Health.HealthStateChunkList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1
    name: HealthStateChunkList
    nameWithType: HealthStateChunkList
    fullName: System.Fabric.Health.HealthStateChunkList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.Fabric.Health.PartitionHealthStateChunk}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Health.PartitionHealthStateChunk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PartitionHealthStateChunk>
  nameWithType: IList<PartitionHealthStateChunk>
  fullName: System.Collections.Generic.IList<System.Fabric.Health.PartitionHealthStateChunk>
  nameWithType.vb: IList(Of PartitionHealthStateChunk)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Health.PartitionHealthStateChunk)
  name.vb: IList(Of PartitionHealthStateChunk)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Fabric.Health.PartitionHealthStateChunk}
  commentId: T:System.Collections.Generic.ICollection{System.Fabric.Health.PartitionHealthStateChunk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<PartitionHealthStateChunk>
  nameWithType: ICollection<PartitionHealthStateChunk>
  fullName: System.Collections.Generic.ICollection<System.Fabric.Health.PartitionHealthStateChunk>
  nameWithType.vb: ICollection(Of PartitionHealthStateChunk)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Fabric.Health.PartitionHealthStateChunk)
  name.vb: ICollection(Of PartitionHealthStateChunk)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Fabric.Health.PartitionHealthStateChunk}
  commentId: T:System.Collections.Generic.IEnumerable{System.Fabric.Health.PartitionHealthStateChunk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PartitionHealthStateChunk>
  nameWithType: IEnumerable<PartitionHealthStateChunk>
  fullName: System.Collections.Generic.IEnumerable<System.Fabric.Health.PartitionHealthStateChunk>
  nameWithType.vb: IEnumerable(Of PartitionHealthStateChunk)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Fabric.Health.PartitionHealthStateChunk)
  name.vb: IEnumerable(Of PartitionHealthStateChunk)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.IndexOf(System.Fabric.Health.PartitionHealthStateChunk)
  commentId: M:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.IndexOf(System.Fabric.Health.PartitionHealthStateChunk)
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.IndexOf(`0)
  name: IndexOf(PartitionHealthStateChunk)
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.IndexOf(PartitionHealthStateChunk)
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.IndexOf(System.Fabric.Health.PartitionHealthStateChunk)
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).IndexOf(PartitionHealthStateChunk)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).IndexOf(System.Fabric.Health.PartitionHealthStateChunk)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.IndexOf
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).IndexOf
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Insert(System.Int32,System.Fabric.Health.PartitionHealthStateChunk)
  commentId: M:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Insert(System.Int32,System.Fabric.Health.PartitionHealthStateChunk)
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.Insert(System.Int32,`0)
  name: Insert(Int32, PartitionHealthStateChunk)
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Insert(Int32, PartitionHealthStateChunk)
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Insert(System.Int32, System.Fabric.Health.PartitionHealthStateChunk)
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).Insert(Int32, PartitionHealthStateChunk)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Insert(System.Int32, System.Fabric.Health.PartitionHealthStateChunk)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Insert
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).Insert
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.RemoveAt(System.Int32)
  commentId: M:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.RemoveAt(System.Int32)
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.RemoveAt(Int32)
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.RemoveAt(System.Int32)
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).RemoveAt(Int32)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.RemoveAt
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).RemoveAt
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Item(System.Int32)
  commentId: P:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Item(System.Int32)
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Item[Int32]
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Item[System.Int32]
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).Item(Int32)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Item(System.Int32)
    name: Item
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Item
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Item(System.Int32)
    name: Item
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).Item
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.TotalCount
  commentId: P:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.TotalCount
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.TotalCount
  name: TotalCount
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.TotalCount
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.TotalCount
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).TotalCount
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).TotalCount
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Add(System.Fabric.Health.PartitionHealthStateChunk)
  commentId: M:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Add(System.Fabric.Health.PartitionHealthStateChunk)
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.Add(`0)
  name: Add(PartitionHealthStateChunk)
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Add(PartitionHealthStateChunk)
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Add(System.Fabric.Health.PartitionHealthStateChunk)
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).Add(PartitionHealthStateChunk)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Add(System.Fabric.Health.PartitionHealthStateChunk)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Add(`0)
    name: Add
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Add
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Add(`0)
    name: Add
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).Add
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Clear
  commentId: M:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Clear
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.Clear
  name: Clear()
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Clear()
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Clear()
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).Clear()
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Clear()
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Clear
    name: Clear
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Clear
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Clear
    name: Clear
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).Clear
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Contains(System.Fabric.Health.PartitionHealthStateChunk)
  commentId: M:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Contains(System.Fabric.Health.PartitionHealthStateChunk)
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.Contains(`0)
  name: Contains(PartitionHealthStateChunk)
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Contains(PartitionHealthStateChunk)
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Contains(System.Fabric.Health.PartitionHealthStateChunk)
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).Contains(PartitionHealthStateChunk)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Contains(System.Fabric.Health.PartitionHealthStateChunk)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Contains(`0)
    name: Contains
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Contains
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Contains(`0)
    name: Contains
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).Contains
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.CopyTo(System.Fabric.Health.PartitionHealthStateChunk[],System.Int32)
  commentId: M:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.CopyTo(System.Fabric.Health.PartitionHealthStateChunk[],System.Int32)
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.CopyTo(`0[],System.Int32)
  name: CopyTo(PartitionHealthStateChunk[], Int32)
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.CopyTo(PartitionHealthStateChunk[], Int32)
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.CopyTo(System.Fabric.Health.PartitionHealthStateChunk[], System.Int32)
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).CopyTo(PartitionHealthStateChunk(), Int32)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).CopyTo(System.Fabric.Health.PartitionHealthStateChunk(), System.Int32)
  name.vb: CopyTo(PartitionHealthStateChunk(), Int32)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.CopyTo
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).CopyTo
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Count
  commentId: P:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Count
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.Count
  name: Count
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Count
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Count
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).Count
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Count
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.IsReadOnly
  commentId: P:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.IsReadOnly
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.IsReadOnly
  name: IsReadOnly
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.IsReadOnly
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.IsReadOnly
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).IsReadOnly
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).IsReadOnly
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Remove(System.Fabric.Health.PartitionHealthStateChunk)
  commentId: M:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.Remove(System.Fabric.Health.PartitionHealthStateChunk)
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.Remove(`0)
  name: Remove(PartitionHealthStateChunk)
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Remove(PartitionHealthStateChunk)
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Remove(System.Fabric.Health.PartitionHealthStateChunk)
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).Remove(PartitionHealthStateChunk)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Remove(System.Fabric.Health.PartitionHealthStateChunk)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Remove(`0)
    name: Remove
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.Remove
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Remove(`0)
    name: Remove
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).Remove
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.PartitionHealthStateChunk
    name: PartitionHealthStateChunk
    nameWithType: PartitionHealthStateChunk
    fullName: System.Fabric.Health.PartitionHealthStateChunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.GetEnumerator
  commentId: M:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.GetEnumerator
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.GetEnumerator()
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.GetEnumerator()
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).GetEnumerator()
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).GetEnumerator()
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.GetEnumerator
    name: GetEnumerator
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.GetEnumerator
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.GetEnumerator
    name: GetEnumerator
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).GetEnumerator
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.ToString
  commentId: M:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.ToString
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.ToString
  name: ToString()
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.ToString()
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.ToString()
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).ToString()
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).ToString()
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.ToString
    name: ToString
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.ToString
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.ToString
    name: ToString
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).ToString
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}
  definition: System.Fabric.Health.HealthStateChunkList`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.IEnumerable.GetEnumerator()
  fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: HealthStateChunkList(Of PartitionHealthStateChunk).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: HealthStateChunkList<PartitionHealthStateChunk>.IEnumerable.GetEnumerator
    fullName: System.Fabric.Health.HealthStateChunkList<System.Fabric.Health.PartitionHealthStateChunk>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: HealthStateChunkList(Of PartitionHealthStateChunk).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Fabric.Health.HealthStateChunkList(Of System.Fabric.Health.PartitionHealthStateChunk).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.PartitionHealthStateChunkList.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<PartitionHealthStateChunkList>()
  nameWithType: ByteArraySerializer.Serialize<PartitionHealthStateChunkList>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.PartitionHealthStateChunkList>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of PartitionHealthStateChunkList)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.PartitionHealthStateChunkList)()
  name.vb: Serialize(Of PartitionHealthStateChunkList)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<PartitionHealthStateChunkList>
    nameWithType: ByteArraySerializer.Serialize<PartitionHealthStateChunkList>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.PartitionHealthStateChunkList>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of PartitionHealthStateChunkList)
    nameWithType: ByteArraySerializer.Serialize(Of PartitionHealthStateChunkList)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.PartitionHealthStateChunkList)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList{System.Fabric.Health.PartitionHealthStateChunk}.System.Fabric.Health.HealthStateChunkListHelper.ToArray``1
  commentId: M:System.Fabric.Health.HealthStateChunkListHelper.ToArray``1(System.Fabric.Health.HealthStateChunkList{``0})
  parent: System.Fabric.Health.HealthStateChunkListHelper
  definition: System.Fabric.Health.HealthStateChunkListHelper.ToArray``1(System.Fabric.Health.HealthStateChunkList{``0})
  name: ToArray<PartitionHealthStateChunk>()
  nameWithType: HealthStateChunkListHelper.ToArray<PartitionHealthStateChunk>()
  fullName: System.Fabric.Health.HealthStateChunkListHelper.ToArray<System.Fabric.Health.PartitionHealthStateChunk>()
  nameWithType.vb: HealthStateChunkListHelper.ToArray(Of PartitionHealthStateChunk)()
  fullname.vb: System.Fabric.Health.HealthStateChunkListHelper.ToArray(Of System.Fabric.Health.PartitionHealthStateChunk)()
  name.vb: ToArray(Of PartitionHealthStateChunk)()
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkListHelper.ToArray``1
    name: ToArray<PartitionHealthStateChunk>
    nameWithType: HealthStateChunkListHelper.ToArray<PartitionHealthStateChunk>
    fullName: System.Fabric.Health.HealthStateChunkListHelper.ToArray<System.Fabric.Health.PartitionHealthStateChunk>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkListHelper.ToArray``1
    name: ToArray(Of PartitionHealthStateChunk)
    nameWithType: HealthStateChunkListHelper.ToArray(Of PartitionHealthStateChunk)
    fullName: System.Fabric.Health.HealthStateChunkListHelper.ToArray(Of System.Fabric.Health.PartitionHealthStateChunk)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Health.HealthStateChunkList`1
  commentId: T:System.Fabric.Health.HealthStateChunkList`1
  isExternal: false
  name: HealthStateChunkList<T>
  nameWithType: HealthStateChunkList<T>
  fullName: System.Fabric.Health.HealthStateChunkList<T>
  nameWithType.vb: HealthStateChunkList(Of T)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T)
  name.vb: HealthStateChunkList(Of T)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1
    name: HealthStateChunkList
    nameWithType: HealthStateChunkList
    fullName: System.Fabric.Health.HealthStateChunkList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1
    name: HealthStateChunkList
    nameWithType: HealthStateChunkList
    fullName: System.Fabric.Health.HealthStateChunkList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Fabric.Health.HealthStateChunkList`1.IndexOf(`0)
  commentId: M:System.Fabric.Health.HealthStateChunkList`1.IndexOf(`0)
  isExternal: false
  name: IndexOf(T)
  nameWithType: HealthStateChunkList<T>.IndexOf(T)
  fullName: System.Fabric.Health.HealthStateChunkList<T>.IndexOf(T)
  nameWithType.vb: HealthStateChunkList(Of T).IndexOf(T)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: HealthStateChunkList<T>.IndexOf
    fullName: System.Fabric.Health.HealthStateChunkList<T>.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: HealthStateChunkList(Of T).IndexOf
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList`1.Insert(System.Int32,`0)
  commentId: M:System.Fabric.Health.HealthStateChunkList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: HealthStateChunkList<T>.Insert(Int32, T)
  fullName: System.Fabric.Health.HealthStateChunkList<T>.Insert(System.Int32, T)
  nameWithType.vb: HealthStateChunkList(Of T).Insert(Int32, T)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: HealthStateChunkList<T>.Insert
    fullName: System.Fabric.Health.HealthStateChunkList<T>.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: HealthStateChunkList(Of T).Insert
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList`1.RemoveAt(System.Int32)
  commentId: M:System.Fabric.Health.HealthStateChunkList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: HealthStateChunkList<T>.RemoveAt(Int32)
  fullName: System.Fabric.Health.HealthStateChunkList<T>.RemoveAt(System.Int32)
  nameWithType.vb: HealthStateChunkList(Of T).RemoveAt(Int32)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: HealthStateChunkList<T>.RemoveAt
    fullName: System.Fabric.Health.HealthStateChunkList<T>.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: HealthStateChunkList(Of T).RemoveAt
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList`1.Item(System.Int32)
  commentId: P:System.Fabric.Health.HealthStateChunkList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: HealthStateChunkList<T>.Item[Int32]
  fullName: System.Fabric.Health.HealthStateChunkList<T>.Item[System.Int32]
  nameWithType.vb: HealthStateChunkList(Of T).Item(Int32)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Item(System.Int32)
    name: Item
    nameWithType: HealthStateChunkList<T>.Item
    fullName: System.Fabric.Health.HealthStateChunkList<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Item(System.Int32)
    name: Item
    nameWithType: HealthStateChunkList(Of T).Item
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList`1.TotalCount
  commentId: P:System.Fabric.Health.HealthStateChunkList`1.TotalCount
  isExternal: false
  name: TotalCount
  nameWithType: HealthStateChunkList<T>.TotalCount
  fullName: System.Fabric.Health.HealthStateChunkList<T>.TotalCount
  nameWithType.vb: HealthStateChunkList(Of T).TotalCount
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).TotalCount
- uid: System.Fabric.Health.HealthStateChunkList`1.Add(`0)
  commentId: M:System.Fabric.Health.HealthStateChunkList`1.Add(`0)
  isExternal: false
  name: Add(T)
  nameWithType: HealthStateChunkList<T>.Add(T)
  fullName: System.Fabric.Health.HealthStateChunkList<T>.Add(T)
  nameWithType.vb: HealthStateChunkList(Of T).Add(T)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).Add(T)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Add(`0)
    name: Add
    nameWithType: HealthStateChunkList<T>.Add
    fullName: System.Fabric.Health.HealthStateChunkList<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Add(`0)
    name: Add
    nameWithType: HealthStateChunkList(Of T).Add
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList`1.Clear
  commentId: M:System.Fabric.Health.HealthStateChunkList`1.Clear
  isExternal: false
  name: Clear()
  nameWithType: HealthStateChunkList<T>.Clear()
  fullName: System.Fabric.Health.HealthStateChunkList<T>.Clear()
  nameWithType.vb: HealthStateChunkList(Of T).Clear()
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).Clear()
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Clear
    name: Clear
    nameWithType: HealthStateChunkList<T>.Clear
    fullName: System.Fabric.Health.HealthStateChunkList<T>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Clear
    name: Clear
    nameWithType: HealthStateChunkList(Of T).Clear
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList`1.Contains(`0)
  commentId: M:System.Fabric.Health.HealthStateChunkList`1.Contains(`0)
  isExternal: false
  name: Contains(T)
  nameWithType: HealthStateChunkList<T>.Contains(T)
  fullName: System.Fabric.Health.HealthStateChunkList<T>.Contains(T)
  nameWithType.vb: HealthStateChunkList(Of T).Contains(T)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).Contains(T)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Contains(`0)
    name: Contains
    nameWithType: HealthStateChunkList<T>.Contains
    fullName: System.Fabric.Health.HealthStateChunkList<T>.Contains
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Contains(`0)
    name: Contains
    nameWithType: HealthStateChunkList(Of T).Contains
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).Contains
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Fabric.Health.HealthStateChunkList`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: HealthStateChunkList<T>.CopyTo(T[], Int32)
  fullName: System.Fabric.Health.HealthStateChunkList<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: HealthStateChunkList(Of T).CopyTo(T(), Int32)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: HealthStateChunkList<T>.CopyTo
    fullName: System.Fabric.Health.HealthStateChunkList<T>.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: HealthStateChunkList(Of T).CopyTo
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList`1.Count
  commentId: P:System.Fabric.Health.HealthStateChunkList`1.Count
  isExternal: false
  name: Count
  nameWithType: HealthStateChunkList<T>.Count
  fullName: System.Fabric.Health.HealthStateChunkList<T>.Count
  nameWithType.vb: HealthStateChunkList(Of T).Count
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).Count
- uid: System.Fabric.Health.HealthStateChunkList`1.IsReadOnly
  commentId: P:System.Fabric.Health.HealthStateChunkList`1.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: HealthStateChunkList<T>.IsReadOnly
  fullName: System.Fabric.Health.HealthStateChunkList<T>.IsReadOnly
  nameWithType.vb: HealthStateChunkList(Of T).IsReadOnly
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).IsReadOnly
- uid: System.Fabric.Health.HealthStateChunkList`1.Remove(`0)
  commentId: M:System.Fabric.Health.HealthStateChunkList`1.Remove(`0)
  isExternal: false
  name: Remove(T)
  nameWithType: HealthStateChunkList<T>.Remove(T)
  fullName: System.Fabric.Health.HealthStateChunkList<T>.Remove(T)
  nameWithType.vb: HealthStateChunkList(Of T).Remove(T)
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).Remove(T)
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Remove(`0)
    name: Remove
    nameWithType: HealthStateChunkList<T>.Remove
    fullName: System.Fabric.Health.HealthStateChunkList<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.Remove(`0)
    name: Remove
    nameWithType: HealthStateChunkList(Of T).Remove
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList`1.GetEnumerator
  commentId: M:System.Fabric.Health.HealthStateChunkList`1.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  nameWithType: HealthStateChunkList<T>.GetEnumerator()
  fullName: System.Fabric.Health.HealthStateChunkList<T>.GetEnumerator()
  nameWithType.vb: HealthStateChunkList(Of T).GetEnumerator()
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.GetEnumerator
    name: GetEnumerator
    nameWithType: HealthStateChunkList<T>.GetEnumerator
    fullName: System.Fabric.Health.HealthStateChunkList<T>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.GetEnumerator
    name: GetEnumerator
    nameWithType: HealthStateChunkList(Of T).GetEnumerator
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList`1.ToString
  commentId: M:System.Fabric.Health.HealthStateChunkList`1.ToString
  isExternal: false
  name: ToString()
  nameWithType: HealthStateChunkList<T>.ToString()
  fullName: System.Fabric.Health.HealthStateChunkList<T>.ToString()
  nameWithType.vb: HealthStateChunkList(Of T).ToString()
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).ToString()
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.ToString
    name: ToString
    nameWithType: HealthStateChunkList<T>.ToString
    fullName: System.Fabric.Health.HealthStateChunkList<T>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.ToString
    name: ToString
    nameWithType: HealthStateChunkList(Of T).ToString
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkList`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Fabric.Health.HealthStateChunkList`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: HealthStateChunkList<T>.IEnumerable.GetEnumerator()
  fullName: System.Fabric.Health.HealthStateChunkList<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: HealthStateChunkList(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Fabric.Health.HealthStateChunkList(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkList`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: HealthStateChunkList<T>.IEnumerable.GetEnumerator
    fullName: System.Fabric.Health.HealthStateChunkList<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkList`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: HealthStateChunkList(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Fabric.Health.HealthStateChunkList(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Health.HealthStateChunkListHelper.ToArray``1(System.Fabric.Health.HealthStateChunkList{``0})
  commentId: M:System.Fabric.Health.HealthStateChunkListHelper.ToArray``1(System.Fabric.Health.HealthStateChunkList{``0})
  isExternal: false
  name: ToArray<T>(HealthStateChunkList<T>)
  nameWithType: HealthStateChunkListHelper.ToArray<T>(HealthStateChunkList<T>)
  fullName: System.Fabric.Health.HealthStateChunkListHelper.ToArray<T>(System.Fabric.Health.HealthStateChunkList<T>)
  nameWithType.vb: HealthStateChunkListHelper.ToArray(Of T)(HealthStateChunkList(Of T))
  fullname.vb: System.Fabric.Health.HealthStateChunkListHelper.ToArray(Of T)(System.Fabric.Health.HealthStateChunkList(Of T))
  name.vb: ToArray(Of T)(HealthStateChunkList(Of T))
  spec.csharp:
  - uid: System.Fabric.Health.HealthStateChunkListHelper.ToArray``1(System.Fabric.Health.HealthStateChunkList{``0})
    name: ToArray<T>
    nameWithType: HealthStateChunkListHelper.ToArray<T>
    fullName: System.Fabric.Health.HealthStateChunkListHelper.ToArray<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.HealthStateChunkList`1
    name: HealthStateChunkList
    nameWithType: HealthStateChunkList
    fullName: System.Fabric.Health.HealthStateChunkList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Health.HealthStateChunkListHelper.ToArray``1(System.Fabric.Health.HealthStateChunkList{``0})
    name: ToArray(Of T)
    nameWithType: HealthStateChunkListHelper.ToArray(Of T)
    fullName: System.Fabric.Health.HealthStateChunkListHelper.ToArray(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Fabric.Health.HealthStateChunkList`1
    name: HealthStateChunkList
    nameWithType: HealthStateChunkList
    fullName: System.Fabric.Health.HealthStateChunkList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.HealthStateChunkListHelper
  commentId: T:System.Fabric.Health.HealthStateChunkListHelper
  parent: System.Fabric.Health
  isExternal: false
  name: HealthStateChunkListHelper
  nameWithType: HealthStateChunkListHelper
  fullName: System.Fabric.Health.HealthStateChunkListHelper
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.PartitionHealthStateChunkList
  commentId: T:System.Fabric.Health.PartitionHealthStateChunkList
  parent: System.Fabric.Health
  isExternal: false
  name: PartitionHealthStateChunkList
  nameWithType: PartitionHealthStateChunkList
  fullName: System.Fabric.Health.PartitionHealthStateChunkList
- uid: System.Fabric.Health.PartitionHealthStateChunkList.#ctor*
  commentId: Overload:System.Fabric.Health.PartitionHealthStateChunkList.#ctor
  isExternal: false
  name: PartitionHealthStateChunkList
  nameWithType: PartitionHealthStateChunkList.PartitionHealthStateChunkList
  fullName: System.Fabric.Health.PartitionHealthStateChunkList.PartitionHealthStateChunkList
