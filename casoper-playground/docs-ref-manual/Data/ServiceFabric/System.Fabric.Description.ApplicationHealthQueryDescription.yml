### YamlMime:ManagedReference
items:
- uid: System.Fabric.Description.ApplicationHealthQueryDescription
  commentId: T:System.Fabric.Description.ApplicationHealthQueryDescription
  id: ApplicationHealthQueryDescription
  parent: System.Fabric.Description
  children:
  - System.Fabric.Description.ApplicationHealthQueryDescription.#ctor(System.Uri)
  - System.Fabric.Description.ApplicationHealthQueryDescription.ApplicationName
  - System.Fabric.Description.ApplicationHealthQueryDescription.DeployedApplicationsFilter
  - System.Fabric.Description.ApplicationHealthQueryDescription.EventsFilter
  - System.Fabric.Description.ApplicationHealthQueryDescription.HealthPolicy
  - System.Fabric.Description.ApplicationHealthQueryDescription.ServicesFilter
  - System.Fabric.Description.ApplicationHealthQueryDescription.ToString
  langs:
  - csharp
  - vb
  name: ApplicationHealthQueryDescription
  nameWithType: ApplicationHealthQueryDescription
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationHealthQueryDescription
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
    startLine: 17
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Represents the query input for getting application health. Used by \n<xref href=\"System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Fabric.Description.ApplicationHealthQueryDescription)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public sealed class ApplicationHealthQueryDescription
    content.vb: Public NotInheritable Class ApplicationHealthQueryDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Description.ApplicationHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.#ctor(System.Uri)
  commentId: M:System.Fabric.Description.ApplicationHealthQueryDescription.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Fabric.Description.ApplicationHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ApplicationHealthQueryDescription(Uri)
  nameWithType: ApplicationHealthQueryDescription.ApplicationHealthQueryDescription(Uri)
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.ApplicationHealthQueryDescription(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
    startLine: 28
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Fabric.Description.ApplicationHealthQueryDescription\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example: []
  syntax:
    content: public ApplicationHealthQueryDescription(Uri applicationName)
    content.vb: Public Sub New(applicationName As Uri)
    parameters:
    - id: applicationName
      type: System.Uri
      description: "\n<p>The application name. Cannot be <strong>null</strong>.</p>\n"
  overload: System.Fabric.Description.ApplicationHealthQueryDescription.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null value was passed in for a required parameter.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.ApplicationName
  commentId: P:System.Fabric.Description.ApplicationHealthQueryDescription.ApplicationName
  id: ApplicationName
  parent: System.Fabric.Description.ApplicationHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: ApplicationHealthQueryDescription.ApplicationName
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.ApplicationName
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ApplicationName
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
    startLine: 40
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets the name of the application.</p>\n"
  example: []
  syntax:
    content: public Uri ApplicationName { get; }
    content.vb: Public ReadOnly Property ApplicationName As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The name of the application.</p>\n"
  overload: System.Fabric.Description.ApplicationHealthQueryDescription.ApplicationName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.HealthPolicy
  commentId: P:System.Fabric.Description.ApplicationHealthQueryDescription.HealthPolicy
  id: HealthPolicy
  parent: System.Fabric.Description.ApplicationHealthQueryDescription
  langs:
  - csharp
  - vb
  name: HealthPolicy
  nameWithType: ApplicationHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.HealthPolicy
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthPolicy
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
    startLine: 54
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the <xref href=\"System.Fabric.Health.ApplicationHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate the application health.</p>\n"
  remarks: >-
    If not specified, the health store uses the application health policy specified in the application manifest

    to evaluate the application.
  example: []
  syntax:
    content: public ApplicationHealthPolicy HealthPolicy { get; set; }
    content.vb: Public Property HealthPolicy As ApplicationHealthPolicy
    parameters: []
    return:
      type: System.Fabric.Health.ApplicationHealthPolicy
      description: "\n<p>The <xref href=\"System.Fabric.Health.ApplicationHealthPolicy\" data-throw-if-not-resolved=\"false\"></xref> used to evaluate application health.</p>\n"
  overload: System.Fabric.Description.ApplicationHealthQueryDescription.HealthPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.EventsFilter
  commentId: P:System.Fabric.Description.ApplicationHealthQueryDescription.EventsFilter
  id: EventsFilter
  parent: System.Fabric.Description.ApplicationHealthQueryDescription
  langs:
  - csharp
  - vb
  name: EventsFilter
  nameWithType: ApplicationHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.EventsFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: EventsFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
    startLine: 70
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for the collection of <xref href=\"System.Fabric.Health.HealthEvent\" data-throw-if-not-resolved=\"false\"></xref> reported on the application. Only events \nthat match the filter will be returned. All events will be used to evaluate the application aggregated health state.</p>\n"
  remarks: "<p> Only events that match \n    the filter will be returned. All events will be used to evaluate the application aggregated health state.\n    If the filter is not specified, all events are returned.</p>"
  example: []
  syntax:
    content: public HealthEventsFilter EventsFilter { get; set; }
    content.vb: Public Property EventsFilter As HealthEventsFilter
    parameters: []
    return:
      type: System.Fabric.Health.HealthEventsFilter
      description: "\n<p>The filter for the collection of <xref href=\"System.Fabric.Health.HealthEvent\" data-throw-if-not-resolved=\"false\"></xref> reported on the application.</p>\n"
  overload: System.Fabric.Description.ApplicationHealthQueryDescription.EventsFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.ServicesFilter
  commentId: P:System.Fabric.Description.ApplicationHealthQueryDescription.ServicesFilter
  id: ServicesFilter
  parent: System.Fabric.Description.ApplicationHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ServicesFilter
  nameWithType: ApplicationHealthQueryDescription.ServicesFilter
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.ServicesFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServicesFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
    startLine: 86
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for <xref href=\"System.Fabric.Health.ServiceHealthState\" data-throw-if-not-resolved=\"false\"></xref> children. Only children that match the filter will \nbe returned. All children will be used to evaluate the application aggregated health state.</p>\n"
  remarks: "<p> Only children that match the filter will be returned. \n    All children will be used to evaluate the application aggregated health state.\n    If the filter is not specified, all service children of the application are returned.</p>"
  example: []
  syntax:
    content: public ServiceHealthStatesFilter ServicesFilter { get; set; }
    content.vb: Public Property ServicesFilter As ServiceHealthStatesFilter
    parameters: []
    return:
      type: System.Fabric.Health.ServiceHealthStatesFilter
      description: "\n<p>The filter for <xref href=\"System.Fabric.Health.ServiceHealthState\" data-throw-if-not-resolved=\"false\"></xref> children.</p>\n"
  overload: System.Fabric.Description.ApplicationHealthQueryDescription.ServicesFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.DeployedApplicationsFilter
  commentId: P:System.Fabric.Description.ApplicationHealthQueryDescription.DeployedApplicationsFilter
  id: DeployedApplicationsFilter
  parent: System.Fabric.Description.ApplicationHealthQueryDescription
  langs:
  - csharp
  - vb
  name: DeployedApplicationsFilter
  nameWithType: ApplicationHealthQueryDescription.DeployedApplicationsFilter
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.DeployedApplicationsFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: DeployedApplicationsFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
    startLine: 102
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\n<p>Gets or sets the filter for <xref href=\"System.Fabric.Health.DeployedApplicationHealthState\" data-throw-if-not-resolved=\"false\"></xref> children. Only children that match the \nfilter will be returned. All children will be used to evaluate the application aggregated health state.</p>\n"
  remarks: "<p> Only children that match the filter will be returned. \n    All children will be used to evaluate the application aggregated health state.\n    If the filter is not specified, all deployed application children of the application are returned.</p>"
  example: []
  syntax:
    content: public DeployedApplicationHealthStatesFilter DeployedApplicationsFilter { get; set; }
    content.vb: Public Property DeployedApplicationsFilter As DeployedApplicationHealthStatesFilter
    parameters: []
    return:
      type: System.Fabric.Health.DeployedApplicationHealthStatesFilter
      description: "\n<p>The filter for <xref href=\"System.Fabric.Health.DeployedApplicationHealthStatesFilter\" data-throw-if-not-resolved=\"false\"></xref> children.</p>\n"
  overload: System.Fabric.Description.ApplicationHealthQueryDescription.DeployedApplicationsFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.ToString
  commentId: M:System.Fabric.Description.ApplicationHealthQueryDescription.ToString
  id: ToString
  parent: System.Fabric.Description.ApplicationHealthQueryDescription
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ApplicationHealthQueryDescription.ToString()
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Description/ApplicationHealthQueryDescription.cs
    startLine: 112
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Description
  summary: "\nGets a string representation of the health query description.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the health query description.
  overridden: System.Object.ToString
  overload: System.Fabric.Description.ApplicationHealthQueryDescription.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Fabric.Description.ApplicationHealthQueryDescription)
  commentId: M:System.Fabric.FabricClient.HealthClient.GetApplicationHealthAsync(System.Fabric.Description.ApplicationHealthQueryDescription)
- uid: System.Fabric.Description
  commentId: N:System.Fabric.Description
  isExternal: false
  name: System.Fabric.Description
  nameWithType: System.Fabric.Description
  fullName: System.Fabric.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ApplicationHealthQueryDescription>()
  nameWithType: ByteArraySerializer.Serialize<ApplicationHealthQueryDescription>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ApplicationHealthQueryDescription>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ApplicationHealthQueryDescription)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ApplicationHealthQueryDescription)()
  name.vb: Serialize(Of ApplicationHealthQueryDescription)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ApplicationHealthQueryDescription>
    nameWithType: ByteArraySerializer.Serialize<ApplicationHealthQueryDescription>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Description.ApplicationHealthQueryDescription>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ApplicationHealthQueryDescription)
    nameWithType: ByteArraySerializer.Serialize(Of ApplicationHealthQueryDescription)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Description.ApplicationHealthQueryDescription)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Description.ApplicationHealthQueryDescription
  commentId: T:System.Fabric.Description.ApplicationHealthQueryDescription
  parent: System.Fabric.Description
  isExternal: false
  name: ApplicationHealthQueryDescription
  nameWithType: ApplicationHealthQueryDescription
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.#ctor*
  commentId: Overload:System.Fabric.Description.ApplicationHealthQueryDescription.#ctor
  isExternal: false
  name: ApplicationHealthQueryDescription
  nameWithType: ApplicationHealthQueryDescription.ApplicationHealthQueryDescription
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.ApplicationHealthQueryDescription
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.ApplicationName*
  commentId: Overload:System.Fabric.Description.ApplicationHealthQueryDescription.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: ApplicationHealthQueryDescription.ApplicationName
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.ApplicationName
- uid: System.Fabric.Health.ApplicationHealthPolicy
  commentId: T:System.Fabric.Health.ApplicationHealthPolicy
  parent: System.Fabric.Health
  isExternal: false
  name: ApplicationHealthPolicy
  nameWithType: ApplicationHealthPolicy
  fullName: System.Fabric.Health.ApplicationHealthPolicy
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.HealthPolicy*
  commentId: Overload:System.Fabric.Description.ApplicationHealthQueryDescription.HealthPolicy
  isExternal: false
  name: HealthPolicy
  nameWithType: ApplicationHealthQueryDescription.HealthPolicy
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.HealthPolicy
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Fabric.Health.HealthEvent
  commentId: T:System.Fabric.Health.HealthEvent
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: System.Fabric.Health.HealthEvent
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.EventsFilter*
  commentId: Overload:System.Fabric.Description.ApplicationHealthQueryDescription.EventsFilter
  isExternal: false
  name: EventsFilter
  nameWithType: ApplicationHealthQueryDescription.EventsFilter
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.EventsFilter
- uid: System.Fabric.Health.HealthEventsFilter
  commentId: T:System.Fabric.Health.HealthEventsFilter
  parent: System.Fabric.Health
  isExternal: false
  name: HealthEventsFilter
  nameWithType: HealthEventsFilter
  fullName: System.Fabric.Health.HealthEventsFilter
- uid: System.Fabric.Health.ServiceHealthState
  commentId: T:System.Fabric.Health.ServiceHealthState
  parent: System.Fabric.Health
  isExternal: false
  name: ServiceHealthState
  nameWithType: ServiceHealthState
  fullName: System.Fabric.Health.ServiceHealthState
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.ServicesFilter*
  commentId: Overload:System.Fabric.Description.ApplicationHealthQueryDescription.ServicesFilter
  isExternal: false
  name: ServicesFilter
  nameWithType: ApplicationHealthQueryDescription.ServicesFilter
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.ServicesFilter
- uid: System.Fabric.Health.ServiceHealthStatesFilter
  commentId: T:System.Fabric.Health.ServiceHealthStatesFilter
  parent: System.Fabric.Health
  isExternal: false
  name: ServiceHealthStatesFilter
  nameWithType: ServiceHealthStatesFilter
  fullName: System.Fabric.Health.ServiceHealthStatesFilter
- uid: System.Fabric.Health.DeployedApplicationHealthState
  commentId: T:System.Fabric.Health.DeployedApplicationHealthState
  parent: System.Fabric.Health
  isExternal: false
  name: DeployedApplicationHealthState
  nameWithType: DeployedApplicationHealthState
  fullName: System.Fabric.Health.DeployedApplicationHealthState
- uid: System.Fabric.Health.DeployedApplicationHealthStatesFilter
  commentId: T:System.Fabric.Health.DeployedApplicationHealthStatesFilter
  parent: System.Fabric.Health
  isExternal: false
  name: DeployedApplicationHealthStatesFilter
  nameWithType: DeployedApplicationHealthStatesFilter
  fullName: System.Fabric.Health.DeployedApplicationHealthStatesFilter
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.DeployedApplicationsFilter*
  commentId: Overload:System.Fabric.Description.ApplicationHealthQueryDescription.DeployedApplicationsFilter
  isExternal: false
  name: DeployedApplicationsFilter
  nameWithType: ApplicationHealthQueryDescription.DeployedApplicationsFilter
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.DeployedApplicationsFilter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Description.ApplicationHealthQueryDescription.ToString*
  commentId: Overload:System.Fabric.Description.ApplicationHealthQueryDescription.ToString
  isExternal: false
  name: ToString
  nameWithType: ApplicationHealthQueryDescription.ToString
  fullName: System.Fabric.Description.ApplicationHealthQueryDescription.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
