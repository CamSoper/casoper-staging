### YamlMime:ManagedReference
items:
- uid: System.Fabric.Health.ServiceHealthStateFilter
  commentId: T:System.Fabric.Health.ServiceHealthStateFilter
  id: ServiceHealthStateFilter
  parent: System.Fabric.Health
  children:
  - System.Fabric.Health.ServiceHealthStateFilter.#ctor
  - System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter
  - System.Fabric.Health.ServiceHealthStateFilter.PartitionFilters
  - System.Fabric.Health.ServiceHealthStateFilter.ServiceNameFilter
  - System.Fabric.Health.ServiceHealthStateFilter.ToString
  langs:
  - csharp
  - vb
  name: ServiceHealthStateFilter
  nameWithType: ServiceHealthStateFilter
  fullName: System.Fabric.Health.ServiceHealthStateFilter
  type: Class
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceHealthStateFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
    startLine: 19
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nFilter for <xref href=\"System.Fabric.Health.ServiceHealthState\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  remarks: >-
    The entity health state chunk queries can specify a list of service filters to fine-grain

    select the services that should be included in the query result.

    Note that all the services are used to evaluate parents aggregated health state, regardless of the filter passed in.
  example: []
  syntax:
    content: public sealed class ServiceHealthStateFilter
    content.vb: Public NotInheritable Class ServiceHealthStateFilter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Fabric.Health.ServiceHealthStateFilter.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Fabric.Health.ServiceHealthStateFilter.#ctor
  commentId: M:System.Fabric.Health.ServiceHealthStateFilter.#ctor
  id: '#ctor'
  parent: System.Fabric.Health.ServiceHealthStateFilter
  langs:
  - csharp
  - vb
  name: ServiceHealthStateFilter()
  nameWithType: ServiceHealthStateFilter.ServiceHealthStateFilter()
  fullName: System.Fabric.Health.ServiceHealthStateFilter.ServiceHealthStateFilter()
  type: Constructor
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: .ctor
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
    startLine: 24
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nInitializes a new instance of the <xref href=\"System.Fabric.Health.ServiceHealthStateFilter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ServiceHealthStateFilter()
    content.vb: Public Sub New
  overload: System.Fabric.Health.ServiceHealthStateFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter
  commentId: P:System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter
  id: HealthStateFilter
  parent: System.Fabric.Health.ServiceHealthStateFilter
  langs:
  - csharp
  - vb
  name: HealthStateFilter
  nameWithType: ServiceHealthStateFilter.HealthStateFilter
  fullName: System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: HealthStateFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
    startLine: 35
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets or sets filter for the aggregated health state of the <xref href=\"System.Fabric.Health.ServiceHealthState\" data-throw-if-not-resolved=\"false\"></xref> entries in the collection. \n"
  remarks: "The health state filter value comes from members or bitwise combination of members of <xref href=\"System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter\" data-throw-if-not-resolved=\"false\"></xref>. \nFor a service to match the filter, its aggregated health state must match the specified health state filter."
  example: []
  syntax:
    content: public HealthStateFilter HealthStateFilter { get; set; }
    content.vb: Public Property HealthStateFilter As HealthStateFilter
    parameters: []
    return:
      type: System.Fabric.Health.HealthStateFilter
      description: The filter for the aggregated health state of the <xref href="System.Fabric.Health.ServiceHealthState" data-throw-if-not-resolved="false"></xref> entries in the collection.
  overload: System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.ServiceHealthStateFilter.ServiceNameFilter
  commentId: P:System.Fabric.Health.ServiceHealthStateFilter.ServiceNameFilter
  id: ServiceNameFilter
  parent: System.Fabric.Health.ServiceHealthStateFilter
  langs:
  - csharp
  - vb
  name: ServiceNameFilter
  nameWithType: ServiceHealthStateFilter.ServiceNameFilter
  fullName: System.Fabric.Health.ServiceHealthStateFilter.ServiceNameFilter
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ServiceNameFilter
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
    startLine: 47
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets or sets the service name filter.\n"
  remarks: >-
    If not specified, all services that match the parent filters (if any) and the specified health state filter match the filter.

    Otherwise, the filter only applies to the specified service. All the other filter members, like health state filter, are applied to this service.
  example: []
  syntax:
    content: public Uri ServiceNameFilter { get; set; }
    content.vb: Public Property ServiceNameFilter As Uri
    parameters: []
    return:
      type: System.Uri
      description: The service name filter.
  overload: System.Fabric.Health.ServiceHealthStateFilter.ServiceNameFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Fabric.Health.ServiceHealthStateFilter.PartitionFilters
  commentId: P:System.Fabric.Health.ServiceHealthStateFilter.PartitionFilters
  id: PartitionFilters
  parent: System.Fabric.Health.ServiceHealthStateFilter
  langs:
  - csharp
  - vb
  name: PartitionFilters
  nameWithType: ServiceHealthStateFilter.PartitionFilters
  fullName: System.Fabric.Health.ServiceHealthStateFilter.PartitionFilters
  type: Property
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: PartitionFilters
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
    startLine: 61
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nGets the list of <xref href=\"System.Fabric.Health.PartitionHealthStateFilter\" data-throw-if-not-resolved=\"false\"></xref> to be applied to the partition children health states.\n"
  remarks: >-
    The list can contain one default partition filter and/or partition filters for specific partitions to fine-grain entities returned by the query.

    All partition children that match the filter will be returned as children of the service.

    If empty, the children are not returned by default.
  example: []
  syntax:
    content: public IList<PartitionHealthStateFilter> PartitionFilters { get; }
    content.vb: Public ReadOnly Property PartitionFilters As IList(Of PartitionHealthStateFilter)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Fabric.Health.PartitionHealthStateFilter}
      description: The list of <xref href="System.Fabric.Health.PartitionHealthStateFilter" data-throw-if-not-resolved="false"></xref> to be applied to the partition children health states.
  overload: System.Fabric.Health.ServiceHealthStateFilter.PartitionFilters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Fabric.Health.ServiceHealthStateFilter.ToString
  commentId: M:System.Fabric.Health.ServiceHealthStateFilter.ToString
  id: ToString
  parent: System.Fabric.Health.ServiceHealthStateFilter
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ServiceHealthStateFilter.ToString()
  fullName: System.Fabric.Health.ServiceHealthStateFilter.ToString()
  type: Method
  source:
    remote:
      path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
      branch: develop
      repo: https://msazure.visualstudio.com/DefaultCollection/One/_git/WindowsFabric
    id: ToString
    path: src/prod/src/managed/Api/src/System/Fabric/Health/ServiceHealthStateFilter.cs
    startLine: 71
  assemblies:
  - System.Fabric
  namespace: System.Fabric.Health
  summary: "\nReturns a string representation of the filter.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the filter.
  overridden: System.Object.ToString
  overload: System.Fabric.Health.ServiceHealthStateFilter.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Fabric.Health.ServiceHealthState
  commentId: T:System.Fabric.Health.ServiceHealthState
  parent: System.Fabric.Health
  isExternal: false
  name: ServiceHealthState
  nameWithType: ServiceHealthState
  fullName: System.Fabric.Health.ServiceHealthState
- uid: System.Fabric.Health
  commentId: N:System.Fabric.Health
  isExternal: false
  name: System.Fabric.Health
  nameWithType: System.Fabric.Health
  fullName: System.Fabric.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ServiceHealthStateFilter.System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  parent: System.Fabric.Messaging.Stream.ByteArraySerializer
  definition: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  name: Serialize<ServiceHealthStateFilter>()
  nameWithType: ByteArraySerializer.Serialize<ServiceHealthStateFilter>()
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ServiceHealthStateFilter>()
  nameWithType.vb: ByteArraySerializer.Serialize(Of ServiceHealthStateFilter)()
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ServiceHealthStateFilter)()
  name.vb: Serialize(Of ServiceHealthStateFilter)()
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize<ServiceHealthStateFilter>
    nameWithType: ByteArraySerializer.Serialize<ServiceHealthStateFilter>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<System.Fabric.Health.ServiceHealthStateFilter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1
    name: Serialize(Of ServiceHealthStateFilter)
    nameWithType: ByteArraySerializer.Serialize(Of ServiceHealthStateFilter)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of System.Fabric.Health.ServiceHealthStateFilter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  commentId: M:System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
  isExternal: false
  name: Serialize<T>(T)
  nameWithType: ByteArraySerializer.Serialize<T>(T)
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>(T)
  nameWithType.vb: ByteArraySerializer.Serialize(Of T)(T)
  fullname.vb: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)(T)
  name.vb: Serialize(Of T)(T)
  spec.csharp:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize<T>
    nameWithType: ByteArraySerializer.Serialize<T>
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize``1(``0)
    name: Serialize(Of T)
    nameWithType: ByteArraySerializer.Serialize(Of T)
    fullName: System.Fabric.Messaging.Stream.ByteArraySerializer.Serialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Messaging.Stream.ByteArraySerializer
  commentId: T:System.Fabric.Messaging.Stream.ByteArraySerializer
  parent: System.Fabric.Messaging.Stream
  isExternal: false
  name: ByteArraySerializer
  nameWithType: ByteArraySerializer
  fullName: System.Fabric.Messaging.Stream.ByteArraySerializer
- uid: System.Fabric.Messaging.Stream
  commentId: N:System.Fabric.Messaging.Stream
  isExternal: false
  name: System.Fabric.Messaging.Stream
  nameWithType: System.Fabric.Messaging.Stream
  fullName: System.Fabric.Messaging.Stream
- uid: System.Fabric.Health.ServiceHealthStateFilter
  commentId: T:System.Fabric.Health.ServiceHealthStateFilter
  isExternal: false
  name: ServiceHealthStateFilter
  nameWithType: ServiceHealthStateFilter
  fullName: System.Fabric.Health.ServiceHealthStateFilter
- uid: System.Fabric.Health.ServiceHealthStateFilter.#ctor*
  commentId: Overload:System.Fabric.Health.ServiceHealthStateFilter.#ctor
  isExternal: false
  name: ServiceHealthStateFilter
  nameWithType: ServiceHealthStateFilter.ServiceHealthStateFilter
  fullName: System.Fabric.Health.ServiceHealthStateFilter.ServiceHealthStateFilter
- uid: System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter
  commentId: P:System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter
- uid: System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter*
  commentId: Overload:System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter
  isExternal: false
  name: HealthStateFilter
  nameWithType: ServiceHealthStateFilter.HealthStateFilter
  fullName: System.Fabric.Health.ServiceHealthStateFilter.HealthStateFilter
- uid: System.Fabric.Health.HealthStateFilter
  commentId: T:System.Fabric.Health.HealthStateFilter
  parent: System.Fabric.Health
  isExternal: false
  name: HealthStateFilter
  nameWithType: HealthStateFilter
  fullName: System.Fabric.Health.HealthStateFilter
- uid: System.Fabric.Health.ServiceHealthStateFilter.ServiceNameFilter*
  commentId: Overload:System.Fabric.Health.ServiceHealthStateFilter.ServiceNameFilter
  isExternal: false
  name: ServiceNameFilter
  nameWithType: ServiceHealthStateFilter.ServiceNameFilter
  fullName: System.Fabric.Health.ServiceHealthStateFilter.ServiceNameFilter
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Fabric.Health.PartitionHealthStateFilter
  commentId: T:System.Fabric.Health.PartitionHealthStateFilter
  isExternal: false
  name: PartitionHealthStateFilter
  nameWithType: PartitionHealthStateFilter
  fullName: System.Fabric.Health.PartitionHealthStateFilter
- uid: System.Fabric.Health.ServiceHealthStateFilter.PartitionFilters*
  commentId: Overload:System.Fabric.Health.ServiceHealthStateFilter.PartitionFilters
  isExternal: false
  name: PartitionFilters
  nameWithType: ServiceHealthStateFilter.PartitionFilters
  fullName: System.Fabric.Health.ServiceHealthStateFilter.PartitionFilters
- uid: System.Collections.Generic.IList{System.Fabric.Health.PartitionHealthStateFilter}
  commentId: T:System.Collections.Generic.IList{System.Fabric.Health.PartitionHealthStateFilter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PartitionHealthStateFilter>
  nameWithType: IList<PartitionHealthStateFilter>
  fullName: System.Collections.Generic.IList<System.Fabric.Health.PartitionHealthStateFilter>
  nameWithType.vb: IList(Of PartitionHealthStateFilter)
  fullname.vb: System.Collections.Generic.IList(Of System.Fabric.Health.PartitionHealthStateFilter)
  name.vb: IList(Of PartitionHealthStateFilter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Fabric.Health.PartitionHealthStateFilter
    name: PartitionHealthStateFilter
    nameWithType: PartitionHealthStateFilter
    fullName: System.Fabric.Health.PartitionHealthStateFilter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Fabric.Health.PartitionHealthStateFilter
    name: PartitionHealthStateFilter
    nameWithType: PartitionHealthStateFilter
    fullName: System.Fabric.Health.PartitionHealthStateFilter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Fabric.Health.ServiceHealthStateFilter.ToString*
  commentId: Overload:System.Fabric.Health.ServiceHealthStateFilter.ToString
  isExternal: false
  name: ToString
  nameWithType: ServiceHealthStateFilter.ToString
  fullName: System.Fabric.Health.ServiceHealthStateFilter.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
