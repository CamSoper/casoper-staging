### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.FileNotification
  commentId: T:Microsoft.Azure.Devices.FileNotification
  id: FileNotification
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.FileNotification.BlobName
  - Microsoft.Azure.Devices.FileNotification.BlobSizeInBytes
  - Microsoft.Azure.Devices.FileNotification.BlobUri
  - Microsoft.Azure.Devices.FileNotification.DeviceId
  - Microsoft.Azure.Devices.FileNotification.EnqueuedTimeUtc
  - Microsoft.Azure.Devices.FileNotification.LastUpdatedTime
  langs:
  - csharp
  - vb
  name: FileNotification
  nameWithType: FileNotification
  fullName: Microsoft.Azure.Devices.FileNotification
  type: Class
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FileNotification.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: FileNotification
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FileNotification.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nContains properties for file upload notifications \n"
  example: []
  syntax:
    content: public class FileNotification
    content.vb: Public Class FileNotification
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.FileNotification.DeviceId
  commentId: P:Microsoft.Azure.Devices.FileNotification.DeviceId
  id: DeviceId
  parent: Microsoft.Azure.Devices.FileNotification
  langs:
  - csharp
  - vb
  name: DeviceId
  nameWithType: FileNotification.DeviceId
  fullName: Microsoft.Azure.Devices.FileNotification.DeviceId
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FileNotification.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DeviceId
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FileNotification.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "deviceId", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public string DeviceId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="deviceId", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property DeviceId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.FileNotification.DeviceId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: deviceId
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FileNotification.BlobUri
  commentId: P:Microsoft.Azure.Devices.FileNotification.BlobUri
  id: BlobUri
  parent: Microsoft.Azure.Devices.FileNotification
  langs:
  - csharp
  - vb
  name: BlobUri
  nameWithType: FileNotification.BlobUri
  fullName: Microsoft.Azure.Devices.FileNotification.BlobUri
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FileNotification.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: BlobUri
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FileNotification.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "blobUri", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public string BlobUri { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="blobUri", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property BlobUri As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.FileNotification.BlobUri*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: blobUri
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FileNotification.BlobName
  commentId: P:Microsoft.Azure.Devices.FileNotification.BlobName
  id: BlobName
  parent: Microsoft.Azure.Devices.FileNotification
  langs:
  - csharp
  - vb
  name: BlobName
  nameWithType: FileNotification.BlobName
  fullName: Microsoft.Azure.Devices.FileNotification.BlobName
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FileNotification.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: BlobName
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FileNotification.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "blobName", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public string BlobName { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="blobName", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property BlobName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.FileNotification.BlobName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: blobName
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FileNotification.LastUpdatedTime
  commentId: P:Microsoft.Azure.Devices.FileNotification.LastUpdatedTime
  id: LastUpdatedTime
  parent: Microsoft.Azure.Devices.FileNotification
  langs:
  - csharp
  - vb
  name: LastUpdatedTime
  nameWithType: FileNotification.LastUpdatedTime
  fullName: Microsoft.Azure.Devices.FileNotification.LastUpdatedTime
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FileNotification.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: LastUpdatedTime
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FileNotification.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastUpdatedTime", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public DateTimeOffset? LastUpdatedTime { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="lastUpdatedTime", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property LastUpdatedTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
  overload: Microsoft.Azure.Devices.FileNotification.LastUpdatedTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastUpdatedTime
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FileNotification.BlobSizeInBytes
  commentId: P:Microsoft.Azure.Devices.FileNotification.BlobSizeInBytes
  id: BlobSizeInBytes
  parent: Microsoft.Azure.Devices.FileNotification
  langs:
  - csharp
  - vb
  name: BlobSizeInBytes
  nameWithType: FileNotification.BlobSizeInBytes
  fullName: Microsoft.Azure.Devices.FileNotification.BlobSizeInBytes
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FileNotification.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: BlobSizeInBytes
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FileNotification.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "blobSizeInBytes", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public long BlobSizeInBytes { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="blobSizeInBytes", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property BlobSizeInBytes As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.Azure.Devices.FileNotification.BlobSizeInBytes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: blobSizeInBytes
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FileNotification.EnqueuedTimeUtc
  commentId: P:Microsoft.Azure.Devices.FileNotification.EnqueuedTimeUtc
  id: EnqueuedTimeUtc
  parent: Microsoft.Azure.Devices.FileNotification
  langs:
  - csharp
  - vb
  name: EnqueuedTimeUtc
  nameWithType: FileNotification.EnqueuedTimeUtc
  fullName: Microsoft.Azure.Devices.FileNotification.EnqueuedTimeUtc
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FileNotification.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: EnqueuedTimeUtc
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FileNotification.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "enqueuedTimeUtc", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public DateTime EnqueuedTimeUtc { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="enqueuedTimeUtc", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property EnqueuedTimeUtc As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Devices.FileNotification.EnqueuedTimeUtc*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: enqueuedTimeUtc
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices
  commentId: N:Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  nameWithType: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.FileNotification.DeviceId*
  commentId: Overload:Microsoft.Azure.Devices.FileNotification.DeviceId
  isExternal: false
  name: DeviceId
  nameWithType: FileNotification.DeviceId
  fullName: Microsoft.Azure.Devices.FileNotification.DeviceId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Devices.FileNotification.BlobUri*
  commentId: Overload:Microsoft.Azure.Devices.FileNotification.BlobUri
  isExternal: false
  name: BlobUri
  nameWithType: FileNotification.BlobUri
  fullName: Microsoft.Azure.Devices.FileNotification.BlobUri
- uid: Microsoft.Azure.Devices.FileNotification.BlobName*
  commentId: Overload:Microsoft.Azure.Devices.FileNotification.BlobName
  isExternal: false
  name: BlobName
  nameWithType: FileNotification.BlobName
  fullName: Microsoft.Azure.Devices.FileNotification.BlobName
- uid: Microsoft.Azure.Devices.FileNotification.LastUpdatedTime*
  commentId: Overload:Microsoft.Azure.Devices.FileNotification.LastUpdatedTime
  isExternal: false
  name: LastUpdatedTime
  nameWithType: FileNotification.LastUpdatedTime
  fullName: Microsoft.Azure.Devices.FileNotification.LastUpdatedTime
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Devices.FileNotification.BlobSizeInBytes*
  commentId: Overload:Microsoft.Azure.Devices.FileNotification.BlobSizeInBytes
  isExternal: false
  name: BlobSizeInBytes
  nameWithType: FileNotification.BlobSizeInBytes
  fullName: Microsoft.Azure.Devices.FileNotification.BlobSizeInBytes
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Azure.Devices.FileNotification.EnqueuedTimeUtc*
  commentId: Overload:Microsoft.Azure.Devices.FileNotification.EnqueuedTimeUtc
  isExternal: false
  name: EnqueuedTimeUtc
  nameWithType: FileNotification.EnqueuedTimeUtc
  fullName: Microsoft.Azure.Devices.FileNotification.EnqueuedTimeUtc
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
