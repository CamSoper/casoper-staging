### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.DeviceJobStatistics
  commentId: T:Microsoft.Azure.Devices.DeviceJobStatistics
  id: DeviceJobStatistics
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.DeviceJobStatistics.DeviceCount
  - Microsoft.Azure.Devices.DeviceJobStatistics.FailedCount
  - Microsoft.Azure.Devices.DeviceJobStatistics.PendingCount
  - Microsoft.Azure.Devices.DeviceJobStatistics.RunningCount
  - Microsoft.Azure.Devices.DeviceJobStatistics.SucceededCount
  langs:
  - csharp
  - vb
  name: DeviceJobStatistics
  nameWithType: DeviceJobStatistics
  fullName: Microsoft.Azure.Devices.DeviceJobStatistics
  type: Class
  source:
    remote:
      path: service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DeviceJobStatistics
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
    startLine: 118
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nThe job counts, e.g., number of failed/succeeded devices\n"
  example: []
  syntax:
    content: public class DeviceJobStatistics
    content.vb: Public Class DeviceJobStatistics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.DeviceJobStatistics.DeviceCount
  commentId: P:Microsoft.Azure.Devices.DeviceJobStatistics.DeviceCount
  id: DeviceCount
  parent: Microsoft.Azure.Devices.DeviceJobStatistics
  langs:
  - csharp
  - vb
  name: DeviceCount
  nameWithType: DeviceJobStatistics.DeviceCount
  fullName: Microsoft.Azure.Devices.DeviceJobStatistics.DeviceCount
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DeviceCount
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
    startLine: 123
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nNumber of devices in the job\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "deviceCount")]

      public int DeviceCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="deviceCount")>

      Public Property DeviceCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Devices.DeviceJobStatistics.DeviceCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: deviceCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJobStatistics.FailedCount
  commentId: P:Microsoft.Azure.Devices.DeviceJobStatistics.FailedCount
  id: FailedCount
  parent: Microsoft.Azure.Devices.DeviceJobStatistics
  langs:
  - csharp
  - vb
  name: FailedCount
  nameWithType: DeviceJobStatistics.FailedCount
  fullName: Microsoft.Azure.Devices.DeviceJobStatistics.FailedCount
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: FailedCount
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
    startLine: 129
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nThe number of failed jobs\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "failedCount")]

      public int FailedCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="failedCount")>

      Public Property FailedCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Devices.DeviceJobStatistics.FailedCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: failedCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJobStatistics.SucceededCount
  commentId: P:Microsoft.Azure.Devices.DeviceJobStatistics.SucceededCount
  id: SucceededCount
  parent: Microsoft.Azure.Devices.DeviceJobStatistics
  langs:
  - csharp
  - vb
  name: SucceededCount
  nameWithType: DeviceJobStatistics.SucceededCount
  fullName: Microsoft.Azure.Devices.DeviceJobStatistics.SucceededCount
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: SucceededCount
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
    startLine: 135
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nThe number of Successed jobs\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "succeededCount")]

      public int SucceededCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="succeededCount")>

      Public Property SucceededCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Devices.DeviceJobStatistics.SucceededCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: succeededCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJobStatistics.RunningCount
  commentId: P:Microsoft.Azure.Devices.DeviceJobStatistics.RunningCount
  id: RunningCount
  parent: Microsoft.Azure.Devices.DeviceJobStatistics
  langs:
  - csharp
  - vb
  name: RunningCount
  nameWithType: DeviceJobStatistics.RunningCount
  fullName: Microsoft.Azure.Devices.DeviceJobStatistics.RunningCount
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: RunningCount
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
    startLine: 141
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nThe number of running jobs\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "runningCount")]

      public int RunningCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="runningCount")>

      Public Property RunningCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Devices.DeviceJobStatistics.RunningCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: runningCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJobStatistics.PendingCount
  commentId: P:Microsoft.Azure.Devices.DeviceJobStatistics.PendingCount
  id: PendingCount
  parent: Microsoft.Azure.Devices.DeviceJobStatistics
  langs:
  - csharp
  - vb
  name: PendingCount
  nameWithType: DeviceJobStatistics.PendingCount
  fullName: Microsoft.Azure.Devices.DeviceJobStatistics.PendingCount
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: PendingCount
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/JobClient/JobResponse.cs
    startLine: 147
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nThe number of pending (scheduled) jobs\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "pendingCount")]

      public int PendingCount { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="pendingCount")>

      Public Property PendingCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.Azure.Devices.DeviceJobStatistics.PendingCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: pendingCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices
  commentId: N:Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  nameWithType: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.DeviceJobStatistics.DeviceCount*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJobStatistics.DeviceCount
  isExternal: false
  name: DeviceCount
  nameWithType: DeviceJobStatistics.DeviceCount
  fullName: Microsoft.Azure.Devices.DeviceJobStatistics.DeviceCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Devices.DeviceJobStatistics.FailedCount*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJobStatistics.FailedCount
  isExternal: false
  name: FailedCount
  nameWithType: DeviceJobStatistics.FailedCount
  fullName: Microsoft.Azure.Devices.DeviceJobStatistics.FailedCount
- uid: Microsoft.Azure.Devices.DeviceJobStatistics.SucceededCount*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJobStatistics.SucceededCount
  isExternal: false
  name: SucceededCount
  nameWithType: DeviceJobStatistics.SucceededCount
  fullName: Microsoft.Azure.Devices.DeviceJobStatistics.SucceededCount
- uid: Microsoft.Azure.Devices.DeviceJobStatistics.RunningCount*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJobStatistics.RunningCount
  isExternal: false
  name: RunningCount
  nameWithType: DeviceJobStatistics.RunningCount
  fullName: Microsoft.Azure.Devices.DeviceJobStatistics.RunningCount
- uid: Microsoft.Azure.Devices.DeviceJobStatistics.PendingCount*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJobStatistics.PendingCount
  isExternal: false
  name: PendingCount
  nameWithType: DeviceJobStatistics.PendingCount
  fullName: Microsoft.Azure.Devices.DeviceJobStatistics.PendingCount
