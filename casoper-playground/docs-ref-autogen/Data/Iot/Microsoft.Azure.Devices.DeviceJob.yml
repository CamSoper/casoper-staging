### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.DeviceJob
  commentId: T:Microsoft.Azure.Devices.DeviceJob
  id: DeviceJob
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.DeviceJob.CreatedDateTimeUtc
  - Microsoft.Azure.Devices.DeviceJob.DeviceId
  - Microsoft.Azure.Devices.DeviceJob.EndTimeUtc
  - Microsoft.Azure.Devices.DeviceJob.Error
  - Microsoft.Azure.Devices.DeviceJob.JobId
  - Microsoft.Azure.Devices.DeviceJob.JobType
  - Microsoft.Azure.Devices.DeviceJob.LastUpdatedDateTimeUtc
  - Microsoft.Azure.Devices.DeviceJob.Outcome
  - Microsoft.Azure.Devices.DeviceJob.StartTimeUtc
  - Microsoft.Azure.Devices.DeviceJob.Status
  langs:
  - csharp
  - vb
  name: DeviceJob
  nameWithType: DeviceJob
  fullName: Microsoft.Azure.Devices.DeviceJob
  type: Class
  source:
    remote:
      path: service/Microsoft.Azure.Devices/DeviceJob.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DeviceJob
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/DeviceJob.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nContains DeviceJob properties and their accessors.\n"
  example: []
  syntax:
    content: public class DeviceJob
    content.vb: Public Class DeviceJob
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.DeviceJob.DeviceId
  commentId: P:Microsoft.Azure.Devices.DeviceJob.DeviceId
  id: DeviceId
  parent: Microsoft.Azure.Devices.DeviceJob
  langs:
  - csharp
  - vb
  name: DeviceId
  nameWithType: DeviceJob.DeviceId
  fullName: Microsoft.Azure.Devices.DeviceJob.DeviceId
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/DeviceJob.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DeviceId
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/DeviceJob.cs
    startLine: 18
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nDevice ID\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "deviceId", NullValueHandling = NullValueHandling.Ignore)]

      public string DeviceId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="deviceId", NullValueHandling:=NullValueHandling.Ignore)>

      Public Property DeviceId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.DeviceJob.DeviceId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: deviceId
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJob.JobId
  commentId: P:Microsoft.Azure.Devices.DeviceJob.JobId
  id: JobId
  parent: Microsoft.Azure.Devices.DeviceJob
  langs:
  - csharp
  - vb
  name: JobId
  nameWithType: DeviceJob.JobId
  fullName: Microsoft.Azure.Devices.DeviceJob.JobId
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/DeviceJob.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: JobId
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/DeviceJob.cs
    startLine: 24
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nJob Id\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "jobId", NullValueHandling = NullValueHandling.Ignore)]

      public string JobId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="jobId", NullValueHandling:=NullValueHandling.Ignore)>

      Public Property JobId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.DeviceJob.JobId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: jobId
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJob.JobType
  commentId: P:Microsoft.Azure.Devices.DeviceJob.JobType
  id: JobType
  parent: Microsoft.Azure.Devices.DeviceJob
  langs:
  - csharp
  - vb
  name: JobType
  nameWithType: DeviceJob.JobType
  fullName: Microsoft.Azure.Devices.DeviceJob.JobType
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/DeviceJob.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: JobType
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/DeviceJob.cs
    startLine: 30
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nDevice Job type\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "jobType", NullValueHandling = NullValueHandling.Ignore)]

      [JsonConverter(typeof (StringEnumConverter))]

      public DeviceJobType JobType { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="jobType", NullValueHandling:=NullValueHandling.Ignore)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property JobType As DeviceJobType
    parameters: []
    return:
      type: Microsoft.Azure.Devices.DeviceJobType
  overload: Microsoft.Azure.Devices.DeviceJob.JobType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: jobType
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJob.Status
  commentId: P:Microsoft.Azure.Devices.DeviceJob.Status
  id: Status
  parent: Microsoft.Azure.Devices.DeviceJob
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: DeviceJob.Status
  fullName: Microsoft.Azure.Devices.DeviceJob.Status
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/DeviceJob.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Status
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/DeviceJob.cs
    startLine: 37
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nDevice Job Status\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "status", Required = Required.Always)]

      [JsonConverter(typeof (StringEnumConverter))]

      public DeviceJobStatus Status { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="status", Required:=Required.Always)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property Status As DeviceJobStatus
    parameters: []
    return:
      type: Microsoft.Azure.Devices.DeviceJobStatus
  overload: Microsoft.Azure.Devices.DeviceJob.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: status
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJob.StartTimeUtc
  commentId: P:Microsoft.Azure.Devices.DeviceJob.StartTimeUtc
  id: StartTimeUtc
  parent: Microsoft.Azure.Devices.DeviceJob
  langs:
  - csharp
  - vb
  name: StartTimeUtc
  nameWithType: DeviceJob.StartTimeUtc
  fullName: Microsoft.Azure.Devices.DeviceJob.StartTimeUtc
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/DeviceJob.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: StartTimeUtc
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/DeviceJob.cs
    startLine: 44
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nDevice Job Start Time\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "startTimeUtc")]

      public DateTime StartTimeUtc { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="startTimeUtc")>

      Public Property StartTimeUtc As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Devices.DeviceJob.StartTimeUtc*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: startTimeUtc
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJob.EndTimeUtc
  commentId: P:Microsoft.Azure.Devices.DeviceJob.EndTimeUtc
  id: EndTimeUtc
  parent: Microsoft.Azure.Devices.DeviceJob
  langs:
  - csharp
  - vb
  name: EndTimeUtc
  nameWithType: DeviceJob.EndTimeUtc
  fullName: Microsoft.Azure.Devices.DeviceJob.EndTimeUtc
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/DeviceJob.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: EndTimeUtc
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/DeviceJob.cs
    startLine: 50
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nDevice Job End Time\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "endTimeUtc")]

      public DateTime EndTimeUtc { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="endTimeUtc")>

      Public Property EndTimeUtc As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Devices.DeviceJob.EndTimeUtc*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: endTimeUtc
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJob.CreatedDateTimeUtc
  commentId: P:Microsoft.Azure.Devices.DeviceJob.CreatedDateTimeUtc
  id: CreatedDateTimeUtc
  parent: Microsoft.Azure.Devices.DeviceJob
  langs:
  - csharp
  - vb
  name: CreatedDateTimeUtc
  nameWithType: DeviceJob.CreatedDateTimeUtc
  fullName: Microsoft.Azure.Devices.DeviceJob.CreatedDateTimeUtc
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/DeviceJob.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CreatedDateTimeUtc
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/DeviceJob.cs
    startLine: 56
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nDevice Job Creation time\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "createdDateTimeUtc")]

      public DateTime CreatedDateTimeUtc { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="createdDateTimeUtc")>

      Public Property CreatedDateTimeUtc As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Devices.DeviceJob.CreatedDateTimeUtc*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: createdDateTimeUtc
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJob.LastUpdatedDateTimeUtc
  commentId: P:Microsoft.Azure.Devices.DeviceJob.LastUpdatedDateTimeUtc
  id: LastUpdatedDateTimeUtc
  parent: Microsoft.Azure.Devices.DeviceJob
  langs:
  - csharp
  - vb
  name: LastUpdatedDateTimeUtc
  nameWithType: DeviceJob.LastUpdatedDateTimeUtc
  fullName: Microsoft.Azure.Devices.DeviceJob.LastUpdatedDateTimeUtc
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/DeviceJob.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: LastUpdatedDateTimeUtc
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/DeviceJob.cs
    startLine: 62
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nDevice Job last updated time\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "lastUpdatedDateTimeUtc")]

      public DateTime LastUpdatedDateTimeUtc { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="lastUpdatedDateTimeUtc")>

      Public Property LastUpdatedDateTimeUtc As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Devices.DeviceJob.LastUpdatedDateTimeUtc*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: lastUpdatedDateTimeUtc
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJob.Outcome
  commentId: P:Microsoft.Azure.Devices.DeviceJob.Outcome
  id: Outcome
  parent: Microsoft.Azure.Devices.DeviceJob
  langs:
  - csharp
  - vb
  name: Outcome
  nameWithType: DeviceJob.Outcome
  fullName: Microsoft.Azure.Devices.DeviceJob.Outcome
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/DeviceJob.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Outcome
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/DeviceJob.cs
    startLine: 68
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nOutcome for the device job continain job type specifics\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "outcome", NullValueHandling = NullValueHandling.Ignore)]

      public DeviceJobOutcome Outcome { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="outcome", NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Outcome As DeviceJobOutcome
    parameters: []
    return:
      type: Microsoft.Azure.Devices.DeviceJobOutcome
  overload: Microsoft.Azure.Devices.DeviceJob.Outcome*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: outcome
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.DeviceJob.Error
  commentId: P:Microsoft.Azure.Devices.DeviceJob.Error
  id: Error
  parent: Microsoft.Azure.Devices.DeviceJob
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: DeviceJob.Error
  fullName: Microsoft.Azure.Devices.DeviceJob.Error
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/DeviceJob.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Error
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/DeviceJob.cs
    startLine: 74
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nDevice Job Error\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "error", NullValueHandling = NullValueHandling.Ignore)]

      public DeviceJobError Error { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="error", NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Error As DeviceJobError
    parameters: []
    return:
      type: Microsoft.Azure.Devices.DeviceJobError
  overload: Microsoft.Azure.Devices.DeviceJob.Error*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: error
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices
  commentId: N:Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  nameWithType: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.DeviceJob.DeviceId*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJob.DeviceId
  isExternal: false
  name: DeviceId
  nameWithType: DeviceJob.DeviceId
  fullName: Microsoft.Azure.Devices.DeviceJob.DeviceId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Devices.DeviceJob.JobId*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJob.JobId
  isExternal: false
  name: JobId
  nameWithType: DeviceJob.JobId
  fullName: Microsoft.Azure.Devices.DeviceJob.JobId
- uid: Microsoft.Azure.Devices.DeviceJob.JobType*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJob.JobType
  isExternal: false
  name: JobType
  nameWithType: DeviceJob.JobType
  fullName: Microsoft.Azure.Devices.DeviceJob.JobType
- uid: Microsoft.Azure.Devices.DeviceJobType
  commentId: T:Microsoft.Azure.Devices.DeviceJobType
  parent: Microsoft.Azure.Devices
  isExternal: false
  name: DeviceJobType
  nameWithType: DeviceJobType
  fullName: Microsoft.Azure.Devices.DeviceJobType
- uid: Microsoft.Azure.Devices.DeviceJob.Status*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJob.Status
  isExternal: false
  name: Status
  nameWithType: DeviceJob.Status
  fullName: Microsoft.Azure.Devices.DeviceJob.Status
- uid: Microsoft.Azure.Devices.DeviceJobStatus
  commentId: T:Microsoft.Azure.Devices.DeviceJobStatus
  parent: Microsoft.Azure.Devices
  isExternal: false
  name: DeviceJobStatus
  nameWithType: DeviceJobStatus
  fullName: Microsoft.Azure.Devices.DeviceJobStatus
- uid: Microsoft.Azure.Devices.DeviceJob.StartTimeUtc*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJob.StartTimeUtc
  isExternal: false
  name: StartTimeUtc
  nameWithType: DeviceJob.StartTimeUtc
  fullName: Microsoft.Azure.Devices.DeviceJob.StartTimeUtc
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.Devices.DeviceJob.EndTimeUtc*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJob.EndTimeUtc
  isExternal: false
  name: EndTimeUtc
  nameWithType: DeviceJob.EndTimeUtc
  fullName: Microsoft.Azure.Devices.DeviceJob.EndTimeUtc
- uid: Microsoft.Azure.Devices.DeviceJob.CreatedDateTimeUtc*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJob.CreatedDateTimeUtc
  isExternal: false
  name: CreatedDateTimeUtc
  nameWithType: DeviceJob.CreatedDateTimeUtc
  fullName: Microsoft.Azure.Devices.DeviceJob.CreatedDateTimeUtc
- uid: Microsoft.Azure.Devices.DeviceJob.LastUpdatedDateTimeUtc*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJob.LastUpdatedDateTimeUtc
  isExternal: false
  name: LastUpdatedDateTimeUtc
  nameWithType: DeviceJob.LastUpdatedDateTimeUtc
  fullName: Microsoft.Azure.Devices.DeviceJob.LastUpdatedDateTimeUtc
- uid: Microsoft.Azure.Devices.DeviceJob.Outcome*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJob.Outcome
  isExternal: false
  name: Outcome
  nameWithType: DeviceJob.Outcome
  fullName: Microsoft.Azure.Devices.DeviceJob.Outcome
- uid: Microsoft.Azure.Devices.DeviceJobOutcome
  commentId: T:Microsoft.Azure.Devices.DeviceJobOutcome
  parent: Microsoft.Azure.Devices
  isExternal: false
  name: DeviceJobOutcome
  nameWithType: DeviceJobOutcome
  fullName: Microsoft.Azure.Devices.DeviceJobOutcome
- uid: Microsoft.Azure.Devices.DeviceJob.Error*
  commentId: Overload:Microsoft.Azure.Devices.DeviceJob.Error
  isExternal: false
  name: Error
  nameWithType: DeviceJob.Error
  fullName: Microsoft.Azure.Devices.DeviceJob.Error
- uid: Microsoft.Azure.Devices.DeviceJobError
  commentId: T:Microsoft.Azure.Devices.DeviceJobError
  parent: Microsoft.Azure.Devices
  isExternal: false
  name: DeviceJobError
  nameWithType: DeviceJobError
  fullName: Microsoft.Azure.Devices.DeviceJobError
