### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.FeedbackBatch
  commentId: T:Microsoft.Azure.Devices.FeedbackBatch
  id: FeedbackBatch
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.FeedbackBatch.EnqueuedTime
  - Microsoft.Azure.Devices.FeedbackBatch.Records
  - Microsoft.Azure.Devices.FeedbackBatch.UserId
  langs:
  - csharp
  - vb
  name: FeedbackBatch
  nameWithType: FeedbackBatch
  fullName: Microsoft.Azure.Devices.FeedbackBatch
  type: Class
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FeedbackBatch.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: FeedbackBatch
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FeedbackBatch.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nContains a batch of feedback records.\n"
  example: []
  syntax:
    content: public class FeedbackBatch
    content.vb: Public Class FeedbackBatch
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.FeedbackBatch.EnqueuedTime
  commentId: P:Microsoft.Azure.Devices.FeedbackBatch.EnqueuedTime
  id: EnqueuedTime
  parent: Microsoft.Azure.Devices.FeedbackBatch
  langs:
  - csharp
  - vb
  name: EnqueuedTime
  nameWithType: FeedbackBatch.EnqueuedTime
  fullName: Microsoft.Azure.Devices.FeedbackBatch.EnqueuedTime
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FeedbackBatch.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: EnqueuedTime
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FeedbackBatch.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: public DateTime EnqueuedTime { get; set; }
    content.vb: Public Property EnqueuedTime As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Devices.FeedbackBatch.EnqueuedTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FeedbackBatch.Records
  commentId: P:Microsoft.Azure.Devices.FeedbackBatch.Records
  id: Records
  parent: Microsoft.Azure.Devices.FeedbackBatch
  langs:
  - csharp
  - vb
  name: Records
  nameWithType: FeedbackBatch.Records
  fullName: Microsoft.Azure.Devices.FeedbackBatch.Records
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FeedbackBatch.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Records
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FeedbackBatch.cs
    startLine: 15
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: public IEnumerable<FeedbackRecord> Records { get; set; }
    content.vb: Public Property Records As IEnumerable(Of FeedbackRecord)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.FeedbackRecord}
  overload: Microsoft.Azure.Devices.FeedbackBatch.Records*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FeedbackBatch.UserId
  commentId: P:Microsoft.Azure.Devices.FeedbackBatch.UserId
  id: UserId
  parent: Microsoft.Azure.Devices.FeedbackBatch
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: FeedbackBatch.UserId
  fullName: Microsoft.Azure.Devices.FeedbackBatch.UserId
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FeedbackBatch.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: UserId
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FeedbackBatch.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: public string UserId { get; set; }
    content.vb: Public Property UserId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.FeedbackBatch.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices
  commentId: N:Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  nameWithType: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.FeedbackBatch.EnqueuedTime*
  commentId: Overload:Microsoft.Azure.Devices.FeedbackBatch.EnqueuedTime
  isExternal: false
  name: EnqueuedTime
  nameWithType: FeedbackBatch.EnqueuedTime
  fullName: Microsoft.Azure.Devices.FeedbackBatch.EnqueuedTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.Devices.FeedbackBatch.Records*
  commentId: Overload:Microsoft.Azure.Devices.FeedbackBatch.Records
  isExternal: false
  name: Records
  nameWithType: FeedbackBatch.Records
  fullName: Microsoft.Azure.Devices.FeedbackBatch.Records
- uid: System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.FeedbackRecord}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.FeedbackRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FeedbackRecord>
  nameWithType: IEnumerable<FeedbackRecord>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Azure.Devices.FeedbackRecord>
  nameWithType.vb: IEnumerable(Of FeedbackRecord)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Azure.Devices.FeedbackRecord)
  name.vb: IEnumerable(Of FeedbackRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Devices.FeedbackRecord
    name: FeedbackRecord
    nameWithType: FeedbackRecord
    fullName: Microsoft.Azure.Devices.FeedbackRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Devices.FeedbackRecord
    name: FeedbackRecord
    nameWithType: FeedbackRecord
    fullName: Microsoft.Azure.Devices.FeedbackRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Devices.FeedbackBatch.UserId*
  commentId: Overload:Microsoft.Azure.Devices.FeedbackBatch.UserId
  isExternal: false
  name: UserId
  nameWithType: FeedbackBatch.UserId
  fullName: Microsoft.Azure.Devices.FeedbackBatch.UserId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
