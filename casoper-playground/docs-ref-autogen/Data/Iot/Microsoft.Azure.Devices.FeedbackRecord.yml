### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.FeedbackRecord
  commentId: T:Microsoft.Azure.Devices.FeedbackRecord
  id: FeedbackRecord
  parent: Microsoft.Azure.Devices
  children:
  - Microsoft.Azure.Devices.FeedbackRecord.Description
  - Microsoft.Azure.Devices.FeedbackRecord.DeviceGenerationId
  - Microsoft.Azure.Devices.FeedbackRecord.DeviceId
  - Microsoft.Azure.Devices.FeedbackRecord.EnqueuedTimeUtc
  - Microsoft.Azure.Devices.FeedbackRecord.OriginalMessageId
  - Microsoft.Azure.Devices.FeedbackRecord.StatusCode
  langs:
  - csharp
  - vb
  name: FeedbackRecord
  nameWithType: FeedbackRecord
  fullName: Microsoft.Azure.Devices.FeedbackRecord
  type: Class
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FeedbackRecord.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: FeedbackRecord
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FeedbackRecord.cs
    startLine: 11
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  summary: "\nContains properties of an individual feedback record. \n"
  example: []
  syntax:
    content: public class FeedbackRecord
    content.vb: Public Class FeedbackRecord
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Devices.FeedbackRecord.OriginalMessageId
  commentId: P:Microsoft.Azure.Devices.FeedbackRecord.OriginalMessageId
  id: OriginalMessageId
  parent: Microsoft.Azure.Devices.FeedbackRecord
  langs:
  - csharp
  - vb
  name: OriginalMessageId
  nameWithType: FeedbackRecord.OriginalMessageId
  fullName: Microsoft.Azure.Devices.FeedbackRecord.OriginalMessageId
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FeedbackRecord.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: OriginalMessageId
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FeedbackRecord.cs
    startLine: 13
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "originalMessageId", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public string OriginalMessageId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="originalMessageId", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property OriginalMessageId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.FeedbackRecord.OriginalMessageId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: originalMessageId
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FeedbackRecord.Description
  commentId: P:Microsoft.Azure.Devices.FeedbackRecord.Description
  id: Description
  parent: Microsoft.Azure.Devices.FeedbackRecord
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: FeedbackRecord.Description
  fullName: Microsoft.Azure.Devices.FeedbackRecord.Description
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FeedbackRecord.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Description
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FeedbackRecord.cs
    startLine: 16
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "description", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public string Description { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="description", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property Description As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.FeedbackRecord.Description*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: description
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FeedbackRecord.DeviceGenerationId
  commentId: P:Microsoft.Azure.Devices.FeedbackRecord.DeviceGenerationId
  id: DeviceGenerationId
  parent: Microsoft.Azure.Devices.FeedbackRecord
  langs:
  - csharp
  - vb
  name: DeviceGenerationId
  nameWithType: FeedbackRecord.DeviceGenerationId
  fullName: Microsoft.Azure.Devices.FeedbackRecord.DeviceGenerationId
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FeedbackRecord.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DeviceGenerationId
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FeedbackRecord.cs
    startLine: 19
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "deviceGenerationId", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public string DeviceGenerationId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="deviceGenerationId", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property DeviceGenerationId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.FeedbackRecord.DeviceGenerationId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: deviceGenerationId
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FeedbackRecord.DeviceId
  commentId: P:Microsoft.Azure.Devices.FeedbackRecord.DeviceId
  id: DeviceId
  parent: Microsoft.Azure.Devices.FeedbackRecord
  langs:
  - csharp
  - vb
  name: DeviceId
  nameWithType: FeedbackRecord.DeviceId
  fullName: Microsoft.Azure.Devices.FeedbackRecord.DeviceId
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FeedbackRecord.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: DeviceId
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FeedbackRecord.cs
    startLine: 22
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "deviceId", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public string DeviceId { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="deviceId", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property DeviceId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.FeedbackRecord.DeviceId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: deviceId
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FeedbackRecord.EnqueuedTimeUtc
  commentId: P:Microsoft.Azure.Devices.FeedbackRecord.EnqueuedTimeUtc
  id: EnqueuedTimeUtc
  parent: Microsoft.Azure.Devices.FeedbackRecord
  langs:
  - csharp
  - vb
  name: EnqueuedTimeUtc
  nameWithType: FeedbackRecord.EnqueuedTimeUtc
  fullName: Microsoft.Azure.Devices.FeedbackRecord.EnqueuedTimeUtc
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FeedbackRecord.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: EnqueuedTimeUtc
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FeedbackRecord.cs
    startLine: 25
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "enqueuedTimeUtc", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public DateTime EnqueuedTimeUtc { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="enqueuedTimeUtc", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property EnqueuedTimeUtc As Date
    parameters: []
    return:
      type: System.DateTime
  overload: Microsoft.Azure.Devices.FeedbackRecord.EnqueuedTimeUtc*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: enqueuedTimeUtc
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Devices.FeedbackRecord.StatusCode
  commentId: P:Microsoft.Azure.Devices.FeedbackRecord.StatusCode
  id: StatusCode
  parent: Microsoft.Azure.Devices.FeedbackRecord
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: FeedbackRecord.StatusCode
  fullName: Microsoft.Azure.Devices.FeedbackRecord.StatusCode
  type: Property
  source:
    remote:
      path: service/Microsoft.Azure.Devices/FeedbackRecord.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: StatusCode
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/FeedbackRecord.cs
    startLine: 28
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices
  syntax:
    content: >-
      [JsonProperty(PropertyName = "statusCode", DefaultValueHandling = DefaultValueHandling.Ignore)]

      public FeedbackStatusCode StatusCode { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="statusCode", DefaultValueHandling:=DefaultValueHandling.Ignore)>

      Public Property StatusCode As FeedbackStatusCode
    parameters: []
    return:
      type: Microsoft.Azure.Devices.FeedbackStatusCode
  overload: Microsoft.Azure.Devices.FeedbackRecord.StatusCode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: statusCode
    - name: DefaultValueHandling
      type: Newtonsoft.Json.DefaultValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Devices
  commentId: N:Microsoft.Azure.Devices
  isExternal: false
  name: Microsoft.Azure.Devices
  nameWithType: Microsoft.Azure.Devices
  fullName: Microsoft.Azure.Devices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Devices.FeedbackRecord.OriginalMessageId*
  commentId: Overload:Microsoft.Azure.Devices.FeedbackRecord.OriginalMessageId
  isExternal: false
  name: OriginalMessageId
  nameWithType: FeedbackRecord.OriginalMessageId
  fullName: Microsoft.Azure.Devices.FeedbackRecord.OriginalMessageId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Azure.Devices.FeedbackRecord.Description*
  commentId: Overload:Microsoft.Azure.Devices.FeedbackRecord.Description
  isExternal: false
  name: Description
  nameWithType: FeedbackRecord.Description
  fullName: Microsoft.Azure.Devices.FeedbackRecord.Description
- uid: Microsoft.Azure.Devices.FeedbackRecord.DeviceGenerationId*
  commentId: Overload:Microsoft.Azure.Devices.FeedbackRecord.DeviceGenerationId
  isExternal: false
  name: DeviceGenerationId
  nameWithType: FeedbackRecord.DeviceGenerationId
  fullName: Microsoft.Azure.Devices.FeedbackRecord.DeviceGenerationId
- uid: Microsoft.Azure.Devices.FeedbackRecord.DeviceId*
  commentId: Overload:Microsoft.Azure.Devices.FeedbackRecord.DeviceId
  isExternal: false
  name: DeviceId
  nameWithType: FeedbackRecord.DeviceId
  fullName: Microsoft.Azure.Devices.FeedbackRecord.DeviceId
- uid: Microsoft.Azure.Devices.FeedbackRecord.EnqueuedTimeUtc*
  commentId: Overload:Microsoft.Azure.Devices.FeedbackRecord.EnqueuedTimeUtc
  isExternal: false
  name: EnqueuedTimeUtc
  nameWithType: FeedbackRecord.EnqueuedTimeUtc
  fullName: Microsoft.Azure.Devices.FeedbackRecord.EnqueuedTimeUtc
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Azure.Devices.FeedbackRecord.StatusCode*
  commentId: Overload:Microsoft.Azure.Devices.FeedbackRecord.StatusCode
  isExternal: false
  name: StatusCode
  nameWithType: FeedbackRecord.StatusCode
  fullName: Microsoft.Azure.Devices.FeedbackRecord.StatusCode
- uid: Microsoft.Azure.Devices.FeedbackStatusCode
  commentId: T:Microsoft.Azure.Devices.FeedbackStatusCode
  parent: Microsoft.Azure.Devices
  isExternal: false
  name: FeedbackStatusCode
  nameWithType: FeedbackStatusCode
  fullName: Microsoft.Azure.Devices.FeedbackStatusCode
