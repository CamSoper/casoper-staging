### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Devices.Common.CryptoKeyGenerator
  commentId: T:Microsoft.Azure.Devices.Common.CryptoKeyGenerator
  id: CryptoKeyGenerator
  parent: Microsoft.Azure.Devices.Common
  children:
  - Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKey(System.Int32)
  - Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKeyBytes(System.Int32)
  - Microsoft.Azure.Devices.Common.CryptoKeyGenerator.Sha512KeySize
  langs:
  - csharp
  - vb
  name: CryptoKeyGenerator
  nameWithType: CryptoKeyGenerator
  fullName: Microsoft.Azure.Devices.Common.CryptoKeyGenerator
  type: Class
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/Security/CryptoKeyGenerator.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: CryptoKeyGenerator
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/Security/CryptoKeyGenerator.cs
    startLine: 17
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  summary: "\nUtility methods for generating cryptographically secure keys and passwords\n"
  example: []
  syntax:
    content: public static class CryptoKeyGenerator
    content.vb: Public Module CryptoKeyGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.Sha512KeySize
  commentId: F:Microsoft.Azure.Devices.Common.CryptoKeyGenerator.Sha512KeySize
  id: Sha512KeySize
  parent: Microsoft.Azure.Devices.Common.CryptoKeyGenerator
  langs:
  - csharp
  - vb
  name: Sha512KeySize
  nameWithType: CryptoKeyGenerator.Sha512KeySize
  fullName: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.Sha512KeySize
  type: Field
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/Security/CryptoKeyGenerator.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: Sha512KeySize
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/Security/CryptoKeyGenerator.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public const int Sha512KeySize = 64
    content.vb: Public Const Sha512KeySize As Integer = 64
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKeyBytes(System.Int32)
  commentId: M:Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKeyBytes(System.Int32)
  id: GenerateKeyBytes(System.Int32)
  parent: Microsoft.Azure.Devices.Common.CryptoKeyGenerator
  langs:
  - csharp
  - vb
  name: GenerateKeyBytes(Int32)
  nameWithType: CryptoKeyGenerator.GenerateKeyBytes(Int32)
  fullName: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKeyBytes(System.Int32)
  type: Method
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/Security/CryptoKeyGenerator.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: GenerateKeyBytes
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/Security/CryptoKeyGenerator.cs
    startLine: 23
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public static byte[] GenerateKeyBytes(int keySize)
    content.vb: Public Shared Function GenerateKeyBytes(keySize As Integer) As Byte()
    parameters:
    - id: keySize
      type: System.Int32
    return:
      type: System.Byte[]
  overload: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKeyBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKey(System.Int32)
  commentId: M:Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKey(System.Int32)
  id: GenerateKey(System.Int32)
  parent: Microsoft.Azure.Devices.Common.CryptoKeyGenerator
  langs:
  - csharp
  - vb
  name: GenerateKey(Int32)
  nameWithType: CryptoKeyGenerator.GenerateKey(Int32)
  fullName: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKey(System.Int32)
  type: Method
  source:
    remote:
      path: service/Microsoft.Azure.Devices/Common/Security/CryptoKeyGenerator.cs
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-csharp.git
    id: GenerateKey
    path: src/azure-iot-sdks/service/Microsoft.Azure.Devices/Common/Security/CryptoKeyGenerator.cs
    startLine: 39
  assemblies:
  - Microsoft.Azure.Devices.Uwp
  namespace: Microsoft.Azure.Devices.Common
  syntax:
    content: public static string GenerateKey(int keySize)
    content.vb: Public Shared Function GenerateKey(keySize As Integer) As String
    parameters:
    - id: keySize
      type: System.Int32
    return:
      type: System.String
  overload: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.Devices.Common
  commentId: N:Microsoft.Azure.Devices.Common
  isExternal: false
  name: Microsoft.Azure.Devices.Common
  nameWithType: Microsoft.Azure.Devices.Common
  fullName: Microsoft.Azure.Devices.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKeyBytes*
  commentId: Overload:Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKeyBytes
  isExternal: false
  name: GenerateKeyBytes
  nameWithType: CryptoKeyGenerator.GenerateKeyBytes
  fullName: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKeyBytes
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKey*
  commentId: Overload:Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKey
  isExternal: false
  name: GenerateKey
  nameWithType: CryptoKeyGenerator.GenerateKey
  fullName: Microsoft.Azure.Devices.Common.CryptoKeyGenerator.GenerateKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
