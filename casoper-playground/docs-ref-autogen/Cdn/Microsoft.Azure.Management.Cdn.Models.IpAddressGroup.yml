### YamlMime:ManagedReference
items:
- uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
  commentId: T:Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
  id: IpAddressGroup
  parent: Microsoft.Azure.Management.Cdn.Models
  children:
  - Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.#ctor
  - Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress},System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress})
  - Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.DeliveryRegion
  - Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv4Addresses
  - Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv6Addresses
  langs:
  - csharp
  - vb
  name: IpAddressGroup
  nameWithType: IpAddressGroup
  fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
  type: Class
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: IpAddressGroup
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
    startLine: 21
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nCDN Ip address group\n"
  example: []
  syntax:
    content: public class IpAddressGroup
    content.vb: Public Class IpAddressGroup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.#ctor
  commentId: M:Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.#ctor
  id: '#ctor'
  parent: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
  langs:
  - csharp
  - vb
  name: IpAddressGroup()
  nameWithType: IpAddressGroup.IpAddressGroup()
  fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.IpAddressGroup()
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
    startLine: 26
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nInitializes a new instance of the IpAddressGroup class.\n"
  example: []
  syntax:
    content: public IpAddressGroup()
    content.vb: Public Sub New
  overload: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress},System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress})
  commentId: M:Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress},System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress})
  id: '#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress},System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress})'
  parent: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
  langs:
  - csharp
  - vb
  name: IpAddressGroup(String, IList<CidrIpAddress>, IList<CidrIpAddress>)
  nameWithType: IpAddressGroup.IpAddressGroup(String, IList<CidrIpAddress>, IList<CidrIpAddress>)
  fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.IpAddressGroup(System.String, System.Collections.Generic.IList<Microsoft.Azure.Management.Cdn.Models.CidrIpAddress>, System.Collections.Generic.IList<Microsoft.Azure.Management.Cdn.Models.CidrIpAddress>)
  type: Constructor
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: .ctor
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
    startLine: 35
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nInitializes a new instance of the IpAddressGroup class.\n"
  example: []
  syntax:
    content: public IpAddressGroup(string deliveryRegion = null, IList<CidrIpAddress> ipv4Addresses = null, IList<CidrIpAddress> ipv6Addresses = null)
    content.vb: Public Sub New(deliveryRegion As String = Nothing, ipv4Addresses As IList(Of CidrIpAddress) = Nothing, ipv6Addresses As IList(Of CidrIpAddress) = Nothing)
    parameters:
    - id: deliveryRegion
      type: System.String
      description: >-
        The delivery region of the ip address

        group
    - id: ipv4Addresses
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress}
      description: The list of ip v4 addresses.
    - id: ipv6Addresses
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress}
      description: The list of ip v6 addresses.
  overload: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.#ctor*
  nameWithType.vb: IpAddressGroup.IpAddressGroup(String, IList(Of CidrIpAddress), IList(Of CidrIpAddress))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.IpAddressGroup(System.String, System.Collections.Generic.IList(Of Microsoft.Azure.Management.Cdn.Models.CidrIpAddress), System.Collections.Generic.IList(Of Microsoft.Azure.Management.Cdn.Models.CidrIpAddress))
  name.vb: IpAddressGroup(String, IList(Of CidrIpAddress), IList(Of CidrIpAddress))
- uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.DeliveryRegion
  commentId: P:Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.DeliveryRegion
  id: DeliveryRegion
  parent: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
  langs:
  - csharp
  - vb
  name: DeliveryRegion
  nameWithType: IpAddressGroup.DeliveryRegion
  fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.DeliveryRegion
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: DeliveryRegion
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
    startLine: 45
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets the delivery region of the ip address group\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "deliveryRegion")]

      public string DeliveryRegion { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="deliveryRegion")>

      Public Property DeliveryRegion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.DeliveryRegion*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: deliveryRegion
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv4Addresses
  commentId: P:Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv4Addresses
  id: Ipv4Addresses
  parent: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
  langs:
  - csharp
  - vb
  name: Ipv4Addresses
  nameWithType: IpAddressGroup.Ipv4Addresses
  fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv4Addresses
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Ipv4Addresses
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
    startLine: 51
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets the list of ip v4 addresses.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "ipv4Addresses")]

      public IList<CidrIpAddress> Ipv4Addresses { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="ipv4Addresses")>

      Public Property Ipv4Addresses As IList(Of CidrIpAddress)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress}
  overload: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv4Addresses*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: ipv4Addresses
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv6Addresses
  commentId: P:Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv6Addresses
  id: Ipv6Addresses
  parent: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup
  langs:
  - csharp
  - vb
  name: Ipv6Addresses
  nameWithType: IpAddressGroup.Ipv6Addresses
  fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv6Addresses
  type: Property
  source:
    remote:
      path: src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
      branch: AutoRest
      repo: https://github.com/Azure/azure-sdk-for-net.git
    id: Ipv6Addresses
    path: src/azure-sdk-for-net/src/ResourceManagement/Cdn/Microsoft.Azure.Management.Cdn/Generated/Models/IpAddressGroup.cs
    startLine: 57
  assemblies:
  - Microsoft.Azure.Management.Cdn
  namespace: Microsoft.Azure.Management.Cdn.Models
  summary: "\nGets or sets the list of ip v6 addresses.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty(PropertyName = "ipv6Addresses")]

      public IList<CidrIpAddress> Ipv6Addresses { get; set; }
    content.vb: >-
      <JsonProperty(PropertyName:="ipv6Addresses")>

      Public Property Ipv6Addresses As IList(Of CidrIpAddress)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress}
  overload: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv6Addresses*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: PropertyName
      type: System.String
      value: ipv6Addresses
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Azure.Management.Cdn.Models
  commentId: N:Microsoft.Azure.Management.Cdn.Models
  isExternal: false
  name: Microsoft.Azure.Management.Cdn.Models
  nameWithType: Microsoft.Azure.Management.Cdn.Models
  fullName: Microsoft.Azure.Management.Cdn.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.#ctor*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.#ctor
  isExternal: false
  name: IpAddressGroup
  nameWithType: IpAddressGroup.IpAddressGroup
  fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.IpAddressGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress}
  commentId: T:System.Collections.Generic.IList{Microsoft.Azure.Management.Cdn.Models.CidrIpAddress}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CidrIpAddress>
  nameWithType: IList<CidrIpAddress>
  fullName: System.Collections.Generic.IList<Microsoft.Azure.Management.Cdn.Models.CidrIpAddress>
  nameWithType.vb: IList(Of CidrIpAddress)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Azure.Management.Cdn.Models.CidrIpAddress)
  name.vb: IList(Of CidrIpAddress)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Azure.Management.Cdn.Models.CidrIpAddress
    name: CidrIpAddress
    nameWithType: CidrIpAddress
    fullName: Microsoft.Azure.Management.Cdn.Models.CidrIpAddress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Azure.Management.Cdn.Models.CidrIpAddress
    name: CidrIpAddress
    nameWithType: CidrIpAddress
    fullName: Microsoft.Azure.Management.Cdn.Models.CidrIpAddress
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.DeliveryRegion*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.DeliveryRegion
  isExternal: false
  name: DeliveryRegion
  nameWithType: IpAddressGroup.DeliveryRegion
  fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.DeliveryRegion
- uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv4Addresses*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv4Addresses
  isExternal: false
  name: Ipv4Addresses
  nameWithType: IpAddressGroup.Ipv4Addresses
  fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv4Addresses
- uid: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv6Addresses*
  commentId: Overload:Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv6Addresses
  isExternal: false
  name: Ipv6Addresses
  nameWithType: IpAddressGroup.Ipv6Addresses
  fullName: Microsoft.Azure.Management.Cdn.Models.IpAddressGroup.Ipv6Addresses
